(2.2.3.3) Risks and values ​​and priorities
[Mike Cohn] explains similar concepts in his book "[Agile estimating and planning]". He proposed the following four criteria for prioritizing features (functions of the software product). (*10)

 [Monetary value]
 [Cost]
 [New knowledge]
 [Risk]

Among these four, the monetary value and the cost are a pair. *11

New knowledge and the risk are strongly linked. The fact that there is a risk is that you do not know the result until you try it, which means that you do not have any knowledge of what the result will be.

Cohn proposed as follows:

 First, implement features with high monetary value and high risk.
 Next, implement features with high monetary value and low risk.
 Finally, implement features with low monetary value and low risk.
 Do not implement features with low monetary value and high risk.

[https://gyazo.com/d063c4d51a9163a30fecb86c6de69628]
Fig: Matrix of value and risk

	Horizontal axis : Value; low(left), high(right)
	Vertical axis: Risk; high(up), low(bottom)

However, it is ambiguous about the criteria for high and low. Let's take a look at the diagram.

[https://gyazo.com/f354fb41145b7583eebe4ac5c3092055]
Fig: Should we give A high priority?

Task A is a high-risk task with a large variance of the benefit. B is a low-risk task thas is a task without large variance. C is a low-risk and low-value task. Comparing A with B, A is of lower value and higher risk than B. Should we judge it should not be implemented? Or comparing A with C, A is of higher value and higher risk than C. Should we implement it with the highest priority? Opinions are likely to be diverted.

---

Footnotes:

 *10: Cohn, M., 2005. Agile estimating and planning. Pearson Education.
	*11 I like the words [cost effectiveness] (value gained per cost), but in "agile estimates and planning," Cohn uses the words [internal rate of return] ([IRR]) and [return on investment] ([ROI]).
[en.icon]