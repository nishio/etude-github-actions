ABC023D
from [typical ideas for coming up with solutions in competitive programming].

[D - 射撃王 https://atcoder.jp/contests/abc023/tasks/abc023_d]
	[https://gyazo.com/68e0e3d12b92e4c1feaeb010f603dd63]
　I want to minimize the maximum penalty
　[Minimize maximum]
　Penalties increase over time, which is tricky.
　　And it's not the sum of the penalties, but the maximum.
　　　With harmony, the story is easy to tell because the order can be swapped.
　　Is the order determined by some greedy method?
　　It's not just a matter of taking from the biggest one.
　　　With an initial value of 100 and an increase of 1, and an initial value of 90 and an increase of 100, the latter should come first.
　　　Rather, "the next highest value shall be the current one" is correct?
　公式解説
　　Prepare a provisional "divide by this height" limit, and divide in order of decreasing time remaining.
　　Pattern [Maximize with bisection search
　　If you cannot think of a way to solve the maximization of f(x) directly by a greedy method, you can make it a problem to determine the existence of a solution for f(x) < X. This makes it easier to find a greedy algorithm, because "If there is a solution, find one, even if it is not the largest.
　　Since this time we are minimizing the maximum, [inequality in max turns into a small subproblem by inequality and].
　　　max(f(x))<tならf(x)<t
