Hatena2015-05-19
code:hatena
 <body>
 *1432006437* I gave a talk on "The W-type problem-solving model of the KJ method, U-theory, and their respective problematics.
 I recently gave a lecture on what U-theory is all about at the Software Engineering Technology Technical Committee of the Japan Electronics and Information Technology Industries Association (JEITA).
 
 In explaining the U-theory U-shaped model, this slide explains from "what other models exist in the first place" and "what is similar and what is different" so that you can understand how U-theory is similar and different from PDCA cycle, Lean Startup, KJ method, and so on, from multiple perspectives.
 
 
 Click here to see the raw slides used for the lecture:
 <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/nishio/jeita" title="KJ法のW型問題解決モデルとU理論、それぞれの問題意識" target="_blank">KJ法のW型問題解決モデルとU理論、それぞれの問題意識</a> </strong></div>
 
 
 Click here to see the Q&A and other additions:
 <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/nishio/kjwu" title="KJ法のW型問題解決モデルとU理論、それぞれの問題意識 加筆版" target="_blank">KJ法のW型問題解決モデルとU理論、それぞれの問題意識 加筆版</a> </strong></div>
 
 *1432011102*"Introduction to Regular Expression Technology" is a good book.
 The author, Mr. Shinya, gave us a copy of Gijutsu hyoronsha's "<a href="http://www.amazon.co.jp/gp/product/4774172707/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN= 4774172707&linkCode=as2&tag=nishiohirokaz-22">Introduction to Regular Expression Technology</a>" from Technical Review.
 
 This is a good book. I especially like the story told in chapter 2 about how regular expressions came to be. I once tried to write a history of regular expressions for the sequel to my book <a href='http://nhiro.org/langbook/'>"The Technology Behind Coding"</a>, but this is even better than what I had planned to write. I'm glad and sad that I don't have to write about this anymore. I didn't know about the relationship between pipes and grep, interesting.
 
 It is good that the first chapter covers the basics of regular expressions in about 60 pages. I think all programmers who need to use regular expressions should read through at least the first chapter.
 
 How is a regular expression formally defined? This topic may be in the category of common knowledge for those who studied computer science in college. On the other hand, when writing something on a blog, we tend to assume that we know what we are talking about and write sentences without explaining every single thing. It may be a missing piece for those who have not studied computer science. In Chapter 3, the story of the discrepancy between the formal definition of regular expressions and the realistic engine implementation is briefly reviewed in about 25 pages. If the topic of deterministic finite automata (DFA) as a regular expression engine doesn't ring a bell, I highly recommend reading this chapter to fill in the pieces.
 
 Chapter 4 is a 30-page detailed discussion of DFA-type engines, Chapter 5 is a 60-page detailed discussion of VM-type engines, and Chapter 6 is 25 pages of the latest technology trends. Here, well, if you are interested in implementation.
 
 Even if you are not interested in the implementation of regular expressions and are just a regular expression user, you should definitely read Chapter 7, "Regular Expression Pitfalls," which describes the phenomenon of performance degradation caused by backtracking and how to deal with it. The differences between different regular expression engines and how they match. We recently had a case of this pitfall in our company (<a href='http://developer.cybozu.co.jp/tech/?p=8757'>Too slow! A story about regular expressions in Java. | Cybozu Inside Out | Cybozu Engineer's Blog</a>). This one is also about 25 pages long.
 
 Chapter 8 is about the limitations of regular expressions, somewhat related to the discussion of formal regular expressions in Chapter 3, but there are some problems for which regular expressions are not suited. The field of computer science has long been accumulating research on how to deal with things that are not suitable for regular expressions, and Section 8.3, "The World of Parsing," is a bird's-eye view of that world in just 10 pages.
 
 And then there are the appendices...about 50 pages... "Mathematical Background of Regular Expressions" and "More Advanced Mathematical Background of Regular Languages".... These chapters are like a super chewy slushie that Mr. Shinya, a researcher of regular expressions, has put into the book. Even if you have been reading the chapters up to this point with a comfortable "hmmm, I know, I know" attitude, you might want to retighten your helmet before entering this chapter. It is a chapter worth fighting for.
 
 <a href="http://www.amazon.co.jp/gp/product/4774172707/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4774172707&linkCode=as2&tag=nishiohirokaz-22">正規表現技術入門 ――最新エンジン実装と理論的背景 (WEB+DB PRESS plus)</a>
 
 By the way, Mr. Shinya and your co-author, Mr. Suzuki, are both first-term students of Cybozu Labo Youth. If Cybozu was able to create an opportunity for them to meet each other through the LaboYouth project, I feel glad that we did.
 </body>

[Hatena Diary 2015-05-19 https://nishiohirokazu.hatenadiary.org/archive/2015/05/19]