(1.3.4.5) When you need Shakyo again
As your understanding progresses, you do not feel the need for Shakyo. For example, after learning many programming languages, you can understand a new programming language without Shakyo. In this situation, you feel that you can learn any language without Shakyo. You may think Shakyo works only for the initial phase of a career as a programmer, and since you already passed the phase, you do not need Shakyo. Some readers who are good at programming may feel that way right now.

I felt that way. However, that is a misunderstanding. I can not master any language without Shakyo. I can only learn languages ​​that have many parts in common with the language I have learned. I did not need Shakyo because I did not challenge a new field. 

If you can learn a new language easily, the language consists mostly of what you have already learned. You do not learn new concepts. You feel that you learn efficiently, but you do not learn new things. The thought is a pitfall in learning, and you need to be aware of it and get out.

I was aware of it when I learn a programming language Alloy. (*27) An alloy program is not a sequence of commands like popular programming languages. The basic element of the alloy program is a relation. The alloy is a language to describe models by declaring facts and relations. When trying to learn this language, I could not understand by reading the explanation of the book. I felt embarrassed that I could not understand because I was confident in my knowledge of programming languages. I remembered Shakyo and finally began to understand it by using Shakyo. I noticed that I had forgotten about Shakyo. Why I forgot it. By thinking it, I found out that I was not challenging a new field. Now I think important that to regularly challenge new fields that you do not understand without Shakyo.

	*27. I do not explain about the Alloy in detail here. For those who are interested in Alloy, I show the book I read: 
		Jackson, Daniel (2006). Software Abstractions: Logic, Language, and Analysis. MIT Press. ISBN 978-0-262-10114-1.

[en.icon]