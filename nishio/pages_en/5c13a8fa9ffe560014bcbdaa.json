What is Learning? Engineered Thinking and Principles
An article about the message for young students written by Science Shift
Here's a nicely laid out one:.
	[What is "Learning"? Engineered Thinking and Principles (Part I)｜SCIENCE SHIFT https://scienceshift.jp/enginner-thinking-01/]
	[What is "Learning"? Engineering Thinking and Principles (Part 2)｜SCIENCE SHIFT https://scienceshift.jp/enginner-thinking-02/]

Below are notes from the writing stage

Information for author's introduction
	Engaged in research at Cybozu, a company that manufactures and sells software to improve teamwork and organizational productivity
	Released "The Intellectual Production Techniques of Engineers" last August, which ranked 10th in the general book ranking despite being a technical book.
	Also holds a position as a specified associate professor at Tokyo Institute of Technology

[* What does it mean to "learn?"]

You have probably heard the message, "Learning is important," so much so that your ears are probably ringing with it. So what does this "learning" mean?

As the title suggests, Fukuzawa Yukichi's "Encouragement of Learning" is a text that encourages many people to learn. The phrase "Heaven does not create a man above another man, nor a man below another man" at the beginning of the text is well-known. The phrase "Heaven does not create a man above another man, nor a man below another man" is well-known. This phrase is the introduction to a story about how people are born with no differences, but those who learn and know things well become rich and noble, while the uneducated become poor and lowly. What kind of "study" did he mean? He said, "The only thing to be devoted to is practical learning, which is close to the daily use of human beings. In other words, he believed that we should focus on studies (practical studies) that are useful and usable in our daily lives.

In his book "Post-Capitalist Society," social ecologist Peter Drucker said of knowledge: "What is now considered knowledge must be proved by action. What is now considered knowledge must be proven by action to be knowledge. What we call knowledge today is information for action, information focused on outcomes." In other words, the idea is that knowledge is closely tied to action and its outcomes. Knowledge should not be separated from action. We must confirm whether the knowledge is useful or not by actually taking action using the knowledge and seeing the results of that action. Knowledge and learning should not be "deskilled" theories.

People may have different opinions on what they consider academic. I share the views of Fukuzawa Yukichi and Drucker. When I say "learning is important" in this article, the object of learning is knowledge that you can use in your daily life. And it is knowledge that, when used, will have a beneficial effect on your daily life. Whether this knowledge is beneficial or not must be confirmed by actually using it in your daily life and observing the results. That is what we believe.

[* How Software Engineers Learn].

Let's take a concrete look at the process of learning a programming language for software engineers. In the process of learning a programming language, it is common to actually write a program and run it. They think, "If I write a program like this, it will behave like this," and then they actually write the program, and observe whether the result of executing the program is the same as the expected behavior.

This is the same as the "form a hypothesis, experiment, and verify" often used in scientific research. First of all, there is the feeling that "if I write a program like this, it will work like this. This is the hypothesis. To verify the hypothesis, we actually write a program and execute it. This is the experiment. Observe whether the results of executing the program are as expected or not. This is verification.

The process of learning a programming language is similar to the process of experimental science. More generalized, the same process as in experimental science may be found in "learning. Suppose, for example, that you feel like you understand something after reading a book or looking at experimental data. Is that "understanding" factual?

[* understanding is hypothetical].

Even if you feel like you "get it," it does not mean you really do. It is only a hypothesis. You have to verify whether you really know. The same process of hypothesis testing as in experimental science is necessary.

Here's one example of "got it." Daniel Kahneman provides an interesting example in Fast & Slow. When he looked at the incidence of certain kidney diseases in 3,141 communities across the U.S., he found that most of the communities with the lowest incidence rates were in rural areas of the Midwest, South, and West, with low population densities. What can we say from this? Suppose you think, "Ah, well, this kidney disease is low in rural areas and high in urban areas. This is the hypothesis.

How can we test this hypothesis? Consider what we need to observe to test whether this hypothesis is true. If the hypothesis "the incidence of this kidney disease is higher in urban areas" is correct, then the incidence should be higher in urban areas. Then let's check if the incidence is actually higher. In this case, the incidence rate is not high in urban areas. Most of the areas with low incidence rates were rural, but most of the areas with high incidence rates were also rural. This means that the hypothesis was not correct.

When a hypothesis is rejected by experimentation in this way, it is a chance to learn. It is a chance to get out of the state of "thinking you know" and having a false interpretation and take a step forward. This article will not discuss this case in detail. The case is described in detail in "Fast & Slow," "Chapter 10: The Law of Small Numbers: Doubt Your Intuition About Statistics. Very briefly, rural areas have small sample sizes due to their small populations, which results in a large variance in incidence rates.

[* Using Experimental Science in Everyday Life].

This example was chosen to be compact and to complete the story in this article. Many of you readers may have been educated in experimental science universities. At such universities, they would have had the experience of designing experiments to test hypotheses, conducting the experiments, and observing the results in order to test the hypotheses. However, this hypothesis-experiment-observation-verification process does not take place only in universities and laboratories.

As explained at the beginning of this article, "learning is important," and the object of that "learning" is knowledge that you can use in your daily life. In your daily life, there is knowledge that can be improved through hypothesis and verification. It is important to discover this knowledge by yourself, experiment with it, and improve your understanding of it. This knowledge will have a beneficial effect on your daily life. Whether the knowledge is beneficial or not is confirmed by actually using it in your daily life and observing the results. This process is part of our daily life.

In this article, we explained the learning method of testing hypotheses through experiments. If you have been thinking that learning is reading a textbook and swallowing its contents, you now have the knowledge that there is a way to learn by testing hypotheses through experiments. I believe this knowledge will be beneficial to your future life. Whether or not this is actually the case is something you will have to verify by using it yourself.

[* For example, for job hunting].

In writing this article, I was told that one of our readers is a student who is looking for a job. He asked me to write a message for those students. I am not doing the job hunting that you are doing now. When I was a student, I gave several presentations at technical events, and at a reception for one of those events, I was asked if I would like to apply for a position at a new company that was opening up. So, you probably know more about job hunting nowadays than I do.

There is only one thing I can do about that. Is the knowledge that is written in job-hunting manuals or on job-hunting support websites, "This is correct," really correct? Isn't that also a hypothesis? That is the point I am trying to make. The form of recruitment and what is evaluated vary from company to company. Is it really correct to follow a manual? Following a manual that many people have read will only cause you to behave like many other applicants and join the "majority who will not be hired. The gate to perdition is great, and the way is wide, and many are those who enter through it.

Those who are now following the manual are in a state of experimentation with their actions based on the hypothesis that "the manual is correct". I am not familiar with the recent job hunting situation, but I have irresponsibly presented the hypothesis that "the manual is incorrect. What you will do in the future is your own experimental plan, and you need to think and decide for yourselves. And you will experiment and deepen your understanding through your own actions in the future.

[* Reduce experimental validation cycles].

Many people may feel that the process of hypothesis, experiment, and verification is a big deal. Especially in the field of biology, it is easy to think of it as a big deal, since a single experiment often requires a great deal of effort. However, the opposite is true. The key is how to make the cycle of experimental verification smaller and faster.

This concept became famous in the field of software engineering when it was introduced in the book "Lean Startup. This book is about management strategies for software ventures. Software ventures develop software while consuming limited funds, and if they do not generate income before the funds run out, they will go bankrupt.

A software venture has a hypothesis: "If we make this kind of software, it will sell. If this hypothesis is correct and they use all of their capital to develop the software, they will go bankrupt immediately if the hypothesis is wrong. The experiment of "actually developing software and seeing if it sells" is too big. So we think about how we can make the experiment smaller. For example, Dropbox, a file-sharing service, made a video showing what the software could do before actually developing it. They used the video to gather potential customers, and after observing that they had enough customers, they developed the software.

The composition is the same in job hunting. The time available is limited. You need to experiment and improve your understanding in as little time as possible. I do not know much about the current job hunting process, so I cannot tell you how to do it. For example, it is expensive to experiment by yourself, so I think a simple example would be to ask someone else or a senior colleague to share the results of their experiments with you.

Besides "will I be hired by the company?" another hypothesis that needs to be tested is "will I be happy at the company?" There are many people who change jobs years after joining a company. Mismatches are unfortunate for both parties, so experiments are being conducted in the form of "internships," for example, which are less expensive than finding a job.

[* Connecting the Dots]

So far, we have explained that there are opportunities for experimentation and verification in everyday life. However, among the various opportunities to make choices in the real world, some are easy to experiment with and some are difficult to test. Learning a programming language is an area that is relatively easy to experiment and test. You can try out an implementation with one choice, and if it is wrong, you can rewrite it with another choice. Experimental science has also developed mainly in areas where it is easy to experiment and to control environmental factors that affect experimental results.

But not all fields are like this. It is difficult to repeat the experiment of "which company is the right match for me." There is only one company that a new graduate can enter. You cannot compare the results of joining 10 companies under the same experimental condition of being a new graduate. Even if you relax the condition that you are a new graduate, it would take you 30 years to find the company that best matches you after you have worked for each of the 10 companies for about 3 years. Your experience and age are also experimental conditions that affect the results of the experiment.

Trying to find a "scientifically correct answer" to these areas in advance involves unrealistic experimental costs. So "acting without knowing if it is right" is inevitable. In this regard, Steve Jobs, co-founder of Apple, Inc. had a famous saying in the software industry, "Connecting the Dots. You can't connect the dots looking forward; you can only connect them looking backwards. You can't connect the dots looking forward; you can only connect them looking backwards.

He dropped out of college. Having given up on graduation, he decided to take a class that interested him. So he took a class in calligraphy (Western-style calligraphy). This knowledge helped him build a Macintosh with clean lettering. Having a system that could handle clean lettering differentiated it from other manufacturers' computers and made the Macintosh a business success. At the time he took the calligraphy class, he could not have foreseen that such a thing would happen in the future.

We cannot know in advance what will be useful in the future. This he described as "you can't connect the dots into the future. We must first act, and then, after a time, look back and discover that what we did in the past will help us in the present. This is what he meant by looking back and connecting the dots. And if you don't hit the dots, you will never connect them in the future. Therefore, we must act now, believing that it will surely lead to the future.

[* Summary].

In this article, I have shared three pieces of knowledge with you. First, it is important to obtain knowledge that is useful for daily life through the experimental verification cycle. Second, it is important to keep the experimental cycle small and fast. And, even after doing this, when the "right choice" is not known in advance, we must take action with the belief that it will lead us to the future. I believe that these three pieces of knowledge will have a beneficial effect on your future life. Whether this understanding is correct or not is a hypothesis, and you need to experiment and improve your understanding.

Learning will continue into adulthood. However, the service of "the teacher decides the curriculum" will disappear. Also, even if they do not learn, they will not experience short-term, easy-to-understand disadvantages such as "a follow-up exam due to a bad grade on the final exam. However, there will be a clear difference after 5 or 10 years between those who learn and those who do not. You yourself must experiment with your limited life time and acquire knowledge that will benefit your life.


-----
	Learning is important
		You've probably heard the message, "Learning is important," so much so that it's hard to hear it.
		So what is this "learning"?
		Yukichi Fukuzawa's "[Encouragement of Learning]"
			Yukichi Fukuzawa's "Encouragement of Learning" says, "There is no difference between people right after birth, but those who learn and know things well become noble and wealthy, while the uneducated become poor and lowly.
			He said, "The only thing we should work for is practical learning, which is close to the daily use of a human being.
			In other words, it is a study that can be used in our daily lives (=daily use) and is useful (=fruitful).
		Social ecologist Drucker said this about knowledge in his book "Post-Capitalist Society"
			>What is now considered [knowledge] must be proven by action to be knowledge. What we consider knowledge today is information for action, information focused on [results].
				([Post-Capitalist Society] Chapter 1)
			In other words, the idea is that knowledge and the means of acquiring it, "learning," should not be "desk learning.
			Knowledge should not be separated from action. Knowledge is tied to action. We must confirm that the knowledge is useful by actually taking action using the knowledge and seeing the results of that action.
		People may have different opinions on what they consider academic. I sympathize with Fukuzawa Yukichi and Drucker.
		 When I say "learning is important" in this article, I am referring to knowledge that you can use in your daily life. And it is knowledge that, when used, will have a beneficial effect on your daily life. Whether this knowledge is beneficial or not must be confirmed by actually using it in your daily life and observing the results. That is what we believe.

	How Software Engineers Learn
		Let's look specifically at the process by which software engineers learn programming languages.
		The process of learning a programming language often involves actually writing and running programs.
  This is the same "form a hypothesis, experiment, and test" often used in scientific research.
  	The first feeling is, "If I write a program like this, it will work like this." This is the hypothesis.
  	To test the hypothesis, we actually write a program and run it. This is experimentation.
  	Observe whether the results of the program execution are as expected. This is verification.
  Learning = Research
  	Suppose, for example, that you have read a book or looked at some experimental data and you think you know something.
  	Is that "got it" true?
  		This is only a hypothesis. You must verify that you really know what you are talking about.
  		[Examples of "I think I understand
  			[deviation from the mean and sample size].
  			[Daniel Kahneman] "An interesting example in "[Fast & Slow].
  			When the incidence of certain kidney diseases was examined in 3,141 communities across the U.S., most of the communities with the lowest incidence rates were located in rural areas of the Midwest, South, and West, with low population densities.
  			What can we say from this?
  			Let's say, for example, that you think, "Well, there is a difference in diet between urban and rural areas, and this may have an impact on this kidney disease. This is the hypothesis.
  	How can this hypothesis be tested?
  		Consider what needs to be observed to test whether this hypothesis is correct.
  		If the interpretation that "dietary differences between urban and rural areas cause kidney disease" is correct, then the incidence of the disease should be higher in urban areas.
  		Then let's see if the incidence is actually high.
  		In this case, the incidence in urban areas was not high. Most of the areas with low incidence were rural, but most of the areas with high incidence were also rural. This means that the hypothesis was not correct.
  		When a hypothesis is rejected by experimentation in this way, it is a chance to learn. It is a chance to get out of the state of "thinking I know" and having a false interpretation, and to take a step forward.
  		What is happening is that the small sample size in rural areas is increasing the dispersion of incidence rates, a phenomenon known as the "small sample size".
  	*Examples of "learning = research" in job hunting and non-engineering work
  		This example was chosen to be compact and complete in this article.
  		Many of you readers may have been educated in experimental science universities.
  		You would have had the experience of planning an experiment to test a hypothesis, conducting the experiment, and observing the results to test the hypothesis.
  		The process does not take place only in universities and laboratories.
  		As explained at the beginning of this article, "learning is important," and the object of that "learning" is knowledge that you can use in your daily life. In your daily life, there is knowledge that can be improved through hypothesis and verification. It is important to discover this knowledge by yourself, experiment with it, and improve your understanding of it. This knowledge will have a beneficial effect on your daily life. Whether the knowledge is beneficial or not is confirmed by actually using it in your daily life and observing the results. This process is part of our daily life.
  		In this article, we explained the learning method of testing hypotheses through experiments. If you have been thinking that learning is reading a textbook and swallowing its contents, you now have the knowledge that there is a way to learn by testing hypotheses through experiments. I believe this knowledge will be beneficial to your future life. Whether or not this is actually the case is something you will have to verify by using it yourself.
    In writing this article, I was told that one of our readers is a student who is job hunting. He asked me to write a message for those students. I am not doing the job hunting that you are doing now. When I was a student, I gave several presentations at technical events, and at a reception for one of those events, I was asked if I would like to apply for a position at a new company that was opening up. So, you probably know more about job hunting nowadays than I do.
    There is only one thing I can do about that. Is the knowledge that is written in job-hunting manuals or on job-hunting support websites, "This is correct," really correct? Isn't that also a hypothesis? I can only point out one thing.
    Different companies have different forms of hiring and what they evaluate. Is it really right to follow a manual? Following a manual that many people have read will only cause you to behave like many other applicants and join the "majority who will not be hired. The gate to perdition is great, and the way is broad, and many are those who enter through it.
    Those who are now acting according to the manual are in a state of experimentation with their actions based on the hypothesis that "the manual is correct". I have irresponsibly presented the hypothesis that "the manual is incorrect. What you will do in the future is your own experimental plan, and you need to think and decide for yourselves. And you will experiment and deepen your understanding through your own actions in the future.

  Many people may feel that the process of hypothesis, experiment, and verification is a big deal.
  	Especially in the field of biology, it is easy to think of it as a big deal because a single experiment often requires a great deal of effort.
  	Rather, it is the opposite. The key is how to make the experimental verification cycle smaller and faster.
  	This concept became famous in the field of software engineering when it was introduced in the book "Lean Startup. This book is about management strategies for software ventures. Software ventures develop software while consuming limited funds, and if they do not generate income before the funds run out, they will go bankrupt.
  	A software venture has a hypothesis: "If we make this kind of software, it will sell. If this hypothesis is correct and they use all of their capital to develop the software, they will go bankrupt immediately if the hypothesis is wrong. The experiment of "actually developing software and seeing if it sells" is too big. So we think about how we can make the experiment smaller.
  	For example, Dropbox, a file-sharing service, made an introductory video about what the software could do before actually developing it. The company used the video to gather potential customers, and only developed the software after observing that it had attracted a sufficient number of customers.
  	The composition is the same in job hunting. The time available is limited. You need to experiment and improve your understanding in as little time as possible. I do not know much about the current job hunting process, so I cannot tell you how to do it. For example, it is expensive to experiment by yourself, so I think a simple example would be to ask someone else or a senior colleague to share the results of their experiments with you.
  	Besides "will I be hired by the company?" another hypothesis that needs to be tested is "will I be happy at the company?" There are many people who change jobs years after joining a company. Mismatches are unfortunate for both parties, so experiments are being conducted in the form of "internships," for example, which are less expensive than finding a job.

 	So far, we have explained that there are opportunities for experimentation and verification in everyday life.
 		However, some are easier to experiment and verify than others.
 		Software is a relatively easy field to experiment and verify.
 		Experimental science has also developed primarily in areas where it is easy to repeat experiments and to control environmental factors that affect experimental results.
 		The question of "which company am I a match for?" is difficult to repeat and experiment with.
 		Trying to find a "scientifically correct answer" to these areas in advance would involve unrealistic experimental costs.
 		So, ultimately, it is inevitable that we act without knowing whether we are right or not.
	　Steve Jobs, co-founder of Apple Inc. had a famous saying in the software industry, "Connecting Dots.
	　He dropped out of college. Having given up on graduation, he decided to take a class that interested him. So he took a class in calligraphy (Western-style calligraphy). This knowledge helped him build the Macintosh.
	　We cannot know in advance what will be useful in the future. This he described as "you can't connect the dots into the future. We can only look back after time has passed and connect what we have done in the past. If we do not hit the dots, we will not be able to connect them in the future. So we have to believe that it will be connected in the future and act accordingly.

 Message (*Importance of learning, again)
 	In this article, I have shared three pieces of knowledge with you. First, it is important to obtain knowledge that is useful for daily life through the experimental verification cycle. Second, it is important to keep the experimental cycle small and fast. And, even after doing this, when the "right choice" is not known in advance, we must act with the belief that it will lead us to the right choice in the future.
 	I believe that these three pieces of knowledge will have a beneficial effect on your future lives.
 	Whether this understanding is correct or not is a hypothesis, and you all need to actually experiment and improve your understanding.
 	Learning will continue into adulthood. However, the service of "the teacher decides the curriculum" will disappear. Also, even if they do not learn, they will not experience short-term, easy-to-understand disadvantages such as "a follow-up exam due to a bad grade on the final exam. However, there will be a clear difference after 5 or 10 years between those who learn and those who do not. You yourself must experiment with your limited life time and acquire knowledge that will benefit your life.

(*Other items proposed)
How do you learn in a situation where you're just being driven by the work in front of you, by the work that your boss assigns you?
How to turn job hunting into "research
How do you know what you need to learn?
	It's a decision, only after the fact, and only he/she is passionate about it.
What will I learn?
	A very brief glimpse of the "Self-Management Strategy" and a few core concepts.
	Excellence, Continuous Specialist, Lid Cubes ......


-----
	Learning continues into adulthood.
	However, the "teacher decides the curriculum" service will be eliminated.
	If you don't learn, you won't experience short-term, obvious disadvantages such as "bad grades on the final exam and a follow-up exam".
		But after five or ten years, there will be a clear difference.

	How Software Engineers Learn
		Hypothesize, experiment, and test.
		Methods used as a matter of course in scientific research
	Learning = Research
		I feel like I know what's going on.
			For example, read the book
		Is that "got it" true?
			It's just a hypothesis.
		Then it needs to be validated by experimentation.
	The process of hypothesis, experiment, and verification seems like a big deal.
		Rather the opposite, how small is important.


