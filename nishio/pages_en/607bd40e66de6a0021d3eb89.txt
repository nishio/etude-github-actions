When you are unclear about what you want to do
[https://gyazo.com/bb5c33e8bf77e3f9594209e4b154787d]
 1: When what you want to do is ambiguous, the boundaries of what you want to do are not clear.
 2: In such a case, you can try a solution that is already available (existing software, etc.)
 3: Then there is a division between what was "done" with the solution and the rest that was not.
 4: If we focus on the "things we couldn't do but still want to do," we can observe them better than we did at first. Then the boundaries become a little more clear.

What to do after this
Option 1: Modification
　[https://gyazo.com/f650e811d33aced1537c5379dd2de65d]

　Increase "what can be done" by modifying part of an existing solution
　The reason why there are so many engineers in the world who think that open source software is better is because it is more likely to be modifiable than non-open source plug-rams.
　Some things are easy to modify, some things are difficult to modify

Option 2: Combine different solutions
　[https://gyazo.com/c6568f535e0bdcdd17967ccdd383fcb4]
　Combining multiple solutions (tools and software)
　Even people who can't write programs can do it up to the point of combining them.
　Often has a gaping hole.
　　Sometimes it is necessary to write a program that connects those gaps.
　　[https://gyazo.com/725eec043e20eb6adb36abbd8a1c763b]

Option 3: Make
　When you have thought this far and then think about "making it," it becomes clear what you are going to make.
　[https://gyazo.com/3ab7c525b2a92faa079e1e15b569a857]
　If you try to create something with a vague initial "what you want to do," you will end up creating a very large area.
　Thinking about how much can be solved with existing solutions, and then thinking about making them, we can think like, "Let's use A to the extent we can do it with A," or "We don't need B."
