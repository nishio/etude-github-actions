Hatena2010-03-15
code:hatena
 <body>
 *1268630814*Automatic puzzle generation (consideration)
 Yesterday's puzzle (<a href='http://d.hatena.ne.jp/nishiohirokazu/20100313/1268480389'>automatically generated puzzle</a>) seems to be too difficult for a certain person with higher IQ than me.
 
 However, to the casual observer, it seems that 80% of the time I understand the problem, so the last step is surprisingly hard to come up with. Even simple problems can be lost with just a little twisting.
 
 Twitter.
 >>
 Quiz: 2, 3, 5, 7, 10, 14, 20, 29, ?
 <<
 I wrote "I'm sorry," and about five people got it right.
 
 What kind of model is this generated from?
 >|python|
 print list(islice(seq_add(seq_fib(1, 1), seq_arith_series(1, 1)), 9))
 ||<
 
 My guess is that everyone is deriving the solution from the Fibonacci sequence where you take the factorial sequence twice and get the Fibonacci sequence. I should have asked them to answer with how they derived the solution.
 
 *1268635795* What is tea?
 What is tea? Let's start with a narrow definition
 >>
 Tea is: a drink made from tea leaves (narrow sense)
 <<
 
 Now, what are the counter-intuitive examples that follow from this definition?
 
 >>
 Barley tea is not tea!
 <<
 
 What the hell?
 
 Well, there was a time when barley tea was called "Mugi-yu". <a href='http://ja.wikipedia.org/wiki/%E9%BA%A6%E8%8C%B6'>Mugi-cha - Wikipedia</a>
 
 Also, herbal teas without tea leaves, such as chamomile tea, are not tea across the board. This is something I don't like. So what is the definition of "tea" in the broadest sense that includes these things?
 
 >>
 In a narrow sense, it is a beverage made by pouring hot water over dried tea leaves and brewing it. In a broader sense, it is a beverage made by pouring hot water over dried plants and brewing it. --- <a href='http://d.hatena.ne.jp/keyword/%A4%AA%C3%E3'>What is tea - Hatena Keyword</a>.
 <<
 
 What are some counter-intuitive examples that can be derived from this definition?
 
 Let's see.
 
 >>
 A drink made by pouring hot water over dried and roasted coffee beans is tea
 <<
 
 That's indeed coffee... If you say you can't roast it, does that mean sencha is no longer tea?
 
 >>
 Royal milk tea is not tea because it is boiled with milk, not hot water.
 <<
 
 Mmm. In some cases, they don't use hot water. Others say, "Isn't water-dripped tea tea tea?
 
 >>
 If you add hot water to dried wakame, it is tea.
 <<
 
 Geez. That's soup, right?
 
 >>
 Kuzuneyu is a tea.
 <<
 
 Most herbal medicines are dried plants.
 
 
 
 I wonder how smart it would be to define "tea in the broadest sense."
 
 *1268665176* Automatic puzzle generation (image version)
 I've got a script that outputs these issues, 70 lines.
 <img src="http://gyazo.com/12833c7f52301f4e5d19174b139812ea.png">
 <img src="http://gyazo.com/71b0899692e25cf2d446d21b1edec419.png">
 <img src="http://gyazo.com/308fdb35ed356c67e19920d6998cb88b.png">
 
 Only these five lines are rewritten in
 >|python|
     def item_renderer(i):
         def renderer(cont):
             return cont.trans(0.5, 0.5).pushpop(
                 lambda cont:cont.rot(i * 3.141592 / 3).trans(0.3).circle(r=0.1)
             ).pushpop(
                 lambda cont:cont.trans((0.25 * i) % 1 - 0.5).rect(width=0.25, height=0.25))
         return renderer
 ||<
 
 It returns a function that draws a different figure for each of the i's from 0-8, which is then drawn inside the square and clipped. Clipping was the hardest part lol.
 
 Now we can make many more problems if we abstract this place more. Right now we only have circles and squares, but once made, the parts can be reused.
 
 I'd like to get to the point where I can randomly select a model, set parameters, and create a problem I don't know about, like I did with <a href='http://d.hatena.ne.jp/nishiohirokazu/20100313/1268480389'>automatic puzzle generation</a>, but I think I should hold off on that and create a collection site first. I'd like to do that, but maybe I should hold off and make a collection site first. Hmmm...
 
 <hr>
 In the meantime, I'll try to mimic the IQTest.dk questions.
 
 >|python|
 def i2xy(i):
     return i % 3, i / 3
 
 def item_renderer(i):
     def renderer(cont):
         # http://www.iqtest.dk/main.swf Q2
         x, y = i2xy(i)
         for j in range(9):
             if y <= j <= x + y:
                 fill = "gray"
             else:
                 fill = "white"
 
             (cont.trans(0.5, 0.5).rot(CCW90 + 2 * pi * j / 9).trans(0.3)
              .circle(r=0.1, stroke_width=0.01, stroke="black", fill=fill))
 
         return cont
     return renderer
 ||<
 
 <img src="http://gyazo.com/2e6fcf1a4d106ecc2a7acb5f74dce9c2.png">
 
 >|python|
     def renderer(cont):
         # http://www.iqtest.dk/main.swf Q3
         x, y = i2xy(i)
         
         for j in range(y + 1):
             (cont.trans(0.2 + x * 0.3 + 0.1 * j - 0.05 * y).path(d="M 0 0 L 0 1", stroke_width=0.02))
 
         return cont
     return renderer
 ||<
 
 <img src="http://gyazo.com/e5104c265dd2cabe190c1404473272a1.png">
 
 >|python|
 def draw_grid(cont, n):
     from string import Template
     tmpl = Template("M $v 0 L $v 1 M 0 $v L 1 $v")
     for i in range(1, n):
         v = 1.0 / n * i
         cont.path(d=tmpl.substitute(locals()), stroke_width=0.01)
 
 def item_renderer(i):
     def renderer(cont):
         # http://www.iqtest.dk/main.swf Q5
         x, y = i2xy(i)
         cont.apply(draw_grid, 3)
         for j in range(x + 1):
             cont.trans(1.0 / 3 * (y % 3), 1.0 / 3 * j).rect(width=0.33, height=0.33, fill="url(#tube)")
         return cont
     return renderer
 ||<
 
 after
 >|python|
     cont.define_linear_gradient(
         "tube",
         [(0, "black", 1), (0.5, "white", 1), (1, "black", 1)])
 ||<
 
 <img src="http://gyazo.com/cbf882eeeeb7ec0d04123d26affe58ea.png">
 
 >|python|
 def item_renderer(i):
     def renderer(cont):
         # http://www.iqtest.dk/main.swf Q8
         x, y = i2xy(i)
         white = dict(fill="none", stroke_width=0.01, stroke="black")
         marks = [
             lambda cont: cont.trans(0.5, 0.5).circle(r=0.4, **white),
             lambda cont: cont.trans(0.1, 0.1).rect(width=0.8, height=0.8, **white),
             lambda cont: cont.path(d="M 0.5 0.2 L 0.1 0.9 L 0.9 0.9 Z", **white),
             lambda cont: cont.trans(0.5, 0.5).circle(r=0.4), # black circle
             lambda cont: cont.trans(0.1, 0.1).rect(width=0.8, height=0.8), # black square 
             lambda cont: cont.path(d="M 0.5 0.2 L 0.1 0.9 L 0.9 0.9 Z"), # black triangle
             ]
         if i < 9: 
             j = (x + y) % 3
         else:
             j = (2 + i - 9) % 6
         cont.apply(marks[j])
         return cont
     return renderer
 ||<
 I had a hard time making the wrong answer.
 <img src="http://gyazo.com/a0d7e036c120f78edc7a40967153f63b.png">
 
 >|python|
 from random import random
 buf = [int(random() * 6) for _i in range(9)]
 def item_renderer(i):
     def renderer(cont):
         # http://www.iqtest.dk/main.swf Q39
         cont.apply(draw_grid, 3)
         for y in range(3):
             for x in range(3):
                 cont.trans(1.0 / 3 * x, 1.0 / 3 * y).scale(1.0 / 3).apply(
                     MARKS[(buf[(i + y * 3 + x) % 9] + i) % 6])
 
         return cont
     return renderer
 ||<
 I thought I would reuse the previous marks, so I moved them out of the function. I also made a slightly simpler version without the +i.
 
 The easy one
 <img src="http://gyazo.com/beae8dda51bfd1b779c51f86858c7d5c.png">
 The difficult ones
 <img src="http://gyazo.com/9c373442064428a2eef013a9e1196b1f.png">
 
 original problem
 <img src="http://gyazo.com/78b77895f9faae7a50a7a1127cd28f93.png">
 
 *1268667820*[Kaizen] tasks will increase.
 You will have to chant over and over again until your body learns the truth that "tasks increase when left unattended.
 
 I should have taken in the laundry as soon as I got home, but I left it there for no reason and got soaked in the rain. I'm so disappointed.
 </body>
 <comments>
 <comment>
 <username>Yoshiori</username>
 <body>Instead of treating coffee or wakame soup and "tea in the broad sense" in parallel,<br><br>"tea in the broad sense": a beverage made by pouring liquid into a dried plant and brewing it<br><br>and not, in the broad sense, tea, but a drink made by pouring hot water into dried and roasted coffee beans. called coffee<br>or something like that? </body>
 <timestamp>1268640775</timestamp>
 </comment>
 <comment>
 <username>nishiohirokazu</username>
 <body>So you would admit that coffee is tea in the broadest sense of the word! </body>
 <timestamp>1268658362</timestamp>
 </comment>
 <comment>
 <username>TOKOROTEN</username>
 <body>I think it's because tea as a beverage and tea as an act are mixed up. <BR>I think coffee is tea. Tea as an act, though. </body>
 <timestamp>1268699148</timestamp>
 </comment>
 <comment>
 <username>nishiohirokazu</username>
 <body>"Sis, would you like a cup of tea?" I can have a cup of coffee if I say, "Sis, do you want some tea? <BR><BR><BR>"Would you like to go for a cup of tea? <BR><BR>"Would you like some tea? I'll have corn potage. <br><br>"I'll have ginger tea.
 <timestamp>1268702262</timestamp>
 </comment>
 </comments>

[Hatena Diary 2010-03-15 https://nishiohirokazu.hatenadiary.org/archive/2010/03/15]