Hatena2012-03-17
code:hatena
 <body>
 *1331989155*禅 of Python: 20の格言
 Python has a book called "Zen of Python" that summarizes Python's design principles in 20 concise sayings. I thought it would be difficult to convey the message even if I simply translated it, so I translated it with many translation notes.
 
 - Better be beautiful than ugly
 - explicitly stated is better than implicit
 - simple is better than complicated
 - Complex is better than difficult to understand ((Simple is better than complex, but it is better to make it complex than to make it difficult to understand by trying to make it simple. Moderation is the key.))
 - Flat is better than nested.
 - Sparse is better than dense ((For example, in source code, it is difficult to understand where the semantic cohesion is if the code is tightly packed. By including appropriate margins and blank lines, it becomes easier to understand the semantic cohesion. Too much cramming will impair comprehension.))
 - Readability is important.
 - A "special case" is not special enough to break the rules ((Is what you consider a "special case" really so special that you have to break the rules to give it special treatment? Think carefully))
 - However, pragmatism is more important than purity ((It is important to follow the rules, but not if there are specific practical disadvantages to doing so. Pragmatic advantage should take precedence.))
 - Don't let errors pass quietly.
 - However, if it is explicitly silenced, it is different ((one concrete example of "explicit is better than implicit")).
 - When faced with ambiguity, resist the temptation to guess the correct answer ((Don't proceed with a "maybe this is how it is" but make sure you know what the correct answer is before proceeding)).
 - There should be one clear way of doing things. And there should be only one. ((The antithesis of Perl's "There's more than one way to do it" http://en.wikipedia.org/wiki/There's_more_than_one_way_to_do_it))
 - But that method may be difficult for non-Dutch people to grasp ((joke based on the fact that Guido, the author of Python, is Dutch)).
 - Better to do it now than not.
 - But not doing it is often better than doing it *now*. ((In the rush to do it right away, mistakes tend to creep in, so it's better to do nothing than to do it.)))
 - If its too hard to explain how to implement, its a bad idea.
 - If it is easy to explain how to implement, it may be a good idea ((An idea that is difficult to explain is definitely a bad idea, but an idea that is easy to explain is not necessarily a good idea)).
 - Namespace is a super awesome idea, let's do something even more awesome!
 
 Incidentally, if you run import this in a Python interpreter, you will see this original text.
 
 There have been several attempts to translate it into Japanese, but since the original text leaves out words, there are quite a few different interpretations in the translation. I think you should read others' and choose the interpretation you think is best. Opinions and objections about the translations are welcome.
 
 - 原文: http://www.python.org/dev/peps/pep-0020/
 - Mr. Shibukawa's translation: http://python-history-jp.blogspot.com/2009/04/python.html
 - @yasusii訳 http://www.python.jp/Zope/articles/misc/zen
 </body>
 <comments>
 <comment>
 <username>atsuoishimoto</username>
 <body>python.jpのは https://twitter.com/#!/yasusii 訳です</body>
 <timestamp>1332029452</timestamp>
 </comment>
 </comments>

[Hatena Diary 2012-03-17 https://nishiohirokazu.hatenadiary.org/archive/2012/03/17]