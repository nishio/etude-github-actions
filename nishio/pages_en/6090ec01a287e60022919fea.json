Hatena2009-08-13
code:hatena
 <body>
 *1250116190* Programming Camp Diary
 surreal number
 >|python|
     def assert_numeric(self):
         for x in self.left:
             for y in self.right:
                 assert x < y
 ||<
 
 I'm going to have to go out for breakfast.
 
 <hr>
 
 Abstract and non-abstract syntax trees (in Python)
 
 >|python|
 >>> import ast # 2.6 or later
 >>> ast.dump(ast.parse("1+2"))
 'Module(body=[Expr(value=BinOp(left=Num(n=1), op=Add(), right=Num(n=2)))])'
 ||<
 
 >|python|
 >>> import parser, symbol, token
 >>> def change(ast):
 ...     if type(ast) is list:
 ...         return map(change, ast)
 ...     else:
 ...         leaf = symbol.sym_name.get(ast, ast)
 ...         return token.tok_name.get(leaf, leaf)
 ... 
 >>> change(parser.ast2list(parser.expr("1+2")))
 ['eval_input', ['testlist', ['test', ['or_test', ['and_test', ['not_test', 
 ['comparison', ['expr', ['xor_expr', ['and_expr', ['shift_expr', 
 ['arith_expr', ['term', ['factor', ['power', ['atom', ['NUMBER', '1']]]]], 
 ['PLUS', '+'], ['term', ['factor', ['power', ['atom', ['NUMBER', 
 '2']]]]]]]]]]]]]]]], ['NEWLINE', ''], ['ENDMARKER', '']]
 ||<
 
 <hr>
 
 Indonesia
 
 f:id:nishiohirokazu:20090813174926j:image
 
 <hr>
 
 Locked out by auto lock.
 
 <hr>
 
 I tried to write a proof that surreal numbers can represent arbitrary rational numbers in Coq, but was frustrated after looking at the references.
 </body>

[Hatena Diary 2009-08-13 https://nishiohirokazu.hatenadiary.org/archive/2009/08/13]