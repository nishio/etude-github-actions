Is the next development a network connection or a solution to the in-drag full-size display problem?
summary
　Q: Should Movidea's next development be a network connection or a solution to the problem of displaying full size while dragging?
	A: 
	　One line answer, "the ability to put data in the cloud."
		The issue of the full-size display while dragging is personally weird, but a commitment to artistic perfection.
		　It may be over-quality and should be shown to users and their reactions observed.
		Network connectivity feature creates a "stickies are in the cloud" situation.
		　The essential function of stationery is that "what you write does not disappear."
		　So I'll make it quickly.
		The one we'll do tomorrow is the network connection function.
		　Create a state where you can say, "The sticky note data is in the cloud."
		　In past versions, the state of not connected was expressed as "Not connected". This is an expression that does not capture the essence
		　The appropriate phrases are "data is in the cloud" and "data is only locally available."
		　Stop calling it "network connectivity."
　consideration
　　An example of being faced with two development tasks and wondering which one to prioritize.
　　I decided to consult with Keicho, who is much better than a coin, and decided to make a decision rather than wasting time on hesitation.
　　I found that one task was the creator's commitment to the naturalness of the appearance.
　　I called the other task by its technical aspect, but I found it to be more essential.
　　This organization changed the name of the latter task, and the balance of priorities was broken down so that we could confidently choose what to do next.
	[Keicho Utilization Techniques].

---

[nisbot.icon]What would you like to see happen in this conversation?
I hope [nishio.icon]Movidea decides whether its next development will be a network connection or a solution to the problem of displaying full size while dragging.
[nisbot.icon]What kind of "Movidea" is that "Movidea"?
[nishio.icon]A tool for dragging sticky notes to organize your thoughts
[nisbot.icon]What kind of "sticky" is that "sticky"?
[nishio.icon] It's a fragment of an idea.
[nisbot.icon]What "fragment" is that "fragment"?
[nishio.icon](This is digging too deep into something that is not the main topic.)
[nishio.icon]You can experiment with the arrangement by dragging.
[nisbot.icon]What kind of "dragging" is that "dragging"?
[nishio.icon]This time, a literal drag realized using the browser's DragDropAPI
[nisbot.icon]What kind of "DragDropAPI" is that?
[nishio.icon] Browser's standardized functions to realize dragging, the browser does the display of the object during dragging, etc.
[nisbot.icon]What kind of "realize" is that "realize"?
[nishio.icon]Hmmm....the look while dragging, I guess.
[nisbot.icon]What do you value?
[nishio.icon]To achieve the appearance of moving stickies as naturally as possible. Now, I feel that it is not natural that the display of the object being dragged is in its original size.
[nisbot.icon]What is the relationship between that "drag" and "realize"?
[nishio.icon]Dragging is the operation of moving, and what is realized is the appearance of that moving operation.
[nisbot.icon]Is that "drag" the same as "realize"? Is it different?
[nishio.icon]No.
[nisbot.icon]
 > Drag is the operation of moving, and what is realized is the appearance of that moving operation.
 Is there anything else you can tell us about this "make it happen"?
[nishio.icon]Some of the requirements have been clarified, so it can be realized without DragDropAPI, maybe it can be realized better.
[nisbot.icon]
 > Drag is the operation of moving, and what is realized is the appearance of that moving operation.
 How do you know this "make it happen"?
[nishio.icon]I feel "realized" when the point of concern is gone.
[nisbot.icon]Where is that "realize"?
[nishio.icon]It's in me. I guess my ideals are too high.
[nisbot.icon]
 > I feel "realized" when my concerns are gone.
 Where is this "realize"?
[nishio.icon] "When I no longer have a point of concern" is artistic. Maybe it should be "whether the user finds it inconvenient."
[nisbot.icon]
 > I feel "realized" when my concerns are gone.
 What does this "realize" look like?
[nishio.icon]Art
[nisbot.icon]
 > I feel "realized" when my concerns are gone.
 Where does this "realize" come from?
[nishio.icon]That aside, another network connection
[nisbot.icon]
 > I feel "realized" when my concerns are gone.
 What would you like to see happen regarding this "realization"?
[nishio.icon](Hey, that's not right.)
[nishio.icon]🙁
[nisbot.icon]
 > Drag is the operation of moving, and what is realized is the appearance of that moving operation.
 What kind of "drag" is this "drag"?
[nishio.icon]🙁
[nisbot.icon]
 > Drag is the operation of moving, and what is realized is the appearance of that moving operation.
 Is there anything else you can tell us about this "drag"?
[nishio.icon]🙁
[nisbot.icon]
 > To achieve the appearance of moving stickies as naturally as possible. Now I feel that it is not natural that the display of the object being dragged is in its original size.
 What kind of "in drag" is this "in drag"?
[nishio.icon]👎Dragging
[nisbot.icon]
 > Drag is the operation of moving, and what is realized is the appearance of that moving operation.
 Where is this "drag"?
[nishio.icon]🙁
[nisbot.icon]
 > To achieve the appearance of moving stickies as naturally as possible. Now I feel that it is not natural that the display of the object being dragged is in its original size.
 Is there anything else you can tell us about this "sticky note"?
[nishio.icon]The arrangement of stickies is an intellectual product, so we want to save it, and that's where the cloud auto-save feature comes in.
[nisbot.icon]Where is that "sticky"?
[nishio.icon]It's in the browser's memory, but the browser or user's device could exit at any time, so it needs to be saved to the cloud on the fly as changes are made.
[nisbot.icon]
 > The arrangement of stickies is an intellectual product, so we want to save it, and that's where the cloud auto-save feature comes in.
 What do these "stickies" look like?
[nishio.icon]It's like writing on paper. Even if you interrupt it, it remains there as it was last time, so you can resume thinking.
[nisbot.icon]
 > The arrangement of stickies is an intellectual product, so we want to save it, and that's where the cloud auto-save feature comes in.
 How do you know about these "stickies"?
[nishio.icon]I'd like to delve into the cloud preservation story, not that one.
[nisbot.icon]What kind of "cloud" is that "cloud"?
Save to [nishio.icon]Firestore
[nisbot.icon]What kind of "save" is that "save"?
[nishio.icon]Users do not have to do anything, and saving starts in the background when the placement of stickies, etc. is changed.
[nisbot.icon]What do you hope will happen regarding that "sticky"?
[nishio.icon]Operations on stickies should be rewindable.
[nisbot.icon]What needs to happen to the "sticky" for that to happen?
[nishio.icon](This is a mixed bag of Undo stories.)
[nishio.icon]Need to be able to detect changes in React state updates that are subject to Save or Undo.
[nisbot.icon] With regard to "stickies," can it?
Since [nishio.icon]React-like destructive updates are forbidden, it should be possible to detect it just by looking at the object identity regarding the sticky's state, which can be done with a hook. I think I did something complicated in an earlier version, but I don't know what it was for...
[nisbot.icon]Where do those "stickies" come from?
[nishio.icon](I just checked and there is a function running every 3 seconds to check if it has been updated and calling save when it has. This is an update rate limit.)
[nishio.icon](I remember now, you're supposed to send only local changes because the save process shouldn't run when the collaborative editing is updated with information from the server.)
[nishio.icon] In other words, stickies can be created by local updates, or updates from collaborative editing can come from the cloud. If you just want to save them, the former is enough, but if you want to make collaborative editing an option, the latter is necessary.
[nisbot.icon]Where is that "sticky" located?
Can we do away with [nishio.icon] co-editing for now? I thought about it, but in that case, it would be sad if the latest version is on the server side and the old one is edited and overwritten, and if we say, "The new one is on the server. So, we need to take care of server updates regardless of whether we actively promote co-editing or not. I want to eliminate the situation where stickies are only at hand as soon as possible and make them "in the cloud". To prevent them from disappearing.
[nisbot.icon]What is the relationship between that "sticky" and "realize"?
[nishio.icon](In summary, the problem of displaying full-size stickies while dragging is personally unpleasant, but we should show it to users and observe their reactions, because it is a commitment to artistic perfection. The network connection function is an essential function of stationery, which is that "stickies are in the cloud" and "what you write will not disappear. It is the network connection that we will do tomorrow.)

https://keicho.netlify.app/#talk=Z2IsX4rIyiq3xhDMQDjn