turn-based communication
from [/villagepump/turn-based-communication].

[/shokai/turnaround-communication].
　Is there a good point to the contrary?
　It's a clue when you think about why Nota can't run Scrapbox alone to get the job done and uses chat in conjunction[/villagepump/nishio.icon].
　　For example, if you ask a question in a chat room, it is clear that "the ball is in the questioner's court.
　　The person being asked the question answers and "throws the ball back."
　　This kind of "[conversation catching]" seems hard to do in Scrapbox.
　　The best thing about Scrapbox is that it's "a great way to
　　Until now, many people have assumed that communication is [a] catch-all.
　　But the truth is [you can communicate without playing catch-up] and,
　　[Software design discussions should not be a catch-all].
　　I think we just showed that.
　　Sometimes you need something that is in [chat tool] but not in Scrapbox[/villagepump/basic.icon].
　　　[Mention] used when you [want a reply now].
　　　Voicemail/[screen sharing] when you want to work in a completely synchronous manner
　　　Inform [notify] by passing information about related tools to the webhook.
　　　All of them are involved in [synchronization].
 　　Compared to Scrapbox, the order of the content is immutable, which is a feature of chat? [/villagepump/blu3mo.icon].
 　　 Micro and macro [time-oriented].
 　　 The order is almost completely guaranteed[/villagepump/basic.icon].