Hatena2010-07-20
code:hatena
 <body>
 *1279585816* I went to the Marine Mammals exhibit.
 f:id:nishiohirokazu:20100719124244j:image
 
 narwhal! I hear this is the only tooth they have. Super bucktooth.
 
 *1279595270* Continued: Haskell's fib is slow.
 It's a very instructive process, so I'll summarize it briefly for now
 
 - <a href='http://d.hatena.ne.jp/nishiohirokazu/20100622/1277208908'> Haskell's "fib = 1:1:zipWith (+) fib (tail fib)" is very slow</a>.
 -- Haskell's famous fib definition is much slower than the definition in a naive loop, taking about O(n^2.6) execution time, and even losing to Python at N = 100000
 - <a href='http://togetter.com/li/31078'>Togetter - "Haskell's 'fib = 1:1:zipWith (+) fib (tail fib)' is very slow"</a>
 -- Talking about how it's complicated because of the cost of adding Integer and other factors involved, etc.
 - <a href='http://d.hatena.ne.jp/mkotha/20100623/1277286946'>fib = 1 : 1 : zipWith (+) fib (tail fib) is slow or not depends on usage - www.kotha.netの裏</a>
 -- I'm told that using fib in order from the beginning (e.g. sum (take 300000 fib)) is much faster than fib ! 300000 is much faster than fib !
 -- I'm told that the earlier version of fib I wrote has a compiler inference (not explicitly stated in the code) of positive identity.
 - <a href='http://homepage1.nifty.com/herumi/diary/1006.html#23'>melancholic afternoon</a>
 -- The time and memory consumption for retrieving just one element from a huge list is completely different from that for retrieving two or more elements from the same list.
 - <a href='http://d.hatena.ne.jp/kazu-yamamoto/20100624/1277348961'>Myths of Haskell - An Unadulterated Story</a>
 -- such as "just create a 'zipWith' that evaluates to a positive rating.
 - <a href='http://d.hatena.ne.jp/nuc/20100716/p17'>haskell fib is not slow - white capybara inverse limit S.144-3</a>
 -- that it is natural to assume that spatial computational complexity had a temporary impact.
 - "First you should both draw a graph." http://twitter.com/gusmachine/status/18840198768
 - Graphs: <a href='http://shinh.skr.jp/m/?date=20100719#p01'>Hajimete no niki (2010-07-19)</a>
 -- "2.77618e-13*x^2.55 is a better match than 2.10854e-10*x^2 by all accounts. I don't think it even feels idiosyncratic." Talking about how the spatial computational complexity may not have temporarily affected the results.
 - <a href='http://togetter.com/li/36609'>Togetter - "Continued: the slow fib in Haskell"</a>
 -- talk about how it is likely to be environment-dependent, how there are cases where a process that looks O(n) takes more than it actually does because of GC and memory allocators (a past example in Ruby), etc.
 </body>
 <comments>
 <comment>
 <username>kinaba</username>
 <body>Summarized as far as we know http://togetter.com/li/36609</body>
 <timestamp>1279621903</timestamp>
 </comment>
 </comments>

[Hatena Diary 2010-07-20 https://nishiohirokazu.hatenadiary.org/archive/2010/07/20]