Evergreen notes should be atomic.
[https://notes.andymatuschak.org/z4Rrmh17vMBbauEGnFPTZSK3UmdsGExLRfZz1 Evergreen notes should be atomic]

	[evergreen note] should be atomic.
		Notebooks are
		　[* write about one thing only].
		　However, as much as possible
		　[* Write so that the whole picture of the matter can be grasped].
		　is best
		　　[nishio.icon] Note that only the "write only about one thing" part is widespread, but this means "it is best to be able to do both" because it indicates two conditions in one sentence, and it is not best to do the former at the expense of the latter.
		　　　He explains below that too much breadth has these disadvantages, and too much fragmentation has these disadvantages.
		　　　That balance is important.
		This will make it easier to form connections across topics and contexts.
		If the note is too wide,
			Difficulty in noticing when you come across a related new idea for one of the multiple ideas in the notebook
			Also, the link to that note is ambiguous.
			　[nishio.icon] This seems to implicitly assume that a link to a note leads to the beginning of that note
			　　Scrapbox's ability to scroll to a line link or link position would allow me to point to that part of the page even if multiple thoughts are on one page.
			　　I have also written in the past that [line links are opportunities to cut out].
			　　　If you're doing a line link instead of linking by the title itself, that means that something different from the title must be written from that line. Related.
		He said the notes are too fragmented,
			The link network is also fragmented.
			It is difficult to see some of the connections.
			Related: [evergreen notes must be densely linked].
	There is no clear indicator or correct answer here, but rather a trade-off.
		[nishio.icon][Doesn't it vary from person to person whether a certain note is atomic or not?"]
	This concept is very similar to the "separation of concerns" principle in software engineering.
		In this principle, the module should be "about one thing only",
		The company states that this would facilitate reuse.
		However, if the pages are subdivided too much, the cohesion problem ([cohesion] problem) arises, just as it does if the modules are subdivided too much.
		　[nishio.icon]Simply put, the more detailed the division, the greater the amount of interconnecting stuff.
		　　In the source code, there are more import statements, more communication between servers if they are divided into multiple servers, etc.
		　[nishio.icon]Basically, the more you subdivide a module, the more overhead there is at the joints, and the worse the performance gets.
		　　This is especially true for physical products, a topic well-studied in the field of business administration
		　　　Related: [modular and integral].
		Thus, [the title of the evergreen note is similar to the API].