Hatena2010-10-20
code:hatena
 <body>
 *1287532005*Poor Ruby, out of her league.
 "We tweet about topics, events, and interesting companies related to" Search by
 
 >>
 Hello! This is PHPManiaJP, where I tweet about PHP topics, events and interesting companies. (abbreviated below)
 Hello! This is JavaManiaJP. (same as above)
 Hello! This is PythonManiaJP. (same as above)
 Hello! This is PerlManiaJP. (same as above)
 Hello, RoRManiaJP! (same as above)
 Hello! This is AS3ManiaJP. (same as above)
 Hello, PlannerManiaJP! (Ibid.)
 <<
 
 (つд⊂)ゴシシゴシ (； ﾟ...ﾟ...ﾟ...ﾟ...ﾟ...ﾟ...ﾟ...)
 
 「Sorry, that page doesn’t exist!」 http://twitter.com/RubyManiaJP
 
 Setsuko, it's not RoR, it's Ruby...
 
 <hr>
 
 PS: I had never heard of the language Planner, so I thought it might be some kind of web framework, but it turned out to be "PlannerManiaJP. I thought it might be a web framework, but it turned out to be "PlannerManiaJP, a web forum for game planner topics and (abbreviation below)". RoR wasn't the only one that wasn't a language! Thank goodness there were no outcasts!
 
 *1287574907*Reviewing object oriented in Perl6.
 >|perl|
 role A {
   method foo(){
     "A".say
   }
 }
 
 role B {
   method bar(){
     "B".say
   }
 }
 
 class Foo  {
   does A;
   does B;
 }
 
 my $x = Foo.new.foo() #->A
 ||<
 
 Well, so far it's obvious, and then rename B#bar to B#foo.
 
 >>
 Method 'foo' collides and a resolution must be provided by the class
 <<
 
 This is what I expected. I think there should be a way to say in the definition of class Foo that "B's foo should be renamed b_foo", but... I think it should be there...
 
 <hr>
 
 Not that it matters, but to do something obj.method-like:.
 >|perl|
 obj.method(arg)
 obj."$name"(arg)
 obj.'$name_with_doller'(arg)
 obj!"privatefoo"(arg)
 obj.*foo(arg) # obj.call_all_multimethod("foo", arg)
 obj.+foo(arg) # obj.call_one_or_more_multimethod("foo", arg)
 obj.?foo(arg)
 ||<
 
 Too much chaos! Is (the learner's brain) ok with this kind of grammar?
 </body>
 <comments>
 <comment>
 <username>hoge</username>
 <body>Scheme Past◇Present◇Future Part I - http://www010.upp.so-net.ne.jp/okshirai/scheme-20070402222203.txt<br><br>There seems to be some. <br><br>Planner</body>
 <timestamp>1287556512</timestamp>
 </comment>
 <comment>
 <username>uasi</username>
 <body>>I think there should be a way to state in the definition of class Foo that "B's foo should be renamed b_foo and used"... <br><br>If the method name of a role conflicts, you can call it by its fully qualified name. <br><br>class Foo does A does B {<br> method foo() { self.A::foo() }<br> method b_foo() { self.B::foo() }<br>}<br>Foo.new.foo(); # => A<br>Foo.new.b_ foo(); # => B<br># or<br>Foo.new.B::foo(); # => B<br><br>The definition of Foo#foo is also needed to make clear that the conflict has been resolved. </body>
 <timestamp>1298522879</timestamp>
 </comment>
 </comments>

[Hatena Diary 2010-10-20 https://nishiohirokazu.hatenadiary.org/archive/2010/10/20]