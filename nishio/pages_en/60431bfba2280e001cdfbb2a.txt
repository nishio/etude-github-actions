Programming Highways
[https://gyazo.com/dbabee5555a9c506213bb1167576c567]
[https://twitter.com/nishio/status/1368078453405151236?s=21 Twitter]
	Talking about whether we should use useful libraries and frameworks in programming, we need to have both a lateral and a top-down perspective.
	The Convenience Framework is like a highway. If you drive on it, you can make more progress in the same amount of time than if you drive down the road. Programming is the same way; you can produce more results faster if you use libraries. This is the side view.
	On the other hand, from above, there are only a limited number of places that can be reached by highway alone. Depending on "where you want to go," it may be necessary to get off the highway on the way, or it may be pointless to get on the highway in the first place.
	 Similarly, in programming, the use of libraries depends on what you want to do.
	Just as most places cannot be reached by highway alone, most of what can be achieved by programming cannot be achieved by simply combining libraries. Going down the road and proceeding = you will need to combine and implement the standard features of the programming language yourself.
	This is like a "new highway opened" because more and more libraries and frameworks are being created to make the world more convenient.
 	Middle-aged engineers sometimes say to young engineers, "We didn't have such highways when we were younger, take the low road," but I think that if you can get to a place by highway, you should go there.
 There is only so far you can go on the highway, and there will eventually come a time when you have to get off the highway, so you will eventually learn about the road down the road anyway. I don't think there is any merit in telling someone who is about to get on the freeway to not get on.

[Programming] [Highway].
[from side to top]
