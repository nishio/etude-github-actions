Learning from Disassembly
from [日記2022-01-31]
Learning from Disassembly
[https://twitter.com/ina_ani/status/1487716929414438913?s=20&t=VnWtxMElpZNh6BIRIRRaXw ina_ani@1歳9ヶ月児のパパ(@ina_ani)]
>I've been playing it in the background of my work, and it was quite interesting just to listen to it by ear.
>I started out by reading schematics of open source hardware (Arduino duemilanove), so I guess I'm a little different from the disassembly group.
>https://t.co/zAgTP0UXff
[https://twitter.com/ina_ani/status/1487717602159828996 ina_ani@1歳9ヶ月児のパパ(@ina_ani)]
>I was at least comfortable with schematics, and I had a good mentor.
>
>This is the record of the time... (not much information)
>https://t.co/kuVEpYWBG4
[https://twitter.com/ina_ani/status/1487717857156689921 ina_ani@1歳9ヶ月児のパパ(@ina_ani)]
>I think @nishio's article, which I joined with you, is more clear on the situation.
>
>https://t.co/39hixZ6lbZ

[https://twitter.com/nishio/status/1487972998665871360?s=20&t=VnWtxMElpZNh6BIRIRRaXw nishio hirokazu(@nishio)]
>When I was first exposed to web services in my first year of college, it was a bulletin board program written in a few dozen lines of Perl, and it was easy to "observe the contents". The decoding part of the request body didn't make sense to me at first, but that part remained a black box, and I modified it to create games and so on.
