Hatena2007-11-28
code:hatena
 <body>
 *1196233057* Bookmarklet to sort iKnow friends list
 I made it.
 
 http://coderepos.org/share/wiki/iknow_hack
 
 I put it in CodeRepos.
 
 *1196237443*AS
 Action Hajimeshimashita (pronounced like chilled Chinese noodles)
 
 ---
 
 Line that "undulates" like UNIQLO_GRID - Teknekni Blog
 http://d.hatena.ne.jp/nitoyon/20071121/uniqlo_grid_line
 
 This is short, so I will copy it.
 
 ---
 
 I see that fcwrap has changed its name to rascut, just type gem install rascut to install it.
 
 ---
 
 If you think import flash.event.*; is an error, EVENTS is correct.
 
 ---
 
 I broke down when I wrote "private var" four times, so I edited .abbrev and
 >||
 (javascript-mode-abbrev-table)
 
 "pr"		   1	"private ver :;" (lambda nil (backward-char 2))
 ||<
 but it doesn't complete properly. Why is that?
 
 So I was looking into it.
 
 If you want to complete, abbrev-mode => snippet.el looks good - hiboma's Hatena Diary
 http://d.hatena.ne.jp/hiboma/20070531/1180574301
 
 Looks good.
 
 ---
 
 HTML editing made easy with emacs + snippet.el's canned text completion (snippets): Goodpic
 http://www.goodpic.com/mt/archives2/2007/02/emacs_snippetel_html.html
 
 ---
 
 GNU Emacs Lisp Reference Manual: Strings and Characters
 http://www.bookshelf.jp/texi/elisp-manual-20-2.5-jp/elisp_5.html
 
 ---
 
 At any rate, this is what it looked like.
 
 >|lisp|
 ;; snippet.el
 (require 'snippet)
 
 ;; In snippet.el, add canned text to addrev
 (add-hook 
  'javascript-mode-hook
  '(lambda ()
 	(setq-default abbrev-mode t) ;; abbrev-mode on
 	(snippet-with-abbrev-table 
 	 'local-abbrev-table 
 	 ("pr" 
 	  . "private var $${name}:$${type};")
 
 
 	 )
 ))
 ||<
 
 Oh, more than I imagined. This is good.
 
 ---
 
 I wrote EmacsLisp in a comment sentence at the end of the ActionScript I am writing.
 This makes it convenient and convenient to try out different completions because you can just add them and C-x C-e and immediately use the new completions.
 
 >|lisp|
 /*
 (snippet-with-abbrev-table 
 	 'local-abbrev-table 
 	 ("pr" 
 	  . "private var $${name}:$${type};")
 	 ("fun" 
 	  . (concat
 		 "function $${name}:$${type}($${args}){\n"
 		 "$>$${body}\n"
 		 "$.}"))
 	 ("adde" 
 	  . "addEventListener(\"$${name}, $${name}Handler\");")
 
 );; end abbrev
 */
 ||<
 
 ---
 
 The code above is very buggy, so don't take it for granted. w
 
 ---
 
 I got it to the point where the wiggles move, at least.
 
 *1196244118* Association of 1981 Birthdays
 I was skimming through the lab's bulletin board, and id:amachang was trying to lure me in.
 
 Let's get together with engineers of the 1981 generation and do something - IT Senki
 http://d.hatena.ne.jp/amachang/20071128/1196241194
 
 id:jbking I was born in 1981, right?
 
 ---
 
 http://born1981.g.hatena.ne.jp/
 
 Hatena Group is now available!
 
 *1196251119*Continuation of sutra
 log() from anywhere in AS3; - PBD - subtech
 http://subtech.g.hatena.ne.jp/secondlife/20070219/1171872801
 
 ---
 
 I was doing xs.push() without xs = []; and getting a runtime error. Where do I get error messages or something about runtime errors?
 
 ---
 
 log.as convenient.
 
 ---
 
 Gadget to embed Flash in Hatena Diary - Teknekni Blog
 http://d.hatena.ne.jp/nitoyon/20070829/embed_flash_on_hatena_diary
 
 Oh, I can put it up with this.
 
 ---
 
 <script src="http://gmodules.com/ig/ifr?url=http://nitoyon.googlepages.com/embed_flash.xml&amp;up_url=http%3A%2F%2Fwww.nishiohirokazu.org%2Ffiles%2FUneuneLambda.swf&amp;up_background=%23eeffee&amp;synd=open&amp;w=320&amp;h=240&amp;title=uneune+lambda&amp;border=%23ffffff%7C0px%2C1px+solid+%2399BB66%7C0px%2C2px+solid+%23AACC66%7C0px%2C2px+solid+%23BBDD66&amp;output=js"></script>
 
 If you like big lambda, go down
 http://www.nishiohirokazu.org/files/UneuneLambda.swf
 Î».... 
 
 ---
 
 Wonderful. Thanks to nitoyon from start to finish. nitoyon++;.
 
 ---
 
 Source.
 
 >|actionscript|
 package {
     import flash.display.*;
     import flash.events.*;
     import flash.geom.*;
 
     [SWF(backgroundColor="#eeffee")]
     public class UneuneLambda extends Sprite {
         private var start:Point;
         private var controls:Array;
         private var anchors:Array;
 
         private var heads:Array;
         private var pres:Array;
         private var posts:Array;
         private var ndirs:Array;
         private var phases:Array;
 
         private var cur:Point;
         private var prev:Point;
         private var count:int;
         private const WAIT:int = 20;
         private const DISTANCE:int = 25;
         private const RANDOM:Number = 3;
         
         public function UneuneLambda(){
             stage.addEventListener("mouseDown", mouseDownHandler);
             addEventListener("enterFrame", enterFrameHandler);
             pres = [];
             posts = [];
             heads = [];
             ndirs = [];
             phases = [];
         }
         
         private function mouseDownHandler(event:MouseEvent):void{
             stage.addEventListener("mouseMove", mouseMoveHandler);
             stage.addEventListener("mouseUp", mouseUpHandler);
             count = 0;
             start = new Point(event.stageX, event.stageY);
             cur = start.clone();
             prev = start.clone();
             controls = [null];
             anchors = [start];
         }
         
         private function mouseMoveHandler(event:MouseEvent):void{
             cur.x = event.stageX; cur.y = event.stageY;
             count++;
             if(count == WAIT || count < WAIT && Point.distance(prev, cur) > DISTANCE){
                 prev = cur.clone();
                 controls.push(cur.clone());
                 count = WAIT;
             }else if(count == WAIT * 2 || Point.distance(prev, cur) > DISTANCE){
                 prev = cur.clone();
                 anchors.push(cur.clone());
                 
                 var pt:Point = Point(anchors[anchors.length - 2]);
                 var c:Point = Point(controls[anchors.length - 1]);
                 var diff:Point = pt.subtract(c);
                 var sum:Point = pt.add(c);
                 c.x = sum.x / 2 - diff.y * 2;
                 c.y = sum.y / 2 + diff.x * 2;
                 count = 0;
             }
 
         }
         
         private function mouseUpHandler(event:MouseEvent):void{
             stage.removeEventListener("mouseUp", mouseUpHandler);
             stage.removeEventListener("mouseMove", mouseMoveHandler);
             start = null;
             cur = null;
             for(var i:int = 1; i < anchors.length; i++){
                 heads.push(controls[i]);
                 var v1:Point = anchors[i - 1];
                 var v2:Point = anchors[i].clone();
                 pres.push(v1);
                 posts.push(v2);
                 var ndir:Point = v1.subtract(v2);
                 ndir.normalize(1);
                 ndirs.push(ndir);
                 phases.push("heads");
             }
         }
         
         private function enterFrameHandler(event:Event):void{
             graphics.clear();
             if(start){
                 graphics.lineStyle();
                 graphics.moveTo(anchors[0].x, anchors[0].y);
                 graphics.lineStyle(1, 0);
                 for(var i:int = 1; i < anchors.length; i++){
                     graphics.curveTo(
                         controls[i].x + Math.random() * RANDOM - RANDOM / 2,
                         controls[i].y + Math.random() * RANDOM - RANDOM / 2,
                         anchors[i].x + Math.random() * RANDOM - RANDOM / 2,
                         anchors[i].y + Math.random() * RANDOM - RANDOM / 2);
                 }
                 graphics.lineTo(cur.x, cur.y);
             }
 
             // render lambdas
             for(i = 0; i < heads.length; i++){
                 graphics.lineStyle();
                 graphics.moveTo(pres[i].x, pres[i].y);
                 graphics.lineStyle(1, 0);
                 graphics.curveTo(
                     heads[i].x + Math.random() * RANDOM - RANDOM / 2,
                     heads[i].y + Math.random() * RANDOM - RANDOM / 2,
                     posts[i].x,
                     posts[i].y);
             }
             
             // move lambdas
             var speed:Number;
             for(i = 0; i < heads.length; i++){
                 if(phases[i] == "heads"){
                     heads[i].x += ndirs[i].x * 2;
                     heads[i].y += ndirs[i].y * 2;
                     
                     var v:Point = heads[i].subtract(pres[i]);
                     var dp:Number = v.x * ndirs[i].x + v.y * ndirs[i].y;
                     if(dp > 0){
                         phases[i] = "posts";
                     }
                 }else if(phases[i] == "posts"){
                     speed = Point.distance(pres[i], posts[i]) / 5 + 1;
                     posts[i].x += ndirs[i].x * speed;
                     posts[i].y += ndirs[i].y * speed;
 
                     v = posts[i].subtract(pres[i]);
                     dp = v.x * ndirs[i].x + v.y * ndirs[i].y;
                     if(dp > 0){
                         phases[i] = "pres";
                     }
                 }else if(phases[i] == "pres"){
                     speed = (DISTANCE - Point.distance(pres[i], posts[i])) / 5 + 1;
                     pres[i].x += ndirs[i].x * speed;
                     pres[i].y += ndirs[i].y * speed;
                     if(Point.distance(pres[i], posts[i]) > DISTANCE){
                         phases[i] = "heads";
                     }
                 }
             }
         }
     }
 }
 ||<
 </body>
 <comments>
 <comment>
 <username>jbking</username>
 <body>Unfortunately, I was born in February 1982, I was born early. </body>
 <timestamp>1196244830</timestamp>
 </comment>
 <comment>
 <username>jbking</username>
 <body>Oh, if we go by generation, it matches. </body>
 <timestamp>1196244859</timestamp>
 </comment>
 <comment>
 <username>amachang</username>
 <body>I'm in too, 198201, but I'm in.
 <timestamp>1196245124</timestamp>
 </comment>
 <comment>
 <username>jbking</username>
 <body>There is an actionscript-mode that supports AS3. </body>
 <timestamp>1196294591</timestamp>
 </comment>
 </comments>

[Hatena Diary 2007-11-28 https://nishiohirokazu.hatenadiary.org/archive/2007/11/28]