(7.3) Creating knowledge
Many people are worried about what to learn, but I think anything is OK. What you choose as the object of learning is not very important. By learning something, "learning ability" is cultivated, and you can learn efficiently when you want to learn another field.

There is a similar structure to the choice of programming language. Inexperienced programmers often ask "which programming language should I learn?" 

Compared to spend a month to think what to learn,it would be better to learn one language for one month, whatever it is. 

There are many different programming languages ​​in the world, but most of them consist of common concepts with a few exceptions. If you learn one language, you will be able to learn efficiently other languages ​​as necessary.

This book is based on the feature article "Engineer's way of learning" of Technical Review company WEB + DB PRESS. I would like to explain in the end why the title of this book became "engineer's intellectual production technique" instead of "engineer's way of learning". (*22)

When saying "learn", do not you have an image implicitly "knowledge is outside of you and incorporate it into yourself"? However, the knowledge outside of you, such as knowledge written in textbooks, is "knowledge that someone has already created and distributes". Since knowledge can be copied, there are many people who already have that knowledge at the time that knowledge is circulating. That means that even if we incorporate outside knowledge, that knowledge is hard to lead to differentiation.

On the other hand, the knowledge created as needed at the actual application site is not distributed, it is highly valuable knowledge that fits the situation of the site. In other words, the ability to create new knowledge, not knowledge, is the source of value. Considering this as a concrete example, it seems that this is natural. Writing things written in programming textbooks does not mean differentiation, and the power to create new programs according to the circumstances is the source of value. Of course. The idea that this "creative power is the source of value" applies to areas other than programming.

I was not able to clearly describe what is the creativity and how we can learn it. However, as for the books and lecture materials I wrote in the past, I got a lot of feedback that I gave new knowledge for many people. I seem to have created unconscious knowledge.

Therefore, I conducted an experiment to observe and languageize the knowledge creation process X that I write a book of X. This book is created by that experiment. It was a long experiment, but it seems time has come to finish. I am praying that I am able to create valuable knowledge, convey it to you through this book, and help you in your future.

Addition: The above is the end of the original Japanese version. From the observation of Japanese readers, it is verified that I created some valuable knowledge. Then new hypothesis was born that those knowledge is valuable to readers outside of Japan.

I conducted another experiment that I, myself, translate the book into English. I found some concept correspond to Japanese words do not correspond English words. I tryed to convert original Japanese structure decomposed and re-structure in simple English. In the process I keep in mind to make sentenses simple so that machine-translation programs can understand it.

And also I determined to put them on Scrapbox, a kind of Wiki system. The book and the Scrapbox both have its advantage and disadvantage. Scrapbox may helps to make the learning cycle smaller and faster. You are now seeing my on-going experiment of knowledge creation.

*22: Due to the popularity of columns in my book "Technology Behind Coding", the feature article "Engineer's way of learning" was written in July 2014. As I write this book, it is now September 2017. During that time, I have conducted workshops and lectures on how to learn in various places, and my ideas have been refined.
