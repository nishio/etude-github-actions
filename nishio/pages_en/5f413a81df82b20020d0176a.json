NUMPY subscript access is slow.
For algorithms that require repeated random accesses with subscripts, it is faster to keep the list than to use numpy.array.
code:python
 In [71]: %%timeit
     ...: xs = np.zeros(100)
     ...: xs[0]
     ...: 
 696 ns ± 4.94 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
	
 In [72]: %%timeit
     ...: xs = [0] * 100
     ...: xs[0]
     ...: 
 416 ns ± 3.79 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)