Scrapbox ChatGPT Connector Policy Consultation 2023-03-13

consultation
	I would like to discuss the policy of [Scrapbox ChatGPT Connector].
		I released the code with the intention of minimizing it to make it easier to understand rather than adding more functionality, but if it is truly minimal, it can be cut down even further.
		On the other hand, I've seen various opinions from people who have used it, and I'm eager to try various new features myself.
		It is preferable that the code for this new feature can also be easily shared.

summary
 The Scrapbox ChatGPT Connector was designed to be easy to understand with minimal code, but after seeing the feedback from those who use it, we wanted to try out some new features.
 We would also like to be able to easily share code for new features.
 Via UserScript, the selection text on Scrapbox can be retrieved and rewritten.
 Set up a server with the Scrapbox ChatGPT Connector API and hit it from UserScript.
 We would like to expand the functionality to meet user needs, such as updating the vector index and asking questions to multiple people.
 Create a separate develop branch from the main branch and add the code for the new functionality there.
 Implement new functionality in Python.



[/nishio/kei.icon]What would you like to see happen in this conversation? (GPT)
[/nishio/human.icon]I would like to discuss the policy of the Scrapbox ChatGPT Connector. I released it with the intention of keeping the code to a minimum to make it easier to understand, not to add more features, but if it is really minimal, I can cut it down even more. On the other hand, I've seen a lot of feedback from people who have used it, and I'd like to try out some new features myself. I would like to be able to share the code for these new features easily.
[/nishio/kei.icon]The "Scrapbox ChatGPT Connector" is a program that connects Scrapbox and GPT-3 and provides the ability to obtain GPT-3 responses on Scrapbox.
[/nishio/human.icon]No. Getting the response on Scrapbox is one of the things I want to do. via UserScript, I can get the selection text on Scrapbox and rewrite it, so that would be interesting.
[/nishio/kei.icon]How does it get the text of the selection?
[/nishio/human.icon]I don't know
[/nishio/kei.icon]What method do you use to get the text of the selection?
[/nishio/human.icon]UserScript calls do a good job.
[/nishio/kei.icon]What specific "UserScript" are you using to retrieve and rewrite the text of the selection on Scrapbox?
[/nishio/human.icon]I haven't implemented it yet, but I'm going to set up a server with Scrapbox ChatGPT Connector API and hit it from UserScript.
[/nishio/kei.icon]Regarding that "UserScript", what functionality is needed besides hitting the Scrapbox ChatGPT Connector API?
[/nishio/human.icon]Not particularly necessary, simple
[/nishio/kei.icon]Is that "UserScript" a program that sends a request to a server with the Scrapbox ChatGPT Connector API?
[/nishio/human.icon]Yes
[/nishio/kei.icon]Please tell us more about the "Scrapbox ChatGPT Connector". What specific features does it have? And how are those functions used?
[/nishio/human.icon]Right now, only two functions: creating a vector index and using it to send questions to ChatGPT
[/nishio/kei.icon]ChatGPT is a natural language processing model developed by Open AI that can generate sentences and complete sentences based on knowledge learned from a large corpus. The "Scrapbox ChatGPT Connector" is a program that connects Scrapbox and ChatGPT and provides the ability to retrieve ChatGPT responses on Scrapbox.
[/nishio/human.icon]Ask a question.
[/nishio/kei.icon]How do you collect information about this "UserScript"?
[/nishio/human.icon]ðŸ‘ŽUserScript
[/nishio/kei.icon] "ChatGPT" has many applications, not limited to the Scrapbox ChatGPT Connector, but the current Scrapbox ChatGPT Connector has the ability to create a vector index and use it to two functions that send questions to ChatGPT.
[/nishio/human.icon]User needs that I'd like to have too: update vector index, ask multiple people questions, keep the conversation rally going.
[/nishio/kei.icon] A "vector index" is a transformation model for vectorizing sentences for use with the Scrapbox ChatGPT Connector.
[/nishio/human.icon]Ask a question.
[/nishio/kei.icon] What are some possible ways to make it possible to update the "vector index"?
I have an idea of how to [/nishio/human.icon]do it, but it's easier to write it down than to explain it in words.
[/nishio/kei.icon]What are your specific ideas on how to update the "vector index"?
Instead of [/nishio/human.icon]updating, it's better to reuse the old index and create a new one
[/nishio/kei.icon]Understood. Can you give us more details on the specific procedure to create a new index?
[/nishio/human.icons]No. I'm not sure. It's better to write it in code, maybe create a separate develop branch from the main branch and put it there...
[/nishio/kei.icon]When you say "code", what code are you referring to? Please elaborate.
[/nishio/human.icon]Python code.
[/nishio/kei.icon]Do you have any specific ideas about this Python code and what changes would be needed to add new features?
There is a [/nishio/human.icon]. We're not getting anywhere, so as far as this place is concerned, let's get on with the implementation...
[/nishio/kei.icon]What do you mean when you use the expression "no offence"?
[/nishio/human.icon]In summary.
[/nishio/kei.icon]- We tried to keep the Scrapbox ChatGPT Connector to a minimum of code and easy to understand, but after seeing what people who use it have to say, we wanted to try out some new features.
- We would also like to be able to easily share code for new features.
- Via UserScript, the selection text on Scrapbox can be retrieved and rewritten.
- Set up a server with the Scrapbox ChatGPT Connector API and hit it from UserScript.
- We would like to expand the functionality to meet user needs, such as updating the vector index and asking questions to multiple people.
- Create a separate develop branch from the main branch and add the code for the new functionality there.
- Implement new features in Python.


https://keicho.netlify.app/#talk=e59nfBQZlBc4LAFFCyqX
#KeichobotLog
