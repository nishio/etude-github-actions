I don't have anything I want to make.
from [/villagepump/not what I want to make].
Barriers Standing in the Way of Programming Learners

>[https://twitter.com/shokai/status/1508942582788726784 @shokai]: no one can make [something they don't want to make], it's just that in the end [they don't know how to make it].
>[https://twitter.com/shokai/status/1508946950317502466 @shokai]: I feel that the quantity and quality of ideas I come up with has increased when I increase the speed of creation.
>Anyway, I recommend making something every week, whether it's a bus stop timetable, a camera that automatically takes pictures of people approaching, or a twitter bot, just think of it like modifying a library or API sample code that you can find anywhere around.

 You need to know "[how to make]" in order to come up with the idea of "what you want to make."
  The more you believe that you can make it, the better.
  If you don't know how to make it at all, of course it won't be "[I want to make it]".

Can we call it solution-driven?
 [Everything looks like a nail to someone with a hammer][/villagepump/nishio.icon].
　　[Without a hammer, even a nail doesn't look like a nail.]
　　This is nice[/villagepump/mtane0412.icon][/villagepump/takker.icon][/villagepump/kumako.icon].
　　 And since `if all you have is a hammer`, this is also a good match, since it can lead to the idea that you should have as many solutions as possible.

Some people want to make ([suddenly without making a heck of a lot of stuff] the strongest, most perfect thing I can think of) and can't[/villagepump/nishio.icon].

Maybe rewriting and modifying the existing UserScript myself was a good way to increase the number of solutions[/villagepump/takker.icon].
　I found [emoji selector] and thought it was awesome and immediately wanted to modify it myself.
  If you apply the same technique, you will be able to supplement links to external projects as well.
　　The first thing I put on [/takker] was the test code for this.
　During this modification process, I began to see what JavaScript could do.
　After that, by writing small scripts such as Popup Menu to large scripts such as [History Slider] that create UI from scratch, I accumulated more and more case studies of what can be created by using what method.
 Thanks to this, I can quickly determine whether or not I can use JS to make what I want to make.

[https://togetter.com/li/1945433 Programming beginners tend to worry that they don't have anything they want to make, but in this day and age, it's more unusual for people to be on the side that has something they want to make - Togetter]
	[" In an age of saturation where IT engineers around the world are building apps, it's crazy to be "the guy on the side who has something to build"].
		The theory that [most of the stuff is already there], so I don't want to make it[/villagepump/inajob.icon].
		I think [" Most things already exist] is a lie, but if you want to make something that doesn't exist yet, you have to have a certain amount of skill[/villagepump/Mijinko_SD.icon].
		In the above example, [" from a small script such as Popup Menu] is created, so [" a certain level of skill is not required][/villagepump/nishio.icon].
			After that [" I can now quickly determine if I can make it in JS for something I want to make"].
			You can't [determine if you can make it] before you start making it.
			So it feels like everything ["requires a certain level of skill"].
			["You can't do it out of the blue without making something crappy.
