Hatena2008-04-08
code:hatena
 <body>
 *1207622653*Rain
 
 I am cold. I have a stomachache.
 
 *1207623313*Fire
 
 Something like four houses burned down.
 
 -----
 
 It was a typo in the bare minimum. I was on my phone so I didn't check after I posted.
 
 *1207627250*12 years old listening to videos
 12 year old talking about jQuery
  http://yamashita.dyndns.org/blog/12-years-old-talking-about-jquery/
 
 *1207628662*DP
 I thought it was Dynamic Programming, but it was Dirichlet Process.
 
 There are too many things in this world that we don't understand. There is not enough time.
 
 *1207635030*[AS3]Display error messages produced by rascut in growl
 I made Growl compatible with the script I was demonstrating at the development camp with Mario's dying sound and such, and demonstrated it on Ustream.
 http://ustream.tv/recorded/liWjviwxwkJqvK1P7uUBcg 
 I'm wondering if this could be used in Django or other applications, since it can be used simply by adding "watch_stdout" in front of the command that is normally used. I'm still considering the best way to specify how to notify when output is received.
 
 I wonder if it would be better to add a message like "I just started rascut" in the demo with the contributor's comment after uploading it to Nico Nico Nico.
 
 *1207636333*5 things to think about when doing software demos on Ustream
 - Terminal.app is still too small with about 70 horizontal characters.
 -- The width does not shrink when the text is enlarged, so shrink it beforehand.
 - There is an option to turn off anti-aliasing in ustream's advanced option. Wouldn't it be better to turn it off for desktop delivery?
 - I usually use carbonEmacs, but maybe I should start emacs in the terminal and use Cmd+} or something to move around.
 - I tried to explain the situation using Stickers, but I might as well give up and use Nico Nico Douga contributor comments.
 - You might want to maximize the picture quality. If you don't talk, turn off the sound delivery itself.
 - Using CamTwist's scrolling text to explain the situation makes it dirty because it doesn't clear when you add a PIP or something. Maybe this is what Stickers should show first.
 
 I thought that after making this: http://ustream.tv/recorded/liWjviwxwkJqvK1P7uUBcg
 
 *1207637745* Google App Engine, this is awesome!
 http://code.google.com/appengine/
 >>
 It's free to get started.
 Every Google App Engine application can use up to 500MB of persistent storage and enough bandwidth and CPU for 5 million monthly page views.
 <<
 
 Google is being extremely generous. They are letting us use 500MB of storage per application and enough bandwidth and CPU to handle 5 million page views per month for free.
 
 
 
 http://code.google.com/appengine/docs/gettingstarted/usingwebapp.html
 >>
 Google App Engine supports any framework written in pure Python that speaks CGI (and any WSGI-compliant framework using a CGI adaptor), including Django, CherryPy, Pylons, and web.py. You can bundle a framework of your choosing with your application code by copying its code into your application directory.
 <<
 And I hear you can use any framework written in Python, like Django. Django is certainly easy and convenient, but when it comes to "ease of use, including running on a cheap rental server," it has never been as good as PHP, until now. If a service like this were to come out, where you could use any Python framework for free, provided by a well-known and competent company, that would be a huge breakthrough for Python! Python will be a big break already!
 
 -----
 
 <a href="http://labs.cybozu.co.jp/blog/akky/archives/2008/04/googles-motivation-to-app-engine.html">Akimoto@Cybozu Labs Programmer Blog: Google App Another meaning of Engine</a>.
 
 >>
 When Google acquires a venture, it will take much less time and effort to integrate the system into Google's system.
 <<
 
 I see. If you build on Google's infrastructure from the beginning, it will be easier for Google to absorb your work. I guess it's a win-win situation for the developers, since they can develop without having to spend time on server maintenance, and at the same time, it's easier to get Google's attention.
 
 *1207648914*jabanner
 I put it in with a lot of help from amachang. This is interesting.
 http://d.hatena.ne.jp/amachang/20080408/1207640938
 If you are using Mac, you can use libgd and add "include<libintl.h>" to the source code.
 
 You can see what it can do by looking at the one I did. If you maximize the playback speed, you can see it right away.
 <script src="http://gmodules.com/ig/ifr?url=http://www.partty.org/gadget.xml&amp;up_pty=http%3A%2F%2Fwww.partty.org%2Fpty%2Fjabanner3%2F2008%2F04%2F08%2F09%2F47%2F43&amp;up_bgcolor=%23000000&amp;synd=open&amp;w=800&amp;h=600&amp;title=Partty!&amp;border=%23ffffff%7C3px%2C1px+solid+%23999999&amp;output=js"></script>
 
 Partty.org makes it very easy to show what works in the console and how it can be used like this. It's also easy to show the coding process. It would be nice to be able to add comments afterwards, such as, "I'm trying to do something here," or "I'm doing this here, but I realize three minutes later that it's a mistake. Also, it would be nice if there was a seek bar or a button to go back to the beginning when you have watched all the way through.
 
 *1207653267*Jython book proofs received.
 I also received the GAINER book, the Boosting book and the MediaWiki book. I want four pairs of eyeballs.
 
 *1207658882*Maybe I don't need a print.
 I realized after being told by amachang, who recently started learning Python, that you don't have to go to the trouble of making print statements into expressions, you can just use pprint. lang:ja
 
 *1207662183*I'm not feeling well.
 
 I wanted to say "temple" but for some reason I said "station" and didn't realize it until I said it three times and was prodded.
 
 *1207666778*Calibration
 I'll proofread your manuscript!
 
 Well, I'm looking at the proof sheets that arrived this morning, and guess what, there are 283 pages. I wonder how thick it will be. The "Haskell in general" at hand is 372 pages. Hmmm...just about the same as taking out the chapter on practical Haskell.
 
 I proofread 17 pages in about 30 minutes on the train on the way home. Going by this calculation, the proofreading will be completed in 11 hours. Hmmm.
 </body>
 <comments>
 <comment>
 <username>zentarou</username>
 <body>When I heard that she was 12, I imagined a girl</body>.
 <timestamp>1207660035</timestamp>
 </comment>
 <comment>
 <username>TOKOROTEN</username>
 <body>I think it would be interesting to add some kind of auxiliary expression during playback, like TypeTrace</body>.
 <timestamp>1207665456</timestamp>
 </comment>
 <comment>
 <username>viver</username>
 <body>It would still be nice to be able to add comments. But it is difficult to synchronize with the terminal. <br>It doesn't seem difficult to make a button to see from the beginning, so I'll try to make it soon. </body>
 <timestamp>1207685650</timestamp>
 </comment>
 <comment>
 <username>goth_wrist_cut</username>
 This is goth_wrist_cut, a <body>jabanner developer. Thank you for using our service. <br>Erm, about the line breaks, we support line breaks by splitting the argument into multiple lines. <br>ex) jabanner "first line" "second line"<br>Something like that. </body>
 <timestamp>1207710091</timestamp>
 </comment>
 </comments>

[Hatena Diary 2008-04-08 https://nishiohirokazu.hatenadiary.org/archive/2008/04/08]