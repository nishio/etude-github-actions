Hatena2009-09-14
code:hatena
 <body>
 *1252892541* A Simple Question for the Multilayer Perceptron
 What is the multilayer perceptron useful for?
 
 First of all, we can use a support vector machine if it is a two-class classification, so we consider a multi-class classification.
 
 Which is more straightforward and easy to understand, "When you tweak something like a randomly initialized brain, you get some kind of result, and the result depends on the initial value" or "We look for something close to the past results and make a decision based on that (k-nearest neighbor method)"?
 
 Without the romance of tinkering with something brain-like, what is the advantage of the perceptron even then?
 
 <hr>
 
 I was listening to the explanation of Locality Sensitive Hash yesterday, and I was thinking that when the teacher data n increases, the perceptron is O(1), which does not increase the computation time for classification, but the k-nearest neighbor method is O(n) because the distance to each representative point has to be computed. I wonder if it is O(n).
 
 **1252918303*Paintbrush for Mac
 On Windows, I could use Paintbrush when I wanted to make a bit of a bitmap, but on the Mac, there is no equivalent application by default. I wonder how people are doing it. I wonder how people do it.
 
 So I searched and found a paintbrush for Mac.
 http://sourceforge.net/projects/paintbrush/
 
 via http://dotmb.netwalk.in/?eid=690416
 
 *1252921062* Talking about how nice it is to be a native English speaker.
 I recently changed my Firefox settings so that the English version comes up when I Google it, but I completely forgot about it and Googled UIImagePickerController in another browser and thought, "Wow, I didn't realize there were so many entries in Japanese! I guess I should make it the default to search in Japanese!" I thought.
 
 After about 10 seconds, I noticed that there was no official documentation on the first page, so I decided to leave English as the default.
 
 Well, let's search in Japanese sometimes when we are stuck.
 
 *1252924119*UIImagePickerController should not be messed with.
 >>
 I want to add a button for various conversions instead of use where the use button and other buttons are displayed under UIImagePickerController, but I'm not sure how to do it.
 <<
 but it was banned at the beginning of the document.
 >>
 Important: The UIImagePickerController class (snip) is intended to be used as-is and does not support subclassing. The view hierarchy for this class is private and must not be modified, with one exception. In iPhone OS 3.1 and later, you can assign a custom view to the cameraOverlayView property and use that view to present additional information or manage the interactions between the camera interface and your code.
 <<
 So the only way to do that is to put another bar on top of the current bar in cameraOverlayView and hide it. Let's see, I want the bar to appear after being captured by the camera, and I want the buttons I added to the bar to take the place of the use button, so I need to look into that.
 
 **1252933981*How to read images from a USB camera in Python
 <a href='http://www.nishiohirokazu.org/archived_coreblog/905'>Reading from USB Camera in Python @ NISHIO HIROKAZU # Archived COREBlog</a>
 
 I'm reposting this because I searched for a way to show people how I did it before, but couldn't quite find it. Ah, well, I had recently searched for "Yasukazu Nishio Python USB camera" because "Yasukazu Nishio" is in my diary, but it was alphabetized back then. It was so long ago that I didn't remember. It is easy to search for things about myself if I have a certain string of characters to put in my diary, so I will probably put "Yasukazu Nishio" in my old diary as a meta keyword or something.
 </body>
 <comments>
 <comment>
 <username>Zo</username>.
 <body>I wonder if you can tell who I am with such a lame name. Oh well. <BR><BR>Does "multilayer perceptron" mean multilayer neural net (hereafter NN)? If so, it has some theoretical advantages over Support Vector Machines (SVMs). <br><br>SVMs can of course draw many more kinds of discriminant boundaries than linear discriminators, but not every curve can be drawn. <br><br>But it is known that NNs with three or more layers can approximate arbitrarily smooth curves with arbitrary accuracy as the number of units is increased. <br><br>In that sense, at least theoretically, NNs have importance. </body>
 <timestamp>1252928470</timestamp>
 </comment>
 <comment>
 <username>nishiohirokazu</username>
 <body>If I'm right that you're the same age as me, you've identified it correctly>. I can approximate an arbitrarily smooth curve with arbitrary precision, and.... <BR><BR>We won't know what works until the future, so it may be too early to make a judgment at this point, but it seems somewhat "trying too hard" for the purpose of multi-class classification. <br><br>Well, even if it is trying too hard in the current sense, we don't know how much faster the machines will be in 10 years, so that's good... </body>
 <timestamp>1252986339</timestamp>
 </comment>
 <comment>
 <username>nowokay</username>
 <body>I don't think it's a good idea to say, "First of all, if you want to classify Niklas, you can just use a support vector machine. <br>There is a difference between online and offline algorithms. <BR>First of all, there is a difference between online and offline algorithms. <BR><BR>If you are going to use SVM, which takes a lot of time, you might as well use a multi-layer perceptron. <br>As for implementation, SVMs are a bit difficult to make yourself, but NNs are easy to make. </body>
 <timestamp>1253040855</timestamp>
 </comment>
 <comment>
 <username>nishiohirokazu</username>
 <body>First, my understanding is that "SVM is too slow with more data" refers to the time it takes to train, and that the time required for classification is not affected by the number of training data, correct? <BR>You are right that using the perceptron for online training would eliminate the need for a coherent training time. I had forgotten about those advantages. <br>But conversely, if you are using it for binary classification in such a way as to train the training data in advance, wouldn't you say, "Shouldn't that be done with SVM"? </body>
 <timestamp>1253067963</timestamp>
 </comment>
 <comment>
 <username>nowokay</username>
 <body>Yes. It is the time it takes to train that is slow, and the time it takes to classify is not really affected by the number of training data. It is affected by the number of training data that become support vectors, but the number of data that become support vectors does not increase unless they are very badly distributed. <br>So, as written, if the training data is constant and resources are available for training, well, as is probably the case in most cases, SVM is the way to go. <br>I thought that we cannot say "SVM is unconditional for 2-class classification". </body>
 <timestamp>1253088669</timestamp>
 </comment>
 <comment>
 <username>wraith13</username>
 <body>It seems that the standard Preview app can be used as a paintbrush in Windows. </body>
 <timestamp>1328237395</timestamp>
 </comment>
 <comment>
 <username>nishiohirokazu</username>
 <body>Wow! This is wonderful! <br>I've been thinking that even though I can't free draw, I can get much better looking results than if I free draw and enclose it. </body>
 <timestamp>1328238674</timestamp>
 </comment>
 </comments>

[Hatena Diary 2009-09-14 https://nishiohirokazu.hatenadiary.org/archive/2009/09/14]