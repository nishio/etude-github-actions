Nodal Point of Thought2019-02-18
	[Heading Table of Contents is a tree].
	[Relational connections between fragments].
	[link from Scrapbox text].

	KJ method focuses on [likely relationship], not [similarity
	Scrapbox [stocks associations], not tagging
	â†’ [association, not similarity].
	[https://gyazo.com/d26b02759f38ca9c1564e13af108ed79]
	Think of KJing by machines instead of humans: [machines do KJing].
	Suppose that [the association-generating device] R is given.
		It is a device that takes one fragment as input and returns another fragment
		There are already various ways to realize this: [relational connection between fragments].
	The KJ method, however, finds "[things that seem to be related]" from the 100 items written down and places them nearby.
	I naively thought this "[likely relationship]" was as if it were a [similar relationship], but that is incorrect.
		In fact, when I teach the KJ method, I repeatedly say, "It's not about collecting similarities.
		e.g. [conflict is a close relationship] [what is a relationship].
	Just as Scrapbox, the [stock of associations], encourages new [associative connections] through 2-hop links, so this [search].
	From the given 100, we search by association, and the first pair that merges is the "likely related pair".
		[Confluence of associations]
	I thought of [an associative device] as something that takes fragments as input and outputs fragments.
		But in the KJ method, "something that might be related" doesn't have to be verbalized at the right time to lay out "why it's related."
		Post hoc: [relationship in which the topic is connected].
		Isn't it too restrictive for an associative device to output fragments?
		Couldn't it be a vector instead of a language?
			I thought that, when you look at it as a vector, if you reduce the flow of "language -> vector -> vector -> language", it is "language -> language" after all, and there is only an implementation pattern of an associative device that "involves a vector in the associative process".

	Annotation to assign a 2D vector to a set of short sentences = [KJ method].
