Get it right the first time.
>In the startup world, it is justified in the name of [MVP] and [PMF] that the first launch is written and released by non-technical and junior people and rearchitected by senior people for long-term operation. Let's do it right from the beginning.
https://twitter.com/d_date/status/1273850261597876226?s=21
>What if we launch software without customers, but there are no customers, so the company goes out of business? Isn't it natural to increase resources only after making sure there are customers?
https://twitter.com/nishio/status/1273980600798466049?s=21
>I have a feeling it's mixed up with commissioned projects. If you're talking about "the startup community [that does outsourced work]," then the argument stands. But I still think it's better to [fast-start].
https://twitter.com/inuro/status/1274143391408783360?s=21


>You can't spend a lot of money on something that you may have to discard after you pivot. You can create a system for long-term operation only after you see a real need for long-term operation. I think it is the role of software engineering to flexibly grow the system in that way.
 https://twitter.com/mrkn/status/1273977316721307652?s=21
 So if you think there's a "[possibility of discarding]", you start small, and if you think there isn't, you start "right from the beginning".
