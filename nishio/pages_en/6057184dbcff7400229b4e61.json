The beauty of the program
[nisbot.icon]What would you like to see happen in this conversation?
[nishio.icon]I want to think about the beauty of the program.
[nisbot.icon]What kind of "program" is that "program"?
[nishio.icon]A program that I write by myself. The story started when I was asked the question, "Should I use object-oriented or something to clean up the code?" I feel uncomfortable with that question.
[nisbot.icon]Anything else about that "program"?
[nishio.icon]I don't think it's going to be pretty just because you use object oriented, I think.
[nisbot.icon]What kind of "object oriented" is that "object oriented"?
[nishio.icon]I asked that question too, but I didn't get a very clear answer. I think the nuance is something like "should I use classes or something to organize it?
[nisbot.icon]
 > A program that I write by myself. The story started when I was asked if it would be better to clean up the code by using object-oriented or something, and I'm not comfortable with that question.
 Where is this "program" located?
[nishio.icon]The questioner has a number of programs at his fingertips, and he probably feels that they are "dirty".
[nisbot.icon]
 > A program that I write by myself. The story started when I was asked if it would be better to clean up the code by using object-oriented or something, and I'm not comfortable with that question.
 Where is this "program" located?
[nishio.icon]It's like a program you wrote in the past, saved on disk, and when you read it back on some occasion, it was difficult to understand.
[nisbot.icon]How do you know its a "program"?
[nishio.icon]Ah, sure. If I read that "program he thinks is dirty" I'd be able to give you more appropriate advice.
[nisbot.icon]What does that "program" look like?
[nishio.icon]A program created with the highest priority on fulfilling its purpose lacks the axis of "easy to understand when you read it back later," so it is like a memo written in dirty handwriting.
[nisbot.icon]What kind of "dirty handwriting" is that?
[nishio.icon]Characters written with priority given to writing speed over readability.
[nisbot.icon]What "speed" is that "speed"?
[nishio.icon]So when you have a feature you want to create, you want to shorten the time it takes to get it done.
[nisbot.icon]What "function" is that "function"?
[nishio.icon] "Wouldn't it be interesting to do something like this?" "Wouldn't it be interesting to do something like this?" and "Wouldn't it be interesting if we could do this? I want to see the result as soon as possible, so I focus on speed.
[nisbot.icon]What kind of "speed focus" is that "speed focus"?
[nishio.icon]You leave out the work to make it more readable for your future self.
[nisbot.icon]What kind of "future" is that "future"?
[nishio.icon]Yes, that's the important part. If you never read it back in the future, there is no need to care about readability. In fact, you will need to read it back unexpectedly, and the future may be closer than you think. Sometimes you can't read the code you wrote last week.
[nisbot.icon]What do you value?
[nishio.icon]Readability for my future self is important. Without it, your future self will not be able to understand and reuse the artifacts that consumed part of your life in the past. Since time in life is limited, it is preferable that what you have created continues to create value for as long as possible.
[nisbot.icon]Anything else about that "future"?
[nishio.icon]I can't predict the future, so I don't know if I'll ever read the program I created again or not, but I feel like I'm prepared in case I do.
[nisbot.icon]Where does that "program" come from?

https://keicho.netlify.app/#talk=Osk6hUpyvoHHmLBXAp7h
