Hatena2014-09-05
code:hatena
 <body>
 *1409908066* For example, try to avoid the word "sutra".
 The <a href='http://cybozushiki.cybozu.co.jp/articles/m000319.html'>fifth installment</a> of the Cybozu-style "How to Learn to be a Continuing Engineer" is now available. In this installment, we asked Mr. Kozaki why he decided to read code and how he would learn if he had to learn a new language to read code.
 
 By the way, Mr. Kozaki reads his study method as "Shakyo" and I naturally understand this terminology, but in looking at the Twitter responses after the publication, I found several instances of people either not liking the term "Shakyo" or misunderstanding the content due to their impression of Shakyo in Buddhism.
 
 The term "sutra copying" as a method of learning programming is used in various books. For example, "<a href="http://www.amazon.co.jp/gp/product/4798126004/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4798126004& linkCode=as2&tag=nishiohirokaz-22">The Great Books on Software Development Selected by 100 Professionals: The One Book Chosen for You</a>" on page 70 introduces the episode "I started by copying sutras. Also, "<a href="http://www.amazon.co.jp/gp/product/4844323040/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4844323040& linkCode=as2&tag=nishiohirokaz-22">Revised New Edition of 100 Great Books and Classics of Computer</a>" on page 99 recommends "You can get deep understanding along the contents of technical books.
 
 However, the fact that there are still a number of people who misunderstand the function name means that the function name does not match the function's processing. It is a common <a href='http://0xcc.net/blog/archives/000135.html'>discussion of bicycle parking</a> to have a fight between the "the function name should be changed" group and the "then come up with a counterproposal or it's already widely used, so it's impossible" group in such a situation. I'm not sure how to explain this, but I'll try.
 
 The purpose of this series of articles is to provide an opportunity for readers and me to improve our own learning styles by learning about the learning styles of various people. The discussion about what to call "the study method that Mr. Kozaki reads as 'sutra copying'" does not contribute at all to improving the way we learn. So, in order to avoid arguments, let's call the "study method that Mr. Kosaki reads as 'sutra copying'" the "Kosaki method" for short.
 
 ** Features of the Kosaki Method
 
 - The granularity of the code is fine.
 - write while thinking
 - Mr. Kozaki believes that "physical exercise activates the brain."
 - Absolute rewrite (<a href="https://twitter.com/kosaki55tea/status/506673793151275008">Source</a>)
 - Run it and see what the results are.
 
 The last one, "Execute it and see what the results are," was me interjecting, but really I should have asked, "What exactly are the actions you are referring to by the word 'sutra'?" I should have asked, "What exactly are the actions you are referring to by the word 'sutra'? I was careless. This interview is the first interview in my life, so please forgive me.
 
 ** t_wada method
 
 This time, the discussion on the topic of sutra reading unearthed a Tweet written by @t_wada in 2010. The content is also interesting, so we reprint it here. https://twitter.com/t_wada/status/9000231741
 >>
 How to "copy" technical books.
 1. Prepare SCM for local use
 2. Fix the target book by "HONDAI" etc.
 3. Dutifully copy and execute the sample code
 4. commit each time it is executed (include the page number in the commit log)
 5. If you have any questions, write them in the commit log or the book.
 6. Tag each chapter.
 <<
 
 From the talk about writing down questions that come to mind while writing, it is clear that they are practicing "think while you write". The sample code is probably small in granularity. Also, "execute" is probably the same as "execute and check the result.
 
 Commonalities with the Kosaki Method
 - After copying the code, run it and check the results.
 - write while thinking
 - Code granularity is small (maybe)
 
 The point about version control is unique. It is interesting.
 
 ** shokai method
 
 The method presented in <a href='http://shokai.org/blog/archives/6127'>Hashimoto Shokai &#187; program transcriptions</a> is also interesting.
 
 >>
  - Write from the outside.
  - Write them in the order they are processed.
  - Google the error.
  - Seeing the work of a good person
 <<
 
 The error is, of course, copied and then executed.
 
 The "write from the outside in" and "write in the order in which they are processed" are interesting from a unique point of view. Its purpose is that "you can execute every line you write, so you can notice any syntax errors right away." The purpose of this is that "beginners in programming should complete everything anyway and then run it, and then run it frequently even though they get about 10 errors and ask for help, and they should write code in an order that allows them to run it frequently." As you can guess from the above, it is to reduce the granularity of the code. Even the code listed as sample code is too granular for a real beginner, so you should make the code more granular by changing the order in which you write it.
 
 Commonalities with the Kosaki Method
 - Code granularity is small.
 - After copying the code, run it and check the results.
 
 The reference to what to do after an error (Google it) and learning by watching someone who is good at what they do is unique, but makes sense to me.
 
 ** nishio method
 
 I know this is a bit self-serving, but I have written about sutra chanting in the past, so I would like to share it with you. <a href='http://d.hatena.ne.jp/nishiohirokazu/20130326/1364301488'>About sutra as a means of learning programming</a>.
 
 >>
 Sutra is an action to create a model within oneself, and its advantage over other more efficient methods is that it can be used without a model within oneself. No one can suddenly "think and write on their own" with absolutely no knowledge. First of all, we need to bring the knowledge that will be the material for thinking into our brains, and that is what sutra is for.
 <<
 
 >>
  - To learn quickly, experiment with as small a code as possible and check the results immediately.
  - Write down what you wonder, what you think, what you notice. Why do I write it down this way? Could it possibly be an error if I rewrite X as Y? Well, that thing I wondered about earlier is supposed to be paired with the part I am copying now, and so on. This thought is a stepping stone to the next learning experience.
  - Do not copy it word for word the same, but omit it if you don't think you need it. Inevitably, you will consider what is important and what is not.
 <<
 
 Commonalities with the Kosaki Method
 - Code granularity is small.
 - After copying (executing) the code, check the results.
 - write while thinking
 
 The "record what you think" is common with the t_wada method.
 
 ** Summary
 I've organized what the four programmers consider to be a "sutra" way of learning, and let's pull out the common points shared by all four of them.
 
 Common for all four
 - Code granularity is small.
 - After copying the code, run it and check the results.
 
 Common for all three
 - write while thinking
 
 Common for both
 - Record what you think.
 
 Only the shokai method does not have "write while thinking," but it is true that a complete beginner would not know what to think about when told to "write while thinking. But it does not mean "write without thinking. I think it is better to soften it to "write down what you think while you are doing it.
 
 So the results can be summarized with reference to this result as follows.
 
 - The granularity of the code should be as small as possible. (If possible, use one line of code. It doesn't have to be written in order from the top.)
 - Execute and check the results. (You don't have to finish transferring everything. (You don't have to finish transferring everything, just check the results as soon as possible.)
 - Write down what you think while you are doing it.
 
 Now, if you had to name it, what would you name it?
 </body>
 <comments>
 <comment>
 <username>Yamani</username>.
 <body>Shakyo is actually reading oneself while performing the task of reading the Buddha's words with the brush tip. </body>
 <timestamp>1409934131</timestamp>
 </comment>
 </comments>

[Hatena Diary 2014-09-05 https://nishiohirokazu.hatenadiary.org/archive/2014/09/05]