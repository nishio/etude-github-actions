Hatena2008-06-06
code:hatena
 <body>
 *1212739424*[Python]Ruby Struct
 Ruby Struct
 >|ruby|
 irb(main):018:0> FooBar = Struct.new(:foo, :bar)
 => FooBar
 irb(main):019:0> FooBar.new(1, 2)
 => #<struct FooBar foo=1, bar=2>
 irb(main):020:0> _.foo
 => 1
 ||<
 
 Wow, this is useful.
 
 I made it in Python.
 >|python|
 >>> def Struct(*keys):
 	class _Struct(object):
 	    def __init__(self, *values):
 		self.__dict__.update(zip(keys, values))
 	return _Struct
 
 	
 >>> Struct("foo", "bar")
 <class '__main__._Struct'>
 >>> FooBar = Struct("foo", "bar")
 >>> FooBar(1, 2)
 <__main__._Struct object at 0x01494E90>
 >>> _.foo
 1
 ||<
 
 It's done, it's done. I think I'll make my own module to put these things in.
 
 *1212743562* Difference between Ruby and Python flow direction
 >|ruby|
 irb(main):021:0> s = "123 456 789"
 => "123 456 789"
 irb(main):022:0> s.scan(/\d+/)
 => ["123", "456", "789"]
 irb(main):024:0> s.scan(/\d+/).map{|x| x.to_i + 1}
 => [124, 457, 790]
 ||<
 
 >|python|
 >>> s = "123 456 789"
 >>> import re
 >>> re.findall(r"\d+", s)
 ['123', '456', '789']
 >>> map(lambda x: int(x) + 1, re.findall(r"\d+", s))
 [124, 457, 790]
 ||<
 
 I'm a little jealous of Ruby flowing to the right.
 
 *1212754828*[Grass]I planted grass www.
 >||
 wWWWwWWWWwv wWWwWWWwv wWWwWWWwv wWWwWWWwv wWWwWWWwv wWWwWWWwv
 wWWwWWWwv wWWWwWWWWwv wWWwwwwwwwwwwwwWWWWWWwWWWWWWwWWWWWWWWWwWWWWWWWWW
 WWWWWWwWWWWWWWWWWWWWwWWWWWWWWWWWWWWWwwWWWWWWWWWWWWWWwWWWWWWWWWWWWWWWww
 wwwWWWWWWWWWWWWWWWWwwwwwwwWWWWWWWWWWWWWWWWWWwWWWWWWWWWWWWWWWWWWWWwWWWW
 WWWWWWWWWWWWWWWWWWWwwWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwWWWWWWWWWWWWW
 WWWWWWWWwWWWWWWWWWWWWWWWWWWWWWwwWWWWWWWWWWWWWWWWWWWWWWWWwWWWWWWWWWWWWW
 WWWWWWWWWWWWWwwwwwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWwWWWWWWWWWWWWWWW
 WWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWwWWWWWWWWWWW
 WWWWWWWWWWWWWWWWwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwWWWWWWWWWWWWWWWWWWWW
 WWWWWWWWWWWWWwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwww
 wwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwWWWWWWW
 WWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWW
 WWWWWWWWWWWWWWwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwww
 wwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwwwww
 wwwwwwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwww
 wwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwww
 wwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwwwww
 wwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwwWWW
 WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwv
 ||<
 What a swamp!
 
 This is a program written in the Grass programming language. When you run it, you should get "Hello, world! I verified it with "Interpreter written in Ruby by UENO Katsuhiro," which can be obtained from <a href="http://www.blue.sky.or.jp/grass/doc_ja.html">Grass</a>. I verified it with "Interpreter written in Ruby by UENO Katsuhiro".
 
 
 The later in the program, the deeper the stack gets, the longer the w or W lasts, but that's similar to how when you look at a swamp, the areas close to you look big and the areas far away look small. Interesting, I'll put the Python version of the interpreter in CodeRepos soon and announce it in <a href="http://mixi.jp/view_community.pl?id=2643444">[mixi] Programming Language Grass</a> or something.
 
 
 I was a member of the Young Scientists' Group of Information Science where Grass was born, but id:higepon implemented Grass first (<a href="http://d.hatena.ne.jp/higepon/20080605/1212678422#c">WHEW! I implemented Grass with Mosh (<a href="">WWWWW - I'll make an OS or something Mona-</a>), so I "got mad and did it, and now I'm sorry".
 
 
 -----
 
 I put it in CodeRepos. The code of the processing system itself is up to line 220, including the test case, but if you want to get grassy, the spoiler part "how I made HelloWorld" below that might be interesting. If you remove the extra characters, it is 1301 characters, and I think there is a lot of room for optimization. Please trackback this page if you are interested. (PS: I noticed that there are two functions defined to add 128, so I shrunk it to 1254 as soon as I realized it.)
 
 http://coderepos.org/share/browser/lang/python/grass/grass.py?rev=13335
 
 -----
 
 Incidentally, KEMURI was born on the same night as Grass.
 http://www.nishiohirokazu.org/blog/2006/09/kemuri.html
 Unlike Grass, this one is not Turing-complete, but we know it can output arbitrary strings. It is an open question what is the minimum program length to output "Hello, world! I'm left with a finite search space under the condition of using 1PUSH for each character.
 http://www.nishiohirokazu.org/blog/2007/03/haskellkemuri01.html
 
 *1212761894*[en]In the midst of not giving up.
 f:id:nishiohirokazu:20080606230419j:image
 
 It's a play on the words "no fall" and "business." It must have been around since the Edo period. The sign is written in the Japanese, "akinai masu sumasu hanjo" (spring, summer, and winter), but I have never seen an actual signboard that says up to two square kilometers.
 
 *1212766268*I left.
 Hot! Hot! It's so hot and humid that it's hard to believe that it was cold and heated just recently!
 
 *1212771300*I heard he said if you want to know something, just Google it.
 http://slashdot.jp/it/comments.pl?threshold=0&mode=nested&commentsort=3&op_change=%E5%A4%89%E6%9B%B4&sid=404740
 >>
 If the auction doesn't work.
 Just buy it at a legitimate store.
 
 I'm going to write a comment like a certain princess.
 -----
 >A certain princess
 
 I wasn't a princess when I said it (allegedly).
 <<
 
 <a href="http://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%AA%E3%83%BC%E3%83%BB%E3% 82%A2%E3%83%B3%E3%83%88%E3%83%AF%E3%83%8D%E3%83%83%E3 %83%88">Marie Antoinette - Wikipedia</a>
 >>
 The statement "without bread."
 
 Marie Antoinette is sometimes introduced as saying, "If you don't have bread, why don't you eat sweets?" when the people were plagued by poverty and food shortages before the French Revolution (omitted).
 However, these are not said to be Marie Antoinette's own words. In Book VI of Rousseau's "Confessions" (written around 1766), Rousseau, who looked for bread to drink wine but could not find any, "replied to a remark from a vassal, 'The peasants have no bread,' to which a certain grand dame replied, 'Then you should eat brioche " and this article is said to be one of the leading original sources. (omitted)
 Alphonse Carr, in his 1843 book "The Wicked Women," writes that at the time of writing the remark was already circulating as Marie Antoinette's, but that it was introduced in one book published in 1760 as belonging to "the Duchess of the Grand Duchy of Tuscany." (omitted).
 In fact, this was a fiction made up by other nobles who were jealous of her. She was a very kind-hearted person who cared for her people, donating her children's court fees during a famine and collecting donations from other nobles.
 <<
 </body>

[Hatena Diary 2008-06-06 https://nishiohirokazu.hatenadiary.org/archive/2008/06/06]