dual-core processing
 I was [consulting]ing with a genius strategic consultant and I was thinking that this is the same as debugging. It is almost the same as a programmer's work to track down bugs based on his understanding of the structure of the source code, the dependencies between various values, and the dynamics of the changes that are being made.
 We will issue questions to understand the other party's [knowledge structure], word definitions, logic development, and dynamics, and to narrow down what is causing the difference between the current current behavior and the "how it should be" behavior. Same with [debugging]. I guess if you are smart enough and working with logic, you can debug. People who are emotional can't.
 This type of activity, which can be easily mastered by programmers with a certain level of ability, has a relatively large economic effect per unit of time by further strengthening those who have a high ability to generate economic effects, so it would be a good idea for everyone to learn more.
 Ah, but the cost for new entrants to find new customers is high because they have to pay a certain amount of trust in each other and a learning cost for learning the protocols that the other party uses.
 It's a useful concept and I want to give it a good name and popularize it. Dual-coring, for example.