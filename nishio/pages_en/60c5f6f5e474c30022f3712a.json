Time efficiency of intellectual production

[Time efficiency] of [intellectual production]
[/blu3mo-public/Keicho]
> I'm not sure if I'm producing time-efficient intellectual production, and it makes me wonder.
> When I use it, I usually arrive at the thought, "Oh, sure, I hadn't thought of that."
> But I get the feeling that I'm not being efficient because most of the time is taken up by typing.
> But even Scrapbox is the same.
> I'm answering what they want me to answer.
> I get the feeling that I am inefficient because I enter things that I don't even bother to write down?

Pros
 Scrapbox is highly "efficient" by being able to use links, so you don't have to explain the same thing over and over again to new team members, just "read this.
 Even with Keicho, it is technically possible to store the internal state in the middle of a conversation and resume it from there.
 The process of changing from a console app to a Mattermost chatbot actually already has that structure.
Cons
 It seems as if you are repeatedly inputting the same content, but in reality you are outputting slightly different outputs, and comparing them reveals whether you think the differences are meaningful or not.

　If the same intellectual production results can be obtained for less cost, then it can be said that the efficiency of intellectual production has increased.
　　But whether increasing efficiency is actually beneficial depends on the situation.
　　Trying to tune something that is not a bottleneck is one of the most common mistakes
　　Ideas generated by intellectual production create value only when realized.
　　Then there is no real benefit in supplying ideas faster than the supply of resources to realize them.
　Related: [ideas have no value].

Implementation-wise, it is possible to save a snapshot of the internal state and branch the conversation from there.
 Would there be any benefit in doing that?
 We can branch out from there based on what we've talked about before.
 Chat logs change to a tree with branches instead of a single connection of statements.

Can be approximated by current systems.
　First, you can go into "listen first mode" and just pour over your own side of the past log.

But is this really what users want?
　This means that the usage diverges from the middle of the same game record, including the first question.
　In fact, the first question may be different in every case where Keicho is used.
 The first question is, in other words, the question of "what would make you happy at the present time?"
 This question controls the subsequent development of the keywords.

　If the paths of development leading to the question are different, even if they appear to be the same at first glance, then they are different questions, are they not?


