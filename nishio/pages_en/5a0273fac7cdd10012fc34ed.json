Climbing down metaphor
[https://gyazo.com/1b407815bfa704fcfa4154739f7ab42e]
 [Yotaro Hatamura] [Creation] and [Design] of [Technology] p.207

	He read the book in 2013 and wrote, "I'm surprised someone else thought the same way." [Facebook https://www.facebook.com/photo.php?fbid=10201961860424649&set=a.1175498944176.2027303.1129148772&type=3&theater]
 I wrote about climbing up and down [metaphors] in a book I wrote in 2017, but I completely forgot about this book
 If you have room, you may want to reread it and add to the bibliography with footnotes, etc.
  I was not inspired by this book, so there's no ethical problem if I don't add to it.
  It's just an opportunity to "learn something new by comparing [similarities]."

 2018-10-28
		I opened a book on the topic of [sectionalism], so I looked this up while I was at it.
  [https://gyazo.com/6a335b6aca06d6110c6dd80433730823]
		p.209
  Hatamura believes that [designing] is "putting a context
  The means of "contextualizing" are "[grouping] by common concepts" and "[choosing] which concepts to use."
  The above tree can be created by working with common concepts.
  	Hatamura's unique expression of "grouping by [common concept]" seems to me to refer to the same thing as [grouping] in the [KJ method] or the metaphor of "[piling] boxes on top" in my book.
  How it differs from how I use it.
  	Hatamura is in the "contextualizing" phase, which is the phase of creating something, and in order to design a way to create it, he first asks, "Can we do it this way? If the answer is "no," he goes up to a higher concept and changes it to "another way.
   This representation makes it look like there is a fixed tree first and then a trial and error process according to it.
   In my expression, after the practice of trial and error, there is a phase of gathering new information
   	And then after that, after going through the box-stacking phase of abstraction, we get to the practice phase again.
    The tree itself is updated during the stacking phase.
    Newly observed facts may reveal errors in your previously held tree
    So the tree does not grow unilaterally, but branches can break off.
