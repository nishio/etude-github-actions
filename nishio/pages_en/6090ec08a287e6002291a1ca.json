Hatena2011-11-03
code:hatena
 <body>
 *1320313043*Surprising
 I needed a picture of myself for my wedding video, and when I was searching Google for images under my name, I discovered all sorts of things.
 
 I found this in <a href='http://www.nishiohirokazu.org/blog/2006/07/post_74.html#003627'>my blog entry</a> for July 2006.
 >>
 Surprising. I have been using Java and Python for a while recently, and many people think that I am a Java and Python user (or rather, a Jython user), but that "recently" seems to be surprisingly short.
 >>
     Ah, I think I'll study Java (thus putting off studying Ruby longer and longer).
 
     Well, I guess I should seal Delphi for a while and try to do my existing Delphi+Python development in Java+Python, and I have Jython.
 <<
 What it says, it seems that Jython's history has not yet reached 2 years. Surprisingly surprising. I mean, it wouldn't be surprising if I'm using C# or IronPython two years from now. I mean, I've been saying "I have to study Ruby" for 2 years now...
 <<
 
 Who would have guessed that three years later I would be taking a class on hacking Ruby's processing system instead of Python, or that four years later I would be writing patches for Ruby bugs? I wonder if I will be doing something completely different in 3 years. Or perhaps the most unexpected thing is that I got married.
 
 *1320317172*To iterate a matrix by each column in NumPy
 PS: In conclusion, TRANSPOSE does not copy data, so feel free to use it.
 
 First of all, "I want to iterate by each column" is difficult to understand, so I will explain briefly.
 
 Suppose there is a certain matrix mat.
 >||
 In [125]: array([[1, 2], [3, 4]])
 Out[125]: 
 array([[1, 2],
        [3, 4]])
 
 In [126]: mat = _
 ||<
 
 If this is iterated normally, each row unit is iterated.
 
 >||
 In [139]: for v in mat: print v
 [1 2]
 [3 4]
 ||<
 
 If you want to iterate by columns [1 3] [2 4], what is the smart way to do it? One way is to transpose, of course.
 
 >||
 In [140]: for v in mat.transpose(): print v
 [1 3]
 [2 4]
 ||<
 
 But array#transpose copies the whole matrix, not the iterator. I don't want to transpose just for iterating, in case the matrix grows in the future. PS: This is a factual error, transpose does not copy.
 
 Making it with shape, range and slicing is another way to go. This can be combined into a function that can be used without much loss of readability.
 
 >||
 In [141]: [mat[:, i] for i in range(mat.shape[1])]
 Out[141]: [array([1, 3]), array([2, 4])]
 
 In [142]: def iter_column(mat):
    .....:     return (mat[:, i] for i in xrange(mat.shape[1]))
    .....: 
 
 In [143]: for v in iter_column(mat): print v
 [1 3]
 [2 4]
 ||<
 
 So, my question is why is this not a method of array? Or is it placed as a utility function somewhere? I haven't found it yet.
 
 *1320318891*I need to adjust the auto-scrolling of still images in iMovie.
 iMovie allows you to just drop in a photo and it judges what seems important in the image and adds scrolling effects as appropriate. It is an amateur-friendly system. But sometimes the automatic judgment fails and I want to adjust it. I didn't know where to start tweaking it, so here's a note.
 
 When you mouse over a clip, the icon of the cut mark appears at the top, the clip duration at the center, and the gear mark at the bottom. The gear icon brings up a menu of various detailed settings, etc., so you may wonder if it is in this menu. It is a trap to think that it is in this menu. When you mouse over the cut icon above, you will see a message that says "Crop, Rotate, or Ken Burns effect is applied to the clip. Double-clicking this icon brings up the adjustment screen. The "Ken Burns effect" is the name of the effect that makes the image scroll.
 
 ref. <a href='http://en.wikipedia.org/wiki/Ken_Burns_effect'>Ken Burns effect - Wikipedia, the free encyclopedia</a>
 </body>

[Hatena Diary 2011-11-03 https://nishiohirokazu.hatenadiary.org/archive/2011/11/03]