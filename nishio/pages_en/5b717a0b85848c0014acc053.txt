The Intellectual Production of Engineers Reaction Summary
The text below the link is digested as appropriate (leverage memo style).
	Since it was so long, I made [Summary of Reactions to The Intellectual Productivity of Engineers, Part 2].
		I gave a talk on [Intellectual Production of Engineers: Before and After], so that's where I'll break off.

	[A good book that you should read even if you are not an engineer. Intellectual Production for Engineers, by Yasukazu Nishio, http://katri755.com/creationtechnicforengineer/]
		[nishio.icon]This is a blog by a person whose day job is a writer. I won't summarize it because it's very beautifully written and it's better to read it directly.
  He tweets: https://twitter.com/katri_cr755/status/1044199649114877952
	  It is recommended for creators and writers as well as engineers.
 	 It is not a rehash or a mishmash, but a well-combined practice for a purpose and reproducible.

	[[Book Review] "The Intellectual Production Techniques of Engineers" (Yasukazu Nishio) - R-style https://rashita.net/blog/?p=25447]
 	The central theme is "learning.
  	How we read, how we remember, how we think
  Even behind-the-scenes stories like "How to Motivate" are well covered. Practical content
  What seemed most important to me was the way you view learning.
  	Cycle model of learning + model of building up knowledge blocks
  Chapters 5 and 6 are about the so-called "techniques of intellectual production". Even those interested in information and ideas will enjoy them.
  Although the title of the book is titled "The Engineer's," it is likely to embrace a broader audience.

	[I read "The Intellectual Production of Engineers" - the world as code https://chroju.github.io/blog/2018/08/23/engineers_intellectual_productivity/]
		What makes this book interesting is that the author is practicing what is written in the book as he writes it
		The section is read to minimize ambiguous statements and to advance the argument based on specific definitions, examples, and references.
  Many of the methods presented in this book are familiar to me and I almost skipped over them.
 	 However, it is not exactly the same as the descriptions in other books.
   Then there must be something we can learn from "what are the similarities and what are the differences?

 [Read: The Intellectual Production of Engineers - Gobis : Technology, Business, Startups https://blog.gijutsuya.jp/entry/2018/08/15/170736]
		A book that should be called "The Compendium of Intellectual Production Techniques."
  	Comprehensive treatment of intellectual production matters based on extensive references
		My personal recommendation is to "read from where your interests lie."
		Chapter 7, "How to Decide What to Learn," is a fairly important topic and not many books go into it here
  Can we eliminate the engineering element?
  	Taking the software engineer's senses as a starting point.
   Difficult to empathize with (also different from difficult to understand...)

	[What I think of the intellectual production techniques of engineers - gracupai.com http://blog.tukapai.com/entry/2018/09/09/174032]
 	A book that condenses the essence of what it takes to be an intellectually productive human being.
  What do we need to output every day?
  What you can do depends on your luck, and you can't regret what you can't do.

	[Read "The Intellectual Production of Engineers" - white copy paper https://bear-dog-lover.hatenadiary.com/entry/2018/09/08/195711]
		To learn something new
			Define Done specifically
			Separate tasks into reasonably small pieces and frequently experience a sense of accomplishment.
   Learn from what you want to know (delayed evaluative study method)
  To read efficiently
	  Create a question for yourself before reading the book and answer it after reading it once (clarify the purpose of reading).
   Read from where you want to read when you want to read.

	[Book Review The Intellectual Production of Engineers ─ Learning, Organizing, and Outputting Efficiently https://qiita.com/shuntakeuch1/items/3a9633d48cb20685616c]
		I don't recommend it for people who currently don't have much knowledge or experience and just want a quick and easy way out.
		Events and experiences that I had not been able to verbalize until now were now being expressed with the words "That's it! That's it! I personally feel comfortable
  I would like to take more time to understand this book.

	https://twitter.com/masuda220/status/1041569947325890560
		Chapter 1. Easy to understand explanation of design techniques.
	  Abstract => extract what is noteworthy from a concrete object
	  Model ⇒ Simplification to explain the complexity of the object
	  Module => Split code for easier handling
	  Type (class) ⇒ data structure (cover-up) and valid operations (disclosure)

	https://twitter.com/yuikijp/status/1041665554141011968
 	Reading about the intellectual production techniques of engineers, I was able to reaffirm that you have to create your own intellectual production techniques after all.

	https://booklog.jp/users/amano225/archives/1/4774198765
		The title said engineers, but there was a lot of content that engineers had little to do with.
  The point that it is good to copy sutras when learning something new applies to engineers.
  	I'm often satisfied with what I read, but I'm going to try to learn to copy it myself.
		Overall, there were many parts that somehow did not fit well in my head.
  It seems like a philosophical story, written in a deliberately difficult way.
  It was well written with metaphors and similes, but I didn't understand them either.

	[I read The Intellectual Production of Engineers - kuro-46's blog https://kuro-46.hatenablog.com/entry/2018/09/16/201723]
		Learning where it becomes necessary.
  　It seemed so engineered and efficient.
  　In the latter part of the report, a strategy for expanding and reproducing knowledge is suggested, starting with improving the efficiency of the work we are doing now.

	https://twitter.com/kanihara_west/status/1041021979573153793
		I can recommend it not only to engineers, but also to anyone who wants to learn but lacks motivation or is stuck on how to learn.

	[Book Review - The Intellectual Production of Engineers - Blog Ongaieshi http://ongaeshi.hatenablog.com/entry/2018/09/30/230747]
		Many parts were helpful, especially how to gather information and the input part (I think it varies from person to person).
  I have been trying to learn something systematically and have not been conscious of the speed of learning.
  It is not yet clear how to discover what to work on.

	https://twitter.com/fabled2468/status/1040810831150104576
 	It is full of the art and practice of learning!
  Set the problem, create patterns and models, test them, and let the cycle continue!

	https://twitter.com/omuron/status/1040758769141993473
 	An engineer's intellectual production method seems to be very difficult to typeset because there are so many footnotes.

	https://twitter.com/OgiharaRyo/status/1040546855627571200
 	I received a copy of "The Engineer's Art of Intellectual Productivity" in the mail, and I had a quick look at it. It seems to be an interesting read because it systematically summarizes and logically reasons out what engineers usually keep in mind. Of course it is valuable to learn something new from a book itself, but it is also very valuable to read a book that verbalizes and reasons out the ideas that you already have.

	https://twitter.com/coe401_/status/1040479932005015552
 	I am feeling down by myself because I don't have enough materials to write and understand from scratch, and of course the development speed is slow. Failure.

	https://twitter.com/ledsun/status/1040091171224051713
 	A highway book for young people that compresses about 15 years of knowledge. But it is also suitable for the elderly. It is a book that gives a concrete language of the similarities between "GTD", "Agile Samurai", and "7 Habits", so you can learn from it.

	https://twitter.com/515hikaru/status/1039872062343471104
 	I just finished reading The Intellectual Production of Engineers. I don't really feel like I've gotten the hang of it, and I'm not sure if it's too early for me. I think I'll put it down for a few years and read it again when I remember.

	https://twitter.com/kuroarizuka/status/1039869224317902848
 	I enjoyed a lot of things in "The Engineer's Art of Intellectual Production," especially the part that focused on the fun of discovery, like the KJ method "re-building the vocabulary network" and "updating the framework and switching perspectives.

	https://twitter.com/Pooh3Mobi/status/1039749107928248322
 	That's the study I'm doing.
  Forget about it for a moment, resume the study if you feel like it.

	https://twitter.com/MinoDriven/status/1039648277610737664
 	Chapter 5, "How to Organize Thoughts," describes know-how for organizing thoughts, and I felt that the method is exactly like bottom-up modeling or soft engineering. I also agree that it is not good to create a top-down classification first, because later difficult-to-classify items will appear.

	https://twitter.com/tajima_taso/status/1039439366332997632
 	I've only skimmed through it, but it's a terrific book. It is the ultimate systematization of learning.
  A beneficial book for all those who are not learning well or want to learn in a more efficient and reliable way.

	https://twitter.com/cappitto/status/1039154832022503426
 	Like "The Engineer's Art of Intellectual Production," I think a lot of the content would make more sense to someone who has experience with trial-and-error. Is it like a reverse engineering series?

	https://twitter.com/hellomyapple777/status/1041652677258559488
 	I feel like I received confirmation that the learning methods I had been using by trial and error were correct, and I also received additional direction for improvement. I will refer to it again as needed.
  On the other hand, Chapter 6, "How to Come Up with Ideas," was less gut-wrenching than the other chapters. This may be because I have been working rather more on putting other people's ideas or existing ideas into realization rather than coming up with my own ideas.

	https://twitter.com/mkaneda/status/1038314132380897280
 	I finally started reading "The Intellectual Production of Engineers," which I had put on the bookshelf as I bought it. After reading the introduction and the table of contents, I decided to read the book from the beginning, and I've been putting sticky notes all over it. I'll probably buy a marker because I can't stand to read it.

	https://twitter.com/sh1ba_sh1n/status/1039092853140467712
 	Reading. A very good book. There are many similar books as a catalog of intellectual production techniques, but this book is specific to each of them, and above all, it is good to know that the author has a consistent philosophy.
		When you read books on intellectual production techniques like this, you are bound to read about the Pomodoro Technique, the KJ method, single-tasking, goal segmentation, search-and-discover learning (test effect), metacognitive reading methods, etc. Sometimes I think it's common knowledge, but I'm not sure if everyone knows about it or practices it. I don't think people know about it and don't practice it.

	[Read The Engineer's Guide to Intellectual Production, Part 1 - The Apathetic Life (http://gdgd-shinoyu.hatenablog.com/entry/2018/08/21/014147)]
	[Read The Engineer's Guide to Intellectual Production, Part 2 - The Apathetic Life (http://gdgd-shinoyu.hatenablog.com/entry/2018/08/23/015911)]
	[Read The Engineer's Guide to Intellectual Production, Part 3 - The Apathetic Life (No ´´easy´´) ~゜ http://gdgd-shinoyu.hatenablog.com/entry/2018/08/29/021325]

	[I read "The Intellectual Production of Engineers" - Keiji Matsuzaki - Medium https://medium.com/@keiji.matsuzaki/%E3%82%A8%E3%83%B3%E3%82%B8%E3 %83%8B%E3%82%A2%E3%81%AE%E7%9F%A5%E7%9A%84%E7%94%9F%E7%94%A3%E8%A1%93-%E3%82%92%E8%AA%AD%E3%82%93%E3%81%A0-3a174b26c5b0]
	relevance
 　https://twitter.com/xga/status/1033699784131891200
 　[/futoase-notebook/intellectual-production-techniques-of-engineers].
   I finished reading it last Saturday and Sunday.
   I'm turning the page again today and writing in Scrapbox, remembering what caught my attention.
   take time
   I got to chapter 4, but there were a few places here and there where my understanding wasn't as biting as it should have been.
   I want to be able to get it out in a satisfactory way.
		https://twitter.com/xga/status/1036400598067818496
			I've read back through chapter 8 and made notes in scrapbox, but I'm running out of quantity.
   Need to try out the ideas and summary (KJ) individually.

	https://twitter.com/yoshikiito/status/1038807208283303936
 	A story about how to discard too many things to learn.
  	https://yoshikiito.net/blog/archives/1909
  Reply to ... "Why don't you publish the details?" Reply
  What do you think? In the end, I feel like we have to change the way we do things (there is no silver bullet) depending on the person and their lifestyle, so I'm not sure if it works for the public...
  I read the Engineer's Guide to Intellectual Production, and it has a good language for what I'm doing, so I'll just pass this along.
  It may be that the person who is effective in disclosing the information to the public is, after all, the person who verbalized the information in the process of disclosing it.

	https://twitter.com/Tl5VdshCLYVbe6N/status/1038722711730581504
		As for the content, it can be read by people who are not engineers at all.
  He said that the best way to remember is to try the content as you recall it.
  If you can give your own examples and explain what you mean, you will understand faster.
  It's hard to actually do it.

	https://twitter.com/hayatoise/status/1038770905306910722
		I have read "The Art of Self-Taught" and "The Intellectual Production of Engineers". The major common thread is that they refer quite a bit to Einstein's thought process.

	https://twitter.com/hellomyapple777/status/1041652677258559488
 	I finished reading "The Intellectual Production of Engineers. I feel like I got confirmation that the way I had been learning by trial and error was not wrong, and I also got a direction for further improvement. I will refer to it again as needed.
  On the other hand, Chapter 6, "How to Come Up with Ideas," was less gut-wrenching than the other chapters. This may be because I have been working rather more on putting other people's ideas or existing ideas into realization rather than coming up with my own ideas.

	[I read "The Intellectual Production of Engineers" - Memorandum http://satoru-takeuchi.hatenablog.com/entry/2018/08/31/090011]
 	The title of the book is "Engineer's" and my impression is that it is a book "for" engineers.
  But in reality, it's a waste if someone thinks that the general content "I'm not an engineer, so I'm not the target reader.
  I will have to ask the author to find out the truth, but "intellectual production techniques by engineers" seems to fit better.

	https://twitter.com/boxnos/status/1044491568424476672
 	If it's too big to divide, divide by time.
  I thought you couldn't work on big projects, but... that's it.

https://twitter.com/sironekotoro/status/1044229731502051328
	I guess constructors are not inherited in Java, like initialize in Ruby.
	As was mentioned in Mr. Nishio's "The Intellectual Production Techniques of Engineers," I like to study with an awareness of what is different and what is the same.
 I think the ones who I think did well at my house were naturally able to study in such a pattern.

 [65% of unmotivated people are unable to focus on one task By Engineer's Intellectual Production https://qiita.com/hand-dot/items/a1bb5a3a49000033e303]

 ["The Intellectual Production of Engineers" is full of techniques for learning - gently, loosely https://iucstscui.hatenablog.com/entry/2018/09/22/232034]

	[I'm reading "The Intellectual Productivity of Engineers" - Blog Ongaeji http://ongaeshi.hatenablog.com/entry/2018/09/16/234207]

https://twitter.com/sukesan1984/status/1036607418799550464
	"The reason I don't feel I need sutras is because I'm not trying new areas."
 I'm studying machine learning right now, but it's so uncharted territory that I really don't understand it unless I copy it... I'm starting to understand it, though.

https://twitter.com/morototo/status/1034457802989686785
	While you're reading, your mind is just running through other people's thoughts, not your own. If you read all the time, your ability to think will deteriorate and you will become stupid.

https://twitter.com/10mi8o/status/1033470954473541633
	I regret that I was not able to explain my code in detail at the interview last week.... There is still a gap between what I wrote and what I am aiming for.
 1. Can you explain in your own words?
 2. Can you give specific examples based on your experience?
 3. Can the knowledge be used to achieve the objectives?

https://twitter.com/fly_sky_high_99/status/1030248541350899714
	Programs usually work differently than expected. Why does it work differently? After clarifying the question and correcting it many times, the program works correctly. People don't often show this process of trial and error to others.
 If you sometimes think he is a genius, it is because you are only looking at the surface.

https://twitter.com/fly_sky_high_99/status/1030247107192442881
 Programming skills are obtained by repeatedly gathering information, comparing, discovering patterns, practicing, and verifying (discovering expectations and gaps).
 I think this is the same in other studies. Because people are satisfied with the initial collection of information and think they understand it, the learning is not utilized.

https://twitter.com/ark_finn/status/1044580855467859969
	I would recommend it to anyone who wants to do something but doesn't know what to do.
 As others have said, the engineer had nothing to do with it at all.

https://twitter.com/motoyasu5/status/1042690440787443714
	I guess it takes a lot of sense to axiomatize in the information gathering->axiomatization->logicization->verification loop of the learning cycle.
https://twitter.com/motoyasu5/status/1042694401753964545
 I can axiomatize and verify programming studies in short cycles, but I'm not able to engage in design work on a large scale, so I wonder how I can build design intuition and axioms in my own mind.
 I wish I could make a quick connection between axioms and verification.

https://twitter.com/ongaeshi/status/1041955919305748482
	In "The Engineer's Art of Intellectual Production," it is stated that there are three types of purposes for reading: 1. entertainment, 2. finding information, and 3. assembling understanding. If you apply these criteria to the book you are currently reading, you will be able to decide when to read it and when not to read it. I recommend you to apply these criteria to the book you are reading at the moment.
 For example, "The Intellectual Production of Engineers" tends more toward 2 and 3, so set aside a certain amount of time in your day to read, picking through the topics in the order you think you will need them. Take notes.
 It would be boring to read books bought for entertainment if you put too much effort on your shoulders, and it would be a waste if you read books bought to acquire necessary knowledge and then pile them up. Thanks to "Intellectual Production Techniques," I am now more aware of the gradation in this area.

https://twitter.com/yuikijp/status/1041665554141011968
	Reading about the intellectual production techniques of engineers, I was able to reaffirm that you have to create your own intellectual production techniques after all.

https://twitter.com/moriwaka/status/1043891022894223360
	I've been reading "The Engineer's Guide to Intellectual Production," and I've been thinking about it a lot, but then I think, "So, am I going to do this?" I think ...... orz

	https://twitter.com/rakkoannex/status/1036925073888690176
 	I was just wondering how to read the book, so I'm glad you presented an issue close to this confusion.

	https://twitter.com/luccafort/status/1036900962294624256
  It seems like a good idea for people like me who don't major in CS and have an education complex because I didn't go to college.

	https://twitter.com/saboyutaka/status/1036895475868135424
		I know what a door pattern is as a design pattern.

	https://twitter.com/hellomyapple777/status/1041652677258559488
 	I felt like I was getting confirmation that the way I had been learning by trial and error was not wrong.
  I felt like I was given an additional direction for improvement on top of that.
  I will refer to it again as appropriate.

	https://twitter.com/masuda220/status/1041569947325890560
 	Chapter 1 of Intellectual Production Techniques for Engineers. Easy to understand explanation of design techniques.
  Abstract => extract what is noteworthy from a concrete object
  Model ⇒ Simplification to explain the complexity of the object
  Module => Split code for easier handling
  Type (class) ⇒ data structure (cover-up) and valid operations (disclosure)

	https://twitter.com/hisaca_/status/1041339178728927238
 	If you go through the programming language as a specific example, people involved in intellectual production are usually like, "Oh, there it is.

	https://twitter.com/__timakin__/status/1036110046474563584
 	I like that it's not based on gut feelings or overly rational human assumptions, but on how the system can improve productivity through normal motivation.
 https://twitter.com/__timakin__/status/1036112102572711937
	 I think you should stop using the word "engineer's." It's totally for everyone, and if you've ever struggled with reading, there are stories in it that are painfully obvious. It's so great that I don't know how much it would have saved me if I had it when I was a student.
 https://twitter.com/__timakin__/status/1036114334189928448
 	When we think of intellectual "production" techniques, we tend to think of output, but this book is rather well-written with chapters on how to efficiently perform input. I think this is a great book written based on experience, without any bad reading skills or outlandish learning methods.

	https://twitter.com/berlysia/status/1035900369493155841
 	As far as I've bought it and snatched a look at the table of contents, I get the sense that it reinforces and reaffirms existing knowledge.

	https://twitter.com/youten_redo/status/1035856585300500480
 	turn over the whole page
  It's funny that the first thing on the pyramid of reading methods is "don't read" and the expression "how to talk proudly about books you haven't read" feels great on its own.
  I love the flow of "priorities are important but difficult to begin with," then "you can't sort them unless they are one-dimensional," then "it's even more impossible with stochastic uncertainties," then "be optimistic in such cases.
	https://twitter.com/youten_redo/status/1035875470514913280
 	The effective readership seems to be broader than the title gives the impression.

	https://twitter.com/hirota_naoto/status/1035733338474999808
 	I changed my input/output method after reading "Intellectual Production Techniques for Engineers. Let's seek the method that best suits us through trial and error so that we can output properly.

	https://twitter.com/515hikaru/status/1035491112675229696
 	I'm reading a book called The Intellectual Production of Engineers, but it's not just for engineers. ......

	https://twitter.com/nozomitaguchi/status/1034667214048120833
 	I thought that the three phases of the trial-and-error or learning cycle are similar to the concept of defending and breaking away.

	https://twitter.com/henteko07/status/1034391795025604608
		I'm reading The Engineer's Art of Intellectual Production, but the font in the text looks weird and bothers me and I can't get it out of my head.

	https://twitter.com/moh6an/status/1034280614747234305
 	From this book, I learned a new insight: "In a company called Triumph, 12:30-14:30 is "work hard time," when all private talk, communication, and phone calls are prohibited and people focus on their work.

	https://twitter.com/ryokky59/status/1034382820670468096
 	I used the Pomodoro Timer, which I hated to do, and made a lot of progress!
  We have to keep introducing good things, and we have to try them out!

	https://twitter.com/unsoluble_sugar/status/1034486727107198976
 	An engineer's intellectual production techniques, every few pages, "I didn't know there was such a thing...! I didn't know there was such a thing!
  I also thought the cover copy, "Learn to think in a way that will still be useful 10 years from now," was not an exaggeration.
  I think you should read All Mankind, rather seriously. (exaggeration)

	https://twitter.com/satoru_takeuchi/status/1034487329065295872
 	I completely agree with the expression "[trial and error is] hard to see" in "The Engineer's Art of Intellectual Production."
  	When you teach people things, it's easy to tell them the answer or solution, but it's hard to tell them the trial-and-error process of finding it.
   	It's many times longer than just saying the answer.
    If you're used to it, you can skip a lot of things, but not for the person you're teaching.
			I'll have to leave the results of my trial and error and how it went, for example, in a commit message.
   https://twitter.com/mhiramat/status/1034577487110397952
   	Because of this, when you are going through trial and error on OSS (with the aim of eventually committing), you should not do it alone, but rather raise the issue in ML or issue first, and then go through trial and error where you can see it.
    And not only trial and error, but quality improvement is equally invisible. It is still a good idea to do it in the open.
　    That's the part you don't see in the git log.
		    I can do a reverse lookup if the issue# is attached. lkml has a URL attached these days, so I can do a reverse lookup from http://lkml.org, but the trap is that I have to attach a link to the previous series in the cover email to get to it.
			https://twitter.com/yoosee/status/1034951720617426944
   	I try to create a "trial and error phase" at the beginning of a project where I have discretion, especially when using new frameworks, middleware, or packaged software.
    As a rule, anything made for trial during that period is discarded.
    Until you learn the manners, you need to copy sutras and go through trial and error.
    In reality, there are many projects in which I have no discretion, so I'm not always on the cutting edge, but if I do something new without clear trial and error, the design or implementation that I initially created by misunderstanding something will become a very big liability later on.

	https://twitter.com/tkdn/status/1034233497257304064
		Chapter 7. Read.
  The thought experiment through this book is to the grand meta-structure of that for intellectual creation.
  In the conclusion, I felt the will to grow together with oneself and others and to make society a better place through one's own survival strategies and synergistic effects by involving others.
  Knowledge is not closed, it opens, communes, and expands.

	https://twitter.com/tkdn/status/1032938793391681536
		Chapter 6. The Plowing, Sprouting, and Nurturing Phase, its Iterations.
  PDCA is also cited, but I thought that it often fails to incorporate new information and can lead to narrow hypothesis testing.
  The same is true for the verbalization of events that are perceived by the senses.
  It is the ideas that come to you, love them, expose them, and nurture them into something rich.

	https://twitter.com/kaorabe/status/1034191743522988032
 	The book has a lot of tips for motivation and is quite useful for me right now!
  The latter chapters reminded us of the sharing of mental models.

	https://twitter.com/__annkara__/status/1030411223068598273
 	Learning methods may evolve in terms of tools, but I don't think they change that much in terms of methodology, so I feel that you should just read this one book and customize it to your own needs.

	https://twitter.com/mtb_beta/status/1032597766491394049
 	I'm the type of person who reads the table of contents and reads where it looks interesting, but it all looks interesting, so I have to read it from the front.
  Should I reenter college? There is a section that says.
   When I want to study a certain field, should I join a university in that field? I once wondered.
   Should I go to college? The reason I think, 'I want to learn something with someone else.'
   When you go to a gathering of people who are interested in the same topics as you, you can discuss and debate what you are interested in.
   I want a place like that," he said.

	https://twitter.com/unairole/status/1032519943785345024
		KJ method, so highly regarded that it is repeatedly reprinted in Chukoh Shinsho, but it is a wonder that the knowledge has not been disseminated.

	https://booklog.jp/users/chroju/archives/1/4774198765
 	It's a concrete example of how to use the methodology you've seen and why you should use it.
  The best part was the "focus on differences"
  Relative and abstract

　https://booklog.jp/users/masahiro884/archives/1/4774198765
 	Plainly explains numerous methods, citing other books.
  Chapter 4 made me realize that I had been caught up in the amount of reading and had underestimated the reading process.
  I realize how important it is to have a name.

　https://booklog.jp/users/msnaru/archives/1/4774198765
  I read the table of contents and didn't read much because I knew half of it.
 	The content that hits the output is not chapterized...

 https://twitter.com/tkdn/status/1029318655018815489
  The Engineer's Art of Intellectual Production, Chapter 3. Memory Retention. Methods for long-term memory, not on-memory. Testing is essential for retention. Repeated testing at intervals strengthens retention. The best way is the same as in the previous chapter: choose and choose. I'll have to change this strategy as I get older, and I'm sure the time to review it will continue until I die.

 https://twitter.com/tkdn/status/1030040722349518849
  The Intellectual Production of Engineers, Chapter 4. Reading, finding and assembling. The approach varies with the level of difficulty. English articles and new programming languages are particularly time consuming. There is a little leverage to improve efficiency before reading through. There may be an option to lick the headlines in terms of selection and then dare not read them.

 https://twitter.com/tkdn/status/1031503350926213121
  The Engineer's Art of Intellectual Production, Chapter 5. I imagine pulling out the information input into my brain, organizing it, and putting it back into my brain. I usually repeat I/O at high speed to improve accuracy. This term, I'm consciously trying to convey what I've taken in to others, and asking myself, "Will this really get through to them?

 https://twitter.com/tkdn/status/1029132170122616832
 	Chapter Two. I feel that it was more of an introduction to methods, rather than external factors for motivation. A meta-structure that also seems to be one of patterning. I would have done time measurement for estimation accuracy.
  Trade-offs between exploration and utilization, the balance between the two. I see.

 https://twitter.com/yasuhito58/status/1028540054770044928
  Chapter 2, "How to Get Motivated."
   The theory, its history, and examples are well balanced in distribution and easy to understand.
   To be motivated, focus on one task, assign a clear goal for accomplishment to the task, divide the task by content or time once you have narrowed it down, and measure once you have done so.
   measurement is essential
  Chapter 3, "How to Train Your Memory."
   Test rather than review. Testing reduces subjective confidence, but increases objective results.
  Chapter 4, "How to Read Efficiently."
  	Reading is not only the input of information, but also the combination of information newly input through reading with the knowledge and experience one has.
   I guess another way to say "combine" here would be something like "create a chemical reaction".
   The Whole Mind System methodology seems to work for those who have the obsession that they must read a book from beginning to end, licking it all up.
   Interesting story in the second half of the chapter about the difference in the definition of "understandable" between those with a math background and those with a physicist background ^^.
  Chapter 5, "How to Organize Your Thoughts."
   KJ method
   How to use sticky notes to organize too many ideas
  Chapter 6, "How to Come Up with Ideas."
   On how to verbalize an image that cannot yet be verbalized.
   I enjoyed your story about "discomfort."
  Knowledge is not only acquired from the outside, but also produced by oneself.
  Producing new knowledge leads to value.

	https://twitter.com/nikuyoshi/status/1028623155898642437
  Reading, how to organize knowledge
  The book also describes specific ways to organize output using sticky notes, which I definitely want to incorporate when I write my book.
 https://twitter.com/shin_matsuzaki/status/1028940196866183170
  I thought the KJ method looked good, so I bought a small post-it and am trying it out, but it feels pretty good.
  Techniques for thinking well when you need to think
 https://twitter.com/norainu234/status/1028805762057990144
 	It's interesting to see you verbalize your rule of thumb.
  It will be useful when teaching others.
 https://twitter.com/akif0999/status/1028477437594615809
 	This kind of systematization was unlikely.
 https://bookmeter.com/reviews/74096515
  It explains everything I've learned over the last 10 years about how to learn and fight as a software engineer.
  I don't know if I could read and understand it 10 years ago.
  Maybe a good book to read repeatedly and experimentally.
 https://twitter.com/tkdn/status/1028401363460358144
  Verbalization of what we usually do without thinking about it
  Maybe I haven't always gotten to the point where I can tell the difference from the pattern.
　  Once a pattern is established, there's a tendency to be relieved and stop digging deeper.
 https://twitter.com/dragonboy765/status/1028627897857142784
  It's a lot of "stuff I know or have heard about" but it's all in one easy-to-understand package and seems like a good way to rekindle motivation.
 https://www.konosumi.net/entry/2018/08/11/171047
 	The content is rather abstract
  Learning with Purpose
  Set specific goals and motivate
  By abstracting, we acquire generic skills that can be applied in various situations.

	https://twitter.com/takatama_jp/status/1045121542428876801
		A fluffy book on various topics related to "how to learn." The subject matter is too broad.
  There are a lot of software parables, but it doesn't mean that there is special know-how for engineers.
  Programming is good for learning because it's easy to trial and error! comes up a few times.

	https://twitter.com/amemiyashiro/status/1045710652562522112
		I wish I had read these books during my first year of undergrad or something.

	https://twitter.com/mitsunoir/status/1045658577170391041
 	The cover design is almost the same as the book that came out about 10 years ago.
  And the title is composed only of words that would be found in the Kojien dictionary.
  I'm not thrilled.

	https://twitter.com/techmrmr/status/1046187444066902021
 	How to learn programming
  Information gathering (concrete), modeling (abstract), and verification (applied)" These three elements are repeated.
  Personally, I think the "modeling → verification" barrier is a big one, and I feel that the difference in quality here is directly related to the difference in programming ability.

	[DaiAoki/engineer-intellitech: Engineer's Intellectual Productivity Reading Memo https://github.com/DaiAoki/engineer-intellitech]

	https://twitter.com/Koma_Studio/status/1046764761205993474
 	I'm reading [concrete and abstract]. When I was reading the sample before? I was a little disappointed, but thanks to reading "The Intellectual Production of Engineers," I can read through it with a lot of understanding. I had a bad impression of abstraction, but it's not that bad at all, in fact, it's necessary.
  An abstract is something that can be widely interpreted and applied. Concrete, on the contrary, lacks this power of application. The ability to abstract is the reason humans have created numbers and words. It is also because we use abstractions that we can apply what is happening in the real world to the spiritual world and vice versa.

	https://twitter.com/fjt_suntree/status/1046647557147914240
		I never thought about max and min reading speeds.

	[Learning and Intellectual Production | Blue Bicycle and Wherever https://blog.atsuron.net/archives/2018/09/intelligent-production.html]

	https://twitter.com/ledsun/status/1045852982447759360
 	In the acquisition of knowledge, concepts are more applicable when they are acquired. Principles, principles, axioms, and laws make concepts easier to learn, and this is the highway. To acquire concepts, it is necessary to collect examples, and there is no highway in this part. The only way to acquire concepts is to collect them through hands-on activities.
  This is where education requires patience. It is frustrating when a teacher who understands a concept does not get the concept when I explain it to them. I know what I am doing, so I don't know why I can't get the message across. The person listening does not understand because they do not have enough examples. The person who is listening does not know what he/she does not understand because he/she does not know what he/she is talking about.
  The teacher wants to teach concepts that can be applied. Then they don't have to teach it twice. In reality, you can't skip the examples and just teach the concepts. (You can teach the principle as words, but without acquiring the connection to multiple examples, you cannot determine whether it is applicable to a new case.)

	https://twitter.com/miki7500/status/1048073419672051712
 	If you're not an engineer, but you're in the business of making things, you should read this. You will be reminded of how I work.

	[book review I read The Intellectual Production of Engineers https://budougumi0617.github.io/2018/10/03/review-the-productive-technique-of-engineer/]
		Most recently, I needed to write a manuscript for a technical book, and I tried to imitate the KJ method a little and subdivide tasks.
  Since this was my first time writing a manuscript (a long document), I flinched at first, but by creating a plot for the entire document and subdividing it into individual tasks, I was able to write the document without much hesitation (although there were some hiccups).
  Also, because I was able to write little by little, I was able to continue to be motivated, saying, "I have some time, so I'll just write this part in a few sentences.

https://www.facebook.com/yusuke.amano/posts/10157142202998888
	A pessimistic mistake is one that you don't have a chance to notice, but an optimistic mistake can be noticed and corrected later.
 I read this and strongly associate it with pretending.
 How many opportunities have we lost because we prioritize pessimistic fears and risks over optimistic challenges?

[The Intellectual Production of Engineers - Learn, Organize, and Output Efficiently - Ohsama no mimimi wa donkey no mimimi http://luccafort.hatenablog.com/entry/2018/10/14/180019]
	Read the book roughly 2 months after purchase. I don't know how long it took me to read it, but I read it for about an hour and a half a day, taking notes, and completed it in about a week. [src http://b.hatena.ne.jp/entry/luccafort.hatenablog.com/entry/2018/10/14/180019]

[Thoughts on "The Engineer's Art of Intellectual Production" | I'm stuck in life and I'm going to make a game before I die http://ntgame.wpblog.jp/2018/10/15/post-2069/]

https://twitter.com/KanadeYumeno/status/1051669053381599233
 It is good to see tacit knowledge that has not been well verbalized being formalized.
 After all, most people can't study without a purpose or set vague goals. A series of small goals is important. I know, but it's hard to set them.

https://twitter.com/arxxxxxx0/status/1051345201564766208
	Words are so important.
 If words didn't exist, we wouldn't be able to recognize events.

https://twitter.com/naron__A/status/1051332485601091585
	It sounds like a great way to study while being aware of the discrepancy between what you are learning and what you think you are learning.

https://twitter.com/kiwofusi/status/1054301934809624576
	I had never thought about the connection between motivation and task division, so this was new to me.

https://twitter.com/naron__A/status/1053874852891779074
	Positive attitude toward learning.
	Books to be read and re-read regularly

https://twitter.com/study_pm_kb/status/1052677033807867904
	My input and output have been distorted lately, so I turned to this book and found it very helpful.
 It was not as difficult to understand as the title suggests, but was easy to read with plain expressions and diagrams, and I could understand what I was lacking.

https://twitter.com/FORTEgp05/status/1052693991559294976
	Comments on The Engineer's Art of Intellectual Production are now up!
 I think everyone is interested in talking about motivation and memory, so this book should be read regardless of your engineering background.
	[Thoughts on the Intellectual Production of Engineers - Blue Sky Days https://fortegp05.hatenablog.com/entry/2018/10/18/074408]

I read [The Intellectual Production of Engineers - The Daily Life of a Struggling Programmer https://kojirooooocks.hatenablog.com/entry/2018/10/19/023718]

https://twitter.com/Ren_Toyo/status/1054598690302619648
	I think it's worth skimming through it (maybe not necessary if you already have your own system of how to study and such).

https://twitter.com/ceruleanbluehue/status/1054759441403236354
	My son doesn't have time to read at home right now, so he is reading what he wants to read during morning reading time at school. A while ago, he was reading "The Intellectual Production Techniques of Engineers" and he was quoting and teaching me about something like this.... Now he's reading "Mathematics for Programmers" and I'm hoping he'll teach me things again.

https://twitter.com/rolling_dgz/status/1055417936863580160
	The author has tried out various previous studies on intellectual production (such as the KJ method) and introduced a modernized version of the method.
 It is interesting that the theme of "motivation" to learn is one of the themes, while "training the memory," "reading efficiently," and "organizing thoughts" are the usual ones.
 It's just a good book, but it takes a cognitive load to read. It's like it's rushing through a lot of text. Maybe it's because the story jumps around in chapters/sections and it's hard to catch the flow of the book.
 Or maybe I've been reading nothing but sloppy books lately and it's dulling me. I've read that when you read a difficult book, the assembly of information in the brain is the bottleneck.
 I'd like to note a few things that caught my attention,
 	The algorithm of "choose the option with the highest expected value based on past experience" means that once you make a pessimistic mistake, that option will never be tested again. So, when in doubt, it is a good idea to act optimistically.
  Use knowledge to gain a position, and then use that position to gain knowledge.
  If you cannot excel in a particular area, differentiate yourself by shifting knowledge areas. (Create the area in which you know the most).
  Excellence in the area of multiplying multiple areas.
  Connecting areas of expertise with knowledge of the two halves.

["The Intellectual Production of Engineers" - kb84tkhr's blog http://kb84tkhr.hatenablog.com/entry/2018/10/26/214234]

https://twitter.com/tommy6073/status/1056025719480840193
	It is not a book that you can learn just by "reading," so you have to pick and choose what you think will suit you from the methods introduced and incorporate them.
 I wrote a book review blog. [Learn how to create new knowledge from knowledge in "The Intellectual Production of Engineers" - It's okay to be weird - Medium https://medium.com/its-okay-to-be- weird/%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E7%9F%A5%E7%9A%84%E7%94%9F%E7%94%A3%E8%A1%93-%E3%81%A7%E7%9F%A5%E8%AD %98%E3%81%8B%E3%82%89%E6%96%B0%E3%81%9F%E3%81%AA%E7%9F%A5%E8%AD%98%E3%82%92%E7%94%9F%E3%81%BF%E5%87%BA%E3%81%99%E6%96%B9%E6%B3%95 E3%82%92%E5%AD%A6%E3%81%B6-fe460b36d18]

https://twitter.com/mugi_to_tororo/status/1056458326135853056
	I was reminded that it would be more efficient to study everything in a delayed evaluation manner.

https://twitter.com/kasei_san/status/1056691260541427712
	Here's how to learn, strategies for what to learn in the first place, motivation, ideas, and other intellectual skills! and a comprehensive introduction to
 I really felt "become a trader of knowledge" when I was on the sidelines and when I presented Kanban to other teams. The know-how of other companies and other teams can be quite valuable.
 Also, "Be number one in the combination" is often said, but I couldn't get a concrete image of it, but it is very easy to imagine when you say, "Regarding this knowledge and experience, I am number one in this department.
 I thought it was harsh but true that the quality and quantity of output that should be evaluated would be second or third best, because work in areas where one is not number one on the team is inevitably second or third best.
 The issue of "motivation" for everyone was that the tasks were either too small or too big, and they should be microtasks that can be completed in a few minutes and divided by time, like a pomodoro, which is, well, right.
 For me, I break what I do into tasks that take 5 minutes or less and put a 5 minute timer on it. Even if I am not motivated, if I do the first 5 minutes, well, I start. If I am really unmotivated, I don't even break down the task and do the first five minutes of the task that comes to mind. This is how I manage to boost my motivation.
 How to Retain Memory. Writing down how much of the book you remember after reading it will help you keep track of its content. The rest of the book introduced a common method of reviewing the book when you have more time available.
 I know how to fix my memory, but how can I train my "ability to retrieve the best solution to the current situation from past experiences and knowledge" like "This situation was described in that book! How can we train our ability to find the best solution for the current situation based on our past experience and knowledge?

https://twitter.com/takutakuma/status/1057213822199459840
	I have the feeling that my study methods are being updated.
 Best book on how to learn how to do it.

https://twitter.com/ykawashi7/status/1057265498641981440
	It spelled out the "intellectual production techniques" required in a wide range of fields, so much so that the pillow word "engineer's" was unnecessary.
 	After I wrote that, I imagined that the definition of "engineer" in this book is a broad one. For example, a cook or a painter could be seen as an engineer who understands and handles the structure of ingredients and models.
 I found the framework described in this book to be helpful, especially if you are looking for new ideas. I can't recommend it out of hand because I haven't properly tested it myself, but it is written in a compelling manner that seems to work well.
 The first half of the book also spotlights learning as a preliminary step to intellectual production. It reminded me of [Refactoring Wetware]. This is a powerful book that focuses more on the learning perspective, and should be read in conjunction with this book to deepen meta-learning (learning for learning's sake).

https://twitter.com/toya_physik/status/1059020835564937216
	It is quite common these days that what I am thinking about today is not communicated to me tomorrow 🤔.
 I think it's because scribbles (memos) are not organized at that point.
 Be careful not to skip putting things into words as much as possible 💡.
		It may be OK as long as it is left in place.
  It's important to know what is not well verbalized or uncomfortable with regard to ideas in "The Engineer's Guide to Intellectual Production." You can refine them when you relate and organize them. It does not matter if you write down the same thing when you write it down. It is especially important to be similar but slightly different. It was said that what can be verbalized is just the tip of the iceberg.
			You mean the part like ideas that are beyond the realm of linguistic ability? I hadn't thought that far! That's the part that I seem to cut out when organizing 🤔I'm a pretty good note taker by nature, so I'll keep that in mind in the future!
   	It is rare for an idea to be clear and realistic when it is conceived, and it is only when it is refined into a realistic form that it is sent out into the world to be known...something like that. That made a lot of sense to me. As a supplementary note, there seems to be a way of thinking called the NM method, in which ideas are developed by associating them with metaphors. Interesting.

[Part 1: Training Data Scientists and Forming Teams: Masked Analysts' Dojo Breakthrough! Real Data Scientists, edited by Shinta Nakayama｜gihyo.jp ... Gijyohyoron-sha http://gihyo.jp/news/interview/01/datascience_talk/0001?page=2]
	>As in the story written in "The Intellectual Production Techniques of Engineers: Learning, Organizing, and Outputting Efficiently" (Yasukazu Nishio, 2018, Gijutsu Hyoron Co., Ltd.), if you have one level of meta-knowledge, you can see the same things in individual projects. If you look at just one project, you cannot get that meta knowledge, but if you look at two or three projects in various industries, you can see the commonalities. If you think based on that, it is easier to understand when you talk to people in a new industry.

https://twitter.com/okkun_sh/status/1067272928624967680
	There was a sense of "sure" because what we usually do naturally without much awareness was verbalized.
 Chapters 1~4 went into the content rather easily, chapters 5~6 were not so clear.
 Maybe it's because I don't usually organize my thoughts and output much. (Assignment)
 When I read books, I usually read carefully from the first page, and it was hard for me to see what was going to happen in thick books.

https://twitter.com/fiction_by/status/1067219080996765698
	When I was younger, I tried to gain new knowledge, but I didn't really try to adopt new ideas. Now that I'm over forty, I'm realizing the value of it.

https://twitter.com/YuNi01955616/status/1066899061393907713
	Nothing particularly brand new, but it's certainly nice to have it all in one book with an engineering leaning.

https://twitter.com/peanweb/status/1066659021405401089
	I'm really enjoying working with the sticky notes and KJ method introduced in "The Intellectual Production Method of Engineers". I think I already have over 100 sticky notes!

https://twitter.com/suzuki6b6569/status/1066322014607106048
	Instead of just saying, "Let's learn to do XXX (Ex. "Let's learn to do Python")," I wonder if we should present a skill map that shows the specific scope and then say, "Let's learn to do it.
 The question is who makes the "____ map" like the "Civil Law Map" in the book. In the case of spontaneous study, the person who studies should make it, but in the case of "let's be able to ____", I think it is more natural for the person who says it to make it.

https://twitter.com/saike1119/status/1066262517343645697
	It was a good book because it systematically summarized the art of intellectual production, and I was able to reaffirm that what I usually do without thinking is a good thing, and I also learned something new.
 Especially the last one "How to decide what to learn" was a good talk that sticks with me in my current situation.

https://twitter.com/YMatoi/status/1064517030613704704
	I was thinking "clear goal," or something like that. Figured out that I was thinking of a vague goal.
 I'm just picking through it, so there's a lot I haven't read, but it looks good.
 I guess I could read it as needed.

https://twitter.com/katochin04/status/1064255142977986561
	I think "The Engineer's Guide to Intellectual Production" is a book that is so superior to most output books that I thought it would be a shame to make it just for engineers.
 A book for brain defragmentation that shows how to use your head hand.

https://twitter.com/LU_AA01/status/1063974223096426496
	In the article "Intellectual Production Techniques of Engineers", it was mentioned that uncertain goals (such as "to be able to speak C" or "to memorize the contents of a book") make it difficult to feel accomplishment, which in turn lowers motivation. I can't help but laugh at myself when I was younger...

https://twitter.com/hail_it/status/1063761578133078016
	I enjoy the feeling that what I had understood physically is now verbalized and it becomes very clear to me.

[What is "learning"? theoretically / I read "The Intellectual Production of Engineers" - kakakakku blog https://kakakakakku.hatenablog.com/entry/2018/11/13/124942]
	https://twitter.com/kakakakakku/status/1062190969792094208
		This week I am reviewing the book "The Intellectual Production of Engineers"! It was a great book (although it was very difficult to read and understand because of the amount of information).

[I bought "The Intellectual Production of Engineers" - White scenery @showyou, hatena http://showyou.hatenablog.com/entry/2018/09/05/075524]
[I bought "The Intellectual Production of Engineers" (2) - White scenery @showyou, hatena http://showyou.hatenablog.com/entry/2018/09/05/213510]

https://twitter.com/ayies128/status/1061957254818066437
	Chapter 3 of The Engineer's Guide to Intellectual Production, "How to Train Your Memory."
 It was quite boring.
 That's not what I want to know.

https://twitter.com/Mxcn3/status/1061611088763019269
	I spent a good portion of today reading The Intellectual Production of Engineers.
 He said that in order to advance our understanding of the book's contents, we need to examine the book's contents after this.

[I read [The Intellectual Production of Engineers (tentative) - anzawatta-blog http://dawtrav.skr.jp/blog/book/engineer-intelligent-production/]

https://twitter.com/tercel_s/status/1061063554571231232
	'If the "things that need to be done today" are already more than you can do today, then what you need to do is not to work harder at the task. The only thing you can do is change the delivery date, change the specifications, or stop.'
 The Intellectual Production of Engineers, p. 54

https://twitter.com/UYodaiu/status/1060730640931315712
	I nodded my head at the part about piling up information right off the bat.
 You dig deep, or rather, you build up your knowledge on top of each other.
 Also, I think the Web+DB PRESS plus books seem to have a high rate of finger cutting due to the quality of the paper.

https://twitter.com/tomoya_shibata/status/1059715574429696001
	I liked the article "The Pomodoro Technique of Intellectual Productivity for Engineers" in which the author said, "It is easy to think that because you work for 8 hours, you can do 16 pomodoros of work in 25-minute increments, but that is impossible. In my case, I can only maintain a high productivity of 4 to 8 pomodoros at most.

https://www.shoeisha.co.jp/campaign/award/2019/vote/
	[https://gyazo.com/3b303a9cd7840a249f932328d15d0304]
	I am in charge of computer books, but I am not a technical person, so I do not often browse through books on my own sales floor, but this is a book that I could not stop flipping through the pages. I think this book is useful not only for engineers and programmers, but also for business people in general. (Recommended by Yusuke Naganawa, Sanseido Bookstore Nagoya)
 It has specific techniques for organizing and optimizing your brain and how to move your head and hands. It would be a shame to make this book only for engineers. It is a book that is completely compatible with ordinary output books. (Recommended by Kazuhiro Kato, Maruzen Okayama Symphony Building)

https://twitter.com/oishiseachicken/status/1072462702851829764
	From "The Intellectual Production of Engineers," it's fitting that you can't understand abstractions without concrete experience. Design is seriously this, so let's promote test automation and increase valuable experience.

https://twitter.com/k_ryukius/status/1072274779493679104
	Good -> Delayed evaluation study method: study as much as you need to learn and combine as much as you need to for what you want to do.
	My advisor said to me, "You can do a lot of reading in a circle or read many papers, but the most powerful way is to find one interesting paper you want to replicate and reverse-engineer it yourself. You can learn what you need in the process." This is exactly what I thought, "This is a delayed evaluation method of study! This is exactly what we have come to think of as the "delayed evaluation study method.

https://twitter.com/AndSaino/status/1072100444103569409
	I'm reading it slowly, taking notes because it's so interesting.

https://twitter.com/tamukei01/status/1071953609082888193
	I read the book "Intellectual Production Techniques for Engineers" that Kensaku-san talked about before... what a good book it is.
 I would like to see this in a place where it is not on the bookshelf of the system.
 I have never seen such a concrete and systematic description of ideas and inspiration!
 My head was so much clearer.

https://twitter.com/j5ik2o/status/1071566613277622272
	Nishio's "The Intellectual Production of Engineers: Learning, Organizing, and Outputting Efficiently" (in Japanese)
 Chapter 1, "Learning New Things," is all about modeling. You will find that modeling is not limited to software development, and you should definitely read this chapter as a prelude to the strategy section of DDD, so that you can read the main part more easily!

https://twitter.com/KeiA_Miyazaki/status/1071055090256011264
	Each page and each page is very dense, high-dimensional, clear and full of content. I have never experienced such a book in a technical field before. I also felt a sense of familiarity with a book I read some time ago about reading and understanding difficult philosophy. The author's writing skill is excellent and does not wane until the last page. I intend to read it again.

https://twitter.com/1000tea/status/1070565063096844288
	The book, "The Intellectual Productivity of Engineers," was mostly what I knew, but in other words, it contained a lot of important lessons I had learned in the five years since I entered university.

https://twitter.com/takus_ja/status/1070346469289340928
	The Japanese phrase from the book "The Intellectual Production of Engineers," "If you don't know who your customer is, you don't know what quality is," is Japanese that I want to read aloud.

https://twitter.com/Koma_Studio/status/1069920902135992320
	This year, or rather recently, I feel like I have been thinking and perceiving things better, and I think it's because of these books.

https://twitter.com/n_inope/status/1069760500450250752
	There are many approaches to learning, but I wasn't aware of them when I was a student. I had a stinky impression of speed reading and it was a waste of time now that I think about it.

https://twitter.com/bainarian/status/1069546261458575360
	Is this phenomenon exactly the amazing version of the trader's strategy from "The Engineer's Art of Intellectual Production"?
	[I want everyone in the writing industry to know about "version control" - Togetter https://togetter.com/li/1294503]

https://twitter.com/yukawa8jo/status/1069535143868555264
	Read "The Intellectual Production of Engineers. It was a good book that condensed the content of the book into language that I could understand. Now it's time to put it into practice.

https://twitter.com/p_yama_KOS/status/1068441155824574464
	I know it's a good book, but the content is too dense to get into my head at all.

https://twitter.com/tomoya_shibata/status/1072690229566308352
	Making a presentation for an LT is not only about the topic, but also about the process of research and clarification to express correct information as much as possible (almost 90% of what I understand cannot be confidently expressed in writing as it is), and about the process of "I want to express it in a diagram like the one in that presentation, but how can I do it in a quick and simple way? How can I do it?
	I felt that the unfamiliarity, uncertainty, and sluggishness of the concrete, hands-on task of "creating materials" made the process of creating materials tedious (it is tedious, isn't it?), so I thought it would be good if know-how such as "techniques to support the creation of presentation materials" were developed on the side,
	To begin with, "creating documents" is a very large task in spite of its short four-letter word, and the techniques for motivating oneself to do so are discussed in "The Intellectual Production Techniques of Engineers - Chapter 2: How to Motivate Yourself" by Yasukazu Nishio, which everyone should read!

https://twitter.com/oishiseachicken/status/1072462702851829764
	From "The Intellectual Production of Engineers," it's fitting that you can't understand abstractions without concrete experience. Design is seriously this, so let's promote test automation and increase valuable experience.

https://twitter.com/yuuri08181/status/1074183738811011073
	The Intellectual Production of Engineers, I just started reading it, but it's a book I hope my own kids will read when they're in middle and high school.

http://icotfeels.blog66.fc2.com/blog-entry-5789.html
	The content was thin, with only quotes from other books.

https://twitter.com/choco14t/status/1074142490213548032
	Very good for verbalizing what I usually do and for writing tips to solve problems I have.

https://bookmeter.com/books/13035418
	Luo Yang This book explains everything I've learned and fought for as a software engineer over the past 10 years or so. It's like . On the other hand, I'm not sure if I could understand it if I read it 10 years ago, since it contains everything I've learned in the past 10 years. It might be a good book to read repeatedly and experimentally.
	yasuhitoakita This is a wonderful book that systematically explains how to take existing information and produce new knowledge. It is similar to the author's previous book, "The Technology Behind Coding," but it is highly persuasive because of its well-balanced distribution of why this is so (explanation by logic) and how it came to be (explanation by history). Highly recommended.
	This book is a bit too academic and also a bit too abstract, so I think it is a book for different people. It stung a lot when he talked about the fact that without the first box of concrete knowledge, it is impossible to add the upper layer of knowledge. It also reaffirmed for me the fact that motivation is important. No matter what you do, whether it is studying or anything else, you have to devise a way to be motivated to work on it, rather than doing it out of a sense of disgust.
	‍SHIKI The book is organized in the following chapters, and although some of the contents were already known to me because I could already put them into practice, many of the parts that everyone thinks about when working as an engineer are nicely summarized and helpful. I think it might be a good idea to open the table of contents and just take a look at the parts that interest you. How to learn new things - How to motivate yourself - How to train your memory - How to read efficiently - How to organize your thoughts - How to come up with ideas - How to decide what to learn
	YtoMoon This book was written by Nishio, who is also an alumnus of the graduate school in which I am currently enrolled. I was drawn in from the beginning. I feel that I am not grounded. I feel that I am not grounded because I do not have enough "ground" as an experience. He is kind enough to ask those people to read the book in six months. I would like to read this book again and again. As I tend to accumulate a lot of books, I will start by using the reading speed pyramid to improve my ability to read efficiently.
	Gotz As the title suggests, the book describes a series of processes involved in intellectual work. The description of reading was quite similar to the "Techniques of Reading" that I read the other day. The following phrases were memorable: - It is not necessary to read the entire source code to learn from what you want to know - Cognitively sophisticated tasks such as reading a textbook, finding the parts to remember, and turning them into simple structured problems are more memorable - Learning and idea generation are almost the same thing. The source of value is not having knowledge, but the ability to create new knowledge.
	maru This book describes various ways to improve productivity in order to keep gaining new skills as an engineer. From input, such as efficient reading, to output, such as how to organize thoughts, the author's ideas are introduced, along with the results of surrounding research and book sources. Overall, the book lists methods, and although there is a general flow, there is not a detailed flow, so I felt that it is abstract and difficult to learn everything and immediately put it into practice. I thought it would be interesting to read the book again in a year or three, since it seems that there are parts that stick and parts that don't, depending on when you read it.
	YUJIRO This book summarizes how to get motivated, how to read books, and how to come up with ideas. It is unusual in that it is targeted specifically to engineers. However, I recommend this book not only to engineers but also to students and all other people to read. I found many parts of the same author's work, "The Technology Behind Coding," difficult to understand due to my lack of ability, but this book references not only business books but also philosophy and science books, and together with easy-to-understand metaphors, it is a book that is easy to understand.
	Yushi koga If you are struggling with what to learn, you should read from the 7th win first. Personally, I found chapters 3 and 4 helpful because I am interested in improving my learning efficiency. The chapter on how to motivate yourself should be read by anyone who worries about not having a good study habit.
	Esukawa A record of the author's study of intellectual production techniques from various literature and his implementation of these techniques in writing this book and other works.
	Mitsuru: ■If you only collect information, the boxes just lie flat and do not accumulate. ■I got better grades if I spent part of that time on the test rather than repeating the input four times. Image is important. ■I didn't find photo-reading effective. ■If you learn something from reading a book, you should write a blog post about it and share it with others to help improve your own understanding.
	Osato: This book describes a methodology on how to output one's knowledge, not only from the perspective of an engineer. The most bone of the book is the process of first doing a large amount of input, then identifying all of the input, and systematically outputting all of the identified elements together. Each chapter asks the question, how do I do the input? How do you identify your arguments? How do I organize my ideas? Each of these chapters introduces the very best of how to do it. For each of these, the book introduces the very best of the best, and the book has the persuasive power of a person who has experienced this in practice.
	Hikaru This book is a condensed version of the techniques presented in various books. It is interesting to note the similarities between each book. Written in an easy-to-understand manner using only the essence of the book, although I didn't understand the second half of chapter 6 (about metaphors). Although the book is intended for software engineers, it is useful for other people as well.
	I had never thought about the connection between motivation and task division, so this was new to me. The specificity of "100 sheets" is amazing.
	Taisho 2018. About Intellectual Production. I learned about the trade-off between exploration and exploitation, timeboxing, the 15-minute rule, and the serial specialist strategy. I want to keep in mind "if you only do what you think is best based on past experience, you will never find better actions," "be optimistic when you are uncertain," "when you think you have to read a book, you are unconsciously turning a means into an end," "a framework is like an addictive drug," "learning and idea creation are opposite Learning and idea creation are not opposite but almost the same thing. If you don't know who your customers are, you don't know what quality is."
	Shuhei Otani Recommended. This book summarizes information gathering, organization, and output, not only for engineers, but also for other professionals.
	Nyangolo I can sympathize with the thoroughly science-oriented (programmer) way of thinking.
	rtaguchi A book by the author of "The Technology Behind Coding. I read this book with high expectations because "Coding~" was a very good book, but it was a little different from what I was looking for. If I had read the description of the book properly, I would have known that it was not what I expected, so this is not a problem with the book.
	miwarin How to use and reproduce knowledge, not just gain it. Atashi Reproduction
	pochi There is no author's original method, but the author has thoroughly organized the positioning of various production methods (work methods) proposed by predecessors so far. In the end, I think that the compatibility of each individual's method will be the conclusion. It is up to the individual to establish his or her own work method through trial and error. However, even in the trial-and-error stage, it is important to understand the significance of the method and to experiment with it rigorously, rather than trying various methods in the dark (it is best not to conclude that a method is useless after half-heartedly trying it). In this sense, this book is worth looking at because it introduces "methods" from all over the world like a schematic diagram.
	Arnold Each and every page is very dense, high-dimensional, clear and full of content. I have never experienced such a book in a technical field before. I also felt a sense of familiarity with a book I read some time ago about reading and understanding difficult philosophy. The author's enthusiasm does not wane until the last page. I intend to read it again.
	Yugata The book was easy to read, with excellent diagrams, references, and columns. Creating knowledge is what makes it valuable. I felt that it is important to verbalize, organize, and have an attitude of trying to gain new knowledge.

[Happiness Strategy - Optimistic in times of uncertainty - Why not stretch your Kokoro? https://blog.goo.ne.jp/bestmatchingproduce/e/b66bf756f0290e2617dbd0df07b60223?fbclid=IwAR3z2Ij3kHiB8AzdM0dYr3ESaATIfVzD9JCIGjE0 SUco8Z5sJ-g-LZd0RNo]

https://twitter.com/mofuya/status/1074441776646172672
	What I find somewhat comforting to read is the whole "I think this, because this is how I think. I'm sure there are other opinions, but what about you? I think there are different opinions, but what about you?

https://twitter.com/niszet0/status/1074286609577590785
	Let's go back to the beginning.
	I feel like I'm rediscovering it.

https://twitter.com/yuuri08181/status/1074183738811011073
	A book I want my own children to read about the time they are in middle and high school.

https://bookmeter.com/reviews/77557831
	This book shows a model of a series of flow from input to output of knowledge for engineers. You must have to study so many things to the point of death to get to this point, and this book brings you there in the shortest distance possible. I thought it was well understood that from other people's point of view, they can only see the front view, so they cannot see the trial-and-error part.

https://twitter.com/_5ENA/status/1080429664428949506
	According to a book I read the other day called "The Intellectual Production Techniques of Engineers," goals should be set in a way that clearly shows achievement and non-achievement. Therefore, my goals for this year are: 1) Attend 12 study groups outside the company. (2) Write 12 articles, regardless of whether they are technical or non-technical articles. I would like to set this year's goal as "1.

https://twitter.com/k_ryukius/status/1080366301422317568
	"A model is a simplified representation to explain how the real world works."
	This book comes with a crazy educational story every few pages.
	"Models are not a perfect match to reality because they are a partial extraction of reality. We say "all models are wrong" in reference to this.
 The value of a model is not how well it matches reality. It is how low cost the manipulation of the model is compared to directly manipulating reality."
 "The physicist Ernst Mach (Mach), whose name remains as a unit of speed, believed that the fundamental principle of science is to save the effort of thought by describing many facts with few concepts. It is called the theory of the economy of thought."

https://twitter.com/sordarrow/status/1079869564815470592
	I am currently reading "The Intellectual Production of Engineers," and I feel that I am not abstracting my knowledge and moving on to the real world.
	But I don't think people who are just starting out in programming will read this book, and even if they do, they won't get the hang of it...
	[nishio.icon]A reference to another blog post about who is and is not suited for programming

https://twitter.com/niszet0/status/1079726924929282048
	I was so relieved when I got around to time management in chapter 2.... Lots to learn.

[I read The Intellectual Production of Engineers - Sonots (Naotoshi Seo) - Medium https://medium.com/@sonots/%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E 3%82%A2%E3%81%AE%E7%9F%A5%E7%9A%84%E7%94%9F%E7%94%A3%E8%A1%93%E3%82%92%E8%AA%AD%E3%82%93%E3%81%A0-a3b789e4946e]

https://twitter.com/choco14t/status/1079340196397670400
	I find it easy to understand things that use food and cooking as metaphors, perhaps because it is something that is done on a daily basis and therefore easy to connect with.
	The Engineer's Art of Intellectual Production says that metaphors are subjective experiences, and when I was reading it, I thought that it would be good to be aware when outputting that we are dealing with food and cooking, events that can be seen as subjective experiences by both the person teaching and the person being taught.

https://twitter.com/tred_72/status/1078440420269383680
	I was relieved to learn in the "Values are verbalized bottom-up" section of the Engineer's Guide to Intellectual Production that it's still difficult to set values-like things from a goal.

https://twitter.com/suzuki6b6569/status/1076774475926986752
	When the infinite is involved, human intuition is often wrong." 'When we judge from a limited perspective, we misunderstand.' / Engineer's Guide to Intellectual Productivity
	There must be other cases where intuition is wrong besides infinity, and I took it as a reminder to be careful whether we are seeing everything with sufficient perspective.

https://twitter.com/hmarui66/status/1075919137967239168
	The Intellectual Productivity of Engineers": What impressed me the most
	 Impossible to do what you are not motivated to do (unless you have other driving forces).
	 Prioritizing tasks is a difficult task in itself
	 Memory retention is higher with (read + recall)*2 times than with (read + recall)*4 times, but the latter is less confident (the former tends to overestimate comprehension).
	I'm sure my impression will change after some time. I will read it again.

https://twitter.com/kangetsu_121/status/1081013545632915456
	The Intellectual Production of EngineersI finally started reading a little bit.
 I have only read one chapter, but I feel it is a tremendous accumulation of experience, research, verification, and practice.
 At the very least, there is a lot of nostalgia and rediscovery of findings from my own past research area of cognitive psychology throughout.
 I never thought I would see Craik&Tulving again in this way.
 Some examples I read with nods of agreement are to make the processing level deeper, even in sutras, etc., or to aim for something that can be achieved with a little effort (with clear criteria), or to compress the amount of information by labeling concepts, etc.
 I would recommend it as an unusual approach to those who want to apply educational psychology.
 When I was a student, I studied the Cognitive Load Theory, a minor theory in Japan that says, in summary, "Cognitive resources are finite, so let's use them for meaningful things.

https://twitter.com/zakky_dev/status/1081157463590596609
	The Engineer's Guide to Intellectual Production up to the table of contents. As usual, I read through the table of contents section to get a rough idea of the book as a whole, and to take out words that interest me. At this point, I have a feeling that this is a good book. Or rather, I feel that it contains information that I should know.
	I've been attacking this in a pretty foolish way, but it seems like a good idea to read this book to review how to attack it. We're doing this in 30 minutes a day, and I hope this book will make that time more intense.
		https://twitter.com/zakky_dev/status/1081563747221565440
		The Intellectual Production of Engineers to page 29. The author's view of the cycle of learning and the information gathering that is an element of the cycle.
  Loop of information gathering, modeling, and practical verification. Gather concrete knowledge, combine it, abstract it, and build it up after verifying whether it is correct or not.
  Motivation. Learning in the workforce requires stronger motivation. To maintain this, consider a cycle of actions and rewards. It is easy to imagine a game tutorial. The story of this area is understandable in terms of experience. Rewards are necessary to maintain motivation. It doesn't have to be monetary.
  Information Gathering. Clear goals are important for learning, so learn from the parts you want to know first. Learn with an achievable goal drive. To do this, figure out where what you want to know is written. A table of contents or chapter headings are useful. Since "I want to know" must have a reason, it becomes goal-driven on its own, and that's convenient and easy!
  I think there is a way to read the table of contents and chapter headings to get the whole picture, and then pick up only the parts I want to know more about and read in depth, but I'm feeling somewhat unsettled.
  https://twitter.com/zakky_dev/status/1081876041893703680
  The Intellectual Production of Engineers, up to page 44. Cycle of Learning, abstract section. Continuation of yesterday's information gathering, I guess, talking about organizing the collected information so that it can be used. Whether it is correct when used is an area of verification that I plan to read tomorrow.
  An abstract is an extraction of the important parts. Therefore, look for commonalities in the collected information. Find patterns. Here is why we collect information from multiple perspectives. Gather multiple pieces of information talking about the same area, compare them, and look for commonalities. Find out what is the same and what is different. Understand the breadth of the common domain.
  I think this area is almost identical to what I have in mind. Like the column on naming patterns and especially like that. Interesting story about Douglas Engelbart. I would like to know more about it.
  https://twitter.com/zakky_dev/status/1082649050908975105
  He talks about the relationship between task size and motivation, training estimation skills, and the characteristics of memory itself.
  If one task is too large, it is not motivated. This is the case when the time required is too long or cannot be estimated, although it can be estimated. In this case, you can apply a time box, such as the Pomodoro Technique, to tick off tasks in hours and process them.
  Estimating skills. Train through repetitive comparison of predictions and actuals. Use the estimate as a forecast, not a promise, and use it as a tool for verification after you are done. Once you know how many minutes you will differ, you will be able to include that in your estimate. As with software performance tuning, you should measure first.
  Memory is fixed by repetition, a topic that may soon have a forgetting curve or something like that. I wonder if it would be effective if we could take advantage of this area for review.
  https://twitter.com/zakky_dev/status/1083019533995012097
  The impact of testing what you learn on your memory and how to use that impact to help you remember. The story that the flow of learning, testing, and reviewing is the easiest way to remember.
  By providing output of what is learned, it is easier to fix that content in the memory. Therefore, outputting the contents of study in the form of a test makes it easier for the contents of study to be retained in the memory.
  About the Interval Repetition Method. A method of learning that uses testing and reviewing that is so effective. Talking about spaced review. Per Leitner system is helpful.
  Another good quality output is to make up your own problems. The more cognitively advanced the task, the easier it is to remember.
  This reminds me of the forgetting curve - I'm not sure what it is. I knew about this area lightly, but the way to incorporate it into learning was subtle. I'll have to think of a good way to incorporate it.
  https://twitter.com/zakky_dev/status/1083376126502723584
  The purpose of reading books, reading style and speed, and the Whole Mind System. The topics of purpose, reading style, and speed are things that I have been feeling a little bit by myself, so I can easily get into them.
  About the purpose of reading. There are three main types: entertainment, information seeking, and comprehension building. Entertainment is out of scope, but information seeking and comprehension building are. In short, it is an explanation of the feeling of "falling into one's stomach" when one reads a book. When you combine the information you have obtained with your own experience and understand it, you will remember that feeling.
  About reading and speed. There are three main ways of reading: reading aloud, following only with the eyes, or not reading and getting information from other routes. When you read a sentence, do you convert it into sound and put it in your head, or do you just understand the sentence with your eyes? The latter is naturally faster.
  About Whole Mind System. A methodology for reading books. Instead of going through a book in one sitting, read it roughly over and over again. The book is detailed step by step as it is read repeatedly. Specific steps are also described in the book. I'd like to try this once. Let's try it once somewhere else for a bit.
  Reading notes. The part about understanding without reading is one of those "is that even possible?" or "Isn't that a lack of understanding?" I'm not sure if it's a good idea or not.
			[nishio.icon] Whether it is insufficient depends on how much you need. I look forward to reading the second half of this chapter, which talks about how to read slowly and how to set a purpose for reading.
		https://twitter.com/zakky_dev/status/1083724555435167745
			Talk about focused reading, using headings, and how to read to build understanding. I feel a strong sense of conviction around forcing myself to slow down when I want to understand, which I do rather often.
			Talk about using headings. When I say "headings," I mean that it is efficient to use headings, diagrams, and bullet points when reading quickly. Headings are often important keywords in the content of the section. They are also easy to use to structure the content of a book.
			Talk about reading to build understanding. When reading, read from where you want to read, when you want to read, and take reading notes. Note down unfamiliar and frequently used words, and use arrows to connect the relationships between concepts, etc. Draw a diagram of the relationship between key words and concepts.
			It is interesting when he explains the difference between the two types of books by mentioning math books and philosophy books. Open books and closed books, huh?
		https://twitter.com/zakky_dev/status/1084103435010564099
			About the task of "reading" and how to organize the information you get. It is interesting that there are some overlaps with what I was doing unconsciously.
			About the task of "reading. If the completion condition of the act of "reading" is placed on "understanding the subject matter," it becomes a difficult task to accomplish. Therefore, setting a goal to read in a time-delimited manner or to make reading notes will help maintain motivation.
				[nishio.icon] Interesting to read "today's 30 minutes" separated by time.
			What should be the objective in reading to fix in memory? Define an achievable and clear objective, since "to fix in memory" is a difficult objective to achieve. For example, making a map of knowledge and creating materials for review are achievable and clear objectives.
			How to organize the information obtained. Includes the write down method and the KJ method. As a rough image, output the information in the brain onto a piece of paper, categorize the output, name the categories, draw relationships between items in the categories, and write a sentence to explain. I guess. I think you did something similar when you were writing a sentence or something?
			It's quite a lot of information in my brain to output onto 100 sheets of fusen.... Well, it seems that you don't have to do it all at once, so you might as well take it easy and give it a try.
		https://twitter.com/zakky_dev/status/1084424597707997184
			Up to page 169. on KJ method grouping and table-top creation. A method of compressing information that is too much, roughly speaking. Interesting discussion of the larger disadvantages of classification by existing or pre-prepared criteria.
			Group Organization. Classification phase of too much information. The information output on sticky notes (and so on) is grouped according to a rough criterion of what seems to be somewhat related to the information. After that, if the categorized stickies cannot be concisely explained in writing, the categorization is broken up and redone. Focus on the context, not the attributes of the information, I think.
			About making a nameplate. For each pile of fusen created by the group formation, make a nameplate that describes the group completely. In a word, what is the pile of labels? This compresses the information and makes it easier to handle. The disadvantage is that detailed information requires decompression.
			A nameplate is a frame, in other words, so if you do it beforehand, you're probably going to try to force it to fit into that frame. It is better to do it in a bottom-up manner, and then later realize, "Oh, this is what it's all about.
		https://twitter.com/zakky_dev/status/1084767008611135488
			Interesting to hear that once you've organized something using the KJ method, you have to go back and redo it after some time. It sounds like you are reorganizing the models in your brain.
			Talk about outputting information relationships. Once the group formation is complete, we enter the phase of charting and writing the relationships of the fusen. Spatially arrange the relationships between groups, then break the groups apart, spatially arrange the relationships between nested groups, and repeat. Until finally we get to the fusen level. I wonder.
			After the spatial arrangement is completed, add arrows, marks, etc. to explain the relationship between the lines and groups. This is the end of spatial information organization. Next, once the spatial description is completed, it should be put into writing. When the information is put into writing, rigor that was overlooked in the spatial explanation is required. This is where the relationships can be reviewed again.
			The phases of coming up with ideas. He uses several idea generation methods as examples and defines three phases as common parts. Cultivate, Sprout, and Nurture. The three phases are: gathering and organizing information, waiting for an idea to come to mind, and examining and revising the idea that comes to mind. The sprouting phase is unmanageable, which is very realistic. ......
			You mentioned that if you come up with an idea in the plowing phase, you should record it just in case, but won't this become a frame in the budding phase? No, well, I understand the need for this kind of safeguard when there is a time limit.
		https://twitter.com/zakky_dev/status/1085185584086171654
			Up to 200 pages. I couldn't concentrate at all. ...... The information gathering phase of the three phases of idea generation. Explore yourself facing the problem and use verbal and nonverbal to retrieve information.
			Preconceptions and frames are troublesome when gathering information. It is important to get rid of them, but we tend to do it unconsciously, so practice on ourselves first. Be able to handle verbal and non-verbal information about what you yourself are feeling when you are confronted with a problem.
			When verbalizing nonverbal information, frameworks such as value hypothesis sheets are useful. Be careful not to overuse them, as they can become cognitive frames if used too much. When verbal information is converted into nonverbal information, associative games in the nonverbal domain can expand ideas. Metaphors are useful for association games.
			Note that the words linguistic and nonverbal themselves are just my own words and do not appear in the book. Well, this book report itself is filled with such things, but just in case. In short, it is an act similar to making a nameplate. In order to put compressed information in my head, I am converting it into short words that are easy for me to understand.
		https://twitter.com/zakky_dev/status/1085558590306320385
			Up to 220 pages. Talks about the language of the unverbalized senses and refining and nurturing ideas. I like the story around public and private language. I guess I'll have to read Maurice Merleau-Ponty's book.
			There are physical sensations prior to verbalization, the "feeling of being close to a solution" and the "feeling of being far away from a solution" that one feels when confronted with a problem and thinking about a solution. As a methodology to put these into clear words, TAE introduces a methodology of verbalization using a dictionary. It is a story about thinking in terms of the difference between public (dictionary) language and private language.
			When nurturing an idea, it is important to know what purpose and context the idea is coming from. This will change the place where it should be nurtured. Linstar's MVP is a good example. It is also necessary to seek the perspectives of others, not just yourself, when nurturing. This is because there is a possibility that ideas will freeze and deviate from the objective.
		https://twitter.com/zakky_dev/status/1085855450585681920
			Read The Intellectual Production of Engineers. A story about what to learn and how to operate oneself. It just explained the value of someone who knows this and that, which I had somehow been thinking about. The value of being a bridge between individuals and organizations with outstanding skills.
			What is the right thing to learn? Basically, learn what you want to learn. If you can't find it, then learn something that solves a familiar problem. For working people, for example, learn about work efficiency. If you make your work more efficient, you will have more time on your hands. Use the time you have taken to make more time for investment.
			What I had been vaguely thinking about became clear words, and I felt it hit me. I knew there were people who thought the same thing. It was like an answer to my question, and it was somewhat reassuring.
			I wish I had read this book when I was a student, preferably a recent graduate. The more you know about how to read a book efficiently and the earlier you know it, the more sense it makes. Personally, I found the book especially useful, especially the part about how to read books efficiently and how to set goals so that you don't give up on acquiring knowledge halfway through the book.


https://twitter.com/shin_matsuzaki/status/1081381921299394560
	Using the KJ method learned in "The Intellectual Production Techniques of Engineers," he discusses the role and positioning of the idea of automation, and other topics.
	[nishio.icon] Personally, I think "that's a lot of information per piece", but I thought it would be good to try and find a way that fits your needs including that. Reference: [kozane].

https://twitter.com/kangetsu_121/status/1081447053648003073
	The book I want to understand is
	1. read through with lines and comments
 2. read while writing notes mainly on the part of 1.
 3. reference at the time of output
 I'm of the school that reads three times in a single reading, and I was a little concerned about the slowness of the reading, but I was a little relieved when I saw the variety of readings presented.
 This book classifies reading into three types: "entertainment," "information seeking," and "comprehension assembly," and my reading above is up to 2 for information seeking and 3 for comprehension assembly. Of course, there are things that I can't do perfectly due to time constraints (e.g., materials for documents with deadlines).
	In terms of line drawing and notes, the Kindle was a good choice. Highlighted sections where notes can be added are grouped together in a notebook, and the corresponding page is displayed on the same screen so that the context can be checked.
 I think the ease of editing is probably related, but I also find it interesting that paper tends to narrow down the lines and is used differently from the Kindle, which draws a lot of lines.
 	[nishio.icon]Even though I haven't read much on my Kindle (I'm just not used to it), I thought it would be interesting to see it as a tool for "creating a document to look back on later" by reading while drawing lines.
 Reading the book reminded me of something called the [expertise reversal effect]. For example, a person who has extensive knowledge of the subject matter of a book has sufficient understanding of technical terms and concepts, so it may be more efficient to omit them rather than to explain them in detail. In this area, it is important to have a schema of subject knowledge properly assembled in the brain (I miss it).

https://twitter.com/kangetsu_121/status/1081899873471913990
	Read: The Intellectual Production of Engineers.
 The final chapter, "How to Decide What to Learn," gives suggestions on what to learn and how to learn it under the constraints of a single life.
 For example, they may not specialize in a single area, but rather enhance their own uniqueness by crossing over into other areas, or accelerate their learning by becoming a leader in a certain area at an early stage and creating a state where information and experience can be gathered.
 As someone who was forced to choose between liberal arts and sciences in high school and was restricted in class selection, who tended to criticize literature and philosophy solely from the standpoint of practicality, and who objected to the (uncritical) selection of majors based on employment assumptions, this last chapter was very sympathetic. The College of Liberal Arts was a learning experience for me. (If the above choice is the result of your own judgment, I have no objection.)
 I believe that people who are in the top class in one area and people who are in the above-average class in multiple areas are each uniquely valuable, although there is no simple comparison.
 In the figure in the book with the area on the horizontal axis and the amount of knowledge on the vertical axis, I wonder if that area could be the basic value of value.
 	[nishio.icon] [Value is determined by the receiver, not the sender].
	The difficulty is that the domain-specific type is easier to measure competence from the outside, so there is less concern (in many cases?) about the means to realize and make known value. The most important thing is that the value of the product is not only measured but also known.
 When competing on the basis of the sum of the parts across domains, it is necessary to pay "more" resources to how they are combined to realize and disseminate value.
 The difficulty in finding and evaluating jobs is also related to this area, and I think it would be a wasteful reality.
 Although it is labeled "for engineers," I recommend it to anyone who wants to learn, create ideas, organize output, and introduce new perspectives. I too must not only read, but also properly cultivate and produce on a daily basis.

https://twitter.com/eagle_raptor/status/1082451322345934848
	It was more of an INPUT story and felt a little different from what I was looking for.

https://twitter.com/tomiokasyogo/status/1082254684948127744
	It says "for engineers," but it could apply to anyone who wants to run and learn on their own.
 I don't know how to read a book other than reading it through, so I need to find another book to learn a little more about the book reading part.

https://daiksy.hatenablog.jp/entry/2019/01/03/134735
	I have a lot of unexpected interruptions and small bits of work, and I cannot concentrate on something for one or two hours at a time. I was wondering how to efficiently balance input and output under such circumstances, and this book was very helpful.
	Various learning and information organization practices were usually done without knowing it.
	The "things we usually do without being conscious of it" are carefully organized again, and it is shown that they are effective.
	Recommended book for those who are struggling to learn in a small amount of time.

https://twitter.com/k_ryukius/status/1083363907605938176
	(Link to Pomodoro introduction site)
	I tried it today and it looks good.
	It seems like a good way to divide the end of a project by the amount of work that has been completed and the time for the work that has not been completed.
	And by the way, the Pomodoro Technique story is another one I tried because I saw it in "The Intellectual Production of Engineers".

https://twitter.com/mstn_/status/1083352678082568192
	1The concept of pomodoro was an eye opener.
	I was thinking how great it was that the seniors could focus for so long.

https://twitter.com/spinute/status/1083931466554200064
	I'm about 50% of the way through "The Intellectual Production of Engineers," and I want to swallow it whole because it's a collection of ironclad intellectual production know-how that I've heard of somewhere, and the explanations and examples are so good.
 I even feel like I should drop everything I'm reading and read this book first, because this kind of [meta-knowledge] acquisition works with [compound interest].
 I think this book will set the next standard in this field, a field where several great books were published in the age of pen and paper, and as a result, these books are still being read today, although some parts are old. (The foreword also says that this book is intended to be Jiro Kawakita's book for the next 50 years.)
 It is applicable to intellectual activities in general, like "The Art of Intellectual Production" or the KJ method, but some of the explanations and examples are written with software engineers in mind, so it may not be easily accessible to people in other fields (?).

https://twitter.com/mentor_makeup/status/1083632159670206464
 Putting concrete experiences (e.g., data) into abstract concepts, which are then demonstrated and verified
	Looping this gets you as close to wisdom as possible.
	Let A be the abundance of some data, find patterns in that data. (intuitive thinking), combine the pattern with your experience and find an empirical law (logical thinking), demonstrate and verify
	Connecting the knowledge of Z with the knowledge of Y and finding the gap between the two is the creation of new knowledge

https://twitter.com/anzu_mmm/status/1081407320066711552
	I finished reading "Start with an Issue". It was a book that helped me to verbalize and organize what I was doing in my head (the same was true of the intellectual production techniques of engineers). If I had read this book a little earlier, I would have been able to write my college reports and so on better. I'm glad I was able to read it before I started working, so I'd like to read it again before making a presentation or something.

https://twitter.com/anzu_mmm/status/1085945944103804928
	There's a sense that a column on the technology behind coding and the intellectual production techniques of engineers is being laid out.

[I read "The Intellectual Production of Engineers" - sleep at night http://kyabatalian.hatenablog.com/entry/2019/01/18/005823]

https://twitter.com/nichijou24/status/1085761516454928385
	I established my reading method after reading "The Engineer's Guide to Intellectual Production" and I'm really glad I learned it. In my case, making a mind map changes the purpose, so I don't do it, but making questions and reading is really good. It will be similar to memorizing test questions in modern literature in a very humble way.

https://twitter.com/hogefugapiyo99/status/1085555150209437697
	I just finished reading Hiroshi Yuki's Programmer's Mathematics. I became an SE with a liberal arts background and no programming experience. I have managed to get by on my own for the past five years, but I regret that I should have picked up this book earlier. I have been on the verge of a red mark in mathematics since junior high school, and I have always had a bad feeling about mathematics, but it has been wiped out.
	In a book I read a while ago on the intellectual production techniques of engineers by Yasukazu Nishio, he writes, "Don't read mathematical books without understanding what you don't understand. I am not sure if I understood it completely or if I can explain it in my own words....
	I will also read Math Girl's Secret Notebook. Let's become a member of society who can handle numbers properly and who can think mathematically and solve problems with his/her own mind. Let's do our best.

https://twitter.com/ryoutaku_jo/status/1084732999151702017
	Read "The Intellectual Production of Engineers" and put it into practice today.
 Set clear goals.
 Learning from what you want to know
 Learn only what you need now (YAGNI Principle)
 Focus on a single task/separate time (Pomodoro)
 Review when you forget.
 Simple to remember in separate
 The book will be read in stages.
	[Making the most of "The Intellectual Production Techniques of Engineers" - Ryotaku's Diary of an IT Engineer https://ryoutaku-jo.hatenablog.com/entry/2019/01/14/174139]

https://twitter.com/UGKGbrothers/status/1084686227373096960
	Creating Ideas.
 Creation is subjective
 Twist an objective explanation after the fact.
 Both subjective and objective are important. It is necessary to be aware of which point of view you are thinking from.

https://twitter.com/oliza9/status/1084449783224266752
	Programming education seems to be trying to drop programming into a format that teaches immutable knowledge, which is kind of overwhelming. Modern programming is no longer about learning things that keep changing, and I wonder if it is possible to teach learning techniques that do not overly adhere to such knowledge.
		I think Yasukazu Nishio's book "[The Technology Behind Coding]" is very good.
			https://twitter.com/aike1000/status/1084595258346729474
			The Technology Behind Coding" is a good book that takes programming to a level of abstraction and makes it easy to understand. The "Engineer's Guide to Intellectual Production" is also a generalized way of learning and is a unique way to deal with the ever-increasing and ever-changing software technologies that are essential knowledge.

https://twitter.com/SPIRYTUS_alc96/status/1084445375111487489
	Question the obvious.
 The Intellectual Production of Engineers
 [Start with the issue.]
 I don't know if it's really true or if I'm just seeing things from my own consciousness, but there is some overlap.
 In other words, I think that's where the spirit is now.

https://twitter.com/1p038/status/1084380733261533184
	I thought I had read somewhere recently about an efficient way to remember tuple in no particular order, but it was the "20 Rules for Structuring Knowledge" introduced in "The Intellectual Production of Engineers".

https://twitter.com/spinute/status/1083931466554200064
	I'm about 50% of the way through "The Intellectual Production of Engineers," and I want to swallow it whole because it's a collection of ironclad intellectual production know-how that I've heard of somewhere, and the explanations and examples are so good.
 This kind of meta-knowledge acquisition works in compound interest, so I even feel like I should drop everything I'm reading and read this book first.
 I think this book will set the next standard in this field, a field where several great books were published in the age of pen and paper, and as a result, these books are still being read today, although some parts are old. (The foreword also says that this book is intended to be Jiro Kawakita's book for the next 50 years.)
 It is applicable to intellectual activities in general, like "The Art of Intellectual Production" or the KJ method, but some of the explanations and examples are written with software engineers in mind, so it may not be easily accessible to people in other fields (?).

https://twitter.com/tomotaka_ito/status/1093748153335967746
	I enjoy reading books and learning about how smart people live intellectually. I get the impression that it is not limited to the acquisition of engineering knowledge, but can be applied in a wide range of areas, and is a kind of instructional guide to how to live a certain way.

https://twitter.com/bluecrow2/status/1093736723169701888
	The combination of Sakura Editor's free cursor function and the drag-and-drop function for selections is too convenient, just like sticky notes. The fact that the KJ method in Chapter 5, "How to organize your thoughts" can be completed in a text editor without sticky notes or special tools is magical and awe-inspiring. #KJ method

https://twitter.com/otakumesi/status/1093692271931797509
	Reread the "How to Read a Math Book" in the Engineer's Guide to Intellectual Production.
 	The study of "using" mathematics is learning to use the definition of mathematics itself as a premise to describe a phenomenon (without the need to question the definition).
 	Math departments are learning math so that they can question even the definitions.
 I noticed a difference that
	This is the same with learning programming.
 If you just want to use the framework, just learn the individual functions or remember the I/O for each method provided and use it
 But if you want to work on the framework itself, you need to know the exact definition (implementation)
 If you think about it, "Why is that so?" and being able to question the assumptions of the framework by being able to answer that question is not limited to math or programming....

[I read "The Intellectual Production of Engineers" - Masteries https://papix.hatenablog.com/entry/2019/02/05/002542]

https://twitter.com/Bitte_Schon/status/1093184191062171648
	I was glad to read in the book "The Intellectual Productivity of Engineers" that I should copy sutras.
 When learning a new field, it is always necessary to copy the sutras.
 When I was studying for the exams, I used to copy the scriptures as fast as I could, so much so that my stack of law answers would reach the ceiling.

https://twitter.com/Jitian_queer/status/1094077828159524864
	As this book I read the other day says, when you gain knowledge in a certain field, information and questions about it will come to you, and you will be able to learn more.

https://twitter.com/edvakf/status/1093173928132919302
	I was saved by the negativity in "The Intellectual Production of Engineers" about "if you're going to talk about 00, you should at least read xxx". I'll take that as a good thing, since I was studying something else on my own time. People's time is finite, and the reading experience depends a lot on people's prerequisite knowledge and experience, and I don't remember everything anyway.
		[If you're going to talk about it, read it.]
			The person who tells you to read it must also have some objective, so it seems like a good idea to try to come up with a drop-off point where you can achieve your objective at a lower cost. If the person who is told to read it has room to compromise, it would be a good idea to talk about what their objectives are and how much you are prepared to spend in the immediate future.

[[Book Review]] To all young engineers, have you read "The Intellectual Production of Engineers," the culmination of 10 years of research? - The Daily Life of a Virtual Surfer https://www.virtual-surfer.com/entry/2019/02/05/190000]

[The first book that should be read by those who want to make the most of their reading and accumulate it (2) ◆Yasukazu Nishio, "The Intellectual Production Techniques of Engineers": Books, Entrepreneurship, and Community Development and http://ourtown.seesaa.net/article/463984519.html]

https://twitter.com/teteishi_8/status/1091996938616983553
	I can really relate to the part about reading math books.

https://twitter.com/eityans/status/1091504314562994176
	It's like an engineered version of [Organizing Thoughts].

https://twitter.com/k_ryukius/status/1090800399110483968
	In the clear file organization method, you write numbers in large letters on clear files, place the documents in the clear file, and the correspondence between the number and the contents is digital data."
 The Intellectual Production of Engineers, p. 173
 Digitizing an index of paper data, the one I've been meaning to do and haven't: ...............

https://twitter.com/katsuhisa__/status/1090238387577995265
	I just finished reading "The Intellectual Production of Engineers. The language of meta-learning is amazing.
 I was personally impressed by the reference to prioritization.
 The idea of how to confront uncertainty was helpful.

https://twitter.com/knsmr/status/1089438436174356483
	I thought it was amazing to see the YouTube channel of a Cambridge medical student. They have optimized their learning methods based on psychological research findings on the iPad. The gist of it is twofold,
  - Spaced Repetition
  - Active Recall
 increases memory retention in unit time by several times. Underlining and reading over and over is an inefficient way to study.
 https://twitter.com/deadcalm/status/1089944523143208960
 	The one in "The Engineer's Art of Intellectual Production." It is to repeat, to "remember," while allowing time. That's how Anki learned it.
  I'm trying to start learning Chinese with it now.

https://twitter.com/mofuya/status/1089014961286737920
	In "The Intellectual Production Techniques of Engineers," which you recommended to me, Dr. Iwanaga specifically talked about how clarifying the goal motivates us.
 That's how I decided that I would first do 5 minutes at the same time for 7 days in order to make exercise a habit.

[The Intellectual Production of Engineers [Book Review] - YU2TA7KA's BLOG http://www.yu2ta7ka-emdded.com/entry/2019/01/26/080352]

https://twitter.com/urimaro/status/1087656290233413632
 Perhaps because I read the book with a lot of pauses, I felt gassy.
 Either it will disappear, or it will swirl around like a galaxy and give birth to stars...
 After reviewing it, I will try to read it again as I recall it after I have had time to do so.
 I reread chapter 4 to improve my reading efficiency.
 More than 3 minutes/page, either less than or equal to...
	 Read more than once
	 Be aware of key points to read
 I believe that the creation of materials for review is not only a literal review, but also the process of reassembling itself.
 The books seemed to focus more on review.

https://twitter.com/tH7WW349Zvom29E/status/1087121322927218688
	When I read Ryota Yamasato's "The Genius Gave Up," I think it is a very engineering way of thinking. He has realized and put into practice what is written in Mr. Yasukazu Nishio's "An Engineer's Intellectual Production Technique" by himself.

https://twitter.com/SPIRYTUS_alc96/status/1086582080849436673
	I've been wondering for a while, "Can you really prioritize? I have been wondering for a long time, "Can I really prioritize?

https://twitter.com/takatsudo/status/1094651154720382977
　After reading The Engineer's Guide to Intellectual Production, I was able to set specific goals for all the study-like things I have been doing for myself. I would recommend this book to anyone who wants to try a new field of study. Good stuff.

https://twitter.com/ymym3412/status/1094667550699380737
　I was impressed by the way he explained the psychological aspects of human beings, such as "too much information is painful, so we compress it."

[Notes from reading "The Intellectual Production of Engineers" - Heybu https://ottijp.hatenablog.com/entry/2019/02/13/enginners-Intellectual-production]

[How to get motivated--I read Chapter 2 of "The Intellectual Production of Engineers" - natu_0710 - Medium https://medium.com/@natu/%E3%82%84 %E3%82%8B%E6%B0%97%E3%82%92%E5%87%BA%E3%81%99%E3%81%AB%E3%81%AF-%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E7%9F%A5%E7 %9A%84%E7%94%9F%E7%94%A3%E8%A1%93-%E7%AC%AC2%E7%AB%A0%E3%82%92%E8%AA%AD%E3%82%93%E3%81%A0-235078d24917]

https://twitter.com/chigichan24/status/1095781299510423552
	It is very good because it verbalizes my theory that I had been processing with my brain sensuously.
