Conversation Log: State Transitions
	What would you like to see happen in this conversation?
		I'm on a train ride to an unfamiliar place, so I can't do any focused work, and I want to discuss design issues.
	What type of discussion is that?
		I had written the base program for the state transition mechanism many years ago, and I was quite confused when I had to change the specification to say that the program is silent immediately after a reset, so I wondered how I should have done it.
	What type of immediate post-reset is that immediate post-reset?
		When I reset, the state also returns to its initial state, but until now, right after the reset, I've been in a state of waiting for the answer to "what do you want to happen?" and waiting for an answer. Now it is in a "not responding to input" state.
	Is there anything else about immediately after that reset?
		It is a bug that remembers the statement even though it is not responding to input.
	What type of input is that?
		(Wait, is it weird to sleep on a reset in the first place...)
		(Well, I'm not talking about what such a specification should be, but rather about how it could have been better implemented.)
		Sometimes users want to talk to the system, i.e., they input information expecting a response, and sometimes they input information to record their thoughts for the time being, and sometimes humans talk to each other when bots are placed in such a multi-person environment.
	Is there anything else about that input?
		Should be logged regardless of whether the system handles it or not
	What type of system is that?
		A system for asking questions
	Is there anything else you can tell us about that system?
		The purpose of why there are state transitions is, in the first place, to "develop the symbols in the user by asking questions" and "ask about the relationship between symbols once they are sufficiently developed.
	What is it that you value?
		It would be good if we could create value in a way that is not possible with a one-shot, by moving the user's state of mind in a positive direction through many steps of interaction, rather than through a system that asks questions in a medullary reflexive manner in response to a single user input.
	What is the relationship between its input and the user?
		The user produces the input, and since the user's internal state cannot be directly observed, it must be inferred from the input made by the user.
	Is the input the same as the user? Is it different?
		not match the correct (answer, etc.)
	What happens to the user at the time of input?
		When the user types, the user sees his or her unspoken thoughts put into words, and the concretization of the thoughts occurs.
	What happens to the input when that user
		(The bug that makes me ask this question, I'd better get on with fixing it...)
		User-generated
	What is between that user and the input?
		Keyboard?
	What is the relationship between the user and the question?
		Questions work on the user's mind, and when questions are asked, humans try to think about what is being asked, and this allows the system to control the focus point of human thought.
	What is the relationship between its users and the system?
		We believe that [users are more productive as a whole when combined with the system than in the raw state].
	Is the user the same as the system? Are they different?
		Though different, the two different components combine to form a new system as a whole. I didn't call these two systems distinct.
	What happens to the user when that system is in place?
		(I'm getting away from talking about state transitions...
		(It is correct to ask a concrete question to an abstract word, but if you ask a relationship question to an abstract word, it becomes more and more abstract, and you should make it concrete enough before asking.
		(Hey, so the word now has a scalar value for "importance", but should it have an independent "concretization progression"?
		(I've got an idea for an improvement where it's not a state transition lol.
		(Arrived at destination station.

		reset
		Listen first.
	Yes, sir.
		The system is designed to repeatedly ask questions about the keywords now, and as the keywords appear in the user's statements, their importance increases. When there are multiple symbols with a certain level of importance, the system transitions to a mode that asks about the relationship between symbols, but this is not the right place to begin with. The behavior should change by a factor of the specific degree of development of the symbols.
	priority (e.g. traffic)
		After the transition, we ask a question related to a word that is not specific because, as with the mode of the concretization question, we simply assume that a frequently occurring word is important and make it a candidate.
	word
		Abstract words tend to be used vaguely in various contexts, and people think they know what they are talking about even though they don't understand the specifics. This bias is not good. It should be corrected in the direction of more concretization.
	bias
		(As a reminder that the event to which we are moving is about to start, we were originally asking for advice on how to modify the design of the state transitions, but since we found that the current state transitions themselves needed improvement, we concluded that it would be better to create new ones to replace the ones we wrote several years ago, rather than to modify the ones we wrote several years ago. (Conclusion: I felt it would be better to create a new one and replace it, rather than to modify the one I wrote a few years ago).