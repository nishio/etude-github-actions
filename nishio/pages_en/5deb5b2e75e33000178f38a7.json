putting a moratorium on changes
How Regroup works now.
	If you don't know the URL, you can't view it.
		→Knowing the URL for browsing = having browsing privileges
	Issue a separate URL for editing
		→Knowing the URL for editing = having the authority to edit

This is the same mechanism as [Google Docs] etc.
It's also a need that people who start using [Scrapbox] often mention.
	Example
		Can't you just show one page in the PRIVATE PROJECT to others?" →No, you can't.
		Can't you just give someone else editing privileges on one page in a public project?" →No.
	I guess Scrapbox is a design philosophy that emphasizes linking within a project.
As parallel work becomes more and more popular, it will become increasingly difficult to use a design in which access rights to all documents are tightly coupled with "whether you are a member of the project or not".
	Example
		[single channel guest on Slack].
		[kintone guest space].

Casual access rights control of "know the URL or not
	Not just "view" and "edit."
	For example, what if there is an editing war with more than one person with editing privileges?
		→ In the case of Wikipedia, "protection" takes place
			[Wikipedia:Editorial battle - Wikipedia https://ja.wikipedia.org/wiki/Wikipedia:%E7%B7%A8%E9%9B%86%E5%90%88%E6%88%A6]
			[Wikipedia:Protection request - Wikipedia https://ja.wikipedia.org/wiki/Wikipedia:%E4%BF%9D%E8%AD%B7%E4%BE%9D%E9%A0%BC]

So I thought it would be nice to have the power to stop editing.

Low priority, at least not necessary until the emergence of a Regroup Map edited by multiple people.
[pRegroup2020]
