Hatena2012-06-10
code:hatena
 <body>
 *1339256390* Host Sphinx output in Github Pages
 I was hesitant to do it because I thought it would be difficult, but it was surprisingly easy, so I made a note of it.
 
 1. simply placing the Sphinx output files will sadly ignore _static, etc., so you can <a href='http://d.hatena.ne.jp/kuma8/20110925/1316937363'>github pages with Sphinx-generated Documentation generated by Sphinx is published on <a href=''>github pages. - Install sphinxtogithub, referring to <a href=''>Diary of kuma8</a>. (← surprisingly easy point 1)
 2. make clean and make html again to confirm that there is no problem.
 The sphinx code to generate HTML is now managed in this repository, so we don't want to empty the work tree at hand. So, clone the same repository in the repository. By the way, the project root is learn_language, and we are in the sphinxdoc directory in it.
 
 >||
 $ git clone https://github.com/nishio/learn_language.git
 ||<
 
 4. create an empty branch. there are some websites that show you how to do this, which smells like bad know-how, like rm .git/index, but it smells so bad that I'm going to skip it and follow the official website <a href='https://help.github.com/articles/creating- project-pages-manually'>Creating Project Pages manually &#183; github:help</a>. (← Surprisingly easy point 2)
 
 >||
 $ cd learn_language 
 $ git checkout --orphan gh-pages
 ||<
 
 5. an empty branch is created. I'm using zsh to display the git status, and I noticed that it's in some sort of added state.
 >||
 learn_language[*gh-pages*added]$ git status
 # On branch gh-pages
 #
 # Initial commit
 #
 # Changes to be committed:
 #   (use "git rm --cached <file>..." to unstage)
 #
 #	new file:   README.rst
 #
 learn_language[*gh-pages*added]$ ls                                                    
 README.rst
 ||<
 
 Oh, you are on the verge of making your first commit. Let's turn it off then.
 >||
 $ git rm -f README.rst
 ||<
 
 6. build Sphinx in the above directory, copy the output, add, commit and push.
 >||
 $ cd ..
 $ make html
 $ cp -r _build/html/* learn_language
 $ cd learn_language
 $ git add .
 $ git commit -m "..."
 $ git push origin gh-pages
 ||<
 
 7. check <a href='http://nishio.github.com/learn_language/'>http://nishio.github.com/learn_language/</a>. Yeah, it looks fine. (← Surprisingly easy point 3)
 
 8. go back to the outside repository, the directory you just git cloned is untracked, so add it to .gitignore.
 >||
 sphinxdoc[*develop*untracked]$ git status
 # On branch develop
 # Your branch is ahead of 'origin/develop' by 1 commit.
 #
 # Untracked files:
 #   (use "git add <file>..." to include in what will be committed)
 #
 #	learn_language/
 nothing added to commit but untracked files present (use "git add" to track)
 sphinxdoc[*develop*untracked]$ echo learn_language >> .gitignore
 sphinxdoc[*develop*modified]$
 ||<
 
 9. add a target like this to the Sphinx Makefile
 >||
 deploy:
         cp -r _build/html/* learn_language
         cd learn_language; \
         git add .; \
         git commit -v; \
         git push origin gh-pages
 ||<
 
 10. rewrite a little and try make html and then make deploy. It went fine. (← surprisingly easy point 4)
 
 We are happy for you.
 </body>

[Hatena Diary 2012-06-10 https://nishiohirokazu.hatenadiary.org/archive/2012/06/10]