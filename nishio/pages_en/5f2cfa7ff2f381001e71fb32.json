Eigenexpression Extraction and Keyphrase Extraction
[https://gyazo.com/bf9ee01e448c03397c463e522060c2b3]
When viewed as [series labeling
　In [Eigen Expression Extraction], labels are assigned to "the beginning of an eigenexpression" and "the range of eigenexpressions that follow.
　The algorithm in [Generate Stop List for RAKE] in [Keyphrase Extraction] counts the number of times a word is "in a keyphrase" or "next to a keyphrase".
　　Mapping to series labeling would be labeled "keyphrase range" and "keyphrase adjacency".
　　Personally, I think it would be better to distinguish between "right neighbor" and "left neighbor".

Which labeling is better?
　As for keyphrase extraction, I think it's more straightforward to label around the latter keywords.
　What do humans do when they explicitly state that a sentence is indistinguishable from a ground sentence and "it's a keyword"?
　　For example, enclose in brackets
　　Conversely, even if other conditions are the same, the probability of a key phrase being a key phrase is naturally increased in the area enclosed by brackets.
　　With the latter labeling, the " " token naturally corresponds to "the label to the left of the keyword.
　What is the reason why eigenexpression extraction often uses the former labeling?
　　Eigenexpression may be contiguous.
　　The method of labeling the perimeter is impossible.

PS
[https://gyazo.com/0d4a9b4df47f33e77eceeb1fb27b739a]
　I was comparing 2-1 and 3, but there are more detailed steps.
　4 can identify consecutive keywords.
　5 can distinguish "words that do not appear at the end of keywords but often appear within keywords" such as "of

[Start-End Labeling]
