Recursively update the position of child elements of a group
code:ts
 // Apply the position change diff to all children
 const updatePosition = <T extends StateItem>(item: T, diff: paper.Point): T => {
   const newPosition = item.position.add(diff);
   if (isGroupStateItem(item)) {
     const newChildren = item.items.map((x) => (updatePosition(x, diff)))
     return {
       ...item,
       position: newPosition,
       nameplate: updatePosition(item.nameplate, diff),
       items: newChildren,
     }
   } else {
     return {
       ...item, position: newPosition
     }
   }
 }

[example of generics needed].
