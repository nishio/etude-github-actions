Design skills backed by programming skills
>[nagise https://twitter.com/nagise/status/1431044013491068929]: Agile development, I think, when you actually try it, you need skills to do it.
>First of all, you need solid programming skills.
>Design skills backed by programming skills are required.

>[nagise https://twitter.com/nagise/status/1431044650794569730]: Because if you can't make it first, you can't talk about it.
>When programming, I feel like I need to have programming skills to be able to design in a native programming language.
>I'm not saying don't make documents.

>[nagise https://twitter.com/nagise/status/1431044924959387648]: When writing an English composition, it is the methodology of those who are not good at English to create a draft in Japanese and translate it into English ....... If you are good at English, you should write in English from the beginning and revise in English.

>[nishio https://twitter.com/nishio/status/1431073960930656262]: 面白いたとえ。
>I guess you are saying, "When programming, writing design documents in Japanese and translating them into programming languages is a methodology for people who are not good at programming languages, while people who are good at programming languages write them in programming languages and refactor them from the beginning.

>[nishio https://twitter.com/nishio/status/1431075909260304384]: That's true if you're prototyping alone, and like TS said yesterday, "When working in a team, each person has a different level of language proficiency, what should be the common language of the team? to be the common language of the team?" I guess it comes down to "what is the common language of the team?
	TSの話
	>[__gfx__ https://twitter.com/__gfx__/status/1430738475469271050]: wrote ！！！！！！！ / 2 comments b.hatena.ne.jp/entry?url=http... "Consider a realistic setup for "TypeScript without hard work" ─ Use 4 levels of severity to overcome TypeScript fatigue! - Engineer Hub｜Careers for Web Engineers!" htn.to/3Vsiz5h9B3
 >[nishio https://twitter.com/nishio/status/1430754762861936640]: Looking back, I started using TypeScript at level 2, then got tougher as I got more familiar with TypeScript, and now I'm at level 4! I guess twitter.com/__gfx__/status...
 >[nishio https://twitter.com/nishio/status/1430755905029562368]: I think it would be hard to develop a team with different levels of knowledge because the comfortable settings vary depending on the level of knowledge.
 >[objectxplosive https://twitter.com/objectxplosive/status/1430757729199603717]: 制限が厳しくても大丈夫になる… twitter.com/nishio/status/… pic.twitter.com/QRlQ1MXLZE
 >[nishio https://twitter.com/nishio/status/1430812100343959555]: When you go from slum to orphanage to good rich adopted child in the story, instead of "become okay with strict restrictions," at first you're not happy because you're told "don't eat with your hands, use a knife and Use a fork" and you're not happy, but once you get used to using it, you're like "this is more comfortable, I don't want to go back even if they say I can go back" twitter.com/objectxplosive...

---
>[nagise https://twitter.com/nagise/status/1431042688409739265]: It's standardized, there's documentation, and anyone can develop agile if they read it! If it were that simple, we wouldn't have any trouble implementing Agile. ......

>[nagise https://twitter.com/nagise/status/1431044013491068929]: Agile development, I think, when you actually try it, you need skills to do it.
>First of all, you need solid programming skills.
>Design skills backed by programming skills are required.

>[nagise https://twitter.com/nagise/status/1431044650794569730]: Because if you can't make it first, you can't talk about it.
>When programming, I feel like I need to have programming skills to be able to design in a native programming language.
>I'm not saying don't make documents.

>[nagise https://twitter.com/nagise/status/1431044924959387648]: When writing in English, it is the methodology of people who are not good at English to create a draft in Japanese and translate it into English ....... If you are good at English, you write in English from the beginning and revise in English. twitter.com/nagise/status/...

>[nagise https://twitter.com/nagise/status/1431046692955033600]: You have to do it in the program language, and you can't do it while thinking in Japanese every time you do it.
>Programming professionals need to be trained to the point where they can speak programming languages fluently.

>[nagise https://twitter.com/nagise/status/1431048203764322306]: agile development means
>1) Highly Testable Design
>2) Techniques for writing appropriate automated tests
>3) Infrastructure to make them possible
>The foundation must be the place where the

>[nagise https://twitter.com/nagise/status/1431048842741383170]: If frequent modifications are made to a program, the testing effort becomes a major burden, so it is essential to save testing labor.
>However, if you blindly tie up the program with automated tests, the cost of modifying the program will increase.
>The cost of modifying the associated test code is a drag.

>[nagise https://twitter.com/nagise/status/1431049314906742791]: So the test code for automated tests must be "light".
>The test code becomes heavier when the testability of the source program is poor.
>So, in order to keep the cost of modification light, testability must be kept high in the first place.

>[nagise https://twitter.com/nagise/status/1431050042270384128]: Considering these influences, the value of "testability" among the quality characteristics is very high.
>However, it is difficult to share these values, and it is unfortunate that investment in testability is often neglected.

>[nishio https://twitter.com/nishio/status/1431073960930656262]: interesting metaphor.
>I guess you are saying, "When programming, writing design documents in Japanese and translating them into programming languages is a methodology for people who are not good at programming languages, while people who are good at programming languages write them in programming languages and refactor them from the beginning.

>[nishio https://twitter.com/nishio/status/1431075909260304384]: That's true if you're prototyping alone, and like TS said yesterday, "When working in a team, each person has a different level of language proficiency, what should be the common language of the team? to be the common language of the team?" I guess it comes down to "what is the common language of the team?

>[kunichiko https://twitter.com/kunichiko/status/1431182317632954369]: 同意な一方で、
>"Not all native English speakers can write well, but those who can write well have good sentence structure design skills."
>,
>"Just because you can write programming smoothly doesn't mean you can write good code. In the end, it's all about design ability.
>That's what I'm seeing in the development scene these days. ...... twitter.com/nishio/status/...

>[kunichiko https://twitter.com/kunichiko/status/1431184837205889030]: If you show the connection relationship between modules and the flow of data, it is easy to see the "design twist here...
>Even if the software has a high-dimensional structure, it should be possible to project it into two dimensions, and if the projection is twisted, the original design is still often bad or more complex than necessary.

>[kunichiko https://twitter.com/kunichiko/status/1431184838183190528]: Even in design text, code that cannot be concisely explained in one's own language often has some problems even if it works as code.
>...... So, I have recently been thinking that coding and design skills are two wheels on the same wheel, and that we cannot improve unless we work on both together.
