Hatena2010-04-26
code:hatena
 <body>
 *1272249914* Scheduling is not user friendly if it's octopus (both computer and human).
 Summary of what inspired id:Voluntas at <a href='http://atnd.org/events/3798'>Code Camp (201004)</a>
 
 No matter how fast the CPU is, it is not very usable if it has an OS with a tachy scheduling (task management) system.
 
 For tasks that require little interaction with the outside world and rely purely on the computing power of the CPU, it is efficient to process all the information necessary to execute the task in a "fast-accessible storage area" such as memory or cache. In other words, for brainwork-centered tasks that are completed by oneself alone, it is efficient to lock oneself up, drink only cola, and write code for 48 hours straight.
 
 If you had a successful experience with this task management method when you were a student or other person, you tend to mistakenly think that this method is good or suitable for you. That is not true. This method makes multitasking difficult. It is more efficient for any person to focus on one thing than to have multiple tasks. So it is natural to feel that this method (single-task task management) is more efficient. However, it is not easy to use an OS that says, "This OS is single-task because multitasking is less efficient. Multitasking is now a social requirement. It is important to respond to accesses from other individuals within a reasonable amount of time. Only exceptional individuals with extremely high CPU computing power can ignore the specification.
 
 >>
 In older CPU designs, task switching took a long time, during which time the CPU could not do any direct meaningful work. Therefore, early operating systems eliminated unnecessary task switching as much as possible to avoid wasting CPU time. --- <a href='http://ja.wikipedia.org/wiki/%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF %E3%82%A4%E3%83%A0%E3%82%AA%E3%83%9A%E3%83%AC%E3%83%BC %E3%83%86%E3%82%A3 %E3%83%B3%E3%82%B0%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0'>Real-time operating system - Wikipedia</a>
 <<
 
 
 Society is not looking for "the instantaneous maximum speed of individual value creation that is demonstrated when the arrangements are perfect," but rather "the average speed of value created through interaction with those around you over a certain length of time.
 
 <hr>
 
 Now, in the case of tasks with external interactions, it is necessary to use a task management method that assumes "the possibility of forced context switching due to interruptions. If the above single-task management is used despite the presence of external interrupts, the information placed in the volatile memory area called "brain" is lost each time there is an interrupt, and the cost is high.
 At first glance, the design of "writing information in the brain to something non-volatile at the time of an interruption" seems to work well. In fact, it does work in some environments. It depends on "the length of time allowed between the request to switch tasks and the actual switching. In a situation where you receive a phone call or your boss is sitting next to you and talking to you, you don't have time to write down the information in your brain.
 In the end, the only option is to "store the context information on a non-volatile medium. This is a method that prioritizes writing down and persisting all information, such as what you came up with, what policy you are planning to follow, and why you did not adopt policy B, rather than proceeding with implementation. Compared to the first single-task management, the overhead of "saving to a medium with slow I/O" seems like a waste of time. However, it is a cost that must be paid in order to acquire the attribute of "being able to switch at any time".
 
 <hr>
 A person who is good at managing tasks can predict when interruptions are likely to occur. They can estimate how long it will take them to complete a task. Even if there are unexpected interruptions, they can retain contextual information in their brains that they can write down later when they have more time. Therefore, they can make a reasonable schedule, process at high speed in single-task mode during the time when no interruptions are likely to occur, and not be affected by the occasional unexpected interruptions. However, a person like me, who is not good at task management, cannot do that. That is why we need to manage tasks systematically.
 
 <a href="http://www.amazon.co.jp/gp/product/4893613332?ie=UTF8&tag=nishiohirokaz-22&linkCode=as2&camp=247&creative=7399& The main concept of <a href="creativeASIN=4893613332">GTD</a> was to "output all task information to a non-volatile medium, not retain it in the brain. Task information" does not just mean "what kind of task is being done. It also includes various contextual information.
 </body>

[Hatena Diary 2010-04-26 https://nishiohirokazu.hatenadiary.org/archive/2010/04/26]