Top and Bottom Types

[A Little Theory with your TypeScript: Top and Bottom Types | by Kevin B. Greene | Medium https://medium.com/@KevinBGreene/a-little-theory-with-your-typescript-top-and-bottom-types-61b380f227d]

code:ts
 const s: string = "string";
 const n: number = s;  // Type 'string' is not assignable to type 'number'.

code:ts
 const n: number = 123;
 const s: string = n;  // Type 'number' is not assignable to type 'string'.

---
[* unknown]

code:ts
 const n: number = 123;
 const x: unknown = n;  // OK

code:ts
 const x: unknown;
 const n: number = x;  // Type 'unknown' is not assignable to type 'number'.

---
[* cast]

code:ts
 const s = "string";
 const n: number = s as number;  // Conversion of type 'string' to type 'number' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.

code:ts
 const s = "string";
 const n: number = (s as unknown) as number;  // OK

---

code:ts
 const x: never;
 const n: number = x;  // OK, no type error 


---

code:ts
 const supplyNever = (): never => {
   throw new Error();
 };
 
 const x: never = supplyNever();
 const n: number = x;

