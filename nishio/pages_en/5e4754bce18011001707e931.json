Failure to work to minimize
Type instantiation is excessively deep and possibly infinite.の原因を知るために最小限にしたかったが、枝葉をanyにするのはダメだった

code:ts
 type DIGIT = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
 
 type DIGITS = [DIGIT, []] | [DIGIT, DIGITS]
 
 type REVERSE<N extends DIGITS, S = []> = (
   N[1] extends DIGITS
   ?
   // REVERSE<N[1], [N[0], S]>
   { 0: REVERSE<N[1], [N[0], S]> }[N extends any ? 0 : 0]
   : [N[0], S]
 )
 
 type ADD<
   N extends DIGITS, M extends DIGITS,
   REV_N = REVERSE<N>, // Erasing these two lines will not reproduce
   REV_M = REVERSE<M>, // 
   > = (
     any
   )
 
 type m_MUL<
   REV_N extends DIGITS,
   REV_M extends DIGITS,
   > = (
     {
       0: ADD<any, any>
       // Type instantiation is excessively deep and possibly infinite.
 
       1: [0, []]
     }[REV_M[1] extends DIGITS ? 0 : 1]
   )

code:ts
 type DIGIT = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
 
 type DIGITS = [DIGIT, []] | [DIGIT, DIGITS]
 
 type REVERSE<N extends DIGITS, S = []> = (
   N[1] extends DIGITS
   ?
   // REVERSE<N[1], [N[0], S]>
   { 0: REVERSE<N[1], [N[0], S]> }[N extends any ? 0 : 0]
   : [N[0], S]
 )
 
 type m_MUL<
   REV_M extends DIGITS,
   > = (
     REVERSE<REV_M> // OK
     // REVERSE<REV_M> // NG
   )

code:ts
 type DIGIT = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
 
 type DIGITS = [DIGIT, []] | [DIGIT, DIGITS]
 
 type REVERSE<N extends DIGITS, S = []> = (
   N[1] extends DIGITS
   ?
   // REVERSE<N[1], [N[0], S]>
   { 0: REVERSE<N[1], [N[0], S]> }[N extends any ? 0 : 0]
   : [N[0], S]
 )
 
 type ADD<
   N extends DIGITS, M extends DIGITS,
   REV_N = REVERSE<N>, // Erasing these two lines will not reproduce
   REV_M = REVERSE<M>, // 
   > = (
     any
   )
 
 
 type m_MUL<
   REV_N extends DIGITS,
   REV_M extends DIGITS,
   POWER extends DIGITS | [],
   > = (
     {
       0:
       ADD<
         REV_N,
 
         m_MUL<REV_N, [0, []], [0, []]>
       >
       // OK
 
       1: [0, []]
     }[REV_M[1] extends DIGITS ? 0 : 1]
   )

[circularly references itself]
