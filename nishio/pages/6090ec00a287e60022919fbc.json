{
  "id": "6090ec00a287e60022919fbc",
  "title": "Hatena2009-06-27",
  "created": 1246028400,
  "updated": 1246028400,
  "lines": [
    {
      "id": "6090ec24aff09e00003d2477",
      "text": "Hatena2009-06-27",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2478",
      "text": "code:hatena",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2479",
      "text": " <body>",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d247a",
      "text": " *1246078241*気が散りまくり",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d247b",
      "text": " デコレートのタイミングでトップレベルの関数であるかメソッドであるかどうかを判断できるかとか、RabbitMQとかQ4Mとか云々とか、OCamlとか、suidperlとか、なんかそういう話題ががんがん流れている中で作業に集中するのは難しいからとりあえずブログに書いた。ブログに書くと一応順を追って解説になるので途中でインタラプトが入っても自分がどこまでやったか思い出しやすい。",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d247c",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d247d",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d247e",
      "text": " 最小ハッシュ関数ジェネレータの既知のバグの再現コード。5個のマスに4個の駒を置くパターンの最小ハッシュ。",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d247f",
      "text": " >|python|",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2480",
      "text": "     r = Resource(5, \"X\")",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2481",
      "text": "     koma1 = r.take(\"koma1\")",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2482",
      "text": "     koma2 = r.take(\"koma2\")",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2483",
      "text": "     koma3 = r.take(\"koma3\")",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2484",
      "text": "     koma4 = r.take(\"koma4\")",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2485",
      "text": "     All = And(And(And(koma1, koma2), koma3), koma4)",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2486",
      "text": "     s = en_decoder.CppRenderer.get_test(All, {\"X\": []})",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2487",
      "text": "     file(\"tmp.cpp\", \"w\").write(s)",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2488",
      "text": " ||<",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2489",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d248a",
      "text": " 生成されたデコーダ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d248b",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d248c",
      "text": " >|cpp|",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d248d",
      "text": "     and9 = input_value;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d248e",
      "text": "     // And(And(And(Take(Resource(X)), Take(Resource(X))), Take(Resource(X))), Take(Resource(X)))",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d248f",
      "text": "     and8 = and9 / 2;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2490",
      "text": "     take3 = and9 % 2;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2491",
      "text": "     // And(And(Take(Resource(X)), Take(Resource(X))), Take(Resource(X)))",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2492",
      "text": "     and7 = and8 / 3;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2493",
      "text": "     take2 = and8 % 3;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2494",
      "text": "     // And(Take(Resource(X)), Take(Resource(X)))",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2495",
      "text": "     take0 = and7 / 4;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2496",
      "text": "     take1 = and7 % 4;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2497",
      "text": "     // Take(Resource(X))",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2498",
      "text": "     koma1 = take0;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d2499",
      "text": "     // Take(Resource(X))",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d249a",
      "text": "     koma2 = take1;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d249b",
      "text": "     if(koma1 <= koma2) koma2++;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d249c",
      "text": "     // Take(Resource(X))",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d249d",
      "text": "     koma3 = take2;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d249e",
      "text": "     if(koma1 <= koma3) koma3++;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d249f",
      "text": "     if(koma2 <= koma3) koma3++;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a0",
      "text": "     // Take(Resource(X))",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a1",
      "text": "     koma4 = take3;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a2",
      "text": "     if(koma1 <= koma4) koma4++;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a3",
      "text": "     if(koma2 <= koma4) koma4++;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a4",
      "text": "     if(koma3 <= koma4) koma4++;",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a5",
      "text": " ||<",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a6",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a7",
      "text": " 入力が24のとき、まず2で割られて12と0。それを3で割られて4と0、それを4で割られて1と0。(1, 0, 0, 0)で、すでに駒のあるところは詰められているので(1, 0, 2, 3)に復元されるべき。でも実際には(1, 0, 1, 2)になってしまう。なぜならkoma3とkoma1を比較した時点ではkoma3はkoma1と衝突してないからね。koma2との衝突で隣のマスに移動したときにkoma1と衝突する。だから「隣のマスに移動 (koma3++)」ではなく「空いているマスまで移動」になるべき。",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a8",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24a9",
      "text": " <hr>",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24aa",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24ab",
      "text": " デコーダ直した。むー、PythonとC++の両方を吐けるようにということでRenderer.assignとか作って砕いて行ったんだけど、結局のところこういうことのために大きなメソッドを足すことになって回り道だった。PythonとC++の両方、っていう発想が間違いだったのかなー。",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24ac",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24ad",
      "text": " >|python|",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24ae",
      "text": "     def take_decoder(arg_name, node_name, resource_name):",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24af",
      "text": "         lines = [",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b0",
      "text": "             \"for(int i=0; ; i++){\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b1",
      "text": "             \"  if(!resource_%(resource_name)s[i]){\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b2",
      "text": "             \"    if(!%(node_name)s){\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b3",
      "text": "             \"      %(arg_name)s = i;\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b4",
      "text": "             \"      break;\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b5",
      "text": "             \"    }\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b6",
      "text": "             \"    %(node_name)s--;\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b7",
      "text": "             \"  }\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b8",
      "text": "             \"}\",",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24b9",
      "text": "             \"resource_%(resource_name)s[%(arg_name)s] = true;\"]",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24ba",
      "text": "         return [line % locals() for line in lines]",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24bb",
      "text": " ||<",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24bc",
      "text": " forである必要性がないし。。",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24bd",
      "text": " エンコーダも同じ問題を抱えているので直す必要がある。",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24be",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24bf",
      "text": " <hr>",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24c0",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24c1",
      "text": " つぶしても　つぶしてもなお　バグがでる　じっと手を見る (だいぶじたらず)",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24c2",
      "text": " ",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24c3",
      "text": " 設計がおかしいんだろうか。",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24c4",
      "text": " </body>",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24c5",
      "text": "",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec24aff09e00003d24c6",
      "text": "[はてなダイアリー 2009-06-27 https://nishiohirokazu.hatenadiary.org/archive/2009/06/27]",
      "created": 1246028400,
      "updated": 1246028400,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}