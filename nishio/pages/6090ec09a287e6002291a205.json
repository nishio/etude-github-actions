{
  "id": "6090ec09a287e6002291a205",
  "title": "Hatena2012-03-21",
  "created": 1332255600,
  "updated": 1332255600,
  "lines": [
    {
      "id": "6090ec2daff09e00003dabf2",
      "text": "Hatena2012-03-21",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabf3",
      "text": "code:hatena",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabf4",
      "text": " <body>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabf5",
      "text": " *1332318661*「Normalized Cutの評価基準を用いた階層クラスタリング」を実装してみた",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabf6",
      "text": " 「近いものをくっつけていこう」(最短距離法)という戦略で階層的クラスタリングをすると、ちょっと離れたところにあるやつが取り残されてしまって「ぽつんと1個 v.s. 残り全部」という2つに分類されてしまうことがある。カラーにすればよかったな、ぽつんとひとつ◯があるのがわかるかな。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabf7",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabf8",
      "text": " [f:id:nishiohirokazu:20120321172959p:image]",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabf9",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabfa",
      "text": " じゃあ「クラスタの中の一番遠い点同士で距離を測ることにしよう」(最長距離法)という戦略をとったらどうなるか。まあ、1つだけポツンにはなりにくいんだけども…",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabfb",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabfc",
      "text": " [f:id:nishiohirokazu:20120321172958p:image]",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabfd",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabfe",
      "text": " そこでNormalized Cutの評価基準を使うとこんな感じになります。というのを実装した。いい感じに分かれる。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabff",
      "text": " [f:id:nishiohirokazu:20120321173001p:image]",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac00",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac01",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac02",
      "text": " ところでWard法でも同じようにいい感じにわかれるんだが、この2つの手法の差を見るにはどんなデータに使ってみればいいんだろう。参考文献には「Ward法は球状のクラスタを抽出する傾向が強い」となっているが…。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac03",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac04",
      "text": " [f:id:nishiohirokazu:20120321173002p:image]",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac05",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac06",
      "text": " ** Normalized Cut v.s. Ward",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac07",
      "text": " 2つの分散が異なる分布を同じ位置に重ねてみたら、真ん中がくり抜かれた！",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac08",
      "text": " [f:id:nishiohirokazu:20120321175205p:image][f:id:nishiohirokazu:20120321175206p:image]",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac09",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac0a",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac0b",
      "text": " ** 参考文献",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac0c",
      "text": " - <a href='http://ci.nii.ac.jp/naid/110006533727'>CiNii 論文 -  Normalized Cutsの評価基準を用いた階層型クラスタリングの提案</a>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac0d",
      "text": " - <a href='http://www.kamishima.net/jp/clustering/'>クラスタリングとは (クラスター分析とは)</a>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac0e",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac0f",
      "text": " *1332333583*言語女子会2: varは必要？/privateがない？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac10",
      "text": " <a href='http://d.hatena.ne.jp/nishiohirokazu/20120316/1331906887'>言語女子会: undefとnullは両方必要？</a>の続編です。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac11",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac12",
      "text": " ** varは必要なの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac13",
      "text": " とあるプログラミング言語が集う女子会にて:",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac14",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac15",
      "text": " Python: JavaScriptちゃんってさ、なんでvarだらけなの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac16",
      "text": " JavaScript: えっ、変？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac17",
      "text": " Python: varなんかいらなくない？私ぜんぜん持ってないよ？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac18",
      "text": " JavaScript: えー、じゃあ変数をどうやって宣言するの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac19",
      "text": " Python: 宣言っていうか…「x = 1」みたいな代入文があれば変数xが必要なのって自明じゃない？宣言とか必要？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac1a",
      "text": " Ruby: 必要ないよね。っていうか変数宣言とか古臭くない？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac1b",
      "text": " JavaScript: そうかなー。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac1c",
      "text": " Python: 少しダサイかも。ほら断舎離ブームだし要らないものは捨てなきゃ！",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac1d",
      "text": " JavaScript: 要らないかなぁ、変数宣言。Pythonちゃんは関数がネストしているときに外側のスコープの変数に代入するのってどうやるの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac1e",
      "text": " Python: えっ、それは…関数冒頭でnonlocal宣言を…",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac1f",
      "text": " JavaScript: えー、何それー、関数冒頭での宣言とか死語じゃない？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac20",
      "text": " Python: (ぐはっ)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac21",
      "text": " JavaScript: ていうかー、確かグローバルスコープの変数に代入するのにも関数冒頭でglobal宣言が必要なんだよねー。その時点で「変数宣言がなくても代入で十分」ってアプローチが間違いでしたと言ってるようなもんじゃない？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac22",
      "text": " Python: (T_T)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac23",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac24",
      "text": " Python沈黙",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac25",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac26",
      "text": " ** ネストした関数が必要ないんじゃない？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac27",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac28",
      "text": " Ruby: いや、それは関数をネストしたあたりがおかしいんじゃないの。なんでネストした関数なんかが必要なの？変態なの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac29",
      "text": " JavaScript: えっ、たとえばクロージ…",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac2a",
      "text": " Ruby: クロージャみたいなしょぼいの使ってないでさー、JavaScriptちゃんももうちょっとオブジェクト指向にお金掛けたほうがいいよー",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac2b",
      "text": " JavaScript: …クロージャしょぼくないよ？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac2c",
      "text": " Ruby: しょぼいよ、まともなクラスがないから関数のネストで無理やりオブジェクト指向してるんでしょ。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac2d",
      "text": " JavaScript: えー。クラスなんてただの化粧品じゃない。プロトタイプでなにが悪いの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac2e",
      "text": " Ruby: え、えっと…それは……そう、privateがないわ！あなたはなんでもかんでもpublicでしょ。ハレンチだわ！",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac2f",
      "text": " JavaScript: private…",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac30",
      "text": " Ruby: あの恥知らずのPythonですらアンスコで隠すのよ！(( 女子テニス選手のprivateなところを隠しているアンダースコートのこと…ではなく「アンダースコア2つで始まる名前はネームマングリングで擬似的に隠される」のほう: <a href='http://en.wikipedia.org/wiki/Name_mangling#Name_mangling_in_Python'>Name mangling</a> thanks @suno88 ))",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac31",
      "text": " JavaScript: でもさぁ、Rubyちゃんってオープンクラスよね。privateを付けて「違うクラスからアクセスできません」って言っても、クラス自体にメソッドの追加はできちゃうんでしょ。それって「ウチの中でしか服を脱がないわ！」って言いながら家の扉は全開、誰でもウェルカムってことじゃないの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac32",
      "text": " Ruby: (ぐはっ)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac33",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac34",
      "text": " Ruby沈黙",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac35",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac36",
      "text": " ** 型宣言は必要ない？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac37",
      "text": " そのころ隣のテーブルで:",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac38",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac39",
      "text": " Java: 私から見ればvarだけで済ませているのも十分ゆるふわだけどねぇ…なんであんなに型をないがしろにするのかしらねぇ。一見無駄に見えても、型を重んじることで、やまとなでしこのたおやかな立ち振舞いが…",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac3a",
      "text": " Haskell: 型があることと型宣言が必須なことは別物だにゅ。オバサンたちはさっさと退場すればいいにゅ。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac3b",
      "text": " Java: うーん、型宣言いらないとか言うけど、エラーメッセージが意味不明になるって言われて、結局関数ごとに型宣言されてるじゃない？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac3c",
      "text": " Haskell: わたしの気持ちを理解出来ないバカな男子は死ねばいいにゅ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac3d",
      "text": " Java: あなた、そういうこと言ってると婚期逃すわよ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac3e",
      "text": " Haskell: …(-_-)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac3f",
      "text": " Java: 男ってのは愚かな生き物なのよ。それなのにプライドが高くて、自分の過ちを認められないのよ。だから男が間違えた時には下手にでて、わかりやすくエラーメッセージを出さなきゃいけないのよ。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac40",
      "text": " Haskell: そんなバカ男に媚びてわたしの純粋性を汚すなんてできないにゅ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac41",
      "text": " Java: はぁ…あなたは自分の純粋さって仮面に酔ってるみたいだけど、結局男にはunsafePerformIOとか許しちゃうんでしょ(( see: <a href='http://itpro.nikkeibp.co.jp/article/COLUMN/20090512/329783/'>第31回　禁断の機能「unsafePerformIO」の深淵 - 本物のプログラマはHaskellを使う：ITpro</a> ))",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac42",
      "text": " Haskell: (-_-) ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac43",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac44",
      "text": " Haskell沈黙",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac45",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac46",
      "text": " JavaScript: (隣のテーブルから移ってくる) Javaちゃん、ダメだよー、unsafePerformIOはHaskellちゃんのトラウマなんだよー。あんまりいじったら心が壊れちゃう！",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac47",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac48",
      "text": " ** Javaのprivate丸見え事件",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac49",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac4a",
      "text": " Java: そもそもみんなアクセス制御が適当すぎるわ。私なんかprivateな着替えは子供からも見えないように一人寝室でしてるのよ。(( 子供から見えるならprivateじゃなくてprotectedだろ、という趣旨。ま、その区別はRubyにもある。 ))",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac4b",
      "text": " JavaScript: あれ？もしかしてJavaちゃん無自覚なの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac4c",
      "text": " Java: え、なに？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac4d",
      "text": " JavaScript: 最近大きな姿見を買ったでしょ？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac4e",
      "text": " Java: うん、買ったけど…",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac4f",
      "text": " JavaScript: あの鏡の反射で大通りから寝室が見えるらしいわよ(( リフレクションでsetAccessible(true)したらprivateでもアクセスできる ))",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac50",
      "text": " Java: ガーン(-o-|||)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac51",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac52",
      "text": " Java沈黙",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac53",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac54",
      "text": " ** まとめ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac55",
      "text": " Python, Ruby, Haskell, Javaが全員どんよりしている中、ひとり元気なJavaScript:",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac56",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac57",
      "text": " JavaScript: うーん、privateかぁ…。書き換えられないものなんかあったかなぁ…。あっ、そうだ！ローカル変数は外から書き換えられない！やったーわたしハレンチじゃないよー",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac58",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac59",
      "text": " (しかし誰も聞いていない)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac5a",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac5b",
      "text": " ** 追記: Perl登場",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac5c",
      "text": " ちょっと所用で席を外していたPerlさんが戻って来ました",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac5d",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac5e",
      "text": " Perl: JavaScriptちゃんのvarってわたしのmyみたいなものでしょ？ourとかlocalとかuse varsみたいなのはないの？",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac5f",
      "text": " JavaScript: んー、えっとねー、わかんない☆",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac60",
      "text": " Ruby: Perl姉さんが言ってるのは、わたしたちの採用している「スコープはソースコード上でひとかたまり」(( my宣言するとレキシカルスコープ )) って戦略じゃなくて「呼び出し先にも伝わる」(( local宣言すると動的スコープ ))とか、他にもいろいろあったほうがよくない？ってことよ。よく知らないけど",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac61",
      "text": " Python: 使えると便利なケースがあることはわからなくはないけど、それをスコープを使ってやる必要はないんじゃないかなぁ。<a href='http://d.hatena.ne.jp/nishiohirokazu/20120317/1331989155#c'>明示的にやったほうがいい</a>よ。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac62",
      "text": " Perl: うーん、あなたたちにはそもそもできないことだから話が平行線ね…",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac63",
      "text": " JavaScript: あっ、スコープの話か！わたしわかるよ！varを省略するとグローバルスコープだよ！",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac64",
      "text": " 他全員: ………。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac65",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac66",
      "text": " (thanks @mattn_jp, id:delphinus35)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac67",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac68",
      "text": " ** 追記: Rubyとクロージャ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac69",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac6a",
      "text": " Ruby: あれ、わたしがクロージャ作れないって誤解させちゃった？もちろん作れるわよ、わたしに不可能なんてないのよ。だからJavaScriptにできることは私にだってできるのよ！",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac6b",
      "text": " Python: えー、でもRubyちゃんの場合、fooって書いたらfooを0引数で呼び出しちゃうじゃん？わたしやJavaScriptだと関数foo自体になるから楽チンだけど。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac6c",
      "text": " Ruby: それは…",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac6d",
      "text": " Python: あ、知ってるよ、シンボルだかなんだかを使ってごにょごにょするんでしょ。まあ、うん、できなくはないよねー",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac6e",
      "text": " Ruby: (ぐぬぬ…)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac6f",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac70",
      "text": " ** 反響まとめ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac71",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac72",
      "text": " - アセンブリばあちゃん（あたしらはvarやprivateで隠れることもできなくて、着替えが丸見えだったもんだと遠い目）by id:raitu thanks! (( 全てがグローバル（レジスタとメモリ）))",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac73",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac74",
      "text": " - <a href='http://blog.livedoor.jp/dankogai/archives/51780443.html'>404 Blog Not Found:勝手に続編 - 言語女子会2.1:varは必要？/privateがない？</a>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac75",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac76",
      "text": " - 一応、清楚(Strictモード)なJSちゃんはprivateがFutureReservedWordsとして名乗りを上げるのでビッチではなくなる意志はある。ということにしておこうｗ (by id:teramako thanks!)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac77",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac78",
      "text": " - JavaScriptさんはjQueryさんという強力なスタイリストがいるからその態度を取っていられる事をもう少し自覚したほうが良い (by id:yosuke_furukawa thanks!)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac79",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac7a",
      "text": " - Perl「TPOに合わせてno strictくらいは使えないと」by @muimiPro thanks!",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac7b",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac7c",
      "text": " - Vim scriptちゃん「ネストした関数がなければ宣言は必要ないよねー(ただし私の場合代入にletが必要だけど)」by @thinca thanks!",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac7d",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac7e",
      "text": " - Rubyはprocやブロック構文使いまくるしprivateとかわりと空気なので自分を見失ってる (by @uu59 thanks!)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac7f",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac80",
      "text": " - perlもVB6も変数宣言なしで使えるけど、変数の宣言を強制させる宣言があるな…。Option Explicit とか。perl6は強制になるし (by @imatake_jp thanks!)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac81",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac82",
      "text": " - PythonさんもRubyさんもツッコミ役なんだけどPythonさんがバッサリ突っ込むのに対してRubyさんは「まぁできるけど、でもこういう考えのほうがいいと思うの」とネチネチ言うタイプ（ぁ (by @mongrelP thanks!) --- なるほど、無自覚だったけどそういうキャラづけもいいかもですね",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac83",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac84",
      "text": " - nonlocal すら使えなくてリストや辞書で誤魔化す Python 2 ちゃんが泣いてる姿が見えました。(by @raimon49 thanks!)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac85",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac86",
      "text": " - JavaScript ちゃん関数冒頭での変数宣言 dis るなら hoisting どうにかしようぜ (by @kei_s thanks!) --- なるほど、こういう現象があるんですね: ref: <a href='http://d.hatena.ne.jp/calpo/20110301/p1'>JSLintとJSHintとhoisting</a>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac87",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac88",
      "text": " - Haskellが型宣言書くのは、エラーメッセージじゃなくてドキュメントのためだと思います。プログラマがドキュメントとして書いた型と、コンパイラが推論した型が一致することを確認シたものじゃないと、多分ドキュメントとしては嬉しくないから。 (by @tanakh thanks!)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac89",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac8a",
      "text": " - JavaScriptちゃんは、キツネ耳を装着するかもう少しお姉さんになれば、letによるブロックスコープも覚えるんだけどなーとか思った (by @dynamitter thanks!)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac8b",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac8c",
      "text": " - Pyhonは__slots__ (\"__foo\",\"__bar\") でもアクセス制御できそうな？　もしくはデスクリプタ？ (by @kusanoha thanks!)",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac8d",
      "text": " ** あとがき",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac8e",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac8f",
      "text": " 前回の女子会について「Python圧勝」とかいう意図しない反応があったのでとりあえず早々にPythonが退場するようなネタで第2回をしてみました。しかしRubyにいいところがなさすぎる…今度はRubyが勝てるような話題を考えなきゃ…。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac90",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac91",
      "text": " 「関数冒頭での宣言」に関しては「代入よりも前に宣言しないといけない」と書くのが正確でした。Pythonのglobal宣言は代入文とセットにすることができず、またその変数を参照するよりも先に宣言しておく必要があるのでJSちゃんいわく「ダサい」ということですが、若干言い過ぎでした。",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac92",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac93",
      "text": " >|python|",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac94",
      "text": " def good_function():",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac95",
      "text": "     global x",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac96",
      "text": "     x = 1",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac97",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac98",
      "text": " def bad_function():",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac99",
      "text": "     global x = 1  # SyntaxError: invalid syntax",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac9a",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac9b",
      "text": " def bad_function():",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac9c",
      "text": "     print x",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac9d",
      "text": "     global x  # SyntaxWarning: name 'x' is used prior to global declaration",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac9e",
      "text": "     x = 2",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dac9f",
      "text": " ||<",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca0",
      "text": " ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca1",
      "text": " 興味を持った方には僕の書いた「言語設計の基礎知識」を含む60冊分のPDFが1冊にまとまったWebDB Press 総集編がオススメ: ",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca2",
      "text": " <iframe src=\"http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=AAFFAA&fc1=000000&lc1=0000FF&t=nishiohirokaz-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4774148318\" style=\"width:120px;height:240px;\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\"></iframe>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca3",
      "text": " </body>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca4",
      "text": " <comments>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca5",
      "text": " <comment>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca6",
      "text": " <username>l2345679x81</username>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca7",
      "text": " <body>>Pythonのglobal宣言は関数冒頭にしか置けません。<br><br>本当ですか？</body>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca8",
      "text": " <timestamp>1367415829</timestamp>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daca9",
      "text": " </comment>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dacaa",
      "text": " <comment>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dacab",
      "text": " <username>nishiohirokazu</username>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dacac",
      "text": " <body>間違いですね。関数冒頭である必要はありません。<br>代入より先に宣言しておく必要がある、ということを言おうとして筆がすべりました。<br>ご指摘ありがとうございます。修正しておきます。</body>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dacad",
      "text": " <timestamp>1367464212</timestamp>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dacae",
      "text": " </comment>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dacaf",
      "text": " </comments>",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dacb0",
      "text": "",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dacb1",
      "text": "[はてなダイアリー 2012-03-21 https://nishiohirokazu.hatenadiary.org/archive/2012/03/21]",
      "created": 1332255600,
      "updated": 1332255600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}