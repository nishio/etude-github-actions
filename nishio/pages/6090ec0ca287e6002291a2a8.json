{
  "id": "6090ec0ca287e6002291a2a8",
  "title": "Hatena2013-04-14",
  "created": 1365865200,
  "updated": 1365865200,
  "lines": [
    {
      "id": "6090ec30aff09e00003de418",
      "text": "Hatena2013-04-14",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de419",
      "text": "code:hatena",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de41a",
      "text": " <body>",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de41b",
      "text": " *1365926344*Verilog HDLを掘り下げる",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de41c",
      "text": " こちらにあるのが「スイッチを押すたびに4bitのレジスタの値を1増やして、それをLEDで表示」というVerilog HDLのコード。",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de41d",
      "text": " >||",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de41e",
      "text": " module Tiny(switch, led);",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de41f",
      "text": "   input switch;",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de420",
      "text": " \toutput [3:0] led;",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de421",
      "text": " \treg [3:0] x;",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de422",
      "text": "  ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de423",
      "text": " \talways @(posedge switch) begin",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de424",
      "text": " \t\tx = x + 1;",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de425",
      "text": " \tend",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de426",
      "text": " \tassign led[3:0] = x;",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de427",
      "text": " endmodule",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de428",
      "text": " ||<",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de429",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de42a",
      "text": " これをRTL Viewerで表示するとこのようになる。この図の時点では抽象度はあんまりかわらない。",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de42b",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de42c",
      "text": " [f:id:nishiohirokazu:20130414165726p:image]",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de42d",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de42e",
      "text": " これをTechnology Map Viewerで表示すると、かなり抽象度の違う図になる。",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de42f",
      "text": " [f:id:nishiohirokazu:20130414165857p:image]",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de430",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de431",
      "text": " 一部を拡大して、初期状態では非表示になっている箱の中身を一部表示させた。この箱（とそれに続くフリップフロップ）が物理的なロジックエレメント1個に対応する。",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de432",
      "text": " [f:id:nishiohirokazu:20130414165855p:image]",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de433",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de434",
      "text": " 箱を選択すると、カルノー図などを見ることができる。先ほどの図ではANDやXORの組み合わせで表現されていたが、実体としては真偽値のテーブルであって、それを論理回路として表現したりカルノー図として表現したりしているわけだ。物理的なロジックエレメントにはRAMに書きこまれた真偽値のテーブルを読んで結果を返すLUT（Look Up Table）が含まれている。",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de435",
      "text": " [f:id:nishiohirokazu:20130414170537p:image]",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de436",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de437",
      "text": " この箱を選択した状態でResource Property Editorで表示するとロジックエレメントの中へとさらに掘り下げることができる。台形の記号は「<a href='http://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%AB%E3%83%81%E3%83%97%E3%83%AC%E3%82%AF%E3%82%B5'>マルチプレクサ</a>」だ。ここで表示されているものは先ほどの図で赤線で囲われていた範囲だけではなく、その後につながっていたフリップフロップもセットになっている。",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de438",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de439",
      "text": " [f:id:nishiohirokazu:20130414170536p:image]",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de43a",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de43b",
      "text": " 最初XORとANDを見て、半加算器だと早合点して、それでは配線が説明できずに悩んだ。自分が考えるのよりも、もっと頭のよい回路が出力されていた。要するに「1を足す」を実現するために加算器を作る必要はなくて、最下位ビットに関しては「最下位ビットを反転」で1を足したことになる。2番目のビットに関しては「最下位ビットが1なら反転」でよい。3番目のビットでは「最下位ビットと2番目のビットが1なら反転」でよい。そういう理由でANDとXORの組み合わせになっているわけだ。",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de43c",
      "text": " ",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de43d",
      "text": " 今回の実験ではたまたまレジスタの幅を4bitにしていたため、一番上のビットでも4入力の論理回路で表現できた。もっと幅を増やした場合には「自分より下のビットがすべて1」を表現するために1つのロジックエレメントでは足りなくなってくるはず。その時にどんな回路が出力されるのかを調べてみるのも面白そう。",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de43e",
      "text": " </body>",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de43f",
      "text": "",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de440",
      "text": "[はてなダイアリー 2013-04-14 https://nishiohirokazu.hatenadiary.org/archive/2013/04/14]",
      "created": 1365865200,
      "updated": 1365865200,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}