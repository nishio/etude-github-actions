{
  "id": "614987f5d182db0021aa1418",
  "title": "Runtypes と io-ts のoptionalの比較",
  "created": 1632208889,
  "updated": 1632275192,
  "lines": [
    {
      "id": "614987f5d182db0021aa1418",
      "text": "Runtypes と io-ts のoptionalの比較",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208889,
      "updated": 1632208889
    },
    {
      "id": "614989a1aff09e0000c6d2f2",
      "text": "まず普通のTypeScriptの型がコード上とVSCodeのヒント上でどう見えるか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209313,
      "updated": 1632209344
    },
    {
      "id": "614a8818aff09e00008f9492",
      "text": "　なるべくこれに近い書き方・見え方だと楽",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632274457,
      "updated": 1632274478
    },
    {
      "id": "61498802aff09e0000f6d233",
      "text": "code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208898,
      "updated": 1632208902
    },
    {
      "id": "61498805aff09e0000f6d234",
      "text": " // typescript",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208902,
      "updated": 1632208987
    },
    {
      "id": "61498805aff09e0000f6d235",
      "text": " {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208902,
      "updated": 1632208987
    },
    {
      "id": "61498805aff09e0000f6d236",
      "text": "   type OptionalY = { x: number; y?: number };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208902,
      "updated": 1632208987
    },
    {
      "id": "61498805aff09e0000f6d237",
      "text": "   const value1: OptionalY = { x: 1 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208902,
      "updated": 1632208987
    },
    {
      "id": "61498805aff09e0000f6d238",
      "text": "   const value2: OptionalY = { x: 1, y: 2 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208902,
      "updated": 1632208987
    },
    {
      "id": "61498805aff09e0000f6d239",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208902,
      "updated": 1632208987
    },
    {
      "id": "61498805aff09e0000f6d23a",
      "text": "[https://gyazo.com/0dbfd6c60848295b0e3e48c569716ac8]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208902,
      "updated": 1632208919
    },
    {
      "id": "61498817aff09e0000f6d23b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208919,
      "updated": 1632208919
    },
    {
      "id": "614989c3aff09e0000c6d2f3",
      "text": "Runtypesの場合",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209348,
      "updated": 1632209392
    },
    {
      "id": "614989f0aff09e0000c6d2f4",
      "text": " 型オブジェクトは「まあ逐語訳で読めるかな」という感じ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209392,
      "updated": 1632209397
    },
    {
      "id": "614989f5aff09e0000c6d2f5",
      "text": " 生成された静的型はまったくTypeScriptのものと同じ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209397,
      "updated": 1632209422
    },
    {
      "id": "61498823aff09e0000f6d23c",
      "text": "code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208931,
      "updated": 1632208933
    },
    {
      "id": "61498824aff09e0000f6d23d",
      "text": " // runtypes",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208933,
      "updated": 1632208982
    },
    {
      "id": "61498824aff09e0000f6d23e",
      "text": " {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208933,
      "updated": 1632208982
    },
    {
      "id": "61498824aff09e0000f6d23f",
      "text": "   const RT_OpeionalY = Record({ x: Number, y: Optional(Number) });",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208933,
      "updated": 1632208982
    },
    {
      "id": "61498824aff09e0000f6d240",
      "text": "   type OptionalY = Static<typeof RT_OpeionalY>;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208933,
      "updated": 1632208982
    },
    {
      "id": "61498824aff09e0000f6d241",
      "text": "   const value1: OptionalY = { x: 1 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208933,
      "updated": 1632208982
    },
    {
      "id": "61498824aff09e0000f6d242",
      "text": "   const value2: OptionalY = { x: 1, y: 2 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208933,
      "updated": 1632208982
    },
    {
      "id": "61498824aff09e0000f6d243",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208933,
      "updated": 1632208982
    },
    {
      "id": "61498887aff09e0000f6d258",
      "text": "[https://gyazo.com/6d3f4f112bef34630d8d35e7213abce4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209031,
      "updated": 1632209034
    },
    {
      "id": "61498824aff09e0000f6d244",
      "text": "[https://gyazo.com/8887af7557d6b24987f8aac41fe6cd02]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208933,
      "updated": 1632208953
    },
    {
      "id": "61498838aff09e0000f6d245",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208953,
      "updated": 1632208953
    },
    {
      "id": "61498a12aff09e0000c6d2f6",
      "text": "io-tsの場合",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209427,
      "updated": 1632209436
    },
    {
      "id": "61498a1faff09e0000c6d2f7",
      "text": "　まずは公式ドキュメントで解説されてたpartialとのintersectionを作る書き方",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209440,
      "updated": 1632209481
    },
    {
      "id": "61498a87aff09e0000c6d2f8",
      "text": "　静的型の方は、まあ真ん中の`} & {`の解釈で戸惑わないレベルのプログラマならさほど実害はないか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209544,
      "updated": 1632209617
    },
    {
      "id": "61498ad1aff09e0000c6d2f9",
      "text": "　型オブジェクトの方は…ここから「yはオプションである」と読み取るのは認知コスト高そう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209617,
      "updated": 1632209711
    },
    {
      "id": "61498849aff09e0000f6d246",
      "text": "code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208970,
      "updated": 1632208972
    },
    {
      "id": "6149884baff09e0000f6d247",
      "text": " // io-ts, official solution",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d248",
      "text": " {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d249",
      "text": "   const IO_OpeionalY = t.intersection([",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d24a",
      "text": "     t.type({",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d24b",
      "text": "       x: t.number,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d24c",
      "text": "     }),",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d24d",
      "text": "     t.partial({",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d24e",
      "text": "       y: t.number,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d24f",
      "text": "     }),",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d250",
      "text": "   ]);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d251",
      "text": "   type OptionalY = t.TypeOf<typeof IO_OpeionalY>;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d252",
      "text": "   const value1: OptionalY = { x: 1 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d253",
      "text": "   const value2: OptionalY = { x: 1, y: 2 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d254",
      "text": "   // const value3: OptionalY = { x: 1, y: \"foo\" };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d255",
      "text": "   // expected ERROR: Type 'string' is not assignable to type 'number | undefined'.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d256",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632208976
    },
    {
      "id": "6149884baff09e0000f6d257",
      "text": "[https://gyazo.com/96aaa9ff55003b6b06b14b08331665d4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632208972,
      "updated": 1632209055
    },
    {
      "id": "6149889eaff09e0000f6d25a",
      "text": "[https://gyazo.com/ba29ab9ae416674b103b7f6f03f8f99c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209055,
      "updated": 1632209109
    },
    {
      "id": "614988d4aff09e0000f6d25c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209109,
      "updated": 1632209109
    },
    {
      "id": "61498b33aff09e0000c6d2fa",
      "text": "io-tsの一見上手くいきそうなユーティリティ関数を作るアプローチ(実はまったく上手くいかない)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209715,
      "updated": 1632209828
    },
    {
      "id": "614a8984aff09e00008f9493",
      "text": "\tvalue3の例ではoptionalなnumberにstringを入れる間違いを検出できてなくて全然ダメ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632274821,
      "updated": 1632274873
    },
    {
      "id": "614a89c5aff09e00008f9494",
      "text": " \t僕はtsconfigの[No Implicit Any https://www.typescriptlang.org/tsconfig#noImplicitAny]をRecommendedのtrueにしているのでそもそもこのコードはエラーになる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632274885,
      "updated": 1632274889
    },
    {
      "id": "61498d9faff09e0000c6d2fb",
      "text": " \tデフォルトのfalseの場合も指摘はされる: `Parameter 'tp' implicitly has an 'any' type, but a better type may be inferred from usage.`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210336,
      "updated": 1632274891
    },
    {
      "id": "61498e14aff09e0000c6d2fc",
      "text": " \t　つまりtpがany",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210453,
      "updated": 1632274891
    },
    {
      "id": "6149a024aff09e0000c6d306",
      "text": "  \tなのでそれが伝播してyもanyになっている、これがvalue3の問題の原因",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632215077,
      "updated": 1632274891
    },
    {
      "id": "61498e4faff09e0000c6d2fd",
      "text": "\tまたvalue1のように「yが存在しない」というパターンは型エラーになるべきではないが、なってしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210512,
      "updated": 1632274936
    },
    {
      "id": "6149898aaff09e0000f6d25d",
      "text": "code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209290,
      "updated": 1632209292
    },
    {
      "id": "6149898caff09e0000f6d25f",
      "text": " // io-ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209292,
      "updated": 1632209843
    },
    {
      "id": "6149898caff09e0000f6d260",
      "text": " {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209292,
      "updated": 1632210061
    },
    {
      "id": "61498c88aff09e0000f6d279",
      "text": "   const optional = (tp) => t.union([tp, t.undefined]);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d27a",
      "text": "   const IO_OpeionalY = t.type({",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d27b",
      "text": "     x: t.number,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d27c",
      "text": "     y: optional(t.number),",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d27d",
      "text": "   });",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d27e",
      "text": "   type OptionalY = t.TypeOf<typeof IO_OpeionalY>;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d27f",
      "text": "   // const value1: OptionalY = { x: 1 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d280",
      "text": "   // ERROR: Property 'y' is missing in type '{ x: number; }' but required in type '{ x: number; y: any; }'",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d281",
      "text": "   const value2: OptionalY = { x: 1, y: 2 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d282",
      "text": "   const value3: OptionalY = { x: 1, y: \"foo\" }; // unexpected OK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210498
    },
    {
      "id": "61498c88aff09e0000f6d283",
      "text": "\t}",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210492
    },
    {
      "id": "61498c88aff09e0000f6d284",
      "text": "[https://gyazo.com/7f01f7afef7ae573ee855b64d4e355d4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210056,
      "updated": 1632210502
    },
    {
      "id": "61498e45aff09e0000f6d293",
      "text": "\tvalue3のanyの問題を解決するにはジェネリクスを使う方法がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210502,
      "updated": 1632274959
    },
    {
      "id": "61498f0baff09e0000c6d2fe",
      "text": "\t　ただしこの方法でもvalue1のメンバー不在の問題は解決されない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210700,
      "updated": 1632210721
    },
    {
      "id": "61498ec5aff09e0000f6d294",
      "text": "  code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210630,
      "updated": 1632210779
    },
    {
      "id": "61498ec9aff09e0000f6d295",
      "text": "   {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d296",
      "text": "     const optional = <T extends t.Mixed>(tp: T) => t.union([tp, t.undefined]);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d297",
      "text": "     const IO_OpeionalY = t.type({",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d298",
      "text": "       x: t.number,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d299",
      "text": "       y: optional<typeof t.number>(t.number),",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d29a",
      "text": "     });",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d29b",
      "text": "     type OptionalY = t.TypeOf<typeof IO_OpeionalY>;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d29c",
      "text": "     // const value1: OptionalY = { x: 1 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d29d",
      "text": "     // ERROR: Property 'y' is missing in type '{ x: number; }' but required in type '{ x: number; y: any; }'",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d29e",
      "text": "     const value2: OptionalY = { x: 1, y: 2 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d29f",
      "text": "     // const value3: OptionalY = { x: 1, y: \"foo\" };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d2a0",
      "text": "     // expected ERROR: Type 'string' is not assignable to type 'number | undefined'",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d2a1",
      "text": "   }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210779
    },
    {
      "id": "61498ecaaff09e0000f6d2a2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632210634,
      "updated": 1632210640
    },
    {
      "id": "61499264aff09e0000f6d2a3",
      "text": "追記",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211556,
      "updated": 1632211559
    },
    {
      "id": "614992bbaff09e0000c6d300",
      "text": "　上記の通りメンバーが不在なオブジェクトを生成された静的型の変数に代入することは型エラーになるが、decode結果から代入する時にはエラーなく入る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211643,
      "updated": 1632211734
    },
    {
      "id": "6149934caff09e0000c6d301",
      "text": "　decode結果はJestのtoEqualの比較でもJSON.stringify結果での比較でも元のオブジェクトと同一に見えるが、実はentriesでは異なる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211788,
      "updated": 1632215135
    },
    {
      "id": "614994a5aff09e0000c6d302",
      "text": "　　要するにdecodeの段階でyが存在しないのではなく、yにundefinedが入ったオブジェクトに変わっている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632212134,
      "updated": 1632275084
    },
    {
      "id": "614994a7aff09e0000c6d303",
      "text": "　うーん、これは「メンバが存在しないときとundefinedが入ってときとで挙動が違うライブラリ」を使ってる時に厄介ごとが起きそうだ…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632212136,
      "updated": 1632275100
    },
    {
      "id": "614996bfaff09e0000f6d2b2",
      "text": "　\t有名どころだとFirebase Cloud Firestoreはシリアライズ時に`undefined`が入ってると例外を投げる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632212672,
      "updated": 1632212735
    },
    {
      "id": "61499541aff09e0000c6d304",
      "text": "　 このページの本題と違うけどFirestoreに関しては2020年5月の更新でundefinedを無視するオプションが増えてることに気づいた。つけとこ。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632212289,
      "updated": 1632212751
    },
    {
      "id": "61499590aff09e0000f6d2b1",
      "text": "\t　 >Whether to skip nested properties that are set to undefined during object serialization.  If set to `true`, these properties are skipped and not written to Firestore. If set to `false` or omitted, the SDK throws an exception when it encounters properties of type `undefined`. [doc https://firebase.google.com/docs/reference/js/v8/firebase.firestore.Settings?hl=ja#optional-ignoreundefinedproperties]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632212368,
      "updated": 1632212694
    },
    {
      "id": "614995d2aff09e0000c6d305",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632212434,
      "updated": 1632212435
    },
    {
      "id": "6149926aaff09e0000f6d2b0",
      "text": " code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211562,
      "updated": 1632212892
    },
    {
      "id": "61499267aff09e0000f6d2a4",
      "text": "  const input_object = { x: 1 };",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211559,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2a5",
      "text": "  const tmp = IO_OpeionalY.decode(input_object);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2a6",
      "text": "  let value4: OptionalY;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2a7",
      "text": "  if (isRight(tmp)) {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2a8",
      "text": "    value4 = tmp.right;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2a9",
      "text": "  } else {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2aa",
      "text": "    throw new Error();",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2ab",
      "text": "  }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2ac",
      "text": "  expect(JSON.stringify(value4)).toBe(`{\"x\":1}`);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2ad",
      "text": "  expect(value4).toEqual(input_object);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2ae",
      "text": "  // expect(Object.entries(value4)).toEqual(Object.entries(input_object));  // fail",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632212892
    },
    {
      "id": "61499268aff09e0000f6d2af",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632211560,
      "updated": 1632211560
    },
    {
      "id": "6149898aaff09e0000f6d25e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1632209291,
      "updated": 1632209291
    }
  ]
}