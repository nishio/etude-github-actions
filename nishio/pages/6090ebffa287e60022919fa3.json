{
  "id": "6090ebffa287e60022919fa3",
  "title": "Hatena2009-05-31",
  "created": 1243695600,
  "updated": 1243695600,
  "lines": [
    {
      "id": "6090ec23aff09e00003d1bbb",
      "text": "Hatena2009-05-31",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bbc",
      "text": "code:hatena",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bbd",
      "text": " <body>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bbe",
      "text": " *1243760198*[Blender]コッホ曲線でオーロラ(その2)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bbf",
      "text": " グラデーションをつけた",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc0",
      "text": " <img src=\"http://gyazo.com/93cb420af06aa8fb49e6478e043df74f.png\">",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc1",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc2",
      "text": " パラメータをいじりながら色々試してみる。横方向はHaloの間隔が離れていてもむしろ「のっぺりしていない」感じが出るが、縦方向は間隔があいていると謎のつぶつぶになってしまう。あと、アルファ値は小さめにした方が重なったときに飽和しないからきれいだな。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc3",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc4",
      "text": " <img src=\"http://gyazo.com/d1833a2fb3e6338076480e846548f3eb.png\">",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc5",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc6",
      "text": " ソースコードはサンプルコードを切り貼りしながら試行錯誤してつくったので汚い。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc7",
      "text": " >|python|",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc8",
      "text": " from Blender.Mathutils import Vector",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bc9",
      "text": " from Blender import *",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bca",
      "text": " from math import sin, cos, pi",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bcb",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bcc",
      "text": " class Turtle(object):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bcd",
      "text": "     def __init__(self):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bce",
      "text": "         self.x = 0.0",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bcf",
      "text": "         self.y = 0.0",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd0",
      "text": "         self.dirx = 1.0",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd1",
      "text": "         self.diry = 0.0",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd2",
      "text": "         self.vert2d_list = [(0.0, 0.0)]",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd3",
      "text": "         self.faces = []",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd4",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd5",
      "text": "     def forward(self, mag):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd6",
      "text": "         self.x += self.dirx * mag ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd7",
      "text": "         self.y += self.diry * mag ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd8",
      "text": "         self.vert2d_list.append((self.x, self.y))",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bd9",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bda",
      "text": "     def rot(self, rad):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bdb",
      "text": "         self.dirx, self.diry = (",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bdc",
      "text": "             self.dirx * cos(rad) - self.diry * sin(rad),",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bdd",
      "text": "             self.dirx * sin(rad) + self.diry * cos(rad))",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bde",
      "text": "     ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bdf",
      "text": "     def build_mesh(self, z=0.0, name=\"Mesh\"):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be0",
      "text": "         verts3d = [Vector(x, y, z) for (x, y) in self.vert2d_list]",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be1",
      "text": "         me = Mesh.New(name + str(z))          # create a new mesh",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be2",
      "text": "         me.verts.extend(verts3d)          # add vertices to mesh",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be3",
      "text": "         me.faces.extend(self.faces)           # add faces to the mesh (also adds edges)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be4",
      "text": "         return me",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be5",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be6",
      "text": " def deg(x):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be7",
      "text": "     return 2 * pi / 360 * x",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be8",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1be9",
      "text": " def makeHalo(x):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bea",
      "text": "     mat = Material.New('Halo')          # create a new Material called 'newMat'",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1beb",
      "text": "     mat.rgbCol = [0.7 * x, 0.7, 0.1]          # change its color",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bec",
      "text": "     mat.setAlpha(0.3 * (1 - x))                     # mat.alpha = 0.2 -- almost transparent",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bed",
      "text": "     #mat.emit = 0.7                        # equivalent to mat.setEmit(0.8)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bee",
      "text": "     #mat.mode |= Material.Modes.ZTRANSP    # turn on Z-Buffer transparency",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bef",
      "text": "     #mat.setAdd(0.8)                       # make it glow",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf0",
      "text": "     mat.setMode('Halo')                   # turn 'Halo' \"on\" and all others \"off\"",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf1",
      "text": "     return mat",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf2",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf3",
      "text": " def koch(level=1, unit=1):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf4",
      "text": "     if level == 0:",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf5",
      "text": "         turtle.forward(unit)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf6",
      "text": "     else:",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf7",
      "text": "         koch(level - 1, unit)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf8",
      "text": "         turtle.rot(deg(60))",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bf9",
      "text": "         koch(level - 1, unit)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bfa",
      "text": "         turtle.rot(deg(-120))",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bfb",
      "text": "         koch(level - 1, unit)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bfc",
      "text": "         turtle.rot(deg(60))",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bfd",
      "text": "         koch(level - 1, unit)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bfe",
      "text": "         ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1bff",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c00",
      "text": " turtle = Turtle()",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c01",
      "text": " koch(4, 0.6)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c02",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c03",
      "text": " for i in range(100):",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c04",
      "text": "     ob = Object.New('Mesh', 'myObj')  # link mesh to an object",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c05",
      "text": "     m = turtle.build_mesh(i / 5.0)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c06",
      "text": "     m.materials += [makeHalo(i / 100.0)]",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c07",
      "text": "     ob.link(m)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c08",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c09",
      "text": "     sc = Scene.GetCurrent()          # link object to current scene",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c0a",
      "text": "     sc.link(ob)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c0b",
      "text": " ||<",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c0c",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c0d",
      "text": " *1243771020*どうぶつしょうぎ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c0e",
      "text": " https://www.joshi-shogi.com/ec/bankoma/animal.html",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c0f",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c10",
      "text": " ほうほう、これは面白そう。<a href='http://www.joshi-shogi.com/1day/2009/04/rules.html'>どうぶつしょうぎ・ルール概要 (1DAYトーナメント｜日本女子プロ将棋協会)</a>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c11",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c12",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c13",
      "text": " f:id:nishiohirokazu:20090531205715j:image",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c14",
      "text": " とりあえず作った。ふむ、これは駒の少なさの割には意外と考えられているなぁ。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c15",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c16",
      "text": " 後退解析をやるとする。とりあえず「敵が入玉したがそれを取ることができない」と「自分が取られた」が負け局面なんだな。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c17",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c18",
      "text": " ああ、だめだ。後退解析は単調減少な特徴量がないと使えないらしい。<a href='http://ci.nii.ac.jp/naid/110006407467/en'>CiNii -  Retrograde Analysis of Dodgem Game</a>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c19",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c1a",
      "text": " いや、まてよ。<a href='http://ci.nii.ac.jp/naid/110006530809/'>CiNii -  Complete Analysis of a Board Game \"SIMPEI\"(Analysis, Game Programming)</a>には単調減少な特徴量はないよな。そっか、単調減少な特徴量があれば、その特徴量を使ってゲームの局面を「一方通行な」いくつかのグループに分割することができるというのが前者の話で、「シンペイは状態空間が小さいから全体を一つのグループとして後退解析できてしまう」というのが後者の話か。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c1b",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c1c",
      "text": " きちんとどうぶつしょうぎの状態数を計算してみよう。まず、ライオンが先手が12ヶ所のうちのどこか、後手が残り11ヶ所のうちのどこか、で132通り。ゾウとキリンが「先手で空きマスにいる」「後手で空きマスにいる」「先手の持ち駒」「後手の持ち駒」なので<del>(10 + 10 + 1 + 1) * (9 + 9 + 1 + 1) * ... = 126720</del><ins>22 ** 4 =234256</ins>あれば十分。「十分」と言ったのは、両方先手や両方後手だったりすると交換したものも同一局面なので1/4くらいは頑張れば節約できるから。(追記: 持ち駒のときは置ける場所が減らないので22 ** 4に変更)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c1d",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c1e",
      "text": " 最後にヒヨコが厄介だ。成るから。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c1f",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c20",
      "text": " <hr>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c21",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c22",
      "text": " ここで対人戦を2回ほど。Google Spredsheetはチャットもついていて同時編集もできてとても便利だということを知った。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c23",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c24",
      "text": " <hr>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c25",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c26",
      "text": " キリンとゾウと、どちらも4地点に動くけどどう考えてもゾウの方が弱いよね、という話。端の影響で動けなくなるのがゾウの方が多いから。各12マスで何地点に動けるかを合計したもの: ヒヨコ9, ゾウ24, キリン34, ニワトリ46, ライオン58。単純にこの数字だけだと、ゾウ+ヒヨコをキリンと交換しても得ということになるが実際はどうだろうか。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c27",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c28",
      "text": " <hr>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c29",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c2a",
      "text": " さてヒヨコの続き。ヒヨコは「ヒヨコであるとき9通り」「ニワトリであるとき12通り」「持ち駒」だから先手後手あわせて44通り。置ける場所が減る効果を無視すると1936通りあれば十分。ニワトリであるときの置ける場所は10個以下。よって1600通りで十分。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c2b",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c2c",
      "text": " さて、全部の合計で59864589312。600億。60G。んー、これはちょっと多いなぁ。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c2d",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c2e",
      "text": " <hr>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c2f",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c30",
      "text": " まだきっちり理解していないんだけども退行解析って一状態当たりに持つべき情報は「勝ち、負け、千日手」の2ビットなのかな。だとすると15GB。対称性を使って3.75GB。あ、ニワトリであるときの置ける場所も10通り以下なので元の値が50Gに減る。だからここまでで3.15GBだな。上の「頑張れば3/4くらいに減る」をまじめに実行すれば半分以下になって2GBの僕のMacBookでもオンメモリで持てるレベルになるなぁ。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c31",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c32",
      "text": " <hr>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c33",
      "text": " 先手ライオンL0 0-11",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c34",
      "text": " 後手ライオンL1 0-10 (if L1 > L0: L1--)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c35",
      "text": " キリン、まず「先手先手」「先手後手」「後手後手」の3つにわけられる「後手先手」は正規化。先手先手と後手後手に関しては「小さい方が先」ルールでさらに半分になる。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c36",
      "text": " 先先は「2枚とも持ち駒」「1枚持ち駒、残りが0-9」「0-9と0-8、ただし小さい順で1/2」で1 + 10 + 45、後後も同じなので合計112、先後は「2枚とも持ち駒」「1枚持ち駒、残りが0-9、持ち駒なのが先手か後手かで2倍」「0-9と0-8」の合計で1 + 20 + 90 = 111。全体の合計で223通り。最初の22 ** 2 = 484という概算から半分に減ったな。「後手先手」が消えて1/4減と、先手先手と後手後手がそれぞれ半分になったことで1/4減だね。ゾウとヒヨコに関しても同じように半減するなら全体で3GBの1/8になって750MBくらいで動くようになるな。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c37",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c38",
      "text": " ゾウとヒヨコについて「キリンがすでにいるせいで置けないマス」による削減を入れると小さくなるけど複雑になりすぎる気がする。ライオンだけ飛ばして計算する程度で十分かもしれない。そうするともれなく0-9 * 0-9で、キリンが121 * 122 = 243。これでも半分。ゾウも複雑に考える必要がなくなって、キリンと全く同じで243。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c39",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c3a",
      "text": " ヒヨコも(ヒヨコ領域にライオンがいるかどうかの条件分岐は面倒だから省いたとして) 0-8(ヒヨコ) + 0-9(ニワトリ)の19ヶ所に置く場所が増えただけなので、先先が1 + 19 + 19 * 18 / 2 = 191、先後が1 + 19 * 2 + 19 * 19 = 400、全体で782通り。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c3b",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c3c",
      "text": " さて、12 * 11 * 243 * 243 * 782 = 6095273976。うーん、1状態2bitでpackして1.5GBか。あ、で、ここから左右の対称性で半分に減らして、「先手の勝ち局面は後手の負け局面」の対称性でまた半分に減らすけども、局面に「いまどちらの手番か」をつけないと行けないのと相殺して、最終的に0.75GBか。んー、左右の対称性での削減は面倒だなぁ。1.5GBだったら一応MacBookで動くはずだからいいか。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c3d",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c3e",
      "text": " <hr>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c3f",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c40",
      "text": " めんどくさそうだしバグが入りそうだからってスキップしたけど0.9 * 0.8 * 0.7 * 0.6 * 0.5 = 0.1512から考えるとキリンの駒でゾウの駒が置ける場所が減る効果を実装すると4 ~ 5倍小さくなってもおかしくないなぁ。桁が固定じゃないエンコーディングはややこしいが、キリンの桁数が223なのはわかっているので x mod 223の値をキリンの位置の特定に使って、それによって決まる値Nで (x / 223) mod Nしてゾウの位置を決めて...と階層的にやっていけばいいだけか。落ち着いてやればできる気がする。それにここまで小さくなると局面がuint32tに収まるようになるんだよな。ちょっと惹かれる。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c41",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c42",
      "text": " <hr>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c43",
      "text": " via id:TOKOROTEN",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c44",
      "text": " http://sig-gi.tanaka.ecc.u-tokyo.ac.jp/cfp/20091-program.html",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c45",
      "text": " >>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c46",
      "text": " 3.「どうぶつしょうぎ」の完全解析",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c47",
      "text": " ○田中哲朗(東京大学)",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c48",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c49",
      "text": " 後退解析を用いて「どうぶつしょうぎ」というボードゲームの完全解析をおこなった．その手法と，解析の結果分かったゲームの性質を説明する．",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c4a",
      "text": " <<",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c4b",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c4c",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c4d",
      "text": " orz...",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c4e",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c4f",
      "text": " しかも",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c50",
      "text": " http://toybox.tea-nifty.com/memo/2009/04/post-3f5f.html",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c51",
      "text": " >>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c52",
      "text": " 探索局面数が約2億局面あったそうで、意外に難解なゲームのようです。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c53",
      "text": " <<",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c54",
      "text": " ",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c55",
      "text": " 概算で600億あるのを頑張って60億まで減らして、もうちょっと頑張れば6億になりそう(持ち駒でない駒が盤面をしめる効果＋左右の対称性)ってところまでやっとのことでたどり着いたのに、まださらに3倍も削るところがあるとは…。",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c56",
      "text": " </body>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c57",
      "text": " <comments>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c58",
      "text": " <comment>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c59",
      "text": " <username>田中哲朗</username>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c5a",
      "text": " <body>お久しぶりです．局面数に関して疑問をもつのはもっともで，「持ち駒でない駒が盤面をしめる効果」だけでは1,567,925,964までしか局面数は減りませんし，「左右の対称性」を入れてもその半分程度にしかなりません．そこで，「ライオンが取れる時は必ず勝つ」として，初期局面から到達可能な局面のみを対称にすることで，246,803,167まで局面数を減らしました．当然，「初期局面から到達可能な局面」のみをuint32でencodingすることはできないので，それぞれの局面をuint64でencodingして，「初期局面から到達可能な局面」をすべて含んだsorted vectorを作ることにしました．一度出来てしまえば，使用するメモリは2GB程度ですが，作る際にはhash_setを使って13GB程度かかりました．メモリが足りなければ，もっと工夫することも考えたのですが，とりあえず足りてしまったのでそんなに頑張っていません．結果は初期局面は後手勝ち(78手)となったのですが，バグがある可能性は排除できないので，orzと言わずに追試していただけたらありがたいと思います．</body>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c5b",
      "text": " <timestamp>1243829672</timestamp>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c5c",
      "text": " </comment>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c5d",
      "text": " <comment>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c5e",
      "text": " <username>nishiohirokazu</username>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c5f",
      "text": " <body>お久しぶりです！<br>まだわからないところも色々ありますけど、後退解析の勉強に、できるところまでやってみたいと思います。</body>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c60",
      "text": " <timestamp>1243851174</timestamp>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c61",
      "text": " </comment>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c62",
      "text": " </comments>",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c63",
      "text": "",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec23aff09e00003d1c64",
      "text": "[はてなダイアリー 2009-05-31 https://nishiohirokazu.hatenadiary.org/archive/2009/05/31]",
      "created": 1243695600,
      "updated": 1243695600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}