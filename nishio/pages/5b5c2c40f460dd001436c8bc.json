{
  "id": "5b5c2c40f460dd001436c8bc",
  "title": "エンジニアの知的生産術 プログラミングはどうやって学ぶか",
  "created": 1532767298,
  "updated": 1532773340,
  "lines": [
    {
      "id": "5b5c2c40f460dd001436c8bc",
      "text": "エンジニアの知的生産術 プログラミングはどうやって学ぶか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767298,
      "updated": 1532773124
    },
    {
      "id": "5b5c42feaff09e000004fce3",
      "text": "「エンジニアの知的生産術」の「[はじめに https://scrapbox.io/nishio/%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E7%9F%A5%E7%9A%84%E7%94%9F%E7%94%A3%E8%A1%93_%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB]」の章から一部抜粋して紹介します。書籍について詳しくはこちら: [エンジニアの知的生産術 https://scrapbox.io/nishio/%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E7%9F%A5%E7%9A%84%E7%94%9F%E7%94%A3%E8%A1%93_%E8%91%97%E8%80%85%E5%85%AC%E5%BC%8F%E3%83%9A%E3%83%BC%E3%82%B8@Scrapbox]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532773118,
      "updated": 1532773118
    },
    {
      "id": "5b5c42fdaff09e000004fce2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532773118,
      "updated": 1532773118
    },
    {
      "id": "5b5c2c45aff09e000004fc6a",
      "text": "[*** プログラミングはどうやって学ぶか]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767312
    },
    {
      "id": "5b5c2c45aff09e000004fc6b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc6c",
      "text": "知的生産術について考えていくうえで、「学び方」について学ぶことは避けられません。しかしこれは抽象的なので、まずはもっと具体的に、プログラミングの学び方について考えてみましょう。私はプログラミングの学びのプロセスは「情報収集・モデル化・検証」の3要素の繰り返しだと考えています。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767325
    },
    {
      "id": "5b5c3bd1aff09e00007c3eb2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532771281,
      "updated": 1532771281
    },
    {
      "id": "5b5c3ca4aff09e00007c3eb4",
      "text": "[https://gyazo.com/42ebd9375c1d3ff9ff1bffe69918fad6]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532771492,
      "updated": 1532771492
    },
    {
      "id": "5b5c3bd2aff09e00007c3eb3",
      "text": "図::学びは情報収集・モデル化・検証の繰り返し",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532771283,
      "updated": 1532771499
    },
    {
      "id": "5b5c3cacaff09e00007c3eb5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532771501,
      "updated": 1532771501
    },
    {
      "id": "5b5c2c45aff09e000004fc70",
      "text": "[** まずは具体的に情報収集する]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767334
    },
    {
      "id": "5b5c2c6daff09e000004fcc6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767342,
      "updated": 1532767342
    },
    {
      "id": "5b5c2c45aff09e000004fc72",
      "text": "最初の一歩は、具体的に情報収集することです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767339
    },
    {
      "id": "5b5c2c45aff09e000004fc73",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc74",
      "text": "プログラミングを学ぶとき、多くの場合、まずほかの人が書いたプログラムを読みます。また読むだけではなく、まねて入力するテクニック「写経」もよく使われています。これが「具体的な情報収集」です。本書でもいくつもの知的生産にまつわる課題とその解決策を紹介します。これはプログラミングのサンプルコードのようなものです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767344
    },
    {
      "id": "5b5c2c45aff09e000004fc75",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc76",
      "text": "[** 抽象化してモデルを作る]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767350
    },
    {
      "id": "5b5c2c45aff09e000004fc77",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc78",
      "text": "具体的な情報収集が進んであなたの脳の中に材料がそろってくると、次に「抽象化」が起きます。抽象化は、複数の具体的情報から共通するパターンを見いだすことや、どこが重要でどこが枝葉かを判断することと、強い関連を持っています。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767352
    },
    {
      "id": "5b5c2c45aff09e000004fc79",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc7a",
      "text": "複数のものを見比べ、共通点を見いだすことが、抽象化の助けになります。ここで「Hello, world!と表示するコード」をプログラミング言語Pythonで書いたものを見てみましょう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767355
    },
    {
      "id": "5b5c2c45aff09e000004fc7b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc7c",
      "text": "code:python: Hello, world! と表示するコード1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767501
    },
    {
      "id": "5b5c2c45aff09e000004fc7f",
      "text": " print(\"Hello, world!\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767364
    },
    {
      "id": "5b5c2c88aff09e000004fcc7",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767369,
      "updated": 1532767369
    },
    {
      "id": "5b5c2c45aff09e000004fc80",
      "text": "code:出力結果",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767511
    },
    {
      "id": "5b5c2c45aff09e000004fc81",
      "text": " Hello, world!",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767513
    },
    {
      "id": "5b5c2c90aff09e000004fcc8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767377,
      "updated": 1532767377
    },
    {
      "id": "5b5c2c45aff09e000004fc85",
      "text": "Pythonの経験がない人でも、このコードと出力結果とを見比べると、共通部分があることに気付くことでしょう。これがパターンの発見です。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767381
    },
    {
      "id": "5b5c2c9daff09e000004fcc9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767390,
      "updated": 1532767390
    },
    {
      "id": "5b5c2c45aff09e000004fc86",
      "text": "code:python: あなたが見いだしたパターン",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767523
    },
    {
      "id": "5b5c2c45aff09e000004fc87",
      "text": " print(\"きっとここに書いたものが表示される\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767525
    },
    {
      "id": "5b5c2ca2aff09e000004fcca",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767395,
      "updated": 1532767395
    },
    {
      "id": "5b5c2c45aff09e000004fc8a",
      "text": "もし「Bye, world!と出力したい」なら、どこをどう書き換えればよいかわかりますね。つまり、パターンを発見したことで、自分の目的に合わせてプログラムを修正する能力を得たわけです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767402
    },
    {
      "id": "5b5c2c45aff09e000004fc8d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc8e",
      "text": "次のコードもPythonで書かれた「Hello, world!と表示するコード」ですが、これを初めてPythonを学ぶ人に見せても、修正できるようにはならないでしょう。出力の「Hello, world!」とソースコードの間に共通点を見つけることができないからです(注:勘の良い人ならコード1とコード2を比較して、\"\".joinから始まる複雑なコードが\"Hello, world!\"という文字列を作っているのではないかと思うかもしれません。それは正解ですが、本書はPythonの教科書ではないので詳しい解説はしません。)。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767404
    },
    {
      "id": "5b5c2caeaff09e000004fccb",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767407,
      "updated": 1532767407
    },
    {
      "id": "5b5c2c45aff09e000004fc8f",
      "text": "code:python: Hello, world! と表示するコード2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767535
    },
    {
      "id": "5b5c2c45aff09e000004fc90",
      "text": " print(\"\".join(map(chr, [72, 101, 108, 108, 111, 44, 32, 119, 111, 114, 108, 100, 33])))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767533
    },
    {
      "id": "5b5c2cb6aff09e000004fccc",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767414,
      "updated": 1532767414
    },
    {
      "id": "5b5c2c45aff09e000004fc93",
      "text": "この本では、知的生産術を比較することで、みなさんが自分の中に知的生産術のモデルを作ることを手助けしたいと思っています。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767416
    },
    {
      "id": "5b5c2c45aff09e000004fc96",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc97",
      "text": "[** 実践して検証する]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767424
    },
    {
      "id": "5b5c2c45aff09e000004fc98",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fc99",
      "text": "さて、ここまでであなたはパターンを見いだし、「PythonでBye, world!と出力したい場合には、こう書けばよいのではないか？」と思い付く能力を手に入れました。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767425
    },
    {
      "id": "5b5c2cc4aff09e000004fccd",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767429,
      "updated": 1532767429
    },
    {
      "id": "5b5c2c45aff09e000004fc9a",
      "text": "code:python: あなたが見いだしたパターン",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767546
    },
    {
      "id": "5b5c2c45aff09e000004fc9b",
      "text": " print(\"きっとここに書いたものが表示される\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767547
    },
    {
      "id": "5b5c2cd3aff09e000004fcce",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767444,
      "updated": 1532767444
    },
    {
      "id": "5b5c2c45aff09e000004fc9e",
      "text": "code:python: 「Bye, world!」と出力するだろうと思われるコード",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767557
    },
    {
      "id": "5b5c2c45aff09e000004fc9f",
      "text": " print(\"Bye, world!\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767555
    },
    {
      "id": "5b5c2c45aff09e000004fca1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767561
    },
    {
      "id": "5b5c2c45aff09e000004fca3",
      "text": "しかし、これはあくまで仮説です。本当にその方法で「Bye, world!と出力する」という目的が達成できるかは、実際に試してみなければわかりません。試してみると、この具体例に関しては、目的が達成できることがわかります。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767562
    },
    {
      "id": "5b5c2c45aff09e000004fca4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fca5",
      "text": "では複数行に分けて「Hello,（改行）world!」と出力したい場合はどうでしょう？ 仮説が正しいなら、こう書けばよいはずです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767564
    },
    {
      "id": "5b5c2d50aff09e000004fccf",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767568,
      "updated": 1532767568
    },
    {
      "id": "5b5c2c45aff09e000004fca6",
      "text": "code:python: 「Hello,（改行）world!」と出力するだろうと思われるコード",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767579
    },
    {
      "id": "5b5c2c45aff09e000004fca9",
      "text": " print(\"Hello,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767580
    },
    {
      "id": "5b5c2c45aff09e000004fcaa",
      "text": " world!\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767582
    },
    {
      "id": "5b5c2c45aff09e000004fcab",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767586
    },
    {
      "id": "5b5c2c45aff09e000004fcad",
      "text": "試してみると、このコードは構文エラーになり、期待どおりに動かないことがわかります。これは失敗ではありません。「この方法ではうまくいかない」という具体的情報を発見したのです。これは学びのチャンスです。「どうして思ったように動かないのか？」──こう考えることで、あなたは理解を深めていくことができます。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767588
    },
    {
      "id": "5b5c3ce5aff09e00007c3eb6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532771558,
      "updated": 1532771558
    },
    {
      "id": "5b5c3ce6aff09e00007c3eb7",
      "text": "[https://gyazo.com/2c0a945150a3de486b822e725d3d5a6d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532771559,
      "updated": 1532771559
    },
    {
      "id": "5b5c2c45aff09e000004fcaf",
      "text": "図::期待と現実の[ギャップ]を発見した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532773340
    },
    {
      "id": "5b5c2c45aff09e000004fcb0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fcb1",
      "text": "この例では「改行をprintしたいとき、単に改行したのではうまくいかない」という事実を発見しました。次は、この課題の解決方法を探します。たとえば検索エンジンなどで探す(注:具体的には、Google検索で\"Python 改行 print\"と検索するなどです。)と、役に立ちそうな情報を含んだサンプルコードが見つかるでしょう。そのサンプルコードは、あなたの「Hello,（改行）world!」を出力するという目的を達成する方法を直接教えてくれるわけではありません。きっと何か別のものを表示するコードでしょう。しかし、この新しいサンプルコードを、今までにあなたが集めた情報と比較すれば、あなたはパターンを見いだし、「なるほど、じゃあこう実装すれば目的が達成できるはずだ」という新しい仮説を生み出すことができるでしょう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767593
    },
    {
      "id": "5b5c2c45aff09e000004fcb2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fcb3",
      "text": "具体的に情報収集し、比較してパターンを発見し、実践して検証し、期待と現実のギャップを発見して、また情報収集をしました。このサイクルを繰り返すことで、あなたはプログラミング能力を学ぶことができます。サイクルを繰り返すことで、新しいプログラムを生み出す力が鍛えられるわけです。知的生産術の学び方も同じです。具体的な情報収集、比較してパターン発見、実践して検証を繰り返すことで学んでいくのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767599
    },
    {
      "id": "5b5c2c45aff09e000004fcb4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1532767302
    },
    {
      "id": "5b5c2c45aff09e000004fcb5",
      "text": "[エンジニアの知的生産術 著者公式ページ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532767302,
      "updated": 1537708242
    },
    {
      "id": "5b5c43c7aff09e000004fce5",
      "text": "次: [エンジニアの知的生産術 この本の流れ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532773319,
      "updated": 1532773322
    },
    {
      "id": "5b5c43c8aff09e000004fce6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1532773321,
      "updated": 1532773321
    }
  ]
}