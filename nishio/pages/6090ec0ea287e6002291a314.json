{
  "id": "6090ec0ea287e6002291a314",
  "title": "Hatena2015-01-21",
  "created": 1421766000,
  "updated": 1421766000,
  "lines": [
    {
      "id": "6090ec31aff09e00003dfca9",
      "text": "Hatena2015-01-21",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcaa",
      "text": "code:hatena",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcab",
      "text": " <body>",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcac",
      "text": " *1421848052*FlaskをJSから叩いてエラーになった時に対話的デバッグする方法",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcad",
      "text": " WebアプリフレームワークのFlask(が内部で使っているWerkzeug)は、デバッグモードをONにしておくとエラーが起きた時にそのエラー画面からブラウザ上で対話的にコードを実行したり変数を表示させたりしてデバッグが出来る。これは超便利。なのだけど、最近JSからAPIを叩くケースが多くなって、その場合JSが予期しないHTMLを受け取ってパースに失敗するだけなので折角の対話的デバッグが生かせない。",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcae",
      "text": " ",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcaf",
      "text": " そこで、エラー時には新しいwindowを開いて、レスポンスの内容をそちらに書き出すようにした。初回だけポップアップブロックが発動してしまうけど、それ以降はこれでAPIでも対話的デバッグが出来る。",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb0",
      "text": " ",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb1",
      "text": " >|js|",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb2",
      "text": " $.ajax({",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb3",
      "text": "   url:'/buggy/', ",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb4",
      "text": "   data: 'q=42', ",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb5",
      "text": "   success: function(x){console.log(x)}, ",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb6",
      "text": "   error:function(x){",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb7",
      "text": "     var w = window.open('', 'debug_stuff', 'width=540,height=150');",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb8",
      "text": "     w.document.open();",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcb9",
      "text": "     w.document.write(x.responseText);",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcba",
      "text": "     w.document.close();",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcbb",
      "text": "   }",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcbc",
      "text": " });",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcbd",
      "text": " ||<",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcbe",
      "text": " ",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcbf",
      "text": " サーバ上でpdbデバッグという案(thanks @cocoatomo)に関しては、サーバのコード中でpdb.set_trace()で止めた場合は、コンソール上で対話的にデバッグすることはできるのですけど、python -mpdb server.pyした場合、例外発生時期待通りに対話的デバッガに入らない。おそらくFlask自体の例外処理と干渉してる。",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcc0",
      "text": " ",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcc1",
      "text": " 「スタックトレースを生かしたまま持っておいて、デバッグ用の画面にリダイレクトしているだけなので、リダイレクトのURLを適当に拾ってブラウザからそのURLにアクセスすればデバッグ画面を開けます。」(thanks @methane) がとても参考になったけども、どうも僕の環境ではリダイレクトはしていないみたいに見えて、あとXMLHttpRequestがリダイレクト先に勝手にアクセスするので面倒くさい。",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcc2",
      "text": " ",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcc3",
      "text": " このアドバイスがヒントになって、最終的にはここに書かれている内容に辿り着いた:",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcc4",
      "text": " <a href='http://stackoverflow.com/questions/9741628/posting-json-and-python-flask-any-techniques-to-use-the-werkzeug-debugger'>debugging - Posting JSON and python Flask - any techniques to use the Werkzeug debugger? - Stack Overflow</a>",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcc5",
      "text": " </body>",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcc6",
      "text": "",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003dfcc7",
      "text": "[はてなダイアリー 2015-01-21 https://nishiohirokazu.hatenadiary.org/archive/2015/01/21]",
      "created": 1421766000,
      "updated": 1421766000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}