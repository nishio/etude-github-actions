{
  "id": "6090ec0ba287e6002291a262",
  "title": "Hatena2012-09-06",
  "created": 1346857200,
  "updated": 1346857200,
  "lines": [
    {
      "id": "6090ec2faff09e00003dcfbd",
      "text": "Hatena2012-09-06",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfbe",
      "text": "code:hatena",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfbf",
      "text": " <body>",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc0",
      "text": " *1346930683*loggingでの出力はdoctestを妨げない",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc1",
      "text": " おお、これでlogging.debugのメッセージはコンソールに表示されて、doctestは影響を受けずに成功する。知らなかった。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc2",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc3",
      "text": " 追記：おっと、干渉しないように設計してあるのかと思ったがそういうことじゃなくて単純にlogging.debugが標準エラー出力に出ているだけだった＞If stream is not specified, sys.stderr is used.",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc4",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc5",
      "text": " >|python|",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc6",
      "text": " \"\"\"",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc7",
      "text": " >>> foo()",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc8",
      "text": " 1",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfc9",
      "text": " \"\"\"",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfca",
      "text": " import logging",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfcb",
      "text": " logging.basicConfig(level=logging.DEBUG)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfcc",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfcd",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfce",
      "text": " def foo():",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfcf",
      "text": "     logging.debug(\"enter foo\")",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd0",
      "text": "     print 1",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd1",
      "text": "     logging.debug(\"exit foo\")",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd2",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd3",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd4",
      "text": " def _test():",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd5",
      "text": "     import doctest",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd6",
      "text": "     doctest.testmod()",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd7",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd8",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfd9",
      "text": " if __name__ == \"__main__\":",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfda",
      "text": "     _test()",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfdb",
      "text": " ||<",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfdc",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfdd",
      "text": " *1346933870*テスト中だけデバッグ出力をONにして内容をテスト",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfde",
      "text": " テスト対象の中のprivateな値が期待通りに変化していることをgetterを作って晒したりせずに確認する、というのをやってみた。with構文を使ってテストの間だけ一時的なログハンドラを貼り付けてやってる。doctestに書いてあるように普通にCounter().push()した時には何も表示されないが、with TemporaryLogHandler(__name__)で囲うとログが出力されるようになる。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfdf",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe0",
      "text": " >|python|",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe1",
      "text": " \"\"\"",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe2",
      "text": " >>> Counter().push()",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe3",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe4",
      "text": " >>> from templog import TemporaryLogHandler",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe5",
      "text": " >>> with TemporaryLogHandler(__name__):",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe6",
      "text": " ...     Counter().push()",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe7",
      "text": " current value: 0",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe8",
      "text": " value changed to: 1",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfe9",
      "text": " \"\"\"",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfea",
      "text": " import logging",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfeb",
      "text": " logger = logging.getLogger(__name__)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfec",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfed",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfee",
      "text": " class Counter(object):",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfef",
      "text": "     def __init__(self):",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff0",
      "text": "         self.__value = 0",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff1",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff2",
      "text": "     def push(self):",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff3",
      "text": "         logger.debug(\"current value: %s\", self.__value)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff4",
      "text": "         self.__value += 1",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff5",
      "text": "         logger.debug(\"value changed to: %s\", self.__value)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff6",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff7",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff8",
      "text": " def _test():",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcff9",
      "text": "     import doctest",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcffa",
      "text": "     doctest.testmod()",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcffb",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcffc",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcffd",
      "text": " if __name__ == \"__main__\":",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcffe",
      "text": "     _test()",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dcfff",
      "text": " ||<",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd000",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd001",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd002",
      "text": " 実装はこんな感じ。StreamHandlerでログ出力を標準出力に出すようにして、doctestでそれをテストしている。もちろんユニットテスト的なことがしたいのであればcStringIO.StringIOに出力するようにしてその値をテストしても良いだろうと思う。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd003",
      "text": " >|python|",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd004",
      "text": " import sys",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd005",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd006",
      "text": " class TemporaryLogHandler(object):",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd007",
      "text": "     def __init__(self, logger_name):",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd008",
      "text": "         self.logger_name = logger_name",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd009",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd00a",
      "text": "     def __enter__(self):",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd00b",
      "text": "         self.handler = logging.StreamHandler(sys.stdout)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd00c",
      "text": "         self.handler.setLevel(logging.DEBUG)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd00d",
      "text": "         logger = logging.getLogger(self.logger_name)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd00e",
      "text": "         self.old_level = logger.level",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd00f",
      "text": "         logger.setLevel(logging.DEBUG)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd010",
      "text": "         logger.addHandler(self.handler)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd011",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd012",
      "text": "     def __exit__(self, *args):",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd013",
      "text": "         logger = logging.getLogger(self.logger_name)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd014",
      "text": "         logger.removeHandler(self.handler)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd015",
      "text": "         logger.setLevel(self.old_level)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd016",
      "text": " ||<",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd017",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd018",
      "text": " この状態では別のログを出してもそのログがハンドラに拾われてしまってテストがfailするようになるから、テストに使う出力はテスト用のロガーに出したほうがいいのかもしれないなぁ。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd019",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd01a",
      "text": " *1346938523*「Pythonで記号なしプログラミング」(未完)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd01b",
      "text": " 竹迫さんがPerlで記号なしプログラミングの偉業を達成したのは7年前だった。(see <a href='http://namazu.org/~takesako/diary/?date=20050831'>ppencode</a>)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd01c",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd01d",
      "text": " そしてoxyさんがRubyで記号のみプログラミングを達成した(<a href='http://mono.kmc.gr.jp/~oxy/d/?date=20050901#p01'>rrencode</a>)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd01e",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd01f",
      "text": " 7年前にも「Pythonで記号なしプログラミングできないの？」と言われた。当時若かった(まだ四捨五入したら二十歳だった)僕は「いやー、無理ですよ」とバッサリ切り捨てていた。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd020",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd021",
      "text": " あれから7年経って、Pythonの文法はさほど変わっていないけど、僕の考え方が変わった。ユーザの要望に「それは無理」なんて言っちゃうのは下策だ。100%達成することが不可能な問題でも、8割解くのは可能だったりする。「100%やるのはこれこれの理由で無理だが、この条件を緩めれば可能」と提案する方が上策だ。後者では8割分の価値を作り出すことができているが、前者では理由がいかに正しかろうが何も作り出すことができていない。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd022",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd023",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd024",
      "text": " さて、なにを緩めるか。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd025",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd026",
      "text": " PythonではRubyと違ってすべての関数呼び出しにカッコが必須だ。だからカッコを禁止されるととても苦しくなる。また、カンマを使わずにイテレート可能なオブジェクトを作ろうとすると、文字列かジェネレータかという選択になるが、前者は引用符、後者はカッコとコロンと改行とインデントが必要になる。文字列を使うのはあんまり面白くないだろうし、ジェネレータのためだけにコロンを要求するのも嫌だ。というわけで「小文字アルファベットとカッコとカンマだけで」をゴールにしよう。空白文字も改行も必要ない。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd027",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd028",
      "text": " 完成したのがこちらのPythonスクリプト。見やすくするために入れてある80文字での改行と最後の行のコメントは取り除いても実行に影響しない。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd029",
      "text": " >|python|",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd02a",
      "text": " print(bytearray(len(repr(x))for(x)in(repr((repr((str(list(str(((),)))),())),)),(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd02b",
      "text": " repr)((repr((repr(str(help)),())),)),str(list(str(id))),str(list(str(id))),str((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd02c",
      "text": " list)((repr((repr((repr((str((str)(help)),())),())),)),))),str(object(),),repr((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd02d",
      "text": " repr((str(list(str(((),)))),())),)),repr((repr((repr(str(help)),())),)),repr(str",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd02e",
      "text": " (list(repr(str(set()))))),repr(((repr)(repr((repr)(str(help)))),)),str(list(str(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd02f",
      "text": " buffer))),repr(str(list(repr(str(((),())))))),repr((repr((repr((str(str(help)),(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd030",
      "text": " ))),())),)),repr((str(abs),())),str(object()),repr(((str)(object(),),())),repr((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd031",
      "text": " repr((repr(repr(str(abs))),())),())),repr((repr((str(eval),())),)),str(object())",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd032",
      "text": " ,repr((repr((str(object()),())),())),repr(repr((repr(str(int)),()))),str((list)(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd033",
      "text": " repr(str(((),))))),repr((repr((str(object()),())),())),str(object(),),str(list((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd034",
      "text": " str(str(help)),))),repr((repr(((repr)((repr(str(abs)),())),())),())),repr((repr(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd035",
      "text": " str(help)),)),repr((repr((str(list(str(((),)))),())),)),repr((repr((repr((repr((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd036",
      "text": " str)(abs)),())),())),())),repr((str(str(help)),)),str(object()),repr((repr((str(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd037",
      "text": " list(str(((),)))),())),)),str(list(str(buffer))),repr((repr(repr(str(list(str(((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd038",
      "text": " ),)))))),)),repr(repr(repr(str(list(str(((),))))))),repr((repr(repr(repr((str)((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd039",
      "text": " help))))),)),repr((repr((repr(str(help)),())),)),str(list(str(eval))),str(list((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd03a",
      "text": " str)(abs))))))  # \"Happy Hacking!\" using [a-z(),] only. (C) 2012 NISHIO Hirokazu",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd03b",
      "text": " ||<",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd03c",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd03d",
      "text": " python2.7で実行すると「Happy Hacking! (C) 2012 NISHIO Hirokazu」と表示される。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd03e",
      "text": " >||",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd03f",
      "text": " $ python2.7",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd040",
      "text": " Python 2.7.3 (default, Apr 19 2012, 00:55:09)",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd041",
      "text": " [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)] on darwin",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd042",
      "text": " Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd043",
      "text": " >>> print(bytearray(len(repr(x))for(x)in(repr((repr((str(list(str(((),)))),())),)),(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd044",
      "text": " ... repr)((repr((repr(str(help)),())),)),str(list(str(id))),str(list(str(id))),str((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd045",
      "text": " ... list)((repr((repr((repr((str((str)(help)),())),())),)),))),str(object(),),repr((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd046",
      "text": " ... repr((str(list(str(((),)))),())),)),repr((repr((repr(str(help)),())),)),repr(str",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd047",
      "text": " ... (list(repr(str(set()))))),repr(((repr)(repr((repr)(str(help)))),)),str(list(str(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd048",
      "text": " ... buffer))),repr(str(list(repr(str(((),())))))),repr((repr((repr((str(str(help)),(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd049",
      "text": " ... ))),())),)),repr((str(abs),())),str(object()),repr(((str)(object(),),())),repr((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd04a",
      "text": " ... repr((repr(repr(str(abs))),())),())),repr((repr((str(eval),())),)),str(object())",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd04b",
      "text": " ... ,repr((repr((str(object()),())),())),repr(repr((repr(str(int)),()))),str((list)(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd04c",
      "text": " ... repr(str(((),))))),repr((repr((str(object()),())),())),str(object(),),str(list((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd04d",
      "text": " ... str(str(help)),))),repr((repr(((repr)((repr(str(abs)),())),())),())),repr((repr(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd04e",
      "text": " ... str(help)),)),repr((repr((str(list(str(((),)))),())),)),repr((repr((repr((repr((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd04f",
      "text": " ... str)(abs)),())),())),())),repr((str(str(help)),)),str(object()),repr((repr((str(",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd050",
      "text": " ... list(str(((),)))),())),)),str(list(str(buffer))),repr((repr(repr(str(list(str(((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd051",
      "text": " ... ),)))))),)),repr(repr(repr(str(list(str(((),))))))),repr((repr(repr(repr((str)((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd052",
      "text": " ... help))))),)),repr((repr((repr(str(help)),())),)),str(list(str(eval))),str(list((",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd053",
      "text": " ... str)(abs))))))  # \"Happy Hacking!\" using [a-z(),] only. (C) 2012 NISHIO Hirokazu",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd054",
      "text": " Happy Hacking! (C) 2012 NISHIO Hirokazu",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd055",
      "text": " ||<",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd056",
      "text": " ",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd057",
      "text": " 現状で僕にできることはこれが限界だ。でもそれでいいんじゃない。できないことを悩んでも仕方がない。",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd058",
      "text": " </body>",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd059",
      "text": "",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd05a",
      "text": "[はてなダイアリー 2012-09-06 https://nishiohirokazu.hatenadiary.org/archive/2012/09/06]",
      "created": 1346857200,
      "updated": 1346857200,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}