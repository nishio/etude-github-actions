{
  "id": "603bac4857a620001d8e2539",
  "title": "✅ARC074D",
  "created": 1614523467,
  "updated": 1615963885,
  "lines": [
    {
      "id": "603bac4857a620001d8e2539",
      "text": "✅ARC074D",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523467,
      "updated": 1615963885
    },
    {
      "id": "603dce6aaff09e0000a8f86b",
      "text": "[https://gyazo.com/4d90135f13838ae486c33a1424fb914d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614663275,
      "updated": 1614663279
    },
    {
      "id": "603dce6eaff09e0000a8f86c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614663279,
      "updated": 1614663279
    },
    {
      "id": "603bac4aaff09e00008442e3",
      "text": "[F - Lotus Leaves https://atcoder.jp/contests/arc074/tasks/arc074_d] diff: 2208 ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523467,
      "updated": 1614523484
    },
    {
      "id": "603bac5caff09e00008442e4",
      "text": "[https://gyazo.com/a72c294639d6c322d4bc4d623b87f6a0]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523484,
      "updated": 1614523503
    },
    {
      "id": "603bac6eaff09e00008442e5",
      "text": "　考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523503,
      "updated": 1614523516
    },
    {
      "id": "603bac7daff09e00008be472",
      "text": "　　[最小カット]がらみであることは既知",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523518,
      "updated": 1614523776
    },
    {
      "id": "603bac91aff09e00008be473",
      "text": "　　グラフが与えられて頂点SからTまで到達できないようにするためにいくつの頂点を取り除けば良いかを答える問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523537,
      "updated": 1614523751
    },
    {
      "id": "603bad67aff09e00008be474",
      "text": "　　取り除くのが「頂点」ではなく「辺」なら素直な最小カットの問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523751,
      "updated": 1614523773
    },
    {
      "id": "603bad81aff09e00008be475",
      "text": "　　ということは[頂点を辺に変換]すればいい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523778,
      "updated": 1614523793
    },
    {
      "id": "603bad91aff09e00008be476",
      "text": "　　[https://gyazo.com/9fff8fc0b6b978f7275bebef8db70e1c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523794,
      "updated": 1614523937
    },
    {
      "id": "603bae20aff09e00008be477",
      "text": "　　新しく導入した赤い辺だけを重み1にし、他の辺を重み無限にする。最小カットを求めれば赤い辺を最小の本数切断する。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523937,
      "updated": 1614524038
    },
    {
      "id": "603cbd61aff09e0000a326e8",
      "text": "　　それ以外の辺は切られない程度に太くすれば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614593379,
      "updated": 1614593392
    },
    {
      "id": "603cbd77aff09e0000a326e9",
      "text": "　　到達不能にできないのはSとTが並んでる時、それ以外は最悪全ての頂点を取り除けば到達不能にできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614593400,
      "updated": 1614593437
    },
    {
      "id": "603bae86aff09e00008be47c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524038,
      "updated": 1614524039
    },
    {
      "id": "603cc774aff09e000086de17",
      "text": "1 MLE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614595957,
      "updated": 1614595958
    },
    {
      "id": "603cc773aff09e000086de16",
      "text": "https://atcoder.jp/contests/arc074/submissions/20593919",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614595955,
      "updated": 1614595956
    },
    {
      "id": "603bac7aaff09e00008be471",
      "text": "　ライブラリの実装が悪いか、使い方が悪いか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614523514,
      "updated": 1614665937
    },
    {
      "id": "603dd8d1aff09e0000a8f87a",
      "text": "　最悪20000頂点、10000頂点から199本の辺がでる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614665937,
      "updated": 1614666011
    },
    {
      "id": "603dd959aff09e0000a8f87b",
      "text": "　行と列の頂点を追加すれば+200頂点で、各頂点から出るのは2本になるが…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614666073,
      "updated": 1614666115
    },
    {
      "id": "603dd983aff09e0000a8f87c",
      "text": "　メモリ食いすぎるのはハッシュテーブルがメモリ食いなせいだよな…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614666115,
      "updated": 1614666141
    },
    {
      "id": "603dd8c4aff09e0000a8f879",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614665924,
      "updated": 1614665924
    },
    {
      "id": "6051a4eaaff09e00004e69c7",
      "text": "AC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963370,
      "updated": 1615963371
    },
    {
      "id": "6051a523aff09e00003f6981",
      "text": "\t20万辺は厳しそうだったのと、[最小カット勉強会]で試してみて頂点数が増えることの影響はあまり大きくなさそうだったので、頂点数を増やして辺を削減することにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963428,
      "updated": 1615963491
    },
    {
      "id": "6051a5e5aff09e00003f6984",
      "text": "\t各頂点から「縦または横に並んでる頂点」に直接辺を張るのではなく「縦頂点」「横頂点」を介してつながるようにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963621,
      "updated": 1615963673
    },
    {
      "id": "6051a656aff09e00003f6985",
      "text": "\t　[多対多の関係に仲介者を置く]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963735,
      "updated": 1615963780
    },
    {
      "id": "6051a563aff09e00003f6982",
      "text": " \t[https://gyazo.com/418e454dc8ceb664691dcafdb6fc94a4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963492,
      "updated": 1615963817
    },
    {
      "id": "6051a5e2aff09e00003f6983",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963619,
      "updated": 1615963619
    },
    {
      "id": "6051a4eaaff09e00004e69c8",
      "text": "　これで最悪200万本だったのが3万本まで減る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963371,
      "updated": 1615963841
    },
    {
      "id": "6051a6abaff09e00003f698b",
      "text": "code:py",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963820,
      "updated": 1615963873
    },
    {
      "id": "6051a6e0aff09e00004e69cb",
      "text": " def solve(H, W, world):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963873,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69cc",
      "text": "     CHAR_S, CHAR_T, CHAR_O = b\"STo\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69cd",
      "text": "     leaf = set()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69ce",
      "text": "     for pos in world.allPosition():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69cf",
      "text": "         if world.mapdata[pos] == CHAR_S:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d0",
      "text": "             start = pos",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d1",
      "text": "         if world.mapdata[pos] == CHAR_T:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d2",
      "text": "             goal = pos",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d3",
      "text": "         if world.mapdata[pos] == CHAR_O:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d4",
      "text": "             leaf.add(pos)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d5",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d6",
      "text": "     sy, sx = divmod(start, W)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d7",
      "text": "     gy, gx = divmod(goal, W)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d8",
      "text": "     if sy == gy or sx == gx:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69d9",
      "text": "         return -1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69da",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69db",
      "text": "     INF = 10000",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69dc",
      "text": "     d = Dinic(H * W * 2 + H + W)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69dd",
      "text": "     O_BG = H * W",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69de",
      "text": "     O_Y = H * W * 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69df",
      "text": "     O_X = H * W * 2 + H",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e0",
      "text": "     for pos in leaf:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e1",
      "text": "         pos2 = pos + O_BG",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e2",
      "text": "         d.add_edge(pos, pos2, 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e3",
      "text": "         y, x = divmod(pos, W)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e4",
      "text": "         d.add_edge(pos2, y + O_Y, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e5",
      "text": "         d.add_edge(pos2, x + O_X, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e6",
      "text": "         d.add_edge(y + O_Y, pos, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e7",
      "text": "         d.add_edge(x + O_X, pos, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e8",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69e9",
      "text": "     d.add_edge(start, sy + O_Y, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69ea",
      "text": "     d.add_edge(start, sx + O_X, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69eb",
      "text": "     d.add_edge(gy + O_Y, goal, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69ec",
      "text": "     d.add_edge(gx + O_X, goal, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69ed",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69ee",
      "text": "     ret = d.max_flow(start, goal)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69ef",
      "text": "     return ret",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963874
    },
    {
      "id": "6051a6e1aff09e00004e69f0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963874,
      "updated": 1615963875
    },
    {
      "id": "6051a6deaff09e00004e69ca",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963871,
      "updated": 1615963871
    }
  ]
}