{
  "id": "6090ec0da287e6002291a2e4",
  "title": "Hatena2014-02-22",
  "created": 1392994800,
  "updated": 1392994800,
  "lines": [
    {
      "id": "6090ec31aff09e00003df085",
      "text": "Hatena2014-02-22",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df086",
      "text": "code:hatena",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df087",
      "text": " <body>",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df088",
      "text": " *1393031451*sklearn.svm.LinearSVCでフィルタを書いてみる",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df089",
      "text": " Wikiquoteのダンプデータから引用部分だけ取り出したいな、と思った。元データを見るとこんな感じ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df08a",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df08b",
      "text": " >||",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df08c",
      "text": " [[小泉純一郎]]",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df08d",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df08e",
      "text": " CATEGORIES: 政治家, 日本人, 日本の内閣総理大臣, 1940年代生",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df08f",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df090",
      "text": " 小泉純一郎（1942年 - ）は、日本の政治家（自由民主党）、第87、88、89代総理大臣。",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df091",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df092",
      "text": " ==発言==",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df093",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df094",
      "text": " * 人間を動かすのは、計算じゃありません。",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df095",
      "text": " **  1998年 二度目の自民党総裁選に敗北し、会見で涙を見せた",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df096",
      "text": " *「自民党をぶっ壊す」「構造改革なくして成長なし」「改革には痛みが伴う」",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df097",
      "text": " ** 2001年 自民党総裁選の街頭演説などで",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df098",
      "text": " ||<",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df099",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df09a",
      "text": " で「どこが引用文でどこがそうでないかを識別するコード」を人間が実装するかどうか。手軽に使えるようだからsklearn.svm.LinearSVCを使ってみた。こんな感じで識別される。+1が「引用文」で-1が「それ意外」",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df09b",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df09c",
      "text": " >||",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df09d",
      "text": " +1 *「自民党をぶっ壊す」「構造改革なくして成長なし」「改革には痛みが伴う」",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df09e",
      "text": " -1 ** 2001年 自民党総裁選の街頭演説などで",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df09f",
      "text": " -1 ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a0",
      "text": " -1 ===首相在任中===",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a1",
      "text": " -1 ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a2",
      "text": " +1 *協力して「聖域なき構造改革」に取り組む「改革断行内閣」",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a3",
      "text": " +1 *今の痛みに耐えて明日を良くしようという「米百俵の精神」こそ、改革を進めようとする今日の我々に必要ではないでしょうか。",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a4",
      "text": " -1 ** 第151回国会における小泉内閣総理大臣所信表明演説",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a5",
      "text": " (中略)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a6",
      "text": " +1 * またいまこの瞬間にスターンの作品が描いたものをそれぞれ再び手にとってみれば、19世紀において、我々が彼の描いたものそれぞれに負っているものが経験され、また我々が彼スターンより継承しうるものが洞察されるであろう。『箴言と省察』760節。",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a7",
      "text": " -1 *:[tpl]lang|de|Auch jetzt im Augenblick sollte jeder Gebildete Sternes Werke wieder zur Hand nehmen, damit auch das 19. Jahrhundert erf&#252;hre,",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a8",
      "text": " ||<",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0a9",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0aa",
      "text": " ソースコードはこんな感じ。jawq.txtが元データでjawq_ok.txtに引用部分の例を、jawq_ng.txtにそうでない部分の例を入れている。make_featureで1280次元の特徴ベクトルを作って、その特徴ベクトルから+1/-1への対応付けのデータをmake_dataで作って、svc.fitに学習させている。後は元データから1行読んでSVCで分類して表示。Enterキーで次々進んで、もし間違った分類の仕方をしていたらなんか入力すればそれを学習データに追加するって仕組み。",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ab",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ac",
      "text": " >|python|",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ad",
      "text": " from sklearn.svm import LinearSVC",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ae",
      "text": " import numpy as np",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0af",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b0",
      "text": " svc = LinearSVC()",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b1",
      "text": " N = 5",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b2",
      "text": " xs = []",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b3",
      "text": " ys = []",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b4",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b5",
      "text": " def make_feature(line):",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b6",
      "text": "     s = line[:N].ljust(N, '\\0')",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b7",
      "text": "     x = np.zeros(N * 256)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b8",
      "text": "     for i, c in enumerate(s):",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0b9",
      "text": "         x[i * 256 + ord(c)] = 1",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ba",
      "text": "     return x",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0bb",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0bc",
      "text": " def make_data(filename, answer):",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0bd",
      "text": "     for line in file(filename):",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0be",
      "text": "         x = make_feature(line)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0bf",
      "text": "         xs.append(x)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c0",
      "text": "         ys.append(answer)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c1",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c2",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c3",
      "text": " make_data('jawq_ok.txt', 1)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c4",
      "text": " make_data('jawq_ng.txt', -1)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c5",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c6",
      "text": " svc.fit(xs, ys)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c7",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c8",
      "text": " for line in file('jawq.txt'):",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0c9",
      "text": "     p = svc.predict(make_feature(line))[0]",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ca",
      "text": "     r = raw_input(\"%+1d %s\" % (p, line.strip()))",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0cb",
      "text": "     if r: # mean NG",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0cc",
      "text": "         if p == 1:",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0cd",
      "text": "             open('jawq_ng.txt', 'a').write(line)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ce",
      "text": "         else:",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0cf",
      "text": "             open('jawq_ok.txt', 'a').write(line)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d0",
      "text": " ||<",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d1",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d2",
      "text": " 簡単だなぁ。人間が人力でフィルタを実装する場合にはタスクが自分と密結合になるけども、こういう形になったら「正解かどうか」を判定できる人であれば誰でもフィルタを育てられる。",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d3",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d4",
      "text": " 次は切りだされた行の中から出展情報と本文とを分割するのを試してみよう。カッコで囲われてたり引用符が付いてたりめんどくさげ。",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d5",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d6",
      "text": " >||",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d7",
      "text": " *カエサルのものはカエサルに収め、神のものは神に納めよ。- マタイ22:21",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d8",
      "text": " *剣を取る者は皆、剣で滅びる。- マタイ26:52",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0d9",
      "text": " * 鮒に始まり鮒に終わる -- 釣りの格言",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0da",
      "text": " * 鮒一箸二箸一箸二箸至極惜しい -- e（自然対数の底）の語呂合わせ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0db",
      "text": " * 青は之を藍より取りて而も藍より青し。氷は水之を為りて而も水より寒し。 -- 荀子『勧学篇』",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0dc",
      "text": " * 水取りや氷の僧の沓の音 -- 松尾芭蕉『野ざらし紀行』",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0dd",
      "text": " * 「追従は、それを捧げる人も受ける人も共に堕落させる。阿諛が無益であるのは王に対してだけとは限らない。民衆に対しても同様である。」 -- エドマンド・バーク『フランス革命の省察』より",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0de",
      "text": " *:遠くて近きもの 極樂 舟の道 男女の仲",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0df",
      "text": " *“人の客ほど大事にする。それがキャストの仁義。” ―――「銀座時代に培った“持ちつ持たれつ”の精神について語った名言」として。『小悪魔ageha』による引用。（2010年）『小悪魔ageha 2010年10月号』 ： “金融バブルに色恋、黒い太陽、そしてユダ… あの時代を駆け抜けたちょうちょたちの伝説が今甦る!! 歌舞伎町・六本木 夜の偉人伝説!!!!：早川沙世伝説” (p.100) 2010年10月10日発行 インフォレスト",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e0",
      "text": " *「野球は人生そのものだ」「リハビリはウソをつかない」",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e1",
      "text": " *「長嶋って誰?」 - 新庄剛志",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e2",
      "text": " ||<",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e3",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e4",
      "text": " *1393037245*Qiitaの話を聞いている",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e5",
      "text": " Qiitaとブログの違いがわからないと思ってたがだいぶ違うってことがわかった",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e6",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e7",
      "text": " - ブログでは記事に間違いがあった時にコメントで指摘して著者が修正するしかないが、Qiitaではプルリクエストを投げられる(投げてくれるかどうかわからないけど)",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e8",
      "text": " - 間違いがあって修正した時に、その記事を「ストック」している人に変更通知を飛ばすことができる",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0e9",
      "text": " - Kobitoってアプリがあってローカルでリアルタイムmarkdownプレビュー",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ea",
      "text": " - Kobitoなら画像のアップロードもドラッグドロップでよい、Gistでは面倒",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0eb",
      "text": " - Emacsで編集してKobitoでリアルタイムプレビューも可",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ec",
      "text": " - 投稿データをJSONでダウンロードできる、他人のも",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ed",
      "text": " - テンプレートを作れるので社内Wiki的に同じフォーマットで複数の人が書く場合に揃えるのが楽",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ee",
      "text": " - コメントを書いたりするのにgithubやQiitaのアカウントが必要なので非エンジニア避けになる",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0ef",
      "text": " ",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0f0",
      "text": " 外に見えているものはブログにしか見えなかったけども、書いて修正してのフローやコミュニケーションの設計がだいぶ違うようだ。",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0f1",
      "text": " </body>",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0f2",
      "text": "",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df0f3",
      "text": "[はてなダイアリー 2014-02-22 https://nishiohirokazu.hatenadiary.org/archive/2014/02/22]",
      "created": 1392994800,
      "updated": 1392994800,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}