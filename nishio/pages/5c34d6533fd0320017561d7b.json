{
  "id": "5c34d6533fd0320017561d7b",
  "title": "知識の整合性",
  "created": 1546966613,
  "updated": 1644740801,
  "lines": [
    {
      "id": "5c34d6533fd0320017561d7b",
      "text": "知識の整合性",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d657aff09e0000354f28",
      "text": "[エンジニアの知的生産術] 5章 p.167 コラム [(Column) 知識の整合性]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966615,
      "updated": 1644740801
    },
    {
      "id": "5c34d657aff09e0000354f29",
      "text": "-----",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966615,
      "updated": 1546966617
    },
    {
      "id": "5c34d654aff09e0000354f1b",
      "text": "[    ]知識の正しさは何によって保証されるのでしょう。「本にそう書いてあったから」では正しい保証がありません。あなたが実際に経験したことは、その経験自身、観測事実までは正しいですが、それを人間が解釈して意味付けしたところで正しい保証がなくなります 注1。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f1c",
      "text": "[    ]実験ができる分野に関しては「この解釈が正しいなら、この実験結果はこうなるはずだが、実際にはそうならなかった」という反証ができます。第1章では、プログラミングを学ぶときには、自分の解釈に基づいてプログラムを書いて、その実行結果を観察することによって、理解の検証ができる、という話をしました。これも間違いに気付くことはできますが、正しいと保証することはできません 注2。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f1d",
      "text": "[    ]では、実験ができない分野ではどうすればよいのでしょうか？そんな分野で使える基準の一つが、より多くのものと整合していること、です。これも正しいことを保証する方法ではありませんが、有益な基準です。多くのものと整合する知識は、応用範囲が広いからです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f1e",
      "text": "[    ]たとえば、異なる著者の書いた本に渡って整合している知識は、きっと正しい可能性が高いだろうと考えられます。本に書いてあった知識が自分の経験とよく整合する場合、腑に落ちた感覚がします。講演をした場合に、そこで話したことが聴衆の経験とうまく整合すると聴衆はとても喜びます。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f1f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f20",
      "text": "[https://gyazo.com/4169ef3a64097dd3dcd5ad1de5a26496]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f21",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f22",
      "text": "[    ]本を読んで、傍線を引いたり抜き書きしたりする人は多いでしょう。その抜き書きをふせんにしてみてグループ編成を試してみると、とても良い学びになります。言い回しの格好良さにつられて抜き書きした文章が、なかなかほかの知識とつならず浮いてしまうかもしれません。逆に、まったく派手さのない文章が、実は複数の本の情報を結び付けるとても重要な知識だと気付いたりします。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f23",
      "text": "[    ]本を読んで、ふせんを作り、グループ編成してみる。この検証活動を通じて、あなたが抜き書きした文章が、ほかのものとつながりやすい整合性の高い知識だったのか、そうではなかったのかがわかります。これを繰り返すことで、あなたは「多くのものと整合しそうな知識」を見つけ出すスキルを高めることができます。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f24",
      "text": "[    ]「多くのものと整合しそうな知識」を収集し、それにKJ法を使うと何が起こるでしょうか。一覧して「関係がありそうと感じたもの」をグループにし、それに表札を付けることは、整合しそうな知識を組み合わせ、なぜ整合するのかを言語化していく作業です。これを繰り返すことによって、知識の間の整合性が増していき、あなたの中に密につながりあった[知識のネットワーク]が構築されていきます。私はこれがとても有益なものだと考えています。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966658
    },
    {
      "id": "5c34d654aff09e0000354f25",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f26",
      "text": "　注1 第1章でアインシュタインの図を紹介しましたね。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "5c34d654aff09e0000354f27",
      "text": " 注2 計算機科学者の[Edsger Wybe Dijkstra]は、「テストによってバグの存在は証明できるが、バグの不在は証明できない」と述べています。出典：[Brian  Kernighan]／[Rob  Pike]著、福崎俊博訳『プログラミング作法』アスキー、2000年",
      "userId": "582e63d27c56960011aff09e",
      "created": 1546966613,
      "updated": 1546966613
    },
    {
      "id": "61f33854aff09e0000d7187b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1643329620,
      "updated": 1643329620
    },
    {
      "id": "61f33860aff09e0000d7187e",
      "text": "知識の[整合性]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1643329633,
      "updated": 1643329634
    },
    {
      "id": "61f33854aff09e0000d7187c",
      "text": "[(Column) Consistency of knowledge]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1643329620,
      "updated": 1643329621
    },
    {
      "id": "61f33866aff09e0000d7187f",
      "text": "関連",
      "userId": "582e63d27c56960011aff09e",
      "created": 1643329639,
      "updated": 1643329645
    },
    {
      "id": "61f3386daff09e0000d71881",
      "text": "\t[整合説]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1643329645,
      "updated": 1643329653
    },
    {
      "id": "61f3386aaff09e0000d71880",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1643329642,
      "updated": 1643329642
    }
  ]
}