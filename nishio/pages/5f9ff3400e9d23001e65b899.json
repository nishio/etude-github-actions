{
  "id": "5f9ff3400e9d23001e65b899",
  "title": "ABC181",
  "created": 1604318044,
  "updated": 1610341970,
  "lines": [
    {
      "id": "5f9ff3400e9d23001e65b899",
      "text": "ABC181",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604318044,
      "updated": 1604318047
    },
    {
      "id": "5f9ff45aaff09e00008e9721",
      "text": "昼のイベントで疲れたらすっかり参加し忘れてしまった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604318299,
      "updated": 1604318317
    },
    {
      "id": "5f9ff46daff09e00008e9722",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604318317,
      "updated": 1604318317
    },
    {
      "id": "5f9ff46daff09e00008e9723",
      "text": "C",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604318318,
      "updated": 1604322799
    },
    {
      "id": "5fa005eeaff09e00003f8050",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604322799,
      "updated": 1604322803
    },
    {
      "id": "5fa005f2aff09e00003f8051",
      "text": " 　Nが100なので二乗のオーダーでも余裕",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604322803,
      "updated": 1604322871
    },
    {
      "id": "5fa00637aff09e00003f8052",
      "text": " 　各ペアを結ぶベクトルを求める、これは余裕",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604322872,
      "updated": 1604322957
    },
    {
      "id": "5fa0068caff09e00003f8053",
      "text": " 　　しかし「2つのベクトルで向きが一致するものがあるか」を素朴にやると10^8で怪しい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604322957,
      "updated": 1604323049
    },
    {
      "id": "5fa006b3aff09e00003f8054",
      "text": " 　　半分の半分にすれば間に合うのではないかって感じもある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604322995,
      "updated": 1604323046
    },
    {
      "id": "5fa006f6aff09e00003f8055",
      "text": " 　　ダメだったら既約分数をsetに入れる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323063,
      "updated": 1604323188
    },
    {
      "id": "5fa00793aff09e00003f8056",
      "text": " 　　　この時逆向きのものも一緒に入れると良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323220,
      "updated": 1604323248
    },
    {
      "id": "5fa007b0aff09e00003f8057",
      "text": "　公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323248,
      "updated": 1604325107
    },
    {
      "id": "5fa00ef3aff09e00003f807c",
      "text": "　　三重ループでも判定が定数ならよい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325108,
      "updated": 1604325119
    },
    {
      "id": "5fa00f1aaff09e00003f807e",
      "text": "　　傾きの一致判定は除数を消せる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325147,
      "updated": 1604325173
    },
    {
      "id": "5fa00f04aff09e00003f807d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325125,
      "updated": 1604325125
    },
    {
      "id": "5fa007b2aff09e00003f8058",
      "text": "D",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323250,
      "updated": 1604323252
    },
    {
      "id": "5fa007b4aff09e00003f8059",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323252,
      "updated": 1604323257
    },
    {
      "id": "5fa007b8aff09e00003f805a",
      "text": " 　Sの長さはかなり長いが、8の倍数かどうかは1000で割った余りを見ればわかるので、要は3文字でよい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323257,
      "updated": 1604323350
    },
    {
      "id": "5fa00f72aff09e00003f8081",
      "text": " 　Sの長さのオーダーで各数字の出現頻度を調べる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325234,
      "updated": 1604325234
    },
    {
      "id": "5fa00816aff09e00003f805b",
      "text": " 　125通りの「8の倍数である条件」を機械的に列挙して、与えられた数がそれを満たすかチェックすればよい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323351,
      "updated": 1604323398
    },
    {
      "id": "5fa00847aff09e00003f805c",
      "text": "　公式解説OK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323399,
      "updated": 1604325412
    },
    {
      "id": "5fa01024aff09e00003f8082",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325412,
      "updated": 1604325414
    },
    {
      "id": "5fa00847aff09e00003f805d",
      "text": "[ABC181E]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323399,
      "updated": 1610341970
    },
    {
      "id": "5fa00a02aff09e00003f806c",
      "text": "F",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323842,
      "updated": 1604323846
    },
    {
      "id": "5fa00a06aff09e00003f806e",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323846,
      "updated": 1604323923
    },
    {
      "id": "5fa00a51aff09e00003f806f",
      "text": " 　領域の表現が難しいな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323923,
      "updated": 1604323956
    },
    {
      "id": "5fa00a74aff09e00003f8070",
      "text": " 　領域が表現できたら、ある領域から別の領域に移動するのには直径いくら以下である必要があるのかは点の距離で求まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604323956,
      "updated": 1604324053
    },
    {
      "id": "5fa00ae7aff09e00003f8071",
      "text": " 　三角形に分割するのかな、[ボロノイ分割]で。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324071,
      "updated": 1604324101
    },
    {
      "id": "5fa00b05aff09e00003f8072",
      "text": "  　必要なのはボロノイ分割自身ではなく、ボロノイ分割をする時にどの点とどの点を選ぶかのペア",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324101,
      "updated": 1604324597
    },
    {
      "id": "5fa00b9eaff09e00003f8073",
      "text": "  　「デローニー分割」ドロネー分割って呼び方の方が主流？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324259,
      "updated": 1604324599
    },
    {
      "id": "5fa00c63aff09e00003f8075",
      "text": "  　　https://www.slideshare.net/mobile/Kinokkory/ss-25736696",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324456,
      "updated": 1604324599
    },
    {
      "id": "5fa0114faff09e00003f808a",
      "text": "  　　O(NlogN)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325711,
      "updated": 1604325721
    },
    {
      "id": "5fa00c65aff09e00003f8076",
      "text": "  　それをやった上で、端の頂点からは上または下に他の辺と交差せずに伸ばせるかチェックして、外側の通路も刻む必要がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324456,
      "updated": 1604324602
    },
    {
      "id": "5fa00ba5aff09e00003f8074",
      "text": " 　そこまでできたとして、これは最大フローではないからどうやって解くのか考えなければならない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324262,
      "updated": 1604324641
    },
    {
      "id": "5fa00d5faff09e00003f8077",
      "text": " 　　Nは高々100で、領域は最悪でも200ぐらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324703,
      "updated": 1604324933
    },
    {
      "id": "5fa00e44aff09e00003f807a",
      "text": " 　　半径を決めれば各辺は「通れる通れない」になる。スタートとゴールが連結であるかどうかはDFSで求まる、十分早い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324933,
      "updated": 1604325071
    },
    {
      "id": "5fa00db9aff09e00003f8078",
      "text": " 　　半径は最大で100で、要求される精度は10^-4",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324794,
      "updated": 1604324858
    },
    {
      "id": "5fa00dfcaff09e00003f8079",
      "text": " 　　 二分探索なら20回程度で絞れる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604324860,
      "updated": 1604324905
    },
    {
      "id": "5fa00ea4aff09e00003f807b",
      "text": "　公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325029,
      "updated": 1604325540
    },
    {
      "id": "5fa010abaff09e00003f8085",
      "text": "　　領域ではなく壁に注目",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325548,
      "updated": 1604325560
    },
    {
      "id": "5fa010b8aff09e00003f8086",
      "text": "　　上の壁と下の壁が壁で繋がれば通行不能",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325560,
      "updated": 1604325611
    },
    {
      "id": "5fa010ebaff09e00003f8088",
      "text": "　　壁であるかどうかは2点間の距離を見るだけでOK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325611,
      "updated": 1604325634
    },
    {
      "id": "5fa01125aff09e00003f8089",
      "text": "　　距離をソートして小さい方から連結になるまで増やしていく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604325670,
      "updated": 1604325687
    },
    {
      "id": "5f9ff35eaff09e00008e9719",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604318047,
      "updated": 1604318047
    }
  ]
}