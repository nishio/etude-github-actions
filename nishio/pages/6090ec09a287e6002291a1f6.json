{
  "id": "6090ec09a287e6002291a1f6",
  "title": "Hatena2012-01-25",
  "created": 1327417200,
  "updated": 1327417200,
  "lines": [
    {
      "id": "6090ec2daff09e00003da7a8",
      "text": "Hatena2012-01-25",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7a9",
      "text": "code:hatena",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7aa",
      "text": " <body>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ab",
      "text": " *1327461670* 他の言語に慣れた人がPythonを使ったときにつまずきがちな10のポイント",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ac",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ad",
      "text": " 今日質問されて、以前Twitterで書いたのを思い出して、そして検索性が悪くて見つけ出すのに苦労した。こちらに転載しておく。詳細は気が向いたときに埋める。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ae",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7af",
      "text": " ** オプション引数の評価タイミング",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b0",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b1",
      "text": " Rubyではオプション引数は関数が呼ばれるたびに評価される。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b2",
      "text": " >|ruby|",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b3",
      "text": " def foo() print \"foo!\" end",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b4",
      "text": " def bar(x=foo()) end",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b5",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b6",
      "text": " bar #=> foo! と出力される",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b7",
      "text": " bar #=> foo!",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b8",
      "text": " bar #=> foo!",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7b9",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ba",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7bb",
      "text": " Pythonでは関数の定義時に1回だけ評価される。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7bc",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7bd",
      "text": " >|python|",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7be",
      "text": " def foo(): print \"foo!\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7bf",
      "text": " def bar(x=foo()): pass",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c0",
      "text": " #=> foo!と出力される",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c1",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c2",
      "text": " bar() #=> 何も出力されない",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c3",
      "text": " bar()",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c4",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c5",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c6",
      "text": " 「引数が省略されたら今の日時」みたいな毎回評価したい場合はデフォルト値をNoneにしておいて「Noneだったら＝省略されていたら」のif文を書けばOK。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c7",
      "text": " >|python|",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c8",
      "text": " def foo(when=None):",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7c9",
      "text": "     if when is None: when = datetime.now()",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ca",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7cb",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7cc",
      "text": " ** 内包表記はスコープを作らない",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7cd",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ce",
      "text": " >|python|",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7cf",
      "text": " >>> x = 42",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d0",
      "text": " >>> [x + 100 for x in range(5)]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d1",
      "text": " [100, 101, 102, 103, 104]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d2",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d3",
      "text": " >>> x",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d4",
      "text": " 4",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d5",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d6",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d7",
      "text": " また、下のようなコードでは、関数の中の自由変数を評価するタイミングで親のスコープでのiは2になっているので、どの関数を呼び出しても+2になってしまう。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d8",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7d9",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7da",
      "text": " >>> functions = [lambda x: x + i for i in range(3)]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7db",
      "text": " >>> functions[0](100)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7dc",
      "text": " 102",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7dd",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7de",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7df",
      "text": " 上記の「オプション引数は関数定義時に評価される」という挙動を利用したテクニックとして 「lambda x, i=i: x + i」 という書き方もある。でも、そもそも「パラメータの違いによって微妙に異なる挙動をする、類似した複数個の関数を作りたい」というモチベーションは、クラスを使って実装するのが素直なのでは。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e0",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e1",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e2",
      "text": " class Func(object):",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e3",
      "text": "      def __init__(self, i): self.i = i",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e4",
      "text": "      def __call__(self, x): return x + self.i",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e5",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e6",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e7",
      "text": " ** 変数はすべて参照",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e8",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7e9",
      "text": " >|python|",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ea",
      "text": " >>> a = []",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7eb",
      "text": " >>> b = a",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ec",
      "text": " >>> b.append(1)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ed",
      "text": " >>> a",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ee",
      "text": " [1]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ef",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f0",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f1",
      "text": " 代入ではコピーが行われない。コピーしたければfrom copy import deepcopyとか。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f2",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f3",
      "text": " ** 文字列とユニコード文字列は別物",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f4",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f5",
      "text": " Python2.0で文字列(str)と呼ばれるものは、バイトの列である。それとは別にユニコード文字列(unicode)があり、これは「Unicode コード単位」の列である。大雑把に言って文字列の各要素は8bitで、ユニコード文字列の各要素は16bitか32bitである。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f6",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f7",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f8",
      "text": " # MacのTerminalにて(エンコーディングはUTF-8)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7f9",
      "text": " >>> \"ほげ\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7fa",
      "text": " '\\xe3\\x81\\xbb\\xe3\\x81\\x92'",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7fb",
      "text": " >>> u\"ほげ\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7fc",
      "text": " u'\\u307b\\u3052'",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7fd",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7fe",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da7ff",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da800",
      "text": " # Windowsのコマンドプロンプトにて(エンコーディングはcp932)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da801",
      "text": " >>> \"ほげ\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da802",
      "text": " '\\x82\\xd9\\x82\\xb0'",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da803",
      "text": " >>> u\"ほげ\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da804",
      "text": " u'\\u307b\\u3052'",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da805",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da806",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da807",
      "text": " なお、Python3からは\"ほげ\"をユニコード文字列、b\"ほげ\"をバイト列、と変更された。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da808",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da809",
      "text": " ** unicodeとstrの暗黙の変換",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da80a",
      "text": " *** 結合などでのDecode",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da80b",
      "text": " ユニコード文字列同士は結合しても何の問題もないが、ユニコード文字列とバイト列(str)を結合しようとすると、バイト列の方をユニコード文字列に変換しようとする。この時、エンコーディングがasciiであると仮定して変換するので日本人は大体UnicodeDecodeErrorで死ぬ。そのバイト列がUTF-8なのかSJISなのかはあなたしか知らないので、明示的に x.decode(\"utf-8\") などとやってPythonに教えてあげなきゃダメ。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da80c",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da80d",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da80e",
      "text": " >>> u\"ほげ\" + u\"ふが\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da80f",
      "text": " u'\\u307b\\u3052\\u3075\\u304c'",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da810",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da811",
      "text": " >>> u\"ほげ\" + \"ふが\" # 2つめがユニコード文字列ではない",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da812",
      "text": " ---------------------------------------------------------------------------",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da813",
      "text": " Traceback (most recent call last)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da814",
      "text": " ----> 1 u\"ほげ\" + \"ふが\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da815",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da816",
      "text": " UnicodeDecodeError: 'ascii' codec can't decode byte 0xe3 in position 0: ordinal not in range(128)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da817",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da818",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da819",
      "text": " 結合の他に、比較などでもこの暗黙の変換が行われる。暗黙の変換に起因するトラブルを減らすために、Python3.0からは\"ほげ\"って書いたらユニコード文字列、b\"ほげ\"って書いたらバイト列、ユニコード文字列とバイト列は暗黙に変換しない、というルールに変わった。結合しようとすると「TypeError: Can't convert 'bytes' object to str implicitly」となる。明示的に変換せよ。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da81a",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da81b",
      "text": " *** printでのEncode",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da81c",
      "text": " 逆に、ユニコード文字列をprintする際には、端末の文字コードにあわせてバイト列に変換が行われる。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da81d",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da81e",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da81f",
      "text": " print u\"ほげ\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da820",
      "text": " #=> ほげ と表示される",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da821",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da822",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da823",
      "text": " しかし、出力をファイルにリダイレクトすると、出力先が端末ではないので文字コードを取得できずasciiとみなされる。そのためこのスクリプトは出力をリダイレクトすると UnicodeEncodeError で死ぬ。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da824",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da825",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da826",
      "text": " tmp$ python t.py",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da827",
      "text": " ほげ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da828",
      "text": " tmp$ python t.py > out.txt",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da829",
      "text": " Traceback (most recent call last):",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da82a",
      "text": "   File \"t.py\", line 2, in <module>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da82b",
      "text": "     print u\"ほげ\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da82c",
      "text": " UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da82d",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da82e",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da82f",
      "text": " 出力先が端末かファイルかに関係なく特定のエンコーディングで出力したいのならば、標準出力をwrapしてしまうのが手軽。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da830",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da831",
      "text": " import sys, codecs",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da832",
      "text": " sys.stdout = codecs.getwriter(\"utf-8\")(sys.stdout)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da833",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da834",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da835",
      "text": " see also: <a href='http://d.hatena.ne.jp/atsuoishimoto/20110311/1299805971'>UnicodeDecodeError/UnicodeEncodeErrorに悩まないPython 2.x プログラミング - atsuoishimotoの日記</a>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da836",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da837",
      "text": " ** ソースコードのエンコーディング",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da838",
      "text": " ソースコードのエンコーディングを指定せずにソースコード中でASCII以外の文字を使うとシンタックスエラーになる。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da839",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da83a",
      "text": " SyntaxError: Non-ASCII character '\\xe3' in file t.py on line 1, but no encoding declared; see http://www.python.org/peps/pep-0263.html for details",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da83b",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da83c",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da83d",
      "text": " 他の言語では、ソースコードのエンコーディングをlatin-1などと仮定することがある。しかしその場合、たとえばソースコードがShift-JISで記述されていると「表」という文字の2バイト目がバックスラッシュと同一の文字になるので「\"図表\"」の2つめの引用符がエスケープされてしまうなどの問題が起きる。(see also: Wikipedia <a href=\"http://ja.wikipedia.org/wiki/Shift_JIS#2.E3.83.90.E3.82.A4.E3.83.88.E7.9B.AE.E3.81.8C5C.E7.AD.89.E3.81.AB.E3.81.AA.E3.82.8A.E3.81.86.E3.82.8B.E3.81.93.E3.81.A8.E3.81.AB.E3.82.88.E3.82.8B.E5.95.8F.E9.A1.8C\">2バイト目が5C等になりうることによる問題</a>)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da83e",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da83f",
      "text": " Pythonではそれを避けるために「ASCII以外の文字を使うならエンコーディングを指定すること」と規定している。エラーメッセージに詳細へのリンクが書かれているが、簡単に説明すると、ソースコードの1行目か2行目に正規表現 \"coding[:=]\\s*([-\\w.]+)\" にマッチする文字列があればよい。例:",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da840",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da841",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da842",
      "text": " # -*- coding: utf-8 -*-",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da843",
      "text": " print u\"ほげ\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da844",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da845",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da846",
      "text": " ** 1要素のタプルにはカンマが必要",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da847",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da848",
      "text": " 「一要素のタプルは(x, )って作るんですか？なんでカンマが必要なの？」",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da849",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da84a",
      "text": " いいえ、そもそもタプルのカッコは飾り。式など(1 + 2) * 3のカッコと同じもの。本体はカンマであって、かつ最後のカンマは省略して問題ない場合は省略できる。1要素の時だけ、省略するとタプルだということがわからなくなるから省略できないわけだ。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da84b",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da84c",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da84d",
      "text": " >>> 1,",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da84e",
      "text": " (1,)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da84f",
      "text": " >>> 1, 2,",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da850",
      "text": " (1, 2)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da851",
      "text": " >>> 1, 2, 3,",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da852",
      "text": " (1, 2, 3)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da853",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da854",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da855",
      "text": " 言語リファレンスの<a href='http://www.python.jp/doc/release/reference/expressions.html#exprlists'>式のリスト</a>より一部抜粋:",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da856",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da857",
      "text": " >>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da858",
      "text": " 少なくとも一つのカンマを含む式のリストは、タプルになります。…単一要素のタプルを作りたければ、末尾にカンマが必要です。…空のタプルを作りたいなら、中身が空の丸括弧ペア: () を使います。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da859",
      "text": " <<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da85a",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da85b",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da85c",
      "text": " ** 代入によってローカル変数が作られる",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da85d",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da85e",
      "text": " JavaScriptなどと異なり、代入によってローカル変数が作られる。なので、ネストした関数の中で外のスコープに存在する変数名対して代入を行なっても、内側のスコープで新しいローカル変数が作られるだけで、外の変数には影響を与えない。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da85f",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da860",
      "text": " >|python|",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da861",
      "text": " def outer():",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da862",
      "text": "     x = 1",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da863",
      "text": "     def inner():",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da864",
      "text": "         x = 2 ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da865",
      "text": "         # ここで関数innerのローカル変数xが作られていて、",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da866",
      "text": "         # outerのxは書き換えられていない",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da867",
      "text": "     inner()",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da868",
      "text": "     print x",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da869",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da86a",
      "text": " outer() #=> 1 と表示される。ほら書き換わってない",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da86b",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da86c",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da86d",
      "text": " python3.0では「この名前はローカル変数ではない」という宣言(nonlocal)が可能になった。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da86e",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da86f",
      "text": " >|python|",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da870",
      "text": " def outer():",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da871",
      "text": "     x = 1",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da872",
      "text": "     def inner():",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da873",
      "text": "         nonlocal x",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da874",
      "text": "         x = 2 ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da875",
      "text": "     inner()",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da876",
      "text": "     print(x)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da877",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da878",
      "text": " outer() #=> 2 と表示される。書き換わった！",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da879",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da87a",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da87b",
      "text": " また、代入が実行されるタイミングでローカル変数が作られるのではなく、関数の中で代入されうる変数はその関数のローカル変数となる。下の例で、xは関数fooの中で代入されうるのでfooのローカル関数になる。なのでprint xのタイミングで「local variable 'x' referenced before assignment」(ローカル変数xは代入する前に参照されている)というエラーになる。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da87c",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da87d",
      "text": " >|python|",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da87e",
      "text": " x = 1",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da87f",
      "text": " def foo():",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da880",
      "text": "     print x",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da881",
      "text": "     x = 2",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da882",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da883",
      "text": " foo() #=> UnboundLocalError: local variable 'x' referenced before assignment",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da884",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da885",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da886",
      "text": " ** 整数がオーバーフローしない",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da887",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da888",
      "text": " 整数の加減乗除やシフト演算で整数の範囲を超えた場合、Cなどのようにあふれたビットを捨てて範囲内に収めるのではなく、上限のない「長整数」に変換される。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da889",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da88a",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da88b",
      "text": " >>> 1 << 63",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da88c",
      "text": " 9223372036854775808L",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da88d",
      "text": " >>> -9223372036854775808 / -1",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da88e",
      "text": " 9223372036854775808L",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da88f",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da890",
      "text": " >>> type(1)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da891",
      "text": " <type 'int'>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da892",
      "text": " >>> type(1L)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da893",
      "text": " <type 'long'>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da894",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da895",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da896",
      "text": " 特にCで書かれた暗号化や擬似乱数生成のアルゴリズムは、オーバーフローによって切り詰められることを想定して書かれている場合があって、Pythonに逐語訳すると期待通りに動かない。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da897",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da898",
      "text": " ** スライスはコピーを作る",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da899",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da89a",
      "text": " スライスは左辺値を返す演算子ではない。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da89b",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da89c",
      "text": " C++などに慣れている場合、xs[i:j] = ysというコードが「xs[i:j]が左辺値を返して、それからそれに対して代入演算子が実行される」というように見えてしまい、ys = xs[i:j]を実行した後でysを破壊的に更新した場合にxsに影響が伝わらないことに違和感を覚える。スライスの代入のタイミングでコピーが行われているように解釈してしまうかもしれない。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da89d",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da89e",
      "text": " Pythonで xs[i:j] = ys を実行した場合は、iとjの値を持った「スライスオブジェクト」とysがxs.__setitem__メソッドに渡される。そしてリストの場合はxsを破壊的に書き換える実装になっている。一方でys = xs[i:j]の場合はxs.__getitem__メソッドにスライスオブジェクトが渡される。リストの場合はこれはその範囲の値をコピーした新しいリストを作る実装になっている。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da89f",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a0",
      "text": " C++と違って、代入演算子は再定義できないし、オブジェクトのメソッドでもない。PyObject *x, *y;でx = yしているイメージを持つのが適切かと思う。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a1",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a2",
      "text": " ** おまけFAQ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a3",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a4",
      "text": " *** 良い入門書はないですか？",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a5",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a6",
      "text": " <a href='http://www.python.jp/doc/release/tutorial/'>Python チュートリアル</a>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a7",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a8",
      "text": " *** 中級者向けに良い解説書はないですか？",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8a9",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8aa",
      "text": " <a href='http://www.python.jp/doc/release/tutorial/'>Python チュートリアル</a>をもう一回読んでから<a href='http://www.python.jp/doc/release/library/'>Python 標準ライブラリ</a>。以前は「ライブラリリファレンス」って訳されてたけど、それで検索してヒットするのは2.5なのでやめた方がいい。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ab",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ac",
      "text": " *** chrだとかintだとかの説明はどこに？",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ad",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ae",
      "text": " ライブラリリファレンスの第2章: <a href='http://www.python.jp/doc/release/library/functions.html'>2. 組み込み関数</a>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8af",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b0",
      "text": " *** 文字列とかリストとかタプルとかについての説明はどこ？",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b1",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b2",
      "text": " ライブラリリファレンスに大概の事は書いてあるのだが、これは階層が深いせいで目次に出ていない…",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b3",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b4",
      "text": " ライブラリリファレンスの第5章 <a href='http://www.python.jp/doc/release/library/stdtypes.html#str-unicode-list-tuple-bytearray-buffer-xrange'>5. 組み込み型</a> の「シーケンス型」の節にまとめられている。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b5",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b6",
      "text": " >>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b7",
      "text": " シーケンス型には 7 つあります: 文字列、Unicode 文字列、リスト、タプル、バイト配列 (bytearray)、バッファ、そして xrange オブジェクトです。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b8",
      "text": " <<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8b9",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ba",
      "text": " *** リストとタプルの違いは？",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8bb",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8bc",
      "text": " リストは書き換え可能で、タプルは書き換え不可能。とはいえこういう質問が出るということは書き換え不可能であることのメリットがわからないということかと思う。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8bd",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8be",
      "text": " たとえば、タプルは辞書のキーになることができ、リストはできない。これは「タプルは変更されないからハッシュ値を計算してもよい。リストは変更されるかもしれないからハッシュ値を計算してはいけない」という設計になっているから。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8bf",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c0",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c1",
      "text": " >>> x = (1, 2)",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c2",
      "text": " >>> {x: 1}",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c3",
      "text": " {(1, 2): 1}",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c4",
      "text": " >>> x = [1, 2]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c5",
      "text": " >>> {x: 1}",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c6",
      "text": " TypeError: unhashable type: 'list'",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c7",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c8",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8c9",
      "text": " Rubyでは書き換えることのできるArray(リスト的なもの)をHash(辞書的なもの)のキーにできるが、そのかわりに書き換えると値を取り出すことができない不整合な状態になる。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ca",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8cb",
      "text": " >||",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8cc",
      "text": " > x = [1, 2]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8cd",
      "text": " => [1, 2]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ce",
      "text": " > d = {x => 'hello'}",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8cf",
      "text": " => {[1, 2]=>\"hello\"}",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d0",
      "text": " > d[x]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d1",
      "text": " => \"hello\"",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d2",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d3",
      "text": " > x << 2",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d4",
      "text": " => [1, 2, 2]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d5",
      "text": " > d",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d6",
      "text": " => {[1, 2, 2]=>\"hello\"}",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d7",
      "text": " > d[x]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d8",
      "text": " => nil",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8d9",
      "text": " ||<",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8da",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8db",
      "text": " あと、慣習的にはリストは「同じ型のものがいくつかわからない個数入っているもの」(たとえば[1, 2, 3])、タプルは「同じ型とは限らないものが決まった個数決まった順番で入っているもの」(たとえば('Taro', 31, 'Osaka', 167.8, 67.8)。フィールドに名前がついていない手抜きのstruct)を表現するのに使われる。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8dc",
      "text": " ",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8dd",
      "text": " *** 関数呼び出しのfunc(*arg, **kw)の*とか**って何？",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8de",
      "text": " リストや辞書を展開して関数に渡す記法です。チュートリアルでは<a href='http://www.python.jp/doc/release/tutorial/controlflow.html#tut-unpacking-arguments'>4.7.4. 引数リストのアンパック</a>などで解説されています。",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8df",
      "text": " </body>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e0",
      "text": " <comments>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e1",
      "text": " <comment>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e2",
      "text": " <username>m11m</username>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e3",
      "text": " <body>>>類似した複数個の関数を作りたい」というモチベーションは、クラスを使って実装するのが素直なのでは。<br>関数の機能のみ使って，<br>functions = [(lambda i: (lambda x: x + i))(i) for i in range(3)]<br>と書くこともできます．</body>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e4",
      "text": " <timestamp>1327668450</timestamp>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e5",
      "text": " </comment>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e6",
      "text": " <comment>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e7",
      "text": " <username>t98907</username>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e8",
      "text": " <body>「文字列とユニコード文字列は別物」ってpytho 2.x系の話ですよね。</body>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8e9",
      "text": " <timestamp>1327757630</timestamp>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ea",
      "text": " </comment>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8eb",
      "text": " <comment>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ec",
      "text": " <username>nishiohirokazu</username>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ed",
      "text": " <body>> m11mさん<br>おすすめしません。<br><br>> t98907さん<br>そうですね、誤解を招かないように少し加筆しました。</body>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ee",
      "text": " <timestamp>1328933982</timestamp>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8ef",
      "text": " </comment>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8f0",
      "text": " </comments>",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8f1",
      "text": "",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003da8f2",
      "text": "[はてなダイアリー 2012-01-25 https://nishiohirokazu.hatenadiary.org/archive/2012/01/25]",
      "created": 1327417200,
      "updated": 1327417200,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}