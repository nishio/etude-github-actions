{
  "id": "6322a760f84a58001d868ffb",
  "title": "Stable Diffusion勉強会",
  "created": 1663215458,
  "updated": 1666766364,
  "lines": [
    {
      "id": "6322a760f84a58001d868ffb",
      "text": "Stable Diffusion勉強会",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663215458,
      "updated": 1663215468
    },
    {
      "id": "6322a802aff09e00006c18a6",
      "text": "\t2022-09-30",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663215618,
      "updated": 1663392431
    },
    {
      "id": "6322a807aff09e00006c18a7",
      "text": "\tサイボウズラボ機械学習勉強会",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663215624,
      "updated": 1663215685
    },
    {
      "id": "633fbc77aff09e000024b17b",
      "text": "\t仕組みの話",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121399,
      "updated": 1665121403
    },
    {
      "id": "633fbc7eaff09e000024b17c",
      "text": "\t　使い方とかビジネス上の価値とかの話はしない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121406,
      "updated": 1665121407
    },
    {
      "id": "6322ab2caff09e000091e845",
      "text": "\t目的: 「ブラックボックスを減らす」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663216428,
      "updated": 1663216609
    },
    {
      "id": "6333d346aff09e00001edfee",
      "text": "\t　最初「ブラックボックスをなくす」と書いていたが、ブラックボックスがなくなるまで深さ優先探索で掘っていったら10時間経っても終わらないので幅優先探索にする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664340809,
      "updated": 1664340885
    },
    {
      "id": "6322a845aff09e000091e842",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663215685,
      "updated": 1663215685
    },
    {
      "id": "6322a845aff09e000091e843",
      "text": "Stable Diffusionの仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663215685,
      "updated": 1664362881
    },
    {
      "id": "63365896aff09e000059f7b7",
      "text": "　ざっくり全体像",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506007,
      "updated": 1664506011
    },
    {
      "id": "6333d3e4aff09e00001edfef",
      "text": "　[https://gyazo.com/f3a87d87da66e6c21724d190130d09a5]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664340965,
      "updated": 1664362881
    },
    {
      "id": "633658a0aff09e000059f7b8",
      "text": "　3つの主用部品がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506016,
      "updated": 1664506037
    },
    {
      "id": "632310b5aff09e0000fbca88",
      "text": " [拡散モデル] ([Denoising Diffusion Probabilistic Models], [DDPM])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663242421,
      "updated": 1664362881
    },
    {
      "id": "632310b6aff09e0000fbca89",
      "text": " 　基本的には「ノイズを取り除く仕組み」を繰り返し使うことで画像を生成する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663242422,
      "updated": 1665121444
    },
    {
      "id": "632310d1aff09e0000fbca8a",
      "text": " 　ネットから集めた画像xとそれにノイズを加えたものyを用意して「yを入力したらxが出るニューラルネット」を学習させる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663242449,
      "updated": 1664362881
    },
    {
      "id": "63231117aff09e0000fbca8b",
      "text": " 　これを純粋なノイズに対して適用すると新しい画像が生まれる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663242519,
      "updated": 1664362881
    },
    {
      "id": "633146f4aff09e0000fbe85e",
      "text": " 　[https://gyazo.com/ce8e64d674d1dcb54c5be9e07438e3b2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664173812,
      "updated": 1664362881
    },
    {
      "id": "633fbcb6aff09e000024b17d",
      "text": " 　　実際にStable Diffusionの処理中の値を抜き出して可視化した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121463,
      "updated": 1665121515
    },
    {
      "id": "633fbcc4aff09e000024b17e",
      "text": " 　　左端が純粋なノイズ、ノイズ除去を繰り返して猫になってる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121476,
      "updated": 1665121539
    },
    {
      "id": "6323ed4baff09e00006c1964",
      "text": " 　[https://gyazo.com/f3a87d87da66e6c21724d190130d09a5]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663298891,
      "updated": 1664362881
    },
    {
      "id": "6322c53eaff09e0000d21157",
      "text": "　[High-Resolution Image Synthesis with Latent Diffusion Models]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663223103,
      "updated": 1664362881
    },
    {
      "id": "6323115faff09e0000fbca8c",
      "text": "\t　[latent diffusion model]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663242591,
      "updated": 1664362881
    },
    {
      "id": "633fbd16aff09e000024b17f",
      "text": "\t　　このlatentの意味",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121558,
      "updated": 1665121571
    },
    {
      "id": "633fbd6baff09e00005ffe86",
      "text": "\t　 画像自体の空間ではなく、[VAE]で低次元な空間(latent space)にエンコードしてから拡散モデルをしてデコードする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121643,
      "updated": 1665121643
    },
    {
      "id": "63463a7caff09e00009c7a21",
      "text": "\t　 \t[VAE]の話はまた今度",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665546876,
      "updated": 1665546892
    },
    {
      "id": "633fbd6eaff09e00005ffe87",
      "text": "\t　 Stable Diffusionの標準的な設定だと4×64×64次元のテンソル",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121647,
      "updated": 1665121647
    },
    {
      "id": "633fbd6eaff09e00005ffe88",
      "text": "\t　 \t[https://gyazo.com/03001d0e0afbd7ac95f7383401bc3178] [Stable Diffusion Latent Space Visualization]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121647,
      "updated": 1665121647
    },
    {
      "id": "6323ed81aff09e00006c1968",
      "text": "\t　 [https://gyazo.com/0ee08cf35c00aa27a9f4cd99c25acc8c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663298945,
      "updated": 1664362881
    },
    {
      "id": "633fbd7caff09e00005ffe89",
      "text": "\t　 \t最後にこのVAE decodeで512×512のRGB画像に戻してる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121661,
      "updated": 1665121712
    },
    {
      "id": "6323115faff09e0000fbca8e",
      "text": "\t　 空間が80万次元(3×512×512)から2万次元(4×64×64)に縮んだことで学習が効率的になった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663242591,
      "updated": 1665121748
    },
    {
      "id": "6322ac35aff09e000091e84b",
      "text": "　[Denoising Diffusion Implicit Models]([DDIM])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663216694,
      "updated": 1664362881
    },
    {
      "id": "6322ad9daff09e000091e856",
      "text": "　　Denoiseのプロセスが10〜100倍高速になった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663217054,
      "updated": 1664362881
    },
    {
      "id": "63231284aff09e0000fbca8f",
      "text": "　　かつてのモデルでは1ステップずつDenoiseしていた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663242884,
      "updated": 1665121793
    },
    {
      "id": "633fbe01aff09e000024b180",
      "text": "　　　これを陰解法を使って複数ステップまとめて行なう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121793,
      "updated": 1665121798
    },
    {
      "id": "6333d562aff09e00001edff0",
      "text": "　　　「処理Xを20回行った結果」を許容可能な精度で推測Yできるなら、処理Xを20回やるのではなく処理Yをしたらいいよね、という発想",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664341346,
      "updated": 1664362881
    },
    {
      "id": "632312c9aff09e0000fbca90",
      "text": "　　実際、Stable Diffusionの標準的な設定だと1000ステップのノイズ除去処理を、20ステップずつ塊にして50回で行なっている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663242954,
      "updated": 1665121887
    },
    {
      "id": "6323eda6aff09e00006c1969",
      "text": "　　　[https://gyazo.com/66f99c801210fb64d6c16c0affdc7786]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663298983,
      "updated": 1665121864
    },
    {
      "id": "633429bfaff09e00000b6750",
      "text": "ここまでで質問",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664362944,
      "updated": 1665121912
    },
    {
      "id": "633fbe78aff09e000024b184",
      "text": "　Q: Stableって何を意味してる？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121912,
      "updated": 1665121932
    },
    {
      "id": "633fbe8caff09e000024b185",
      "text": "　　A: 単なるネーミング、DreamBoothのDreamって何と言ってるようなもの、ただのプロジェクト名",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121932,
      "updated": 1665121963
    },
    {
      "id": "633fbeb1aff09e000024b186",
      "text": "　　Q: ノイズを除去するとか全然安定しそうにない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121969,
      "updated": 1665121983
    },
    {
      "id": "633fbec3aff09e000024b187",
      "text": "　　A: なんでこのネーミングにしたのかは僕は作者ではないのでわからない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665121987,
      "updated": 1665122007
    },
    {
      "id": "633fbed8aff09e000024b188",
      "text": "　　B: 安定してきれいな絵が出ますよという雰囲気で名付けたのかな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122008,
      "updated": 1665122047
    },
    {
      "id": "633fbf08aff09e000024b189",
      "text": "　Q: プロンプトとは",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122057,
      "updated": 1665122075
    },
    {
      "id": "633fbf1aaff09e000024b18a",
      "text": "　　A: 入力する文字列のこと、詳しくは次で説明します",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122075,
      "updated": 1665122096
    },
    {
      "id": "633fbf30aff09e000024b18b",
      "text": "　　 世の中的にはテキストを入れて絵が出てくるツールだと認識されてるけど、ここまでの説明ではまだテキストを入れるところが説明されてない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122097,
      "updated": 1665122141
    },
    {
      "id": "633fbf5eaff09e000024b18c",
      "text": "　　Q: デノイズの処理自体はプロンプト関係ないってこと？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122143,
      "updated": 1665122164
    },
    {
      "id": "633fbf76aff09e000024b18d",
      "text": "　　A: プロンプト関係ないというか…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122166,
      "updated": 1665122237
    },
    {
      "id": "633fbfbcaff09e000024b18f",
      "text": "　　　拡散モデルの画像生成の仕組みとしてはただのノイズからデノイズをして画像を作るというもの",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122237,
      "updated": 1665122237
    },
    {
      "id": "633fbfb8aff09e000024b18e",
      "text": "　　　このデノイズの部分を条件付き確率にして条件指定でいじれるようにしてあって、そこのところに条件としてプロンプト文字列を入れることができるようにしている、という仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122232,
      "updated": 1665628381
    },
    {
      "id": "633fc006aff09e000024b190",
      "text": "　　　追記: この条件パラメータは別にテキストである必要などなく、実際に論文では色々な種類の条件を入れる実験をしている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122310,
      "updated": 1665122492
    },
    {
      "id": "633fc0b7aff09e000024b191",
      "text": "　　　　世の中的に「テキストプロンプトを入れるだけで絵が出る！」という経路が知識のない人でも使えてバズっただけのこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122487,
      "updated": 1665122497
    },
    {
      "id": "633fc0ddaff09e000024b192",
      "text": "　Q: テンソルの4×64×64の4は、4枚あるということ？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122526,
      "updated": 1665122573
    },
    {
      "id": "633fc0ffaff09e000024b195",
      "text": "　　A: 4枚あるということ。4チャンネルあると捉えてもいい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122560,
      "updated": 1665628395
    },
    {
      "id": "633fc121aff09e000024b197",
      "text": "　　Q: 3×512×512の3は？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122594,
      "updated": 1665122608
    },
    {
      "id": "633fc130aff09e000024b198",
      "text": "　　A: RGBの3チャンネル",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122608,
      "updated": 1665122617
    },
    {
      "id": "633fc14aaff09e000024b199",
      "text": "　Q: 1000ステップを1回にまとめてやらずに20ステップずつ50回やるのはなぜ？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122635,
      "updated": 1665122729
    },
    {
      "id": "633fc1a9aff09e000024b19a",
      "text": "　　たくさんまとめてやればやるほど「ちゃんと1ステップずつやった時とのズレ」が大きくなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122729,
      "updated": 1665122761
    },
    {
      "id": "633fc1d6aff09e000024b19b",
      "text": "　　数式的には1000ステップを1回でやる更新式も作れるけど、これは推定なので誤差も大きくなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122774,
      "updated": 1665628431
    },
    {
      "id": "633fc20caff09e000024b19c",
      "text": "　　誤差が大きくなりすぎると実用上のメリットがなくなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122828,
      "updated": 1665628435
    },
    {
      "id": "63477912aff09e000070f44b",
      "text": "　　\t時間と精度のトレードオフで、20回くらいだとまあまあ実用的ということ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665628435,
      "updated": 1665628435
    },
    {
      "id": "633fc0deaff09e000024b193",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122526,
      "updated": 1665122526
    },
    {
      "id": "6322ac55aff09e000091e84c",
      "text": "プロンプト",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663216726,
      "updated": 1664362945
    },
    {
      "id": "6322ac58aff09e000091e84d",
      "text": "　画像を生成する時に入力するテキストのこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663216728,
      "updated": 1665122896
    },
    {
      "id": "633fc251aff09e000024b19e",
      "text": "　サブワードに分割された上で、1トークン(多くの場合1単語)が768次元のベクトルになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122898,
      "updated": 1665122963
    },
    {
      "id": "633fc295aff09e000024b19f",
      "text": "　 bozumanのような辞書にない単語を入れると1単語が3トークンに分割されたりする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122965,
      "updated": 1665123009
    },
    {
      "id": "633fc2cfaff09e000024b1a0",
      "text": "\t　プロンプトをトークンに分割したタイミングで77個を超える時は切り捨てて固定長にしてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123024,
      "updated": 1665123044
    },
    {
      "id": "633fc2e3aff09e00005ffe8a",
      "text": "\t　　短い場合は0でパディング",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123044,
      "updated": 1665123044
    },
    {
      "id": "633fc240aff09e000024b19d",
      "text": "　77トークン×768次元のテンソルになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665122881,
      "updated": 1665122881
    },
    {
      "id": "6323eddfaff09e00006c196b",
      "text": "　\t[https://gyazo.com/9b56949eefcc9f7f031b74a847a68d1b]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299040,
      "updated": 1664362945
    },
    {
      "id": "6323ebe1aff09e00006c195f",
      "text": "\t　\t[Stable Diffusionのpromptは77×768次元のテンソルになる]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663298530,
      "updated": 1664362945
    },
    {
      "id": "6333d665aff09e00001edff1",
      "text": "\t　　[Positional Encoding]の亜種が足されているので縦縞に見える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664341605,
      "updated": 1665123061
    },
    {
      "id": "6323ebe2aff09e00006c1960",
      "text": "　　これは[CLIP]([clip-ViT-L-14])がやる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663298531,
      "updated": 1664429227
    },
    {
      "id": "633fc311aff09e000024b1a1",
      "text": "　　　Stable Diffusionでは学習していない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123089,
      "updated": 1665123099
    },
    {
      "id": "633fc31caff09e000024b1a2",
      "text": "　　　　既存の公開されてるモデルを取ってきて変更しないで部品として使ってるだけ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123100,
      "updated": 1665123116
    },
    {
      "id": "6333e1d7aff09e00001ee001",
      "text": "　　　ざっくりいえば画像と文章の対応づけ(どの画像とどの文章がペアかを当てる)タスクの学習",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664344535,
      "updated": 1664362945
    },
    {
      "id": "633fc33baff09e000024b1a3",
      "text": "　　　　5つ画像があって5つテキストがあって、どれとどれがペアでしょう？みたいなやつ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123132,
      "updated": 1665123153
    },
    {
      "id": "6333e25aaff09e00001ee003",
      "text": "　　　画像も文章も768次元のベクトルに射影されてコサイン類似度を計算できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664344666,
      "updated": 1664362945
    },
    {
      "id": "6333e240aff09e00001ee002",
      "text": "　　　大規模に学習されてモデルが公開されているのでいろんなプロジェクトが部分部分で活用している",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664344641,
      "updated": 1665123195
    },
    {
      "id": "633fc365aff09e000024b1a4",
      "text": "　　　　Stable Diffusionではプロンプトの埋め込みにだけ使われている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123174,
      "updated": 1665123174
    },
    {
      "id": "6322ac76aff09e000091e84e",
      "text": "　Denoiseの時にプロンプトの情報を[注意機構]で見に行く",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663216758,
      "updated": 1664362945
    },
    {
      "id": "6333e361aff09e00001ee005",
      "text": "　　注意機構が具体的にどんなサイズなのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664344929,
      "updated": 1664362945
    },
    {
      "id": "6333fea6aff09e00001e6dd7",
      "text": "　　ノイズ除去のプロセスは具体的には[U-Net]になってて、各層から注意機構が伸びてるんで全体を説明するのは大変だから、一箇所取り出して解説する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664351910,
      "updated": 1665123231
    },
    {
      "id": "63340220aff09e00001ee020",
      "text": "　　[https://gyazo.com/370a3b55cca24971403d856683e2e1a8]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664352801,
      "updated": 1664362945
    },
    {
      "id": "633fc3bcaff09e000024b1a5",
      "text": "　　　プロンプトは768次元のベクトルが77個ある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123260,
      "updated": 1665123276
    },
    {
      "id": "633fc3ccaff09e000024b1a6",
      "text": "　　　それを適当なニューラルネットでそれぞれ300次元に変換したものがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123276,
      "updated": 1665123300
    },
    {
      "id": "633fc3e5aff09e000024b1a7",
      "text": "　　　　これがキーの集合Kとバリューの集合V",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123301,
      "updated": 1665123343
    },
    {
      "id": "633fc3f2aff09e000024b1a8",
      "text": "　　　どっかから取ってきた情報を300次元に変換したもの、これがクエリーQ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123315,
      "updated": 1665123391
    },
    {
      "id": "633fc440aff09e000024b1a9",
      "text": "　　　QとKをmatmulする、要するにそれぞれのベクトルに対して内積とることに相当する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123392,
      "updated": 1665123440
    },
    {
      "id": "633fc473aff09e000024b1aa",
      "text": "　　　で、それをSoftmaxに入れるとベクトルの方向が近いところの値が大きくなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123444,
      "updated": 1665123478
    },
    {
      "id": "633fc49daff09e000024b1ab",
      "text": "　　　　これがアテンションウェイト",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123486,
      "updated": 1665123492
    },
    {
      "id": "633fc4a7aff09e000024b1ac",
      "text": "　　　　仮にどこか1箇所が1になったとするなら次のVとのmatmulは実質的に「その一つを選択する」に相当する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123496,
      "updated": 1665123567
    },
    {
      "id": "633fc4d3aff09e000024b1ae",
      "text": "　　　　つまり「77トークンのどれに注目して、どれを無視するか」がこの値に込められている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123539,
      "updated": 1665123637
    },
    {
      "id": "633fc535aff09e000024b1af",
      "text": "　　　こうやって注目するところだけ混ぜ合わせたバリューを作っている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123637,
      "updated": 1665123675
    },
    {
      "id": "633fc570aff09e000024b1b0",
      "text": "　　　この仕組み自体はいわゆる「[注意機構]」であって、ありふれたもの、StableDiffusion特有のことは何もしていない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123697,
      "updated": 1665123738
    },
    {
      "id": "63340dfcaff09e00005baa25",
      "text": " \t[U-Net] model for Denoising Diffusion Probabilistic Models (DDPM)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664355836,
      "updated": 1664362955
    },
    {
      "id": "63341310aff09e00005baa26",
      "text": " \t\thttps://nn.labml.ai/diffusion/ddpm/unet.html",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664357137,
      "updated": 1664362955
    },
    {
      "id": "6334132faff09e00005baa27",
      "text": " \t\t[https://gyazo.com/3b66a0599134b164ac6317347b8ac6c7]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664357167,
      "updated": 1664362955
    },
    {
      "id": "6333e2d6aff09e00001ee004",
      "text": " 　　U-Netは簡単にいえば画像を入力として画像を出力する系のタスクに使われる部班",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664344791,
      "updated": 1665123760
    },
    {
      "id": "633fc5b0aff09e000024b1b1",
      "text": " 　　　一旦低解像度高チャンネル数の表現を通す仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123760,
      "updated": 1665123762
    },
    {
      "id": "633fc5d4aff09e000024b1b2",
      "text": " 　　　その細い空間を通す前の情報をコピーして貼り付けている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123796,
      "updated": 1665123851
    },
    {
      "id": "633fc60aaff09e000024b1b3",
      "text": " 　　　　灰色の矢印と白い四角",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123851,
      "updated": 1665123867
    },
    {
      "id": "633fc60eaff09e000024b1b4",
      "text": " 　　　　低解像度の空間を通した情報と通してない情報の両方を使って高解像度の情報を再現する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123855,
      "updated": 1665123905
    },
    {
      "id": "633fc644aff09e000024b1b5",
      "text": " 　　　　この貼り合わせるところで注意機構からの情報も追加していると僕は理解している、間違ってるかもしれない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665123908,
      "updated": 1665123966
    },
    {
      "id": "63341464aff09e00001ee025",
      "text": " 　　上記の図では572×572の33万次元の情報が一旦28×28の小さな画像になってる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664357477,
      "updated": 1664362955
    },
    {
      "id": "63341598aff09e00001ee028",
      "text": " 　　　1024チャンネルもあるので80万次元に増えてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664357785,
      "updated": 1664362955
    },
    {
      "id": "633fc6f5aff09e000024b1b9",
      "text": " 　　　　画像の広い範囲から集めた抽象度の高い情報が、この深いチャンネルのところに詰め込まれているのだろう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665124085,
      "updated": 1665124089
    },
    {
      "id": "63341594aff09e00001ee027",
      "text": " 　\t　[- 高次元の情報の処理で一旦低次元空間を通すってのは[オートエンコーダ]などとも関連した概念で、それによって認識などに必要ではない「瑣末な情報」を捨てることができる]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664357780,
      "updated": 1664362955
    },
    {
      "id": "633415f0aff09e00000b674f",
      "text": " 　\t　\t次元減ってなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664357873,
      "updated": 1664362955
    },
    {
      "id": "633415f9aff09e00001ee029",
      "text": " 　\t　\t空間方向の解像度を下げることで瑣末な高周波成分を捨てるなどと言われてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664357881,
      "updated": 1664362955
    },
    {
      "id": "6334165daff09e00001ee02a",
      "text": " 　\t　\t途中の次元が減ってないのでオートエンコーダ的に元画像の復元タスクをやらせると完璧に復元してしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664357981,
      "updated": 1665124012
    },
    {
      "id": "633fc6acaff09e000024b1b6",
      "text": " 　\t　\t図のネットワークはセグメンテーションのタスクを例に説明されている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665124012,
      "updated": 1665124020
    },
    {
      "id": "633fc6b3aff09e000024b1b7",
      "text": " 　\t　\tそういうタスクなら画像の1ピクセル1ピクセルがバラバラにあっても解けない問題だからたくさんのチャンネルが有効に使われるのかな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665124020,
      "updated": 1665124020
    },
    {
      "id": "633fe204aff09e000024b1ba",
      "text": " 　\t　\tセグメントは物理的な局在している",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665131012,
      "updated": 1665131023
    },
    {
      "id": "633fe20eaff09e000024b1bb",
      "text": " 　\t　\t　画面上に散らばったセグメントなどはない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665131023,
      "updated": 1665131039
    },
    {
      "id": "633fe21eaff09e000024b1bc",
      "text": " 　\t　\t　=画素の高周波成分が影響しにくい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665131039,
      "updated": 1665131104
    },
    {
      "id": "633fe260aff09e000024b1bd",
      "text": " 　\t　\t　こういう人間の認知のパターンにフィットした結果を出すために、低解像度化して空間周波数方向の成分を捨てている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665131104,
      "updated": 1665131173
    },
    {
      "id": "6334182eaff09e00001ee02b",
      "text": "　guidance_scale",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664358446,
      "updated": 1665130431
    },
    {
      "id": "633fe2c3aff09e000024b1be",
      "text": "　　パラメータ一覧にこれがあって「なんだろうな？」と思った人が多そう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665131204,
      "updated": 1665131233
    },
    {
      "id": "6323ee4daff09e00006c196c",
      "text": "\t\t>`guidance_scale` is defined analog to the guidance weight `w` of equation (2) of the Imagen paper: https://arxiv.org/pdf/2205.11487.pdf ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299150,
      "updated": 1664362945
    },
    {
      "id": "6334009baff09e00001e6dd8",
      "text": "\t\t[https://gyazo.com/74cbce41ccd4ee28594cbf970e64c1e1]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664352412,
      "updated": 1664362945
    },
    {
      "id": "6323ee4daff09e00006c196d",
      "text": "　　プロンプトがない時のノイズの推定(unconditional noise prediction) [$ \\epsilon_\\theta (Z_t)] と、ある時のノイズの推定[$ \\epsilon_\\theta (Z_t, c)]をそれぞれ計算する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299150,
      "updated": 1665131268
    },
    {
      "id": "633fe303aff09e000024b1bf",
      "text": "　　その差に係数をかけて足し合わせる、つまりどれくらいプロンプトを重視するかをこのパラメータで決める",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665131268,
      "updated": 1665628586
    },
    {
      "id": "633401ffaff09e00001ee01f",
      "text": "　　式の形から0〜1にするのかと思いきやデフォルト値は7.5",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664352767,
      "updated": 1664362945
    },
    {
      "id": "633fe326aff09e000024b1c0",
      "text": "　　　実際の推定よりもプロンプトの影響を強調して適用している",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665131303,
      "updated": 1665131339
    },
    {
      "id": "6358d55caff09e00001fbe0d",
      "text": "　　NovelAIではこの第二項のunconditional noise predictionが、ネガティブプロンプトのconditional noise predictionに置き換わってる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1666766172,
      "updated": 1666766232
    },
    {
      "id": "6358d59aaff09e00001fbe0f",
      "text": "　　　それによってネガティブプロンプトの効果は通常のプロンプトと逆向きになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1666766234,
      "updated": 1666766364
    },
    {
      "id": "6323f009aff09e00006c196f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299594,
      "updated": 1663299594
    },
    {
      "id": "633502b6aff09e0000ea3980",
      "text": "[Stable Diffusionのシードとプロンプトの関係]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664418487,
      "updated": 1664418509
    },
    {
      "id": "633502b7aff09e0000ea3981",
      "text": "　これは未踏ジュニア向けに説明した記事、一旦このページに移って説明する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664418487,
      "updated": 1664505385
    },
    {
      "id": "63365605aff09e000059f7b6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664505350,
      "updated": 1664505350
    },
    {
      "id": "632404c9aff09e0000f99026",
      "text": "[Stable Diffusion埋め込みテンソル編集]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663304905,
      "updated": 1664358588
    },
    {
      "id": "632404c9aff09e0000f99027",
      "text": "\t[https://pbs.twimg.com/media/FcruvumacAE1QHu.jpg]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663304905,
      "updated": 1664358588
    },
    {
      "id": "6333e3e6aff09e00001ee007",
      "text": "　プロンプト(テキスト)を入れて画像を生成する仕組みだと世の中的には認識されてるが、プロンプトは即座にベクトル空間に埋め込まれるので加算やスカラー倍ができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664345062,
      "updated": 1664358684
    },
    {
      "id": "633418b7aff09e00001ee02c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664358583,
      "updated": 1664358583
    },
    {
      "id": "6322a9a1aff09e00006c18a8",
      "text": "img2imgの仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663216033,
      "updated": 1664349855
    },
    {
      "id": "6340083baff09e000024b212",
      "text": "　[https://gyazo.com/4ab142483fe6161633e24987b79a5fac]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140795,
      "updated": 1665140795
    },
    {
      "id": "63400853aff09e000024b219",
      "text": "  前回text to imageをした時は、初期値は単なる乱数だった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140820,
      "updated": 1665140845
    },
    {
      "id": "6340086daff09e000024b21a",
      "text": "  　この方法では人間が与えた画像を潜在空間に埋め込んでから、それにちょっとノイズを加えて初期値にする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140845,
      "updated": 1665140902
    },
    {
      "id": "634008d1aff09e000024b21d",
      "text": "  　元画像に例えば75%くらいのノイズをかけて、それから75%の回数のDenoiseをする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140945,
      "updated": 1665140949
    },
    {
      "id": "634008d1aff09e000024b21e",
      "text": "   　ノイズの強さとDenoiseの回数は両方strengthで決まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140945,
      "updated": 1665140949
    },
    {
      "id": "634008d1aff09e000024b21f",
      "text": "   　ノイズが少なければ元の画像に近いものになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140945,
      "updated": 1665140955
    },
    {
      "id": "634008b7aff09e000024b21b",
      "text": "  　　ノイズを大きくすればより大きく変わる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140919,
      "updated": 1665140986
    },
    {
      "id": "63400847aff09e000024b216",
      "text": "   \tこの解説の絵のパラメータは下記",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140808,
      "updated": 1665141011
    },
    {
      "id": "6340090aaff09e000024b220",
      "text": "   \t　prompt: \"cat, sea, wave, palm tree, in Edvard Munch style\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141002,
      "updated": 1665141002
    },
    {
      "id": "63400847aff09e000024b217",
      "text": "   \t\tstrength: 0.75",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140808,
      "updated": 1665140993
    },
    {
      "id": "63400847aff09e000024b218",
      "text": "   \t\t[Stable Diffusion Latent Space Visualization]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665140808,
      "updated": 1665140993
    },
    {
      "id": "6323d6f0aff09e00006c1929",
      "text": "\tstrengthを変えて試してみた結果",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663293168,
      "updated": 1665141031
    },
    {
      "id": "63400929aff09e000024b221",
      "text": "\t　strengthを0.6から0.99まで0.01刻みで増やした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141034,
      "updated": 1665141069
    },
    {
      "id": "6323d84aaff09e00006c192e",
      "text": "\t\t[https://gyazo.com/0879fa5004d77ded58b9bcc98a34f055]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663293515,
      "updated": 1663293524
    },
    {
      "id": "6323d854aff09e00006c192f",
      "text": "　　　画像の「step: 0.1」は「step: 0.01」のtypo",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663293524,
      "updated": 1665628670
    },
    {
      "id": "6323d770aff09e00006c192c",
      "text": "　　ノイズの量が多いほど元の絵を無視してフリーダムに描く",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663293297,
      "updated": 1664346343
    },
    {
      "id": "6340098faff09e000024b222",
      "text": "　　　左上では僕が書いたものとだいぶ近い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141136,
      "updated": 1665141218
    },
    {
      "id": "634009c7aff09e000024b223",
      "text": "　　　右下では猫がいなくなったり椰子の木が猫になったり猫が砂に埋められたりフリーダムなことになってる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141191,
      "updated": 1665141191
    },
    {
      "id": "634009f8aff09e000024b224",
      "text": "　　Q: プロンプトはどうなってる？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141240,
      "updated": 1665141248
    },
    {
      "id": "634009ffaff09e000024b225",
      "text": "　　　A: 全部共通でprompt: \"cat, sea, wave, palm tree, in Edvard Munch style\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141248,
      "updated": 1665141257
    },
    {
      "id": "63400a0baff09e000024b226",
      "text": "　　　　Edvard Munchってのは「ムンクの『叫び』」のムンクです",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141259,
      "updated": 1665141289
    },
    {
      "id": "63400a39aff09e000024b228",
      "text": "　　　　空の塗り方にムンクみが出てますね",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141305,
      "updated": 1665141373
    },
    {
      "id": "63400a7caff09e000024b229",
      "text": "　　　　僕が最初に与えた画像は単色でぺったり塗っていたので左上の方ではそれが再現されてるけど、右下に行くほど空の塗りが複雑になっていく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141373,
      "updated": 1665141382
    },
    {
      "id": "63400aa2aff09e000024b22a",
      "text": "　　この実験の時に失敗したなーと思うのは、ノイズを乗せる時のランダムシードを固定してないところ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141411,
      "updated": 1665141437
    },
    {
      "id": "63400ac1aff09e000024b22b",
      "text": "　　　結果のバリエーションが広いのはそのせい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141442,
      "updated": 1665141491
    },
    {
      "id": "63400af9aff09e000024b22c",
      "text": "　　　固定して実験した方がその要素を無視できて良かったかもね",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141497,
      "updated": 1665141524
    },
    {
      "id": "63400b81aff09e00005ffe92",
      "text": "　　右下とか99%ノイズなわけなので、手前が砂で奥が海という構図を維持できてるのがむしろ驚き",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141634,
      "updated": 1665141639
    },
    {
      "id": "63400b79aff09e00005ffe90",
      "text": "　　0.6台の猫部分の拡大",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141625,
      "updated": 1665141625
    },
    {
      "id": "63400b79aff09e00005ffe91",
      "text": "　　　[https://gyazo.com/c97b908051fea30461729f2a81607013] [https://gyazo.com/f37628eb413e3693305bb410120bf37c][https://gyazo.com/db1c4e2836e2b3356de771beff24a00b][https://gyazo.com/6b29646b7ffd43164777c9da0e639aff]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141625,
      "updated": 1665141625
    },
    {
      "id": "63400b15aff09e000024b22d",
      "text": "　　\t僕が適当に描いたのは「それ猫か？」という耳の形状なのだが、まともな耳の形に修正されている、よい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141526,
      "updated": 1665141721
    },
    {
      "id": "6333e9e1aff09e00001ee008",
      "text": "　手書きの図をいれてどうなるか実験",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664346593,
      "updated": 1664346657
    },
    {
      "id": "6333f6b0aff09e00001ee017",
      "text": "　　手書きの図をきれいに清書してくれると嬉しい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664349873,
      "updated": 1664349922
    },
    {
      "id": "6333f6e2aff09e00001ee018",
      "text": "　　が、今のところ良いプロンプトを見つけてない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664349922,
      "updated": 1664349949
    },
    {
      "id": "6322aacdaff09e000091e844",
      "text": "\t\t\t[https://gyazo.com/6d7c429bf18c8c4241ff5e4f7b712e32] [https://gyazo.com/00a5fe2e0f5608e729b044aac2fdf915]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663216333,
      "updated": 1664350142
    },
    {
      "id": "6333f7bdaff09e00001e6dd2",
      "text": "　　　9割ノイズを入れて描き直してるのだけど差がわかりにくい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350142,
      "updated": 1664350202
    },
    {
      "id": "6333f7abaff09e00001e6dd1",
      "text": "\t\t\t[https://gyazo.com/80829926214f2960bea545cf0c121cea] [https://gyazo.com/6e3838c5ac16740d741015306a39be96]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350124,
      "updated": 1664350230
    },
    {
      "id": "6333f816aff09e00001e6dd4",
      "text": "\t\t\t[https://gyazo.com/769aec555c457759ce1d87c81849ee5e] [https://gyazo.com/82734ded31c35b2eb80db9c7c4cc3f8e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350230,
      "updated": 1664350260
    },
    {
      "id": "6333f833aff09e00001e6dd6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350260,
      "updated": 1664350260
    },
    {
      "id": "6333f828aff09e00001e6dd5",
      "text": "　　　この辺がきれいになってるのだけどw",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350249,
      "updated": 1664350387
    },
    {
      "id": "6333f849aff09e00001ee019",
      "text": "　　　 細かすぎてわかる人の方が少ないw",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350282,
      "updated": 1664350292
    },
    {
      "id": "6333f710aff09e00001e6dcf",
      "text": "　　　そして逆に文字などが別の文字に化けてる(5がSになったり)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664349969,
      "updated": 1664350431
    },
    {
      "id": "63477a66aff09e000070f44c",
      "text": "　　　\t[https://gyazo.com/79a5be84b4d3badcc5552083135937d4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665628775,
      "updated": 1665628776
    },
    {
      "id": "6333f882aff09e00001ee01a",
      "text": "　　手書き風の画像が出てきてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350339,
      "updated": 1665141893
    },
    {
      "id": "63400c85aff09e000024b22e",
      "text": "　　パスドローなどできっちり真っ直ぐな線や円弧で仕上げた図表が出るといいなぁ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141893,
      "updated": 1665141902
    },
    {
      "id": "63400c8daff09e000024b22f",
      "text": "　　　そういうのを出すプロンプトが見つかるといいのだけど…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665141902,
      "updated": 1665141921
    },
    {
      "id": "6333f944aff09e00001ee01c",
      "text": "　　　ファインチューニングでそういうスタイルを学習させる手もある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350537,
      "updated": 1664350552
    },
    {
      "id": "6333f883aff09e00001ee01b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350339,
      "updated": 1664350339
    },
    {
      "id": "63342688aff09e00001ee02e",
      "text": "inpaint",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664362121,
      "updated": 1665547314
    },
    {
      "id": "63463c32aff09e00009c7a24",
      "text": "\t[https://gyazo.com/1e683ae1f60758ddd9d6e36391da3608]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547314,
      "updated": 1665547317
    },
    {
      "id": "6322abc5aff09e000091e846",
      "text": "\t[https://gyazo.com/7bbbd2f36bc287afe03cd0b19e6f9ce9]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663216582,
      "updated": 1665547949
    },
    {
      "id": "63463c3daff09e00009c7a26",
      "text": " \t[Stable Diffusion Inpaintの仕組み]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547325,
      "updated": 1665547326
    },
    {
      "id": "6322ed40aff09e000009dfd6",
      "text": "\t「マスクしてないところだけを描き直してくれる機能」ではない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663233345,
      "updated": 1665545931
    },
    {
      "id": "634636e2aff09e0000090dfb",
      "text": " \tそれは一般人向けの雑な説明",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665545954,
      "updated": 1665545954
    },
    {
      "id": "6323f0c1aff09e00006c1971",
      "text": " \t「マスクされてるところは一切変更しないで、残りの部分だけを境界の辻褄が合うように作る」って仕組みではない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299778,
      "updated": 1663299778
    },
    {
      "id": "634636e3aff09e0000090dfc",
      "text": " \t僕も最初はそうだと思い込んでいたが、理解に反する挙動があって詳しく調べたら違うとわかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665545956,
      "updated": 1665546017
    },
    {
      "id": "63463a97aff09e00009c7a22",
      "text": " \t\t[https://gyazo.com/8e774b25c948331055c2f27ecb84b864]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665546903,
      "updated": 1665546906
    },
    {
      "id": "63463a9aaff09e00009c7a23",
      "text": "\t\t\t\t>マスク領域が維持されてないように見えるけど何がいけないのか？？(2022/9/12)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665546906,
      "updated": 1665547398
    },
    {
      "id": "63463adaaff09e0000090e00",
      "text": "\t\t\t\t神様部分をマスクしている。上下の余白はマスク外。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665546970,
      "updated": 1665547357
    },
    {
      "id": "63463c5daff09e00009c7a27",
      "text": "\t\t\t\t\t[https://gyazo.com/71e41bc6a8ae03e54fe89c7309098897]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547357,
      "updated": 1665547360
    },
    {
      "id": "63463c5daff09e00009c7a28",
      "text": "\t\t\t\t神様は元絵のママになり余白には適当に絵が描かれることを期待したがそうはならなかった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547358,
      "updated": 1665547358
    },
    {
      "id": "63463e5caff09e0000090e07",
      "text": "\t\t\t\tQ: マスク部分が変わるの驚き",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547869,
      "updated": 1665547878
    },
    {
      "id": "63463e66aff09e0000090e08",
      "text": "\t\t\t\t　A: ですよね、神様部分がめちゃくちゃ書き変わって「僕の使い方とかコードとかがおかしいのかな？」と悩みました",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547879,
      "updated": 1665547925
    },
    {
      "id": "63463726aff09e0000090dfd",
      "text": " 　仕組みがわかると当たり前",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665546022,
      "updated": 1665547189
    },
    {
      "id": "63463bb4aff09e0000090e01",
      "text": " 　　間で一旦潜在空間を通るので元の画像を維持できるだけの情報量がない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547189,
      "updated": 1665547196
    },
    {
      "id": "6323f0c1aff09e00006c1972",
      "text": " \t一見マスク部分が維持されてるように見えるベンチ犬のサンプルも、拡大してみるとマスクされたベンチの網目模様が変化しているのがわかる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299778,
      "updated": 1665547541
    },
    {
      "id": "6323f0c1aff09e00006c1973",
      "text": " \t\t[https://gyazo.com/3555cfd5ad7d03a520c5be77bb59ad93]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299778,
      "updated": 1663299778
    },
    {
      "id": "6323f0c1aff09e00006c1975",
      "text": " \t　たまたま人間がベンチの模様には注目していないので気付きにくいだけ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299778,
      "updated": 1665546079
    },
    {
      "id": "6346375eaff09e0000090dff",
      "text": " \t　人間の注意が中央の犬と猫に誘導されている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665546079,
      "updated": 1665546094
    },
    {
      "id": "6346373caff09e0000090dfe",
      "text": "\t\t現実的なワークフローは生成後に改めて合成",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665546045,
      "updated": 1665547563
    },
    {
      "id": "6333f998aff09e00001ee01d",
      "text": "\t\t　Photoshopで合成する例",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664350617,
      "updated": 1664350624
    },
    {
      "id": "6323f46baff09e0000c90670",
      "text": "　\t\t\t[https://note.com/abubu_nounanka/n/n3a0431d2c47a より思い通りの画像を作る！img2img＆フォトバッシュ複合ワークフローについて StableDiffusion ｜abubu nounanka｜note]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663300716,
      "updated": 1664350629
    },
    {
      "id": "6333ea42aff09e00001ee00b",
      "text": " \t\tマスク画像自体を使って合成したら境界が目立つのだろうか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664346690,
      "updated": 1665547666
    },
    {
      "id": "6323f0d8aff09e00006c197b",
      "text": " 　\t\t試した: [mask again after inpaint]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299801,
      "updated": 1665628904
    },
    {
      "id": "63342678aff09e00001ee02d",
      "text": "　　　　継ぎ目はあるが継ぎ目が近くなるように学習しているのでこのケースではそれほど目立たなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664362104,
      "updated": 1665547740
    },
    {
      "id": "63463ddcaff09e0000090e04",
      "text": "　　　　この処理は全自動でできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547740,
      "updated": 1665547759
    },
    {
      "id": "63463defaff09e0000090e05",
      "text": "　　　　この処理をした方を好むかしない方を好むかは、人間の個別のユースケース次第",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547760,
      "updated": 1665547792
    },
    {
      "id": "63463e11aff09e0000090e06",
      "text": "　　　　　大したコストもかからないし現実的には両方生成してやるのがよいかな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547794,
      "updated": 1665547826
    },
    {
      "id": "63463d7eaff09e0000090e02",
      "text": "　詳しい仕組み説明してなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547647,
      "updated": 1665547964
    },
    {
      "id": "63463ebbaff09e0000090e09",
      "text": "　　[https://gyazo.com/7bbbd2f36bc287afe03cd0b19e6f9ce9]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547964,
      "updated": 1665547967
    },
    {
      "id": "63463ebcaff09e0000090e0a",
      "text": "　　マスク画像の白い部分は「自由に描いて良い」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665547965,
      "updated": 1665548016
    },
    {
      "id": "63463ef0aff09e0000090e0b",
      "text": "　　　黒い部分は「自由に書いて良いが適当な係数で元画像とブレンドするよ」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548016,
      "updated": 1665548016
    },
    {
      "id": "63463ef1aff09e0000090e0c",
      "text": "　　　デノイズの過程で何度も元画像とブレンドされる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548018,
      "updated": 1665548096
    },
    {
      "id": "63463f26aff09e0000090e0d",
      "text": "　　　　なので最終的に黒い部分は「元画像にまあまあ近い」になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548071,
      "updated": 1665548156
    },
    {
      "id": "63463f7baff09e0000090e0e",
      "text": "　　　　この処理はもちろん潜在空間で行なっているので「潜在空間で近い」にすぎない、64x64の解像度",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548156,
      "updated": 1665548251
    },
    {
      "id": "6346401faff09e0000090e12",
      "text": "　　　　　64×64の画像を512×512にVAEで戻した画像は、元画像に一致しはしない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548320,
      "updated": 1665548387
    },
    {
      "id": "63463f94aff09e0000090e0f",
      "text": "　　　　　猫と神様の例では、この「戻した画像」が人間の許容できるクオリティにならなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548181,
      "updated": 1665548405
    },
    {
      "id": "63463ff9aff09e0000090e10",
      "text": "　　　　　なぜならフェンスの柵と違って神様は「前景」であり「人間が注目するところ」だったから",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548281,
      "updated": 1665548307
    },
    {
      "id": "63464012aff09e0000090e11",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548307,
      "updated": 1665548408
    },
    {
      "id": "63464077aff09e00009c7a2a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548408,
      "updated": 1665548408
    },
    {
      "id": "6323f0d7aff09e00006c1978",
      "text": "[img2prompt]の仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299799,
      "updated": 1664363155
    },
    {
      "id": "6346413faff09e00009c7a2e",
      "text": "\t[methexis-inc/img2prompt – Run with an API on Replicate https://replicate.com/methexis-inc/img2prompt]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548608,
      "updated": 1665548609
    },
    {
      "id": "634640d0aff09e00009c7a2b",
      "text": "\t\t[CLIP interrogator]という名前で定着しつつあるかも",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548496,
      "updated": 1665548611
    },
    {
      "id": "63464115aff09e00009c7a2c",
      "text": "\t\t\t[https://github.com/pharmapsychotic/clip-interrogator GitHub - pharmapsychotic/clip-interrogator]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548565,
      "updated": 1665548611
    },
    {
      "id": "6335121aaff09e0000ea3983",
      "text": "　[https://gyazo.com/0fc5ddd200ee59aebb028a38c79c09c0]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664422426,
      "updated": 1664429188
    },
    {
      "id": "6323f0d7aff09e00006c1979",
      "text": "　　今まで話していたStable Diffusionのtxt2img はテキストから画像を作る仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663299800,
      "updated": 1665548685
    },
    {
      "id": "6346418eaff09e0000090e14",
      "text": "　　Stable Diffusionとは別のプロジェクトとして、画像を入力してそれを説明するタスクがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548686,
      "updated": 1665548737
    },
    {
      "id": "634641c0aff09e0000090e15",
      "text": "　　　これを少しいじって「Stable Diffusionに入れると良さそうなプロンプトを作る」をやっているプロジェクト、リポジトリがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548737,
      "updated": 1665548798
    },
    {
      "id": "6346420daff09e0000090e16",
      "text": "　　この例では、黄色い目の黒猫、色鉛筆画で、なんとかさんの書いた絵っぽい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548814,
      "updated": 1665548946
    },
    {
      "id": "63464291aff09e0000090e18",
      "text": "　　　ついでに細々とした属性、チョークで描いた絵だとか炭で描いた風だとか、あと謎にCC-BYのライセンスまでつけてきたんだけどw",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548946,
      "updated": 1665548971
    },
    {
      "id": "6346415faff09e0000090e13",
      "text": "　まずは[BLIP]で画像説明を作る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548639,
      "updated": 1665548980
    },
    {
      "id": "633533e1aff09e000036df71",
      "text": "　\t[\" a painting of a black cat with yellow eyes]の部分がそれ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664431074,
      "updated": 1665548990
    },
    {
      "id": "634642beaff09e0000090e19",
      "text": "　\tざっくり仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665548990,
      "updated": 1665548999
    },
    {
      "id": "634642c7aff09e0000090e1a",
      "text": "　\t　画像を分割してそれぞれの部分を説明し、それをまとめる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549000,
      "updated": 1665549028
    },
    {
      "id": "634642deaff09e0000090e1c",
      "text": "　\t　全体としてみたら黒猫だし、拡大してみると黄色い目、という感じで説明文が生成されている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549023,
      "updated": 1665549057
    },
    {
      "id": "63464308aff09e0000090e1d",
      "text": "　\t　他には「窓枠の上にいる猫」とか「猫が並んでる」など",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549064,
      "updated": 1665549101
    },
    {
      "id": "6346433eaff09e0000090e1e",
      "text": "　\tなので僕は「black cat」としか指示してないのに、僕が指示した以上のデティール解説が出てきている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549118,
      "updated": 1665549158
    },
    {
      "id": "6346436daff09e0000090e1f",
      "text": "　\t　目が黄色くなったのは乱数シードの影響です",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549166,
      "updated": 1665549177
    },
    {
      "id": "63351239aff09e0000ea3985",
      "text": "　その後で、付け加える要素を候補から総当たりで探索してる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664422457,
      "updated": 1665549478
    },
    {
      "id": "63353495aff09e0000a6f954",
      "text": "　　例えば作家名リストには5219人の名前が書かれている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664431257,
      "updated": 1665549586
    },
    {
      "id": "63464445aff09e0000090e23",
      "text": "　　　Edvard MunchとかWassily Kandinskyとか、他に思いつかないけど色々書かれてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549381,
      "updated": 1665553743
    },
    {
      "id": "63466674aff09e0000b934a8",
      "text": "　　　ここから総当たりで探索する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558132,
      "updated": 1665558788
    },
    {
      "id": "63466904aff09e0000b934ad",
      "text": "　　　　くっつけて類似度が一番増えたものを採用していく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558788,
      "updated": 1665558815
    },
    {
      "id": "634668f9aff09e0000b934ac",
      "text": "　　　知らない画家や画風キーワードを発見する機会になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558777,
      "updated": 1665558777
    },
    {
      "id": "63466725aff09e0000daad08",
      "text": "　　　\t例:[画家の発見], [/c3cats/space cat]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558309,
      "updated": 1665558309
    },
    {
      "id": "63352cb8aff09e000036df6f",
      "text": "　\t[CLIP]のところで書いたコサイン類似度",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664429242,
      "updated": 1665549700
    },
    {
      "id": "63352cb9aff09e000036df70",
      "text": "　　\t>画像も文章も768次元のベクトルに射影されてコサイン類似度を計算できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664429244,
      "updated": 1664429322
    },
    {
      "id": "6323f748aff09e0000c90672",
      "text": "　　目的画像に近くなったかどうかをコサイン類似度で見て、近くなるキーワードを発見して組み合わせる仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663301449,
      "updated": 1665549686
    },
    {
      "id": "63464571aff09e00009c7a2f",
      "text": " \t\t注: この768次元は、たまたま次元が一致してるけどトークンの埋め込み空間とは別物",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549681,
      "updated": 1665549683
    },
    {
      "id": "63464571aff09e00009c7a30",
      "text": " \t\t　もう1段階先の「テキストと画像が同じ768次元空間に埋め込まれる」の空間",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549681,
      "updated": 1665549683
    },
    {
      "id": "6346449caff09e0000090e24",
      "text": "\tBLIPだけでコサイン類似度0.2くらい出る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549469,
      "updated": 1665549469
    },
    {
      "id": "6346449caff09e0000090e25",
      "text": "\t　2次元のイメージでいると「全然似てないやん」となるが、このコサイン類似度は768次元空間で計算されている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549469,
      "updated": 1665549469
    },
    {
      "id": "6346449caff09e0000090e26",
      "text": "\t\t[高次元においてコサイン類似度0.2は激レア]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549469,
      "updated": 1665549469
    },
    {
      "id": "6346449caff09e0000090e27",
      "text": "\t\t768次元なので100万分の1以下",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549469,
      "updated": 1665549469
    },
    {
      "id": "6346449caff09e0000090e28",
      "text": "\t\t追加の探索によって0.22~0.24になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549469,
      "updated": 1665549735
    },
    {
      "id": "634645e2aff09e0000090e2a",
      "text": "　注意点",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549794,
      "updated": 1665558338
    },
    {
      "id": "63466742aff09e0000b934a9",
      "text": "　　CLIPの768次元ベクトルの空間での類似度を高める探索を行っている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558338,
      "updated": 1665558363
    },
    {
      "id": "6346675baff09e0000b934aa",
      "text": "　　「そのプロンプトを入れた時にその絵が出力される尤度」を高めているわけではない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558364,
      "updated": 1665558389
    },
    {
      "id": "63466775aff09e0000b934ab",
      "text": "　　　そこは全然別物、それをやるのはむしろ次で説明するTextual Inversion",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558389,
      "updated": 1665558627
    },
    {
      "id": "634645edaff09e0000090e2b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665549805,
      "updated": 1665549805
    },
    {
      "id": "63342a9aaff09e00000b6751",
      "text": "Textual Inversion",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664363163,
      "updated": 1664363163
    },
    {
      "id": "63342a9daff09e00000b6752",
      "text": "\t[Textual Inversionを試してみる]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664363166,
      "updated": 1664363166
    },
    {
      "id": "63342ab7aff09e00000b6755",
      "text": "\t\t[https://gyazo.com/461f9aa8415fdc0e45e20a4eb9d42dec]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664363191,
      "updated": 1664363192
    },
    {
      "id": "63342ad1aff09e00000b6756",
      "text": "　5枚程度の画像Aを食わせて1時間待つと768次元のベクトルBが出てくる仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664363218,
      "updated": 1664429828
    },
    {
      "id": "63342aa2aff09e00000b6754",
      "text": "　このベクトルはプロンプトのトークン埋め込みと同じ空間",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664363170,
      "updated": 1664363170
    },
    {
      "id": "6346694daff09e0000b934ae",
      "text": "　　catとkittenの補間とかをやってた空間",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558862,
      "updated": 1665558884
    },
    {
      "id": "63242c8eaff09e0000f99035",
      "text": "　これを*などの普段使わないトークンに割り当てて、以降のプロンプトで使えるようにする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663315086,
      "updated": 1664363156
    },
    {
      "id": "63352ecaaff09e0000a6f940",
      "text": "　詳しい学習方法は掘り下げてないが、ざっくりいえば「Bに埋め込まれる1単語をプロンプトにして画像生成した時にAと似た特徴の画像が生成される確率が高くなるように学習」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664429770,
      "updated": 1664429879
    },
    {
      "id": "63352f7daff09e0000a6f941",
      "text": "　当初は猫の柄やボウズマンのデザインが再現されることを期待したのだが、期待過剰だったのでは",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664429950,
      "updated": 1664429984
    },
    {
      "id": "6346698daff09e0000b934b0",
      "text": "　　そもそも768次元のベクトル1個が出てくるだけ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558925,
      "updated": 1665558944
    },
    {
      "id": "634669a0aff09e0000b934b1",
      "text": "　　　ボウズマンの柄みたいな「それを表現するコンパクトな語彙」が存在しないものを1単語相当のベクトルで表現するのは無茶",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665558944,
      "updated": 1665559003
    },
    {
      "id": "63352fa0aff09e0000a6f942",
      "text": "　　人類が言語で区別しているがユーザがその区別で表現できてない時には有用",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664429984,
      "updated": 1664430241
    },
    {
      "id": "633530a1aff09e0000a6f943",
      "text": "　　たとえば「こんな感じの猫」を「cat」という曖昧な概念でしか表現できてないユーザ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430241,
      "updated": 1664430289
    },
    {
      "id": "633530d1aff09e0000a6f945",
      "text": "　 AIを擬人的に説明(メタファー):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430290,
      "updated": 1665559017
    },
    {
      "id": "6335321eaff09e0000a6f950",
      "text": "　　AI「これはorange catっぼいな」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430622,
      "updated": 1664430622
    },
    {
      "id": "633530e4aff09e0000a6f946",
      "text": "　　　[https://gyazo.com/883e354ba11391e3f8ce8bdb3257cf09]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430308,
      "updated": 1664430317
    },
    {
      "id": "633530bcaff09e0000a6f944",
      "text": "　　AI「でもtabbyではない」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430269,
      "updated": 1664430393
    },
    {
      "id": "63353127aff09e0000a6f948",
      "text": "　　　[https://gyazo.com/0ca53d63ef0734f925cd8f2965a8fa0e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430375,
      "updated": 1664430383
    },
    {
      "id": "6335312faff09e0000a6f949",
      "text": "　　AI「bicolor的なんだけど色が違うな」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430383,
      "updated": 1664430493
    },
    {
      "id": "6335319daff09e0000a6f94a",
      "text": "　　　[https://gyazo.com/b1820f14ebbb89be348714bd3f1e9c0a]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430493,
      "updated": 1664430505
    },
    {
      "id": "633531a9aff09e0000a6f94b",
      "text": "　　AI「orange bicolor！そうそうこんな感じ」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430505,
      "updated": 1664430524
    },
    {
      "id": "633531bcaff09e0000a6f94c",
      "text": "　　　[https://gyazo.com/ab518b99313e00366f5913e8386ab50f]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430524,
      "updated": 1664430535
    },
    {
      "id": "633531c6aff09e0000a6f94d",
      "text": "　　AI「これは違う、yellow eyesではなくgreen eyesだ」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430535,
      "updated": 1664430608
    },
    {
      "id": "6335320faff09e0000a6f94e",
      "text": "　　　[https://gyazo.com/baf126ed3b5b5f7623d3b28074422ac8]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430608,
      "updated": 1664430615
    },
    {
      "id": "63353217aff09e0000a6f94f",
      "text": "　　擬人化しているので言語的な思考に例えたが、実際にはこういう言語的な思考をするのではなく、ベクトルを変えて「近くなったかどうか」を判断する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430615,
      "updated": 1665559079
    },
    {
      "id": "63356b07aff09e0000a6f955",
      "text": "　　768次元しかない「1単語の意味の空間」を通る関係上、サイボウズのロゴのような画像的記憶を学習させることができない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664445192,
      "updated": 1664445192
    },
    {
      "id": "63242c35aff09e0000f99033",
      "text": "　　猫の柄に対する語彙と、ボウズマン的なものの柄に対する語彙では前者の方が充実している",
      "userId": "582e63d27c56960011aff09e",
      "created": 1663314998,
      "updated": 1664430791
    },
    {
      "id": "633532c7aff09e0000a6f952",
      "text": "　　　なので前者の方がやりやすい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664430791,
      "updated": 1664430841
    },
    {
      "id": "63365960aff09e00004ee619",
      "text": "　昨日[DreamBooth]が使いやすい形でリリースされた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506209,
      "updated": 1665559147
    },
    {
      "id": "63365946aff09e00004ee610",
      "text": "\t\t>[https://twitter.com/psuraj28/status/1575123562435956740?s=21&t=nsEudpoT1W4dsOjQVkyQyg @psuraj28]: dreambooth #stablediffusion training is now available in 🧨diffusers!",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506183,
      "updated": 1664506241
    },
    {
      "id": "6336595eaff09e00004ee613",
      "text": "\t >And guess what! You can run this on a 16GB colab in less than 15 mins!",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506207,
      "updated": 1664506242
    },
    {
      "id": "6336595eaff09e00004ee614",
      "text": "\t >[https://pbs.twimg.com/media/Fdv2h9TWYAAun3H.jpg]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506207,
      "updated": 1664506228
    },
    {
      "id": "63365957aff09e00004ee612",
      "text": "\t\tVRAM16GB、15分でファインチューニングできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506200,
      "updated": 1664506233
    },
    {
      "id": "63365953aff09e00004ee611",
      "text": "\t\tTextual Inversionと原理が違って顔のデザインが維持されてる？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506195,
      "updated": 1665559158
    },
    {
      "id": "63466a76aff09e0000b934b4",
      "text": "\t\t今後試してみたいところ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665559158,
      "updated": 1665559170
    },
    {
      "id": "6336593faff09e00004ee60f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1664506176,
      "updated": 1664506176
    },
    {
      "id": "63466a86aff09e0000b934b5",
      "text": "Q: [Stable Diffusion埋め込みテンソル編集]で、単語のベクトルを足し合わせても連続的に変わらないのは、アテンションする場所が深いところにあるから連続的に変わらない？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665559175,
      "updated": 1665629169
    },
    {
      "id": "63466b70aff09e0000b934b7",
      "text": "　A: ガサっと変わるところはノイズから画像にしていくプロセスの序盤に近いところで分岐していると思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665559409,
      "updated": 1665559443
    },
    {
      "id": "63466e81aff09e0000b934bf",
      "text": "　　イメージを口頭で伝えるのは難しいな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560194,
      "updated": 1665560204
    },
    {
      "id": "63466e8baff09e0000b934c0",
      "text": "　　[https://gyazo.com/e59c5d923638d28ea56abe2ad8fca381]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560204,
      "updated": 1665560210
    },
    {
      "id": "63466e91aff09e0000b934c1",
      "text": "　　　基本的にはプロンプトのベクトルがほとんど変わらないので、入力が同じなら出力もほとんど同じであるはず",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560210,
      "updated": 1665560285
    },
    {
      "id": "63466edeaff09e0000b934c2",
      "text": "　　　ところがそれが分水嶺を跨いだときは、差が拡大して、その結果入力値が離れているのでさらに差が拡大して…という現象が起きる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560286,
      "updated": 1665560344
    },
    {
      "id": "63466c4baff09e0000b934b8",
      "text": "　Q: 注意機構の意味でのアテンションが大きく変わるところで絵が大きく変わるのかと思った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665559628,
      "updated": 1665559687
    },
    {
      "id": "63466c88aff09e0000b934b9",
      "text": "　A: この実験に関していうとプロンプトの形は同一でcatの1単語のベクトルだけを滑らかに変更しているから、アテンションが急激に変わって、それがこの振る舞いに出ている、というわけではないのではないかと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665559688,
      "updated": 1665560192
    },
    {
      "id": "63466d6baff09e0000b934ba",
      "text": "　　アテンションの可視化はまだできていないから断言はできない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665559915,
      "updated": 1665559999
    },
    {
      "id": "63466d76aff09e0000b934bb",
      "text": "　　(補足: Stable Diffusionにおいてアテンションは、色々変えられはするけどデフォルトでは「プロンプトのトークン77個に対するアテンション」なことに注意、画像のどこに注目するか、的なことはしていない)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665559926,
      "updated": 1665560017
    },
    {
      "id": "63466e02aff09e0000b934bc",
      "text": " 　catとkittenの間を補間しているとはいえ、どっちも名詞なのだから構文上の大きな変化はないはずで、アテンションは大きく変わってないのでは",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560067,
      "updated": 1665629217
    },
    {
      "id": "63466e3faff09e0000b934bd",
      "text": " B: デノイズを50回繰り返す過程で途中で分岐して、そこから結果が大きく変わって、最終的に出てくるものが非連続であるように見えるということだと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560128,
      "updated": 1665560439
    },
    {
      "id": "63466f70aff09e0000b934c3",
      "text": " A: そう、写像自体が線形ではないので、それを何回も重ねた結果を見ると当然非連続な振る舞いをするところはあるよね、そりゃそうだろうな、という感じの雰囲気です",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560432,
      "updated": 1665560531
    },
    {
      "id": "63466fd6aff09e0000b934c4",
      "text": " Q: それは[バタフライ効果]みたいな話ですか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560535,
      "updated": 1665627954
    },
    {
      "id": "63466fe2aff09e0000b934c5",
      "text": " A: バタフライ効果みたいな話です",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560546,
      "updated": 1665560564
    },
    {
      "id": "63466ff4aff09e0000b934c6",
      "text": " 　補足追記:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560564,
      "updated": 1665560717
    },
    {
      "id": "6346708caff09e0000b934c8",
      "text": " 　　差が拡大する写像を何度も重ね掛けしていると初期値のごく僅かな差が結果の大きな差につながりうるという話、東京で蝶が羽ばたいた影響でアメリカにハリケーンがくる、という例え",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560717,
      "updated": 1665561449
    },
    {
      "id": "63467070aff09e0000b934c7",
      "text": " 　　今回のケースでは正確に言えば、初期値は完全に同一で、写像がごくわずかに違う。この場合でも同様に誤差拡大が発生することはあるだろう、たぶんそれが起こってるのだろう、という話",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560689,
      "updated": 1665561459
    },
    {
      "id": "634670f6aff09e0000b934c9",
      "text": " 　プロンプトの影響が小さかったとしても、それによって山の右側に落ちるのか左側に落ちるのかが変われば、その後のデノイズでは離れる方向に動いていくわけです",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665560822,
      "updated": 1665560892
    },
    {
      "id": "634671b0aff09e0000b934ca",
      "text": " 　　[https://gyazo.com/5a0218f95bbc047d3e5470bbced29597]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561009,
      "updated": 1665629392
    },
    {
      "id": "634671b4aff09e0000b934cb",
      "text": "　　　　流れが山にぶつかって分岐するイメージ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561012,
      "updated": 1665561031
    },
    {
      "id": "634671d6aff09e0000b934cc",
      "text": "　  Q: なるほど、それでそれぞれの道でそれっぽくなるように発展していくと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561047,
      "updated": 1665561090
    },
    {
      "id": "63467201aff09e0000b934cd",
      "text": "　  A: そう、それぞれの道でより良くなるように進んだ結果、入力は差がなかったとしても出力が大きく離れたものにたどり着く、それは非線形なので大いにありうること",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561090,
      "updated": 1665561684
    },
    {
      "id": "63466a89aff09e0000b934b6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665559178,
      "updated": 1665559178
    },
    {
      "id": "6346726baff09e0000b934ce",
      "text": "Q: [word2vec]みたいにベクトルの足し算引き算ができるのが面白い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561195,
      "updated": 1665630419
    },
    {
      "id": "63467287aff09e0000b934d0",
      "text": "　A: やってみないとわからないね、僕はできるだろうと思っていたが、思った以上に非連続なジャンプが多いなという印象",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561224,
      "updated": 1665561269
    },
    {
      "id": "634672b4aff09e0000b934d1",
      "text": "　　一応inpaintのマスクで顔の部分だけ消して「catっていったけどここはもっとkitten寄りで」みたいに指示を出して描き直させることは技術的にはできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561269,
      "updated": 1665561327
    },
    {
      "id": "634672efaff09e0000b934d2",
      "text": "　　だけども制御効きにくいものに対してそういう細かい操作をしようとするよりランダムシードで100個出してそこから選ぶ方が人間の負担が少ないと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561328,
      "updated": 1665561386
    },
    {
      "id": "6346726daff09e0000b934cf",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1665561198,
      "updated": 1665561198
    }
  ]
}