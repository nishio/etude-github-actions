{
  "id": "6090ec0aa287e6002291a247",
  "title": "Hatena2012-06-24",
  "created": 1340463600,
  "updated": 1340463600,
  "lines": [
    {
      "id": "6090ec2eaff09e00003dc692",
      "text": "Hatena2012-06-24",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc693",
      "text": "code:hatena",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc694",
      "text": " <body>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc695",
      "text": " *1340507174*EDSACのイニシャルオーダーがわからない日記",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc696",
      "text": " EDSACのイニシャルオーダーはテープから1文字ずつ読んでそれを機械語の形にアセンブルしてメモリに記録していくプログラムで、いわば「元祖アセンブラ」なんだ。で、面白いのでそれを実装していたのだけども、ここがよくわからない",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc697",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc698",
      "text": " [f:id:nishiohirokazu:20120624120449p:image]",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc699",
      "text": " http://www.cl.cam.ac.uk/~mr/edsacposter.pdf",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc69a",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc69b",
      "text": " これは10進法でテープに書かれているアドレスの数値を読んで、前の桁を10倍して新しい桁を足して、をやっている部分。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc69c",
      "text": " あらかじめメモリに10 << 11を入れておいて、前の桁にそれを掛けて、さらに << 5してから次の桁を足して、とやっている。合計で「10 << 16」を掛けていることになる。ところがこのマシン、ビット幅が17ビットで、加算レジスタ(AB)はは17ビットを2つ、間に1ビットのpaddingを挟んだ35ビットなんだ。だから18ビットシフトしないと上の半分で10倍になるところまで来ない。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc69d",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc69e",
      "text": " 実例を交えてもう一度説明すると、前回読んだ値が1だとする。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc69f",
      "text": " >||",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a0",
      "text": " m[1] == 00000000000000001",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a1",
      "text": " ||<",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a2",
      "text": " そうすると10 << 11を掛けたら",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a3",
      "text": " >||",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a4",
      "text": " 00000000000000000 0 00101000000000000",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a5",
      "text": " ||<",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a6",
      "text": " で、5個シフトしても",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a7",
      "text": " >||",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a8",
      "text": " 00000000000000010 1 00000000000000000",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6a9",
      "text": " ||<",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6aa",
      "text": " ここで上半分に次の数値2をたそうとするんだけども本当はその時に上半分は1010になってなきゃいけないと思うのに2ビットほど足りない。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6ab",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6ac",
      "text": " 2ビットずれるような誤解っていうと「ビットシフトはパディングビットを使わない」＋「最上位ビットは符号ビットでシフトの時には使わない」の合わせ技くらいしか思いつかないんだけど、かなり無理のある解釈のような気がする。なにが正解なんだろう。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6ad",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6ae",
      "text": " -----",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6af",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b0",
      "text": " 追記。他の実装 ( http://www.cl.cam.ac.uk/users/mr/Edsac/edsac.tgz )を参考にしてみたが、どう見ても加算レジスタ(ABC)の71ビット全体をシフトしているようにしか見えないなぁ。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b1",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b2",
      "text": " >||",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b3",
      "text": " AND shl(bits) BE",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b4",
      "text": " { { a0, a1, a2, a3, a4 := a0<<1, a1<<1, a2<<1, a3<<1, a4<<1",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b5",
      "text": "     UNLESS (bits&1)=0 BREAK",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b6",
      "text": "     bits := bits>>1",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b7",
      "text": "   } REPEAT",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b8",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6b9",
      "text": "   a0 := a0 + (a1>>15) & #x7FFF",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6ba",
      "text": "   a1 := a1 + (a2>>15) & #x7FFF",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6bb",
      "text": "   a2 := a2 + (a3>>15) & #x7FFF",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6bc",
      "text": "   a3 := a3 + (a4>>15) & #x7FFF",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6bd",
      "text": "   a4 := a4            & #x7FF0",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6be",
      "text": " }",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6bf",
      "text": " ||<",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c0",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c1",
      "text": " 5ビットシフトしているところを7ビットシフトに書き換えちゃえば期待通りに動くと思うけども、そもそものコードが5ビットシフトで正しいとすると僕の処理系の実装の側が間違っているわけだからそういうワークアラウンドをしても後でまたシフトを使っているところで死ぬだろうしなぁ。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c2",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c3",
      "text": " -----",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c4",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c5",
      "text": " 「7ビットシフトに書き換えちゃえばここに関しては期待通り動くはず」という僕の解釈が事実かどうかを検証する必要があると思ったので試しに書き換えてみた。結果、テープから読んだ平方数を求めるプログラムがちゃんと100回のループを行なってZSで正常終了するようになった。だから「アドレスの読み込み部は7ビットシフトに書き換えると正しい挙動」まではOK。んでもってその正常終了したプログラムの出力結果の数値がデタラメなので、やっぱりシフトかなにかこのあたりで使っている演算について実際のマシンとは異なる挙動をしているのだろう。シフトを書き換えると簡単に直るからシフトが原因じゃないかと思っているのが視野狭窄で、問題は別の場所にあるのかもしれないなぁ。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c6",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c7",
      "text": " -----",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c8",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6c9",
      "text": " そうか、わかった。間違っているのは掛け算だ。そう考えると5ビットシフトである理由がすんなり説明できる。「10<<11を掛ける」と聞いて僕は暗黙に「整数の掛け算」だと思い込んだけども、これ符号付きの固定小数点数なんだな。 http://www.dcs.warwick.ac.uk/~edsac/Software/EdsacTG.pdf を参照。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6ca",
      "text": " >||",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6cb",
      "text": " 00101 0 0000000000 0は",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6cc",
      "text": " +.01010...",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6cd",
      "text": " ||<",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6ce",
      "text": " そうすると、これに+.000...001を掛けた結果はその1の場所より5ビット下に01010と並ぶことになる。これを5ビットシフトすれば結果的に「整数の10を掛ける」が実現できる。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6cf",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d0",
      "text": " -----",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d1",
      "text": " ",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d2",
      "text": " イニシャルオーダーによってメモリ上に読まれたパターンが全部一致することが確認できた。めでたしめでたし。しかし読んだコードの実行結果にはまだ誤りがあるから別のバグが残ってるんだろうなー。",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d3",
      "text": " </body>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d4",
      "text": " <comments>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d5",
      "text": " <comment>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d6",
      "text": " <username>metanest</username>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d7",
      "text": " <body>EDSACの数値表現は実は「MSBの重みが1」の固定小数点なので、乗算の結果が期待と違うのでは？（確かめてないのですが）</body>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d8",
      "text": " <timestamp>1340511308</timestamp>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6d9",
      "text": " </comment>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6da",
      "text": " <comment>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6db",
      "text": " <username>nishiohirokazu</username>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6dc",
      "text": " <body>それが原因でした！</body>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6dd",
      "text": " <timestamp>1340559854</timestamp>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6de",
      "text": " </comment>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6df",
      "text": " </comments>",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6e0",
      "text": "",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc6e1",
      "text": "[はてなダイアリー 2012-06-24 https://nishiohirokazu.hatenadiary.org/archive/2012/06/24]",
      "created": 1340463600,
      "updated": 1340463600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}