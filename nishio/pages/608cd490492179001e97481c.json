{
  "id": "608cd490492179001e97481c",
  "title": "仮説検証のリードタイム",
  "created": 1619842194,
  "updated": 1646879395,
  "lines": [
    {
      "id": "608cd490492179001e97481c",
      "text": "仮説検証のリードタイム",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619842194,
      "updated": 1619842211
    },
    {
      "id": "608cd491aff09e0000d6fc4d",
      "text": ">[hiroki_daichi https://twitter.com/hiroki_daichi/status/1388253385065852928]: アジャイル等の原理がその言葉の意味から「速さ、敏捷性」に関連づいて説明されることでわかりにくくなっている。ソフトウェア開発における重要な原理は「Fail-Fast」であり、静的型付けも自動テストもカオスエンジニアリングもスクラム開発もプロダクトマネジメントも原理は「[早期失敗]」することだ。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619842194,
      "updated": 1646879395
    },
    {
      "id": "608cd491aff09e0000d6fc4e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619842194,
      "updated": 1619842194
    },
    {
      "id": "608cd491aff09e0000d6fc4f",
      "text": ">[hiroki_daichi https://twitter.com/hiroki_daichi/status/1388253386982580226]: 速さに関連づけられていると「急いで作る」「余裕なく作る」に寄ってしまうことがある。 早期に失敗するには、仮説検証のリードタイム思考になる。何が1番ボラティリティの高いリスクかを同定する思考が求められる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619842194,
      "updated": 1619842194
    },
    {
      "id": "608d2630aff09e0000bd7aeb",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863088,
      "updated": 1619863105
    },
    {
      "id": "608d2631aff09e0000bd7aed",
      "text": ">[nishio https://twitter.com/nishio/status/1388413629880360960]: 「仮説検証のリードタイムを縮めることが大事、そのためには何が1番ボラティリティの高いリスクかを同定する思考が求められる」って話、完全に同意なのだけどこれをこの表現で中高生に伝えても伝わらないので噛み砕いた説明を考えてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863118
    },
    {
      "id": "608d2631aff09e0000bd7aee",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7aef",
      "text": ">[nishio https://twitter.com/nishio/status/1388414471316545540]: 「AからBを作って、BからCを作ったら顧客がハッピーになる」という提案において「AからBを作る方法がうまくいくか不明確」なのに「BからCを作るところをプロトタイプとして作りました」と言われても、それAB間が予定通りに行かなかったら無意味になる作業では？という気持ち ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863114
    },
    {
      "id": "608d2631aff09e0000bd7af0",
      "text": "\t[https://gyazo.com/b57e1a829450f689f8863544383e4945]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863110
    },
    {
      "id": "608d2631aff09e0000bd7af5",
      "text": ">[nishio https://twitter.com/nishio/status/1388415380956147713]: つまりプロトタイプを作って検証すべきなのは一番不確実な矢印。矢印のつながりの中で、一番弱い矢印がどこなのかを特定して、それが切れてないかどうか確認するためのプロトタイプを作る必要がある。「もし切れてるなら早く気づいた方が得」だから。「早く失敗することが大事」とはこういうこと。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7af6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7af7",
      "text": ">[nishio https://twitter.com/nishio/status/1388418034931363840]: 多分だけどもABの矢印が不安だから採択された後でメンターに教えてもらおうと思ってるのだろうけど、アドバイスをもらうにしても「何もやってないです、教えて」という状態よりは「これをやったらいいかなと思ってやってみたけど期待と違うこういう結果になった」の方がフィードバックしやすい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7af8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7afb",
      "text": ">[hiroki_daichi https://twitter.com/hiroki_daichi/status/1388414059897262082]: note.com/hirokidaichi/n… 夏休みの宿題のエピソードをよく使います。何かいい言い回しがあれば教えてください。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7afc",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7afd",
      "text": ">[nishio https://twitter.com/nishio/status/1388420063196172290]: 「夏休みの宿題、得意なところからやると苦手なものが残って気が重い。苦手なものからやった方がいい」という例えは雰囲気的にはいいけど、タスク間に依存関係がないんだよなぁ。苦手な自由研究を後回しにして夏休み中に終わらなかったとしても先にやった得意な漢字ドリルが無効になったりしない twitter.com/hiroki_daichi/…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7afe",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7aff",
      "text": ">[nishio https://twitter.com/nishio/status/1388421026430685191]: 「AからBを作って、BからCを作る」みたいに矢印が直列に並んでいる時、矢印が一つ壊れてると全部ダメになる。だから一番弱い矢印を真っ先に確認する必要がある。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d2631aff09e0000bd7b00",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619863090,
      "updated": 1619863090
    },
    {
      "id": "608d25a9aff09e0000bd7ae6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619862953,
      "updated": 1619862953
    },
    {
      "id": "608cd4b1aff09e0000d6fc51",
      "text": "[仮説検証]の[リードタイム]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619842225,
      "updated": 1619842230
    },
    {
      "id": "608cd4b1aff09e0000d6fc52",
      "text": "[早い失敗は有益] [素早く失敗する]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619842226,
      "updated": 1619842251
    },
    {
      "id": "608cd4b8aff09e0000d6fc53",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619842233,
      "updated": 1619842233
    }
  ]
}