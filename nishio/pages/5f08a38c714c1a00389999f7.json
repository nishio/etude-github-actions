{
  "id": "5f08a38c714c1a00389999f7",
  "title": "dwango2015_prelims_2",
  "created": 1594401677,
  "updated": 1594457287,
  "lines": [
    {
      "id": "5f08a38c714c1a00389999f7",
      "text": "dwango2015_prelims_2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401677,
      "updated": 1594401677
    },
    {
      "id": "5f08a38daff09e00002969cf",
      "text": "[B - ニコニコ文字列 https://atcoder.jp/contests/dwango2015-prelims/tasks/dwango2015_prelims_2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401677,
      "updated": 1594401686
    },
    {
      "id": "5f08a4b0aff09e00004a70e8",
      "text": "　与えられた文字列から「25」の繰り返しの文字列を切り出す方法がいくつあるか[数え上げ]る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401969,
      "updated": 1594402121
    },
    {
      "id": "5f08a4caaff09e00004a70e9",
      "text": "　25がN個続いた部分文字列がある時、[三角数]tri(N)がその部分から切り出せる個数",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401995,
      "updated": 1594402059
    },
    {
      "id": "5f08a50baff09e00004a70ea",
      "text": "　続いてる部分を調べるのに自分でループ回すより[正規表現]で切り出す方が速かろう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594402060,
      "updated": 1594402112
    },
    {
      "id": "5f097b8aaff09e00005c9e67",
      "text": "　簡単だと思ってテストドリブンにしなかったせいで「正規表現の中でカッコが使われた場合findallはその範囲だけを返す」という仕様を忘れててWAした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594456971,
      "updated": 1594457103
    },
    {
      "id": "5f097c8eaff09e0000b2c90a",
      "text": "　\t`(?:  )`はキャプチャしないグループ化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594457230,
      "updated": 1594457287
    },
    {
      "id": "5f08a396aff09e00002969d1",
      "text": "code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401686,
      "updated": 1594401691
    },
    {
      "id": "5f08a39baff09e00002969d2",
      "text": " import re ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401691,
      "updated": 1594401706
    },
    {
      "id": "5f08a3a0aff09e00002969d5",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401696,
      "updated": 1594401696
    },
    {
      "id": "5f08a3a0aff09e00002969d6",
      "text": " def tri(x):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401696,
      "updated": 1594401696
    },
    {
      "id": "5f08a3a0aff09e00002969d7",
      "text": "     return x * (x + 1) // 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401696,
      "updated": 1594401696
    },
    {
      "id": "5f08a3a0aff09e00002969d8",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401696,
      "updated": 1594401696
    },
    {
      "id": "5f08a3a0aff09e00002969d9",
      "text": " S = input()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401696,
      "updated": 1594401710
    },
    {
      "id": "5f08a3a0aff09e00002969da",
      "text": " ret = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401696,
      "updated": 1594401696
    },
    {
      "id": "5f08a3a0aff09e00002969db",
      "text": " print(sum(tri(len(s) // 2) for s in re.findall(\"(?:25)+\", S)))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401696,
      "updated": 1594401696
    },
    {
      "id": "5f08a3a0aff09e00002969dc",
      "text": "[提出 #15126969 - dwangoプログラミングコンテスト https://atcoder.jp/contests/dwango2015-prelims/submissions/15126969]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401696,
      "updated": 1594401729
    },
    {
      "id": "5f08a396aff09e00002969d0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594401686,
      "updated": 1594401686
    }
  ]
}