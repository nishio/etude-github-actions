{
  "id": "60b09ad67afd86001c40577d",
  "title": "Conflict-free replicated data type",
  "created": 1622186712,
  "updated": 1622186723,
  "lines": [
    {
      "id": "60b09ad67afd86001c40577d",
      "text": "Conflict-free replicated data type",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186712,
      "updated": 1622186712
    },
    {
      "id": "60b09ad7aff09e0000a8112b",
      "text": "Conflict-free replicated data type([CRDT])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186712,
      "updated": 1622186712
    },
    {
      "id": "60b09ad8aff09e0000a8112c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186712,
      "updated": 1622186712
    },
    {
      "id": "60b09ae2aff09e0000a8112d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    },
    {
      "id": "60b09ae2aff09e0000a8112e",
      "text": "\toperation-based CRDTs",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    },
    {
      "id": "60b09ae3aff09e0000a8112f",
      "text": "\tstate-based CRDTs",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    },
    {
      "id": "60b09ae3aff09e0000a81130",
      "text": "\t>State-based CRDTs are often simpler to design and to implement; their only requirement from the communication substrate is some kind of [gossip protocol].",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    },
    {
      "id": "60b09ae3aff09e0000a81131",
      "text": "\t>State-based CRDTs are called convergent replicated data types, or CvRDTs. In contrast to CmRDTs, CvRDTs send their full local state to other replicas, where the states are merged by a function which must be [commutative], [associative], and [idempotent]. The merge function provides a join for any pair of replica states, so the set of all states forms a semilattice. The update function must monotonically increase the internal state, according to the same partial order rules as the semilattice.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    },
    {
      "id": "60b09ae3aff09e0000a81132",
      "text": "\t>Sequence CRDTs",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    },
    {
      "id": "60b09ae3aff09e0000a81133",
      "text": "\t\t> A sequence, list, or ordered set CRDT can be used to build a [Collaborative real-time editor], as an alternative to [Operational transformation] (OT).",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    },
    {
      "id": "60b09ae3aff09e0000a81134",
      "text": "\t\t>[LogootSplit] was proposed as an extension of Logoot in order to reduce the metadata for sequence CRDTs.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    },
    {
      "id": "60b09ae3aff09e0000a81135",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622186723,
      "updated": 1622186723
    }
  ]
}