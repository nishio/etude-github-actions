{
  "id": "5f4a56986ad577001e648c72",
  "title": "ABC177",
  "created": 1598707355,
  "updated": 1605576720,
  "lines": [
    {
      "id": "5f4a56986ad577001e648c72",
      "text": "ABC177",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598707355,
      "updated": 1598707355
    },
    {
      "id": "5f4a6374aff09e0000234244",
      "text": "始まる前から体調悪い自覚症状はあったんだけど、ボロボロですな。3完でレーティングは初めて下がってしまいました。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710644,
      "updated": 1598710684
    },
    {
      "id": "5f4a569baff09e0000545efe",
      "text": "[https://gyazo.com/a1c1ce807b5c48bb8acf5b1378021952]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598707356,
      "updated": 1598710640
    },
    {
      "id": "5f4a6370aff09e0000545eff",
      "text": "[https://gyazo.com/157cbe9e3a257f5f09ef30b0ce3a73ef]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710640,
      "updated": 1598718219
    },
    {
      "id": "5f4a810aaff09e0000545f9b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598718219,
      "updated": 1598718219
    },
    {
      "id": "5f4a63c8aff09e0000545f00",
      "text": "[B - Substring https://atcoder.jp/contests/abc177/tasks/abc177_b]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710728,
      "updated": 1598710741
    },
    {
      "id": "5f4a63c8aff09e0000545f01",
      "text": "[https://gyazo.com/31963897ac43a0a816ff702807ccfb41]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710728,
      "updated": 1598710733
    },
    {
      "id": "5f4a71baaff09e0000234268",
      "text": "　1000文字のSと500文字のTを比べるときに500×501で25万文字くらいの比較が必要になるけど、高々その程度なのでやってよい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598714298,
      "updated": 1598714422
    },
    {
      "id": "5f4a63ccaff09e0000545f02",
      "text": " code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710733,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f04",
      "text": "  def solve(S, T):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f05",
      "text": "      buf = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f06",
      "text": "      for i in range(len(S) - len(T) + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f07",
      "text": "          diff = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f08",
      "text": "          for j in range(len(T)):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f09",
      "text": "              if S[i + j] != T[j]:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f0a",
      "text": "                  diff += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f0b",
      "text": "          buf.append(diff)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f0c",
      "text": "      return min(buf)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714438
    },
    {
      "id": "5f4a63e8aff09e0000545f0d",
      "text": " `len(S) - len(T) + 1`の+1を忘れてランタイムエラー",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710760,
      "updated": 1598714450
    },
    {
      "id": "5f4a7252aff09e0000234269",
      "text": " 　長さが等しいときにループしなくなり、minの対象が空になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598714450,
      "updated": 1598714457
    },
    {
      "id": "5f4a6431aff09e0000234245",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598710834,
      "updated": 1598710834
    },
    {
      "id": "5faa4650aff09e0000acd7c4",
      "text": "[ABC177C]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604994641,
      "updated": 1604994657
    },
    {
      "id": "5fb3280faff09e0000acd7c5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1605576720,
      "updated": 1605576720
    },
    {
      "id": "5f4a65f3aff09e0000545f1f",
      "text": "[D - Friends https://atcoder.jp/contests/abc177/tasks/abc177_d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598711283,
      "updated": 1598711930
    },
    {
      "id": "5f4a687aaff09e0000545f20",
      "text": "\t[https://gyazo.com/3c84120da2969ef35f6b0afd857a4453]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598711931,
      "updated": 1598711966
    },
    {
      "id": "5f4a689eaff09e0000545f21",
      "text": "　問題文を見て[UnionFind]で友達グループの個数を求めるのだと思った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598711966,
      "updated": 1598712269
    },
    {
      "id": "5f4a69a4aff09e0000234251",
      "text": "　　グループの個数を求めるのではなく、最大グループのサイズを求めるべきだった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712229,
      "updated": 1598712292
    },
    {
      "id": "5f4a69e3aff09e0000234252",
      "text": "　　そのグループを1人ずつバラバラにするので。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712292,
      "updated": 1598712302
    },
    {
      "id": "5f4a69f7aff09e0000234253",
      "text": "　UnionFindで実装してたが、上記の勘違いで答えが合わない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712312,
      "updated": 1598712330
    },
    {
      "id": "5f4a6a0caff09e0000234254",
      "text": "　なのでサンプル1を図に書いて確認しようとした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712332,
      "updated": 1598712344
    },
    {
      "id": "5f4a68caaff09e0000234250",
      "text": "　サンプル1の入力を見て5 3を「5番と3番が友達」と勘違いしてしまった(本当は5人の間に3本の関係)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712011,
      "updated": 1598712159
    },
    {
      "id": "5f4a65dcaff09e0000545f0f",
      "text": "\t\t[https://gyazo.com/689970ee403670a824ab06cbf43739f8]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598711261,
      "updated": 1598712119
    },
    {
      "id": "5f4a6a22aff09e0000234256",
      "text": "　実際にコンテスト中に描いた図",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712354,
      "updated": 1598712399
    },
    {
      "id": "5f4a6a41aff09e0000545f24",
      "text": "　\t[https://gyazo.com/416dd244072893bb42a898bd7c4153f3]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712385,
      "updated": 1598712385
    },
    {
      "id": "5f4a6a34aff09e0000234257",
      "text": "　　答えが3になるように問題を解釈し直して「なるほど友達関係は対称ではないのだな」と思い込む",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712372,
      "updated": 1598712497
    },
    {
      "id": "5f4a6ab0aff09e0000234258",
      "text": "　　これはてっきりUnionFindだと思い込ませて実はダメですって罠だな！とか思ってた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712497,
      "updated": 1598712644
    },
    {
      "id": "5f4a6addaff09e0000234259",
      "text": "　　友人関係が一方通行の場合、最長パスの長さを求める問題になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712542,
      "updated": 1598712701
    },
    {
      "id": "5f4a6b6eaff09e000023425a",
      "text": "　　この間違った方針でもサンプル1と2は正解しちゃう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712686,
      "updated": 1598712713
    },
    {
      "id": "5f4a6b88aff09e000023425b",
      "text": "　　　方針が正しいと思い込んだままで、サンプル3が合わなくて詰まった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712713,
      "updated": 1598712717
    },
    {
      "id": "5f4a6a20aff09e0000234255",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712353,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e85aff09e0000545f49",
      "text": "\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f4a",
      "text": "      global parent, rank",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f4b",
      "text": "      # parse input",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f4c",
      "text": "      N, M = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f4d",
      "text": "      parent = [-1] * N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f4e",
      "text": "      rank = [0] * N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f4f",
      "text": "      for q in range(M):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f50",
      "text": "          a, b = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f51",
      "text": "          unite(a - 1, b - 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f52",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f53",
      "text": "      xs = list(find_root(x) for x in range(N))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f54",
      "text": "      # debug(\": xs\", xs)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f55",
      "text": "      # print(len(set(xs)))  # WRONG!",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713488
    },
    {
      "id": "5f4a6e86aff09e0000545f56",
      "text": "      from collections import Counter",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f57",
      "text": "      print(max(Counter(xs).values()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713478
    },
    {
      "id": "5f4a6e86aff09e0000545f58",
      "text": "　グループの個数を求める間違った一行を消して、最大グループのサイズを求める二行を足したらACした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713478,
      "updated": 1598713624
    },
    {
      "id": "5f4a6ffcaff09e0000545f59",
      "text": "　\tunite, find_rootの実装はこちら https://github.com/nishio/atcoder/blob/master/yosupo/unionfind.py",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713853,
      "updated": 1598713885
    },
    {
      "id": "5f4a6e82aff09e0000545f48",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713475,
      "updated": 1598713475
    },
    {
      "id": "5f4a6bc6aff09e0000545f27",
      "text": "[E - Coprime https://atcoder.jp/contests/abc177/tasks/abc177_e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712774,
      "updated": 1598712775
    },
    {
      "id": "5f4a6bbeaff09e0000545f25",
      "text": "[https://gyazo.com/3f83c85c25e404bbf5ad558341687eb7]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712766,
      "updated": 1598712769
    },
    {
      "id": "5f4a6bc0aff09e0000545f26",
      "text": "\t[エラトステネスの篩]で小さい方から素数を確定させながら、その素数でN個の数を割っていった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712769,
      "updated": 1598712884
    },
    {
      "id": "5f4a6cdcaff09e0000545f46",
      "text": "\t\t問題の判定のためには各素因数についてそれぞれ注目して求まるので、素因数分解の結果を保持する必要がない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713053,
      "updated": 1598713116
    },
    {
      "id": "5f4a6d20aff09e000023425f",
      "text": "\t\tN個の数のうちある素因数pを持つものがd個あった時、",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713121,
      "updated": 1598713208
    },
    {
      "id": "5f4a6d77aff09e0000234260",
      "text": "\t\t dが2以上ならpairwiseになり得ない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713208,
      "updated": 1598713238
    },
    {
      "id": "5f4a6d7caff09e0000234261",
      "text": "\t\t dがNならnot coprimeに確定",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713213,
      "updated": 1598713248
    },
    {
      "id": "5f4a6c84aff09e000023425e",
      "text": "\t 残念ながらTLE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712965,
      "updated": 1598713251
    },
    {
      "id": "5f4a6da2aff09e0000234262",
      "text": "\t 　間に合ったもの11件は正しい答えだった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713251,
      "updated": 1598713281
    },
    {
      "id": "5f4a6beeaff09e000023425c",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712815,
      "updated": 1598712996
    },
    {
      "id": "5f4a6ca4aff09e0000545f29",
      "text": "\t def solve(N, AS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712996,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f2a",
      "text": "      is_pairwise = True",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f2b",
      "text": "      maxAS = max(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f2c",
      "text": "      sieved = [False] * (maxAS + 10)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f2d",
      "text": "      for p in range(2, maxAS + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f2e",
      "text": "          if sieved[p]:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f2f",
      "text": "              continue",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f30",
      "text": "          # p is prime",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f31",
      "text": "          x = p + p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f32",
      "text": "          while x <= maxAS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f33",
      "text": "              sieved[x] = True",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f34",
      "text": "              x += p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f35",
      "text": "          sum_div = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f36",
      "text": "          for i, a in enumerate(AS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f37",
      "text": "              dividable = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f38",
      "text": "              while a % p == 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f39",
      "text": "                  a //= p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f3a",
      "text": "                  dividable = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f3b",
      "text": "              AS[i] = a",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f3c",
      "text": "              sum_div += dividable",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f3d",
      "text": "          if sum_div >= 2:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f3e",
      "text": "              is_pairwise = False",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f3f",
      "text": "          if sum_div == N:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f40",
      "text": "              return \"not coprime\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f41",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f42",
      "text": "      if is_pairwise:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f43",
      "text": "          return \"pairwise coprime\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f44",
      "text": "      return \"setwise coprime\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca5aff09e0000545f45",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712997,
      "updated": 1598712997
    },
    {
      "id": "5f4a6ca2aff09e0000545f28",
      "text": "　複数の数の高速な素因数分解は先にエラトステネスを終わらせるらしい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598712995,
      "updated": 1598713998
    },
    {
      "id": "5f4a7090aff09e0000234265",
      "text": "　　単にboolではなく、最初に割り切った素数を書くことで、割り算のツリーを構築するようだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598714001,
      "updated": 1598714044
    },
    {
      "id": "5f4a7af8aff09e0000545f8e",
      "text": "　[高速素因数分解]であっさりACした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716665,
      "updated": 1598716705
    },
    {
      "id": "5f4a7b20aff09e000023426d",
      "text": "　　[素因数分解]の結果を保持することを嫌って上記の書き方にしたのだが、雑にリストに突っ込む方針で問題なかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716705,
      "updated": 1598717814
    },
    {
      "id": "5f4a7792aff09e0000545f68",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598715795,
      "updated": 1598716653
    },
    {
      "id": "5f4a7aedaff09e0000545f6c",
      "text": "\t def solve(N, AS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716653,
      "updated": 1598716654
    },
    {
      "id": "5f4a7f40aff09e0000545f8f",
      "text": "      maxAS = max(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f90",
      "text": "      eratree = [0] * (maxAS + 10)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f91",
      "text": "      for p in range(2, maxAS + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f92",
      "text": "          if eratree[p]:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f93",
      "text": "              continue",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f94",
      "text": "          # p is prime",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f95",
      "text": "          eratree[p] = p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f96",
      "text": "          x = p * p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f97",
      "text": "          while x <= maxAS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f98",
      "text": "              if not eratree[x]:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f99",
      "text": "                  eratree[x] = p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7f40aff09e0000545f9a",
      "text": "              x += p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717760,
      "updated": 1598717768
    },
    {
      "id": "5f4a7aedaff09e0000545f6d",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598717760
    },
    {
      "id": "5f4a7aedaff09e0000545f7a",
      "text": "      count = defaultdict(int)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598717782
    },
    {
      "id": "5f4a7aedaff09e0000545f7c",
      "text": "      for a in AS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f7d",
      "text": "          factors = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f7e",
      "text": "          while a > 1:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f7f",
      "text": "              d = eratree[a]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f80",
      "text": "              factors.append(d)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f81",
      "text": "              a //= d",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f82",
      "text": "          for f in set(factors):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598717071
    },
    {
      "id": "5f4a7aedaff09e0000545f85",
      "text": "              count[f] += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f86",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f87",
      "text": "      if any(x == N for x in count.values()):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598717075
    },
    {
      "id": "5f4a7aedaff09e0000545f89",
      "text": "          return \"not coprime\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f8a",
      "text": "      if any(x >= 2 for x in count.values()):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f8b",
      "text": "          return \"setwise coprime\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f8c",
      "text": "      return \"pairwise coprime\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716654
    },
    {
      "id": "5f4a7aedaff09e0000545f8d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598716654,
      "updated": 1598716655
    },
    {
      "id": "5f4a7792aff09e0000545f69",
      "text": "除算の回数をカウントして比較した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598715795,
      "updated": 1598717177
    },
    {
      "id": "5f4a7793aff09e0000545f6a",
      "text": "　100000 100001 100003の時、僕の元のバージョンは 28792回なのに対して高速素因数分解は13回だったのでまったく比較にならないということがわかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598715795,
      "updated": 1598717181
    },
    {
      "id": "5f4a7cfeaff09e000023426e",
      "text": "計算量の考察",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717183,
      "updated": 1598717193
    },
    {
      "id": "5f4a7d72aff09e0000234272",
      "text": "　数の個数をN、一番大きい数をMとする(今回はどちらも10^6)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717299,
      "updated": 1598717385
    },
    {
      "id": "5f4a7d09aff09e000023426f",
      "text": "　素数の個数は [$ M / \\log(M)] ぐらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717193,
      "updated": 1598717348
    },
    {
      "id": "5f4a7d4eaff09e0000234271",
      "text": "　素数を求めてから割り算しても[$ NM/\\log(M)]だからダメ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717262,
      "updated": 1598717412
    },
    {
      "id": "5f4a7de4aff09e0000234273",
      "text": "　　素数がもっと少ないイメージでいた、[$ \\log(M)]ぐらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717412,
      "updated": 1598717442
    },
    {
      "id": "5f4a703caff09e0000234264",
      "text": "　高速素因数分解は試し割りなしで素因数が求まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598713917,
      "updated": 1598717575
    },
    {
      "id": "5f4a7e87aff09e0000234275",
      "text": "　　これが本当に[$ \\log(M)]回でできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717576,
      "updated": 1598717640
    },
    {
      "id": "5f4a8295aff09e0000234276",
      "text": "　　一番多い場合が2^xの時だけど、せいぜい20ぐらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598718614,
      "updated": 1598718649
    },
    {
      "id": "5f4a82cdaff09e0000234277",
      "text": "　　雑にリストに突っ込むことが問題にならなかったのも、そもそもその程度の個数でしかないからか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598718670,
      "updated": 1598718734
    },
    {
      "id": "5f4a8322aff09e0000234278",
      "text": "　　　今回は有無だけ知りたかったのでsetでuniqしたけど、個数を知りたければCounterに雑に突っ込むだけで良さげ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598718755,
      "updated": 1598718795
    },
    {
      "id": "5f4a7e29aff09e0000234274",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1598717482,
      "updated": 1598717482
    }
  ]
}