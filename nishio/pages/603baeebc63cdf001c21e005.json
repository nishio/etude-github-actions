{
  "id": "603baeebc63cdf001c21e005",
  "title": "✅ARC085E",
  "created": 1614524149,
  "updated": 1615970546,
  "lines": [
    {
      "id": "603baeebc63cdf001c21e005",
      "text": "✅ARC085E",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524149,
      "updated": 1615970546
    },
    {
      "id": "603dd0bcaff09e0000a8f86d",
      "text": "[https://gyazo.com/c34c56dd50d7869ec0a4520a8a9c960c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614663869,
      "updated": 1614663869
    },
    {
      "id": "603dd0bdaff09e0000a8f86e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614663869,
      "updated": 1614663869
    },
    {
      "id": "603baf15aff09e00005660ca",
      "text": "[E - MUL https://atcoder.jp/contests/arc085/tasks/arc085_c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524182,
      "updated": 1614524182
    },
    {
      "id": "603baef5aff09e00005660c8",
      "text": "[https://gyazo.com/cb827e1c07c6b065c57300c21a9293d2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524149,
      "updated": 1614524151
    },
    {
      "id": "603baef7aff09e00005660c9",
      "text": "　考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524151,
      "updated": 1614524173
    },
    {
      "id": "603baf1aaff09e00008be47e",
      "text": "　　最小カット絡みであることは既知",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524187,
      "updated": 1614524198
    },
    {
      "id": "603baf26aff09e00008be47f",
      "text": "　　割る割らないの二択なのでカットの問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524198,
      "updated": 1614524216
    },
    {
      "id": "603baf39aff09e00008be480",
      "text": "　　Nは100",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524217,
      "updated": 1614524251
    },
    {
      "id": "603baf64aff09e00008be481",
      "text": "　　ある値を選ぶとその倍数はすべて割らなければならない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524260,
      "updated": 1614524277
    },
    {
      "id": "603baf74aff09e00008be482",
      "text": "　　　無限コスト辺",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524277,
      "updated": 1614524416
    },
    {
      "id": "603bb001aff09e00008be483",
      "text": "　　割らなかった宝石に報酬がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524418,
      "updated": 1614524495
    },
    {
      "id": "603bb04eaff09e00008be484",
      "text": "　　　報酬が辺コストだと最大カットになってしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524495,
      "updated": 1614524512
    },
    {
      "id": "603bb060aff09e00008be485",
      "text": "　　　割った宝石に「報酬得られない」が発生すると考える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524513,
      "updated": 1614524648
    },
    {
      "id": "603bb0e8aff09e00008be486",
      "text": "　　　「得られない報酬」を最小化する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524648,
      "updated": 1614524658
    },
    {
      "id": "603bb15baff09e00008be488",
      "text": "　　　[https://gyazo.com/85f7ba7eefecb277f4cd69b70eda563d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524763,
      "updated": 1614524773
    },
    {
      "id": "603bb134aff09e00008be487",
      "text": "　　報酬が全部正なら「一つも割らない」が自明な解になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524725,
      "updated": 1614524745
    },
    {
      "id": "603bb16caff09e00008be48a",
      "text": "　　　負の辺がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524781,
      "updated": 1614524793
    },
    {
      "id": "603bb17baff09e00008be48b",
      "text": "　　　どう扱うか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524795,
      "updated": 1614524800
    },
    {
      "id": "603bb336aff09e00008be48e",
      "text": "　　　単純にオフセットすれば良いはずだが意味合いは？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614525238,
      "updated": 1614525257
    },
    {
      "id": "603bb332aff09e00008be48c",
      "text": "　　　[https://gyazo.com/b418f3fa2aaa035c2542326b0866c467]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614525235,
      "updated": 1614525236
    },
    {
      "id": "603bb333aff09e00008be48d",
      "text": "　　　辺の値は「割らなかった時の利益」=「割った時の損失」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614525236,
      "updated": 1614525313
    },
    {
      "id": "603bb382aff09e00008be48f",
      "text": "　　　　損失を最小化する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614525314,
      "updated": 1614525350
    },
    {
      "id": "603bb3a8aff09e00008be490",
      "text": "　　　割った時の損失が負のものがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614525352,
      "updated": 1614525368
    },
    {
      "id": "603bb45caff09e00008be491",
      "text": "　　　まてよ？これですべて正になったらやはりSの右で切られてしまうのでは…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614525533,
      "updated": 1614525560
    },
    {
      "id": "603bb4e4aff09e00008be492",
      "text": "　公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614525668,
      "updated": 1614526583
    },
    {
      "id": "603bb877aff09e00008be495",
      "text": "　　割った時の損失が負=割ると得=割らないとコスト",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614526583,
      "updated": 1614526811
    },
    {
      "id": "603bb9caaff09e00008be498",
      "text": "　　　[https://gyazo.com/3adfceb0bb32bfa1e60a3b9cb7cc1411]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614526923,
      "updated": 1614526924
    },
    {
      "id": "603bb9cbaff09e00008be499",
      "text": "　　　選ぶ数と割られる宝石を分ける必要はなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614526924,
      "updated": 1614526982
    },
    {
      "id": "603bba27aff09e00008be49a",
      "text": "　　　　「xが割られていて、xの倍数が割られてないとペナルティ」でよかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614527015,
      "updated": 1614527050
    },
    {
      "id": "603dd0ccaff09e0000a8f86f",
      "text": " 実装",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614663885,
      "updated": 1614663889
    },
    {
      "id": "603dd0d2aff09e0000a8f870",
      "text": " 　最小カットを求めた後、どうやって求める値にするのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614663891,
      "updated": 1614663920
    },
    {
      "id": "603dd104aff09e0000a8f871",
      "text": " 　　カットを最小化することでスコアが最大化されるのでなんらかのオフセットから引くことになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614663941,
      "updated": 1614664005
    },
    {
      "id": "603dd144aff09e0000a8f872",
      "text": " 　　そのオフセットはサンプルデータを眺めたら「正である価格の和」だったけど、これはどういう理屈？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614664005,
      "updated": 1614664053
    },
    {
      "id": "603dd175aff09e0000a8f873",
      "text": " 　　[https://gyazo.com/ce05e85b83185144a9bd870534e1713b]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614664053,
      "updated": 1614664344
    },
    {
      "id": "603dd297aff09e0000a8f874",
      "text": "　　　まず基本は「全部割らなかった時に得られる報酬は価格の和」「割ることによって損失が発生する、その損失は価格とイコール」である(左図)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614664344,
      "updated": 1614664410
    },
    {
      "id": "603dd2d9aff09e0000a8f875",
      "text": "　　　これが大前提としてあった上で「負の辺があると計算の都合が悪いから消したい」が来る。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614664410,
      "updated": 1614664437
    },
    {
      "id": "603dd2f8aff09e0000a8f876",
      "text": "　　　2の頂点は塗られるか塗られないかの二択なのでそのどちらでも+10されるようにする(右図)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614664440,
      "updated": 1614664540
    },
    {
      "id": "603dd353aff09e0000a8f877",
      "text": "　　　同じ塗りで、左図より10多いコストになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614664532,
      "updated": 1614664563
    },
    {
      "id": "603dd373aff09e0000a8f878",
      "text": "　　　なのでオフセットも10増やす",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614664564,
      "updated": 1614664571
    },
    {
      "id": "603cce58aff09e0000c47cd8",
      "text": " 　AC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597721,
      "updated": 1614663889
    },
    {
      "id": "603baf09aff09e00008be47d",
      "text": " \tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614524170,
      "updated": 1614663889
    },
    {
      "id": "603cce51aff09e0000c47cc1",
      "text": " \t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cc2",
      "text": "       INF = 9223372036854775807",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cc3",
      "text": "       N = int(input())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cc4",
      "text": "       AS = list(map(int, input().split()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cc5",
      "text": "       offset = sum(max(0, x) for x in AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cc6",
      "text": "       d = Dinic(N + 2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cc7",
      "text": "       start = N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cc8",
      "text": "       goal = N + 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cc9",
      "text": "       for i in range(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cca",
      "text": "           c = AS[i] ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47ccb",
      "text": "           if c > 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47ccc",
      "text": "               d.add_edge(i, goal, c)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47ccd",
      "text": "           else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cce",
      "text": "               d.add_edge(start, i, -c)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47ccf",
      "text": "           n = i + 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cd0",
      "text": "           x = 2 * n",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cd1",
      "text": "           while x <= N:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cd2",
      "text": "               d.add_edge(i, x - 1, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cd3",
      "text": "               x += n",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cd4",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cd5",
      "text": "       print(offset - d.max_flow(start, goal))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614663889
    },
    {
      "id": "603cce52aff09e0000c47cd6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597714,
      "updated": 1614597716
    },
    {
      "id": "603cce4faff09e0000c47cc0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614597712,
      "updated": 1614597712
    }
  ]
}