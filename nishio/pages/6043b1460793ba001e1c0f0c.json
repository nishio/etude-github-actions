{
  "id": "6043b1460793ba001e1c0f0c",
  "title": "ABC190E",
  "created": 1615049031,
  "updated": 1615049031,
  "lines": [
    {
      "id": "6043b1460793ba001e1c0f0c",
      "text": "ABC190E",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2abf",
      "text": "from [ABC190]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac0",
      "text": "ABC190E",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac1",
      "text": "[E - Magical Ornament https://atcoder.jp/contests/abc190/tasks/abc190_e][E - Magical Ornament https://atcoder.jp/contests/abc190/tasks/abc190_e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac2",
      "text": "\t[https://gyazo.com/79456a6bfd6230660714426024778981]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac3",
      "text": "\t辺の数の制約があるので[辺が10^5ならダイクストラ使える]を思いつく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac4",
      "text": "\t高々17頂点なので17回ダイクストラしてC頂点間の距離を求めて巡回セールスマン問題(始点に戻らないタイプ)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac5",
      "text": "\tサンプルはあっさり通ったが、提出すると20AC 5WA 10TLE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac6",
      "text": "\t 厄介だな…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac7",
      "text": "\tWAの原因",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac8",
      "text": "\t　到達不能判定をする時にダイクストラの結果にINFが含まれるかで判断してた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ac9",
      "text": "\t　それは「グラフのいずれかの頂点が到達不能か？」を判定している",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2aca",
      "text": "\t　C頂点が到達可能なら他の頂点はどうでもいい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2acb",
      "text": "\tTLEの解決方法が皆目検討つかず時間切れ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2acc",
      "text": "\t公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2acd",
      "text": "\t　17回BFSして[最短ハミルトン路問題]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ace",
      "text": "　　え、じゃあダイクストラではなくBFSしてたら通ったということ？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2acf",
      "text": "　　試したら通った…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad0",
      "text": "　　code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad1",
      "text": "　　 def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad2",
      "text": "       N, M = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad3",
      "text": "       from collections import defaultdict",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad4",
      "text": "       edges = defaultdict(list)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad5",
      "text": "       for _i in range(M):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad6",
      "text": "           frm, to = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad7",
      "text": "           edges[frm - 1].append(to - 1)  # -1 for 1-origin vertexes",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad8",
      "text": "           edges[to - 1].append(frm - 1)  # if bidirectional",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ad9",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ada",
      "text": "       K = int(input())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2adb",
      "text": "       CS = list(int(x) - 1 for x in input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2adc",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2add",
      "text": "       INF = 9223372036854775807",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ade",
      "text": "       dist = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2adf",
      "text": "       for c in CS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae0",
      "text": "           d = one_to_all_bfs(c, N, edges, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae1",
      "text": "           dd = [d[CS[i]] for i in range(K)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae2",
      "text": "           if INF in dd:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae3",
      "text": "               print(-1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae4",
      "text": "               return",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae5",
      "text": "           dist.append(dd)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae6",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae7",
      "text": "       ret = tsp_not_return(K, dist)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae8",
      "text": "       print(ret + 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2ae9",
      "text": "　　コード全体はこちら[AC https://atcoder.jp/contests/abc190/submissions/19822810]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    },
    {
      "id": "6043b146aff09e00003b2aea",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615049031,
      "updated": 1615049031
    }
  ]
}