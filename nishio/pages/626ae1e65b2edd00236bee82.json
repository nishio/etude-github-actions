{
  "id": "626ae1e65b2edd00236bee82",
  "title": "一番不確実なところを最初に確認する",
  "created": 1651171815,
  "updated": 1651173687,
  "lines": [
    {
      "id": "626ae1e65b2edd00236bee82",
      "text": "一番不確実なところを最初に確認する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd827a",
      "text": "from [思考の結節点2021未踏ジュニア]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd827b",
      "text": "一番不確実なところを最初に確認する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd827c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd827d",
      "text": ">[hiroki_daichi https://twitter.com/hiroki_daichi/status/1388253385065852928]: アジャイル等の原理がその言葉の意味から「速さ、敏捷性」に関連づいて説明されることでわかりにくくなっている。ソフトウェア開発における重要な原理は「[Fail-Fast]」であり、静的型付けも自動テストもカオスエンジニアリングもスクラム開発もプロダクトマネジメントも原理は「[早期失敗]」することだ。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd827e",
      "text": "\t>[hiroki_daichi https://twitter.com/hiroki_daichi/status/1388253386982580226]: 速さに関連づけられていると「急いで作る」「余裕なく作る」に寄ってしまうことがある。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd827f",
      "text": "\t>早期に失敗するには、[仮説検証のリードタイム]思考になる。何が1番ボラティリティの高いリスクかを同定する思考が求められる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8280",
      "text": "\t>[hiroki_daichi https://twitter.com/hiroki_daichi/status/1388256173250338817]: しかし、このことは人間の認知コストが非常に高い。人は不確実性から逃れたがるという本能があるからだ。この本能を飼い慣らすし早期失敗を実現する文化資本が極めて重要で、そういったものがソフトウェアやプロセスの実践の中で体得、結晶化されていく。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8281",
      "text": "\t>[hiroki_daichi https://twitter.com/hiroki_daichi/status/1388259914049474561]: ドメイン駆動設計もドメインの理解と対話というプロジェクトリスクの中心に立ち向かう話であるが、それと同時に理解し、蒸留されたドメインが無矛盾であるように早期失敗される形で型やアサーション、テストに組み込まれるようにする実装方法についての話でもある。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8282",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8283",
      "text": ">[nishio https://twitter.com/nishio/status/1388413629880360960]: 「仮説検証のリードタイムを縮めることが大事、そのためには何が1番ボラティリティの高いリスクかを同定する思考が求められる」って話、完全に同意なのだけどこれをこの表現で中高生に伝えても伝わらないので噛み砕いた説明を考えてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8284",
      "text": "\t>[nishio https://twitter.com/nishio/status/1388414471316545540]: 「AからBを作って、BからCを作ったら顧客がハッピーになる」という提案において「AからBを作る方法がうまくいくか不明確」なのに「BからCを作るところをプロトタイプとして作りました」と言われても、それAB間が予定通りに行かなかったら無意味になる作業では？という気持ち ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8285",
      "text": "\t> [https://gyazo.com/e4a07f6c3868f0e67aa05b0cdeddad2c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8286",
      "text": "\t>[nishio https://twitter.com/nishio/status/1388415380956147713]: つまりプロトタイプを作って検証すべきなのは一番不確実な矢印。矢印のつながりの中で、一番弱い矢印がどこなのかを特定して、それが切れてないかどうか確認するためのプロトタイプを作る必要がある。「もし切れてるなら早く気づいた方が得」だから。「[早く失敗することが大事]」とはこういうこと。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8287",
      "text": "\t>[nishio https://twitter.com/nishio/status/1388418034931363840]: 多分だけどもABの矢印が不安だから採択された後でメンターに教えてもらおうと思ってるのだろうけど、アドバイスをもらうにしても「何もやってないです、教えて」という状態よりは「これをやったらいいかなと思ってやってみたけど期待と違うこういう結果になった」の方がフィードバックしやすい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8288",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd8289",
      "text": ">[hiroki_daichi https://twitter.com/hiroki_daichi/status/1388414059897262082]: 夏休みの宿題のエピソードをよく使います。何かいい言い回しがあれば教えてください。 [https://note.com/hirokidaichi/n/n1c3b6c8cb58c 不確実性に向き合う働き方「あなたの夏休みの宿題は？」｜広木大地（日本CTO協会理事/レクター取締役）｜note]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd828a",
      "text": "\t>[nishio https://twitter.com/nishio/status/1388420063196172290]: 「夏休みの宿題、得意なところからやると苦手なものが残って気が重い。苦手なものからやった方がいい」という例えは雰囲気的にはいいけど、タスク間に依存関係がないんだよなぁ。苦手な自由研究を後回しにして夏休み中に終わらなかったとしても先にやった得意な漢字ドリルが無効になったりしない ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd828b",
      "text": "\t>[nishio https://twitter.com/nishio/status/1388421026430685191]: 「AからBを作って、BからCを作る」みたいに矢印が直列に並んでいる時は、矢印が一つ壊れてると全部ダメになる。だから一番弱い矢印を真っ先に確認する必要がある。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd828c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651171815
    },
    {
      "id": "626ae1e6aff09e0000bd828d",
      "text": "[仮説検証のリードタイム]と重複してる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651171815,
      "updated": 1651173687
    },
    {
      "id": "626ae92daff09e000026b632",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1651173677,
      "updated": 1651173677
    }
  ]
}