{
  "id": "603b580ed23b1f001c4d224e",
  "title": "✅ABC193F",
  "created": 1614501903,
  "updated": 1615963971,
  "lines": [
    {
      "id": "603b580ed23b1f001c4d224e",
      "text": "✅ABC193F",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1615963971
    },
    {
      "id": "6051a735aff09e00004e69f1",
      "text": "[F - Zebraness https://atcoder.jp/contests/abc193/tasks/abc193_f]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963957,
      "updated": 1615963958
    },
    {
      "id": "6051a735aff09e00004e69f2",
      "text": "[https://gyazo.com/e9f159c0e0b9070204a70e715eb1c8bd]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615963958,
      "updated": 1615963958
    },
    {
      "id": "603b5814aff09e00007b2fb3",
      "text": "　整理",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501909,
      "updated": 1614501918
    },
    {
      "id": "603b581eaff09e00007b2fb6",
      "text": "　　[2色で塗り分け→グラフのカット]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501918,
      "updated": 1614501918
    },
    {
      "id": "603b59a8aff09e00007b2fba",
      "text": "\t\t\t[グラフのカット]とはグラフの頂点集合を二つの集合に分けたもののこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614502312,
      "updated": 1614506682
    },
    {
      "id": "603b59aeaff09e00005ccd07",
      "text": "\t\t\tつまり[2色での塗り分け]とグラフのカットは本質的に同じもの",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614502319,
      "updated": 1614506685
    },
    {
      "id": "603b5967aff09e00007b2fb9",
      "text": "　　[最大カット→二部グラフなら片側を反転]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614502247,
      "updated": 1614502307
    },
    {
      "id": "603b59caaff09e00005ccd08",
      "text": "　　　グラフの最小カットは最大流で解ける",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614502347,
      "updated": 1614612927
    },
    {
      "id": "603d09beaff09e0000a8f845",
      "text": "　　　しかしこの問題は[最大カット](色が違っている数を増やしたい問題設定)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614612927,
      "updated": 1614612956
    },
    {
      "id": "603b59e5aff09e00005ccd09",
      "text": "　　　グラフが[グリッドグラフ]なので、[二部グラフ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614502373,
      "updated": 1614612983
    },
    {
      "id": "603b5a22aff09e00005ccd0a",
      "text": "　　　二部グラフの片側の頂点の塗りを反転すれば、すべての辺について「同じ色か異なる色か」が反転する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614502434,
      "updated": 1614502465
    },
    {
      "id": "603b5a41aff09e00005ccd0b",
      "text": "　　　これで「色が違っていれば+1」が「色が同じならば+1」に変わる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614502465,
      "updated": 1614613022
    },
    {
      "id": "603d0a1eaff09e0000a8f846",
      "text": "　　　色が違ってる辺を最小にする、つまり最小カット",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614613022,
      "updated": 1614613042
    },
    {
      "id": "603b581eaff09e00007b2fb8",
      "text": "　　[https://gyazo.com/eb51702b0e1c427719cdfb3c2ff4b3f9]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501918,
      "updated": 1614502192
    },
    {
      "id": "603b5930aff09e00005ccd05",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614502192,
      "updated": 1614502192
    },
    {
      "id": "603b5814aff09e00007b2fb4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501909,
      "updated": 1614501909
    },
    {
      "id": "603b5814aff09e00007b2fb5",
      "text": "----",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501909,
      "updated": 1614501910
    },
    {
      "id": "603b580eaff09e000056eed0",
      "text": "from [ABC193]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed1",
      "text": "ABC193F",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed2",
      "text": "[F - Zebraness https://atcoder.jp/contests/abc193/tasks/abc193_f]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed3",
      "text": "[https://gyazo.com/e9f159c0e0b9070204a70e715eb1c8bd]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed4",
      "text": "\t考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed5",
      "text": "\t　横幅が最大100",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed6",
      "text": "\t　　2^100はメモリに持てないので上からDPするのはダメそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed7",
      "text": "\t　2色で塗るので二部グラフになる？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed8",
      "text": "\t　　隣が同じ色になるしかない時もある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eed9",
      "text": "\t　グリーディな解法がある？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eeda",
      "text": "\t　　サンプルは通ったが提出したら20WA、やっぱダメか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eedb",
      "text": "\t　連結したハテナの塊ごとに2種類の市松模様のどちらかを選ぶ？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eedc",
      "text": "\t　　2個以上の連結成分を最悪2500個作れるので2^2500は無理",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eedd",
      "text": "\t　　それぞれは独立に計算できるか…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eede",
      "text": "\t　　タイムアウト",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eedf",
      "text": "\t公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee0",
      "text": "\t　[Project Selection Problem]に帰着して最大流",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee1",
      "text": " 　　知識としては知ってたのに全く思いつかなかったなぁ…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee2",
      "text": "　改めて考察",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee3",
      "text": "　　まず「グラフの頂点を白黒2色に塗り分ける」という設定を「グラフのカットについて考える」と理解すべきだった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee4",
      "text": "　　　グラフのカットとはグラフの頂点集合を二つの集合に分けたもののこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee5",
      "text": "　　カットだと理解した上で「最小カットなら最大流で解ける」と連想がつながる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee6",
      "text": "　　今回は「グラフの隣り合う頂点の色が異なっていれば+1」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee7",
      "text": "　　　色が異なってる(カットエッジである)ことをプラスに評価している",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee8",
      "text": "　　　これでは最大カット問題になる、一般的にはNP完全",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eee9",
      "text": "　　グリッドグラフが二部グラフであることを利用",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eeea",
      "text": "　　　「二部グラフの片側の頂点の色を反転」する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eeeb",
      "text": "　　　すると、すべての辺の「頂点の色が異なっているか」が反転する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eeec",
      "text": "　　　これで「隣り合う頂点の色が異なっていれば-1」にできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eeed",
      "text": "　　　グリッドグラフの場合、要するに市松模様の頂点を反転するということ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eeee",
      "text": "　実装",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501915
    },
    {
      "id": "603b580eaff09e000056eef2",
      "text": "　　N=1の時に0を返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eef3",
      "text": "　　Dinicの実装自体にバグがあった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eef4",
      "text": "　　　グラフに孤立点があると頂点数を間違えて配列を必要な量より小さくしてしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eef5",
      "text": "　　　頂点数を明示的に渡すようにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eef6",
      "text": "　　AC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eef7",
      "text": " \tcode:py",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eef8",
      "text": " \t def solve(N, world):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eef9",
      "text": "       if N == 1:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eefa",
      "text": "           return 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eefb",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eefc",
      "text": "       d = Dinic(N * N + 2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eefd",
      "text": "       for u, v in world.allEdges():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eefe",
      "text": "           d.add_edge(u, v, 1, True)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056eeff",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef00",
      "text": "       start = N * N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef01",
      "text": "       goal = start + 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef02",
      "text": "       for pos in world.allPosition():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef03",
      "text": "           x, y = divmod(pos, N)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef04",
      "text": "           if world.mapdata[pos] != CHAR_Q:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef05",
      "text": "               p1 = (world.mapdata[pos] == CHAR_B)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef06",
      "text": "               p2 = ((x + y) % 2 == 0)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef07",
      "text": "               if p1 ^ p2:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef08",
      "text": "                   d.add_edge(start, pos, 100)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef09",
      "text": "               else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef0a",
      "text": "                   d.add_edge(pos, goal, 100)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef0b",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef0c",
      "text": "       f = d.max_flow(start, goal)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef0d",
      "text": "       return (2 * N * (N - 1)) - f",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    },
    {
      "id": "603b580eaff09e000056ef0e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614501903,
      "updated": 1614501903
    }
  ]
}