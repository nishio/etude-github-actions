{
  "id": "5e70c5297dd2fe001743985c",
  "title": "私のコード履歴書",
  "created": 1584448814,
  "updated": 1585201555,
  "lines": [
    {
      "id": "5e70c5297dd2fe001743985c",
      "text": "私のコード履歴書",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584448814,
      "updated": 1584448817
    },
    {
      "id": "5e70c531aff09e00007036e1",
      "text": ">プログラムをはじめてから今まで、いったいどんなものを書いてきたのかを列挙すると面白い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584448823,
      "updated": 1584448846
    },
    {
      "id": "5e70c54daff09e00007036e3",
      "text": "https://satoru-takeuchi.hatenablog.com/entry/2020/03/17/153715",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584448846,
      "updated": 1584498488
    },
    {
      "id": "5e718735aff09e00007e4009",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584498489,
      "updated": 1584498489
    },
    {
      "id": "5e718737aff09e00007e400a",
      "text": "やってみた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584498489,
      "updated": 1584498489
    },
    {
      "id": "5e718739aff09e00007e400b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584498489,
      "updated": 1584498489
    },
    {
      "id": "5e70c54baff09e00007036e2",
      "text": "　父親がJXを買って、家にパソコンが来た。ROMにBASICが入っていて、付属マニュアルにBASICでのプログラミングの解説もあった。FOR文で位置と半径を変えながらCIRCLE文で円を描いて謎の模様を作って遊んだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584448846,
      "updated": 1584449067
    },
    {
      "id": "5e70c71caff09e00007036e8",
      "text": "　　https://ja.m.wikipedia.org/wiki/IBM_JX",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584449308,
      "updated": 1584449309
    },
    {
      "id": "5e70c62caff09e00007036e6",
      "text": "　新聞の解説を読んでニューラルネットを実装した。0+0=0や1+0=1は覚えさせられたが、1+1=2はどうしても覚えてくれなかった(覚えたと思ったら他のことを忘れている)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584449068,
      "updated": 1584498512
    },
    {
      "id": "5e70c6faaff09e00007036e7",
      "text": "　 今思えばヘブ則の解説と図解だけ見て単層の原始的なニューラルネットを実装したので、線形非分離な問題が解けないのである。簡単な問題のつもりで二進法の足し算を選んでいたが、足し算の中にあるXORは典型的な線形非分離の問題。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584449275,
      "updated": 1584449462
    },
    {
      "id": "5e70c7f0aff09e00007036ea",
      "text": "　 https://ja.m.wikipedia.org/wiki/ヘッブの法則",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584449521,
      "updated": 1584449522
    },
    {
      "id": "5e70c7b7aff09e00007036e9",
      "text": "　3Dをやりたくなって、三角関数を頑張って使って立方体を回転させるプログラムを作る。しかし透視投影を知らなくて、素朴に「奥行き方向を無視する」という方法で並行投影していた。陰線処理も知らなかった。3D詳しい人ならわかると思うけど、それをやると「伸縮する長方形」みたいな感じになる。ガッカリしてやめる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584449463,
      "updated": 1584449685
    },
    {
      "id": "5e70c8a4aff09e00007036eb",
      "text": "　家のマシンがWindowsになる。Visual BASICを手に入れる。ちょっとしたランチャーとかメモアプリとかを作る。当時フリーウェアをCDにたくさん詰め込んだ雑誌が流行ってて、収録依頼がたくさん来て、OKを出すとその雑誌がもらえた。古本屋に売れないかなと三宮高架下の古本屋に持っていって断られる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584449700,
      "updated": 1584449983
    },
    {
      "id": "5e70d181aff09e00007036fe",
      "text": " 　父親のメアドでメーリングリストに参加して、バイナリの中身をそのまま投稿したり、「シェアウェアのパスワードが不正に流通してる問題を解決するには、入力するとハードディスクをフォーマットする偽キーワードを作って不正に流れてるパスワードリストに混ぜ込めば良い。十分リスクが上がれば不正利用は出来なくなる」と主張して大人と大喧嘩になったりした。危険すぎる…。幸い僕は実行しなかった(という記憶)だが、実行した人がいて問題になった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584451970,
      "updated": 1584453594
    },
    {
      "id": "5e70d181aff09e00007036ff",
      "text": " 　　https://ja.m.wikipedia.org/wiki/WinGroove",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584451970,
      "updated": 1584451973
    },
    {
      "id": "5e70c9bfaff09e00007036ec",
      "text": "　僕がペイントブラシで描いた絵による「怪しいところをクリックしたら話が進む脱出ゲーム」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584449983,
      "updated": 1584450031
    },
    {
      "id": "5e70c9f1aff09e00007036ed",
      "text": "　　今や影も形もないけど、酷い絵のクオリティだった記憶",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450034,
      "updated": 1584450083
    },
    {
      "id": "5e70ca23aff09e00007036ee",
      "text": "　　あの酷いグラフィックのゲームを見て手放しで褒めた母は偉い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450083,
      "updated": 1584450120
    },
    {
      "id": "5e70ca49aff09e00007036ef",
      "text": "　人工無能ブーム、CGIで動くチャットボットが、当時夜11時以降のテレホーダイ時間帯以外はインターネット接続が従量課金だったせいで十分遊べないので、オフラインで動くように移植したバージョンを作る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450122,
      "updated": 1584450260
    },
    {
      "id": "5e70cad4aff09e00007036f0",
      "text": "　　変数埋め込み(名前を呼ばせるとか)のためにテンプレートエンジンのようなものを作り始め、条件分岐などを実装して謎の自作プログラミング言語ができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450260,
      "updated": 1584450375
    },
    {
      "id": "5e70cb4faff09e00007036f1",
      "text": "　　まあ文字列置換のテンプレートエンジンからズルズルとプログラミング言語化すると、if文のelse節の中身が条件節がfalseの時にも評価されちゃう罠にハマるよね。「副作用の有無」だとか「正格評価と遅延評価」などの概念は当時持っていなかったので普段波かっこで囲っているタグを角かっこで囲い、「角かっこを波かっこに変換してから文字列を再評価」っていう腐ったevalみたいなものを入れた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450383,
      "updated": 1584450650
    },
    {
      "id": "5e70cc59aff09e00007036f2",
      "text": "　　今の僕が当時のあの言語を評価すると「腐ったLISPと腐ったPHPの悪いところを合わせた言語」とでもなるか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450650,
      "updated": 1584450699
    },
    {
      "id": "5e70cc8aaff09e00007036f3",
      "text": "　　そんな言語を使ってプログラミングする人たちが現れて、中にはプログラミング未経験、文系です、みたいな人もいた。そういう経験もあってか、僕は「プログラミングは一部の才能のある人にしかできない」とちう選民思想には反対で、ただ適切な「興味を持てる対象」と「理解できる解説」の組み合わせに出会えていないだけだと思っている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450699,
      "updated": 1584450822
    },
    {
      "id": "5e70cd15aff09e00007036f4",
      "text": "　　このプログラムを中高一貫校の後輩がDelphiに移植し、DLL化して外部プログラムから呼び出し可能にするという面白げなことをしたのだが、当時の僕はその面白さを理解できていなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450838,
      "updated": 1584450926
    },
    {
      "id": "5e70cd6faff09e00007036f5",
      "text": "　　人工無能の処理の中で外部exeを起動して処理を委譲する仕組みとか積んでたんだけど、今考えるとすごい脆弱性を作り込んだもんだな。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450927,
      "updated": 1584451472
    },
    {
      "id": "5e70d220aff09e0000703701",
      "text": "　高校の友達と一緒に、尼崎あたりにあったベンチャーに遊びに行ってVRMLでなんかいろいろ作るシステムをもらった、一回遊びに行ってしばらくそのVRMLでゲームを作ったりしただけなので詳しいことは忘れてしまった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584452128,
      "updated": 1584452228
    },
    {
      "id": "5e70d290aff09e0000703702",
      "text": "　　社長さんは自分が提案書を自治体に出したことでそのインキュベーション施設ができたって主張してて、ほー、そんなもんかーみたいに思った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584452241,
      "updated": 1584452308
    },
    {
      "id": "5e70cdb1aff09e00007036f6",
      "text": "　大学に入学したら、会社の近くのベンチャー企業がインターネットに接続してるサーバを無償で貸してくれたのでホームページなるものを作り始める。そしてKENT CGIのPerlのコードを設置して、読んで、改造し始める",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584450993,
      "updated": 1584451211
    },
    {
      "id": "5e70ce8caff09e00007036f8",
      "text": "　　POSTリクエストをデコードするところはよくわかってなかったが、メインの処理にはデコード済みのものが渡ってくるので、やり取り部分はブラックボックスにしてた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584451213,
      "updated": 1584451310
    },
    {
      "id": "5e70ceedaff09e00007036f9",
      "text": "　　Nethackとかいうターミナルで遊ぶゲームが面白かったので、自分のウェブページにもゲームを設置したいと考え、「右、左、直進」などとリンクを選ぶと進んでいくテキストベースのゲームを作る。なおKENTの掲示板CGIを改造して作っているので、ダンジョンの壁にコメントを残すことができる。人が通るたびにだんだん消えていくのもNethackの真似。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584451310,
      "updated": 1584451457
    },
    {
      "id": "5e70c567aff09e00007036e4",
      "text": "　地元で開催されてた研究会に参加して、上記の会話アプリの話をしたら、なんだか偉い人の間でパスがつながって、当時けいはんなでオンライン3Dバーチャルワールドを作ってた会社にアルバイトとして参加することになる、C++の物理演算やネットワーク通信のコードを眺めたりしたがあまり貢献できることはなかった。そのシステムにPythonで書いたスクリプトを組み込む機能が付いて、テンション上がって色々なワールドを作りまくった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584448872,
      "updated": 1584452543
    },
    {
      "id": "5e70d56caff09e0000703707",
      "text": "　　具体的には",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584452972,
      "updated": 1584453009
    },
    {
      "id": "5e70d590aff09e0000703708",
      "text": "　　　電子銃を撃って、それが磁場で歪むのを観察できるワールド、モノポールつき",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453009,
      "updated": 1584453009
    },
    {
      "id": "5e70d951aff09e0000703718",
      "text": "　　　　ベクトル演算を多用する、ここで先輩が作ってたベクトル演算ライブラリを、クラスとか使って「良い設計」にしたつもりのものを作って置き換えてパフォーマンスが大幅に悪化する体験をした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453970,
      "updated": 1584454059
    },
    {
      "id": "5e70d9abaff09e0000703719",
      "text": "　　　　　要するに秒間何十回「位置」や「速度」のベクトルを更新する必要があるシチュエーションで、それらのベクトルをすべてPythonのオブジェクトにした上で演算のたびに新規オブジェクトを作ったらオーバーヘッドがでかいよね、という話。今ならわかる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454060,
      "updated": 1585200959
    },
    {
      "id": "5e70da5faff09e000070371a",
      "text": "　　　　　オブジェクトの破壊的更新をしない方が変なバグを仕込みにくくなる、しかしパフォーマンスは落ちる。人間にとっての優しさと、コンピュータにとっての優しさはしばしば相反する、と学んだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454239,
      "updated": 1584454295
    },
    {
      "id": "5e70d592aff09e0000703709",
      "text": "　　　非線形バネで物が吊るされていて軌跡を観察できるワールド",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453010,
      "updated": 1585201000
    },
    {
      "id": "5e70d5abaff09e000070370a",
      "text": "　　　操作方法のチュートリアル的な3Dゲーム",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453035,
      "updated": 1584453068
    },
    {
      "id": "5e70d5d8aff09e000070370b",
      "text": "　　　　ここで対象物の方向を矢印で指したい、という悩みを大学の線形代数の授業でちょうど習ったグラムシュミットでできることに気づいて数学の有用性に感動した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453081,
      "updated": 1585201013
    },
    {
      "id": "5e70d645aff09e000070370c",
      "text": "　　　　　https://ja.m.wikipedia.org/wiki/グラム・シュミットの正規直交化法",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453189,
      "updated": 1584453191
    },
    {
      "id": "5e70d3c0aff09e0000703703",
      "text": "　　　物理演算でタコをあげる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584452544,
      "updated": 1584453941
    },
    {
      "id": "5e70d924aff09e0000703717",
      "text": "　　　ブライテンベルグの車をアヒルのアバターの中に入れて、遺伝的アルゴリズムで挙動を進化させるワールド",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453924,
      "updated": 1584453924
    },
    {
      "id": "5e70d806aff09e0000703713",
      "text": "　　　　https://en.m.wikipedia.org/wiki/Braitenberg_vehicle",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453638,
      "updated": 1584453709
    },
    {
      "id": "5e70d8ccaff09e0000703715",
      "text": "  　 [https://gyazo.com/ef6458fa6483f4c1e42850fa552f646a]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453837,
      "updated": 1584453843
    },
    {
      "id": "5e70d8ccaff09e0000703716",
      "text": "  　 画像右。カンバンにブライテンベルクと書かれている。ドーモ君みたいなやつは肉食獣。アヒルを食べることで淘汰圧をかける。こいつの3Dモデルは僕がメタセコイヤで作った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453837,
      "updated": 1585201085
    },
    {
      "id": "5e70d8c9aff09e0000703714",
      "text": "　　2001年なのでセカンドライフのリリースの2年前だね。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453833,
      "updated": 1584453833
    },
    {
      "id": "5e70d41daff09e0000703704",
      "text": "　　ここで僕はPythonに出会う。そして「スクリプト言語処理系をコンパイル言語で作られたアプリに埋め込む」という発想にも",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584452637,
      "updated": 1584452703
    },
    {
      "id": "5e7c3fc8aff09e000024d1ed",
      "text": "　　　後の初の書籍「Jythonプログラミング」につながる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1585201097,
      "updated": 1585201116
    },
    {
      "id": "5e70d45faff09e0000703705",
      "text": "　　物理演算エンジンの実装の話を聞く。正しい物理法則である必要はなく、十分に高速で、十分にそれっぽく動けば良い。現実の挙動と同じであることよりも、ユーザが自然に感じる方が良い、というプラグマティズムの概念を獲得する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584452703,
      "updated": 1584452873
    },
    {
      "id": "5e7c3fdfaff09e000024d1ee",
      "text": "　　　現実と異なる物理法則を入れたグラフ可視化ソフトGRINeditに繋がった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1585201120,
      "updated": 1585201168
    },
    {
      "id": "5e70d509aff09e0000703706",
      "text": "　　バーチャルワールドに透明ポリゴンを入れたことにより、ポリゴンをソートする必要が出てきてパフォーマンスが悪化した。そこで先輩がソートのアルゴリズムを改善してパフォーマンスが劇的に改善した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584452873,
      "updated": 1584453322
    },
    {
      "id": "5e70d6caaff09e000070370e",
      "text": "　　　クイックソートをヒープソートに変えたんだっけな？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453323,
      "updated": 1584453343
    },
    {
      "id": "5e70d6dfaff09e000070370f",
      "text": "　　　ソートの種類とかは大学の授業でもちろん習ってたわけだが、とりあえずクイックソートでいいだろと思ってた。アルゴリズムの知識、適切な選択が、現実的な実益につながることをここで痛感した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453343,
      "updated": 1584453399
    },
    {
      "id": "5e70d1a6aff09e0000703700",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584452007,
      "updated": 1584452007
    },
    {
      "id": "5e70d728aff09e0000703710",
      "text": "このバイト先で未踏ユースのことを教えてもらって応募するのだが、ここからまだ未踏とその後の18年くらいの話が続くので、もう書くのが疲れてしまった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453417,
      "updated": 1584453474
    },
    {
      "id": "5e70d729aff09e0000703711",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584453418,
      "updated": 1584453418
    },
    {
      "id": "5e70dad3aff09e000070371b",
      "text": "雑に箇条書き",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454357,
      "updated": 1584454361
    },
    {
      "id": "5e70dad9aff09e000070371d",
      "text": "　未踏のお金でDelphiを買う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454361,
      "updated": 1584454372
    },
    {
      "id": "5e70dae5aff09e000070371e",
      "text": "　Javaもやる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454373,
      "updated": 1584454388
    },
    {
      "id": "5e70daf7aff09e000070371f",
      "text": "　i-modeアプリの受託アルバイト",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454391,
      "updated": 1585201210
    },
    {
      "id": "5e70db7baff09e0000703723",
      "text": "　　サイズ制限が酷い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454524,
      "updated": 1584454524
    },
    {
      "id": "5e70db0eaff09e0000703720",
      "text": "　　版権物は権利者がめんどくさい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454414,
      "updated": 1584454525
    },
    {
      "id": "5e70db2daff09e0000703721",
      "text": "　　受託は新聞記事になった時に「発注社の長年の研究開発により」とか書かれるのを目の当たりにしてメディアに対する不信感",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454445,
      "updated": 1585201260
    },
    {
      "id": "5e70db70aff09e0000703722",
      "text": "　大学院へ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454512,
      "updated": 1584454584
    },
    {
      "id": "5e70dbb8aff09e0000703724",
      "text": "　　Javaアプレットによる遺伝子発現情報の可視化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454584,
      "updated": 1584454613
    },
    {
      "id": "5e70dbd8aff09e0000703725",
      "text": "　　研究室のサイトを当時はやってたPython製のCMSであるZopeにする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454616,
      "updated": 1585201294
    },
    {
      "id": "5e7c409aaff09e000024d1ef",
      "text": "　　後輩にプログラミングを教えるためにPythonとJavaの振る舞いを比較しながら解説するコンテンツを作る、後の書籍「コーディングを支える技術」での「複数の言語を比較することが良い理解につながる」という思想はここで生まれた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1585201307,
      "updated": 1585201394
    },
    {
      "id": "5e70dbfdaff09e0000703726",
      "text": "　就職",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454653,
      "updated": 1584454669
    },
    {
      "id": "5e70dc0daff09e0000703727",
      "text": "　　とりあえずウェブアプリの会社なのでウェブアプリを作ってみよう、ってことでDjangoで「出されたお題に各言語で回答を投稿できるサイト」を作る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454670,
      "updated": 1585201305
    },
    {
      "id": "5e70dc93aff09e000070372a",
      "text": "　　収益化の目処が立たないのに会社にサーバ代を払わせていることに罪悪感を感じてGoogle App Engineに移植して無償枠で動かそうとする→大惨事",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454804,
      "updated": 1584454878
    },
    {
      "id": "5e70dc4eaff09e0000703728",
      "text": "　　サービスの維持運営が性格に合わないことを痛感する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454734,
      "updated": 1585201417
    },
    {
      "id": "5e70dc8eaff09e0000703729",
      "text": "　アート活動",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454798,
      "updated": 1584454890
    },
    {
      "id": "5e7c4110aff09e000024d1f0",
      "text": "　　Context-free Art→パフォーマンス上の問題→自前でSVGを生成してレンダリング→SVGレンダラが死ぬレベル",
      "userId": "582e63d27c56960011aff09e",
      "created": 1585201425,
      "updated": 1585201485
    },
    {
      "id": "5e70dd43aff09e000070372c",
      "text": "　　枝刈りのためにルート5を含む数を演算誤差なく扱う数値型を作って、libpngで自前でレンダリングする実装",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454980,
      "updated": 1585201494
    },
    {
      "id": "5e70dd9caff09e000070372d",
      "text": "　やる気を出すシステム",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455069,
      "updated": 1584455081
    },
    {
      "id": "5e70dda9aff09e000070372e",
      "text": "　　サーバの運営を嫌って静的HTML+JS",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455082,
      "updated": 1584455119
    },
    {
      "id": "5e70dde6aff09e000070372f",
      "text": "　　将来の機械学習のためのデータはGAにエンコードして送ることにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455142,
      "updated": 1585201528
    },
    {
      "id": "5e7c4177aff09e000024d1f2",
      "text": "　　Akinatorのような仕組みにしようかと。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1585201528,
      "updated": 1585201555
    },
    {
      "id": "5e70ddf9aff09e0000703730",
      "text": "　　しかし機械学習するまでもなく単なるif文でユーザのニーズが満たされてしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455161,
      "updated": 1585201528
    },
    {
      "id": "5e70de18aff09e0000703731",
      "text": "　　GAにエンコードされて突っ込まれたデータを取り出すことの方が面倒",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455192,
      "updated": 1584455210
    },
    {
      "id": "5e70de2baff09e0000703732",
      "text": "　kintoneおすすめグラフ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455211,
      "updated": 1584455237
    },
    {
      "id": "5e70de45aff09e0000703733",
      "text": "　　製品にいわゆるAI的なものを入れる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455237,
      "updated": 1584455337
    },
    {
      "id": "5e70dea9aff09e0000703734",
      "text": "　　このケースはまあ、評価関数を作る必要はあるケースだったが、世の中の大部分のニーズはもっと素朴な解決法でいいんじゃないかなーと思った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455338,
      "updated": 1584455408
    },
    {
      "id": "5e70def1aff09e0000703735",
      "text": "　　真価を発揮できるようにする工数は重たすぎて、真価を発揮できない形の実装になってしまいがち",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455409,
      "updated": 1584455441
    },
    {
      "id": "5e70df11aff09e0000703736",
      "text": "　JA配送ルート自動化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455441,
      "updated": 1584455454
    },
    {
      "id": "5e70df1eaff09e0000703737",
      "text": "　　最適化問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455454,
      "updated": 1584455461
    },
    {
      "id": "5e70df25aff09e0000703738",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584455462,
      "updated": 1584455468
    },
    {
      "id": "5e70dad5aff09e000070371c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1584454358,
      "updated": 1584454358
    }
  ]
}