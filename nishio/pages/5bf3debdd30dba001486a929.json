{
  "id": "5bf3debdd30dba001486a929",
  "title": "埋め込みベクトルの拡張",
  "created": 1542708932,
  "updated": 1543292179,
  "lines": [
    {
      "id": "5bf3debdd30dba001486a929",
      "text": "埋め込みベクトルの拡張",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542708932,
      "updated": 1542708932
    },
    {
      "id": "5bfcc50baff09e0000016b48",
      "text": "\tラベルが200次元空間に埋め込まれているとする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1543292171,
      "updated": 1543292178
    },
    {
      "id": "5bf3dedbaff09e0000862758",
      "text": " 人間がそのラベルの一部を2次元空間上に配置したとする([電子的KJ法ツール])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542708955,
      "updated": 1542708978
    },
    {
      "id": "5bf3dee9aff09e0000862759",
      "text": " この情報を有効に活用する方法はあるか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542708969,
      "updated": 1542708994
    },
    {
      "id": "5bf3df01aff09e000086275c",
      "text": "[埋め込みベクトル]の拡張",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542708994,
      "updated": 1543292179
    },
    {
      "id": "5bfcc512aff09e0000016b49",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1543292179,
      "updated": 1543292179
    },
    {
      "id": "5bf3df16aff09e000086275f",
      "text": "---",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709014,
      "updated": 1542709014
    },
    {
      "id": "5bf3df01aff09e000086275d",
      "text": "200次元の[分散表現]に、なんか別の方法で作った200次元の分散表現をマージする場合、400次元にしてから[PCA]で200次元に落としたらいいと思うけどKJ法などで人間が手で入れたものを追加する場合はどうしたものかなー、その軸は書き換わって欲しくないんだよなぁ、と思っている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542708994,
      "updated": 1542709110
    },
    {
      "id": "5bf3decfaff09e0000862757",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542708944,
      "updated": 1542708944
    },
    {
      "id": "5bf3df19aff09e0000862760",
      "text": "KJ法で入れる場合、そもそもすべての行に手でつけたデータがあるわけではないので別種の問題か〜という気もする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709018,
      "updated": 1542709025
    },
    {
      "id": "5bf3df21aff09e0000862762",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709026,
      "updated": 1542709026
    },
    {
      "id": "5bf3df21aff09e0000862763",
      "text": "人間が全部のラベルの位置を入力するわけじゃないことを考えると「200次元の埋め込みベクトルと、人間が入力した少数の2次元ベクトルから、人間が2次元ベクトルを入力しなかったものについて2次元ベクトルを推測する」っている[欠損値]処理か",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709026,
      "updated": 1542709040
    },
    {
      "id": "5bf3df21aff09e0000862761",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709025,
      "updated": 1542709025
    },
    {
      "id": "5bf3df32aff09e0000862764",
      "text": "整理してみた: [欠損値]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709043,
      "updated": 1542709082
    },
    {
      "id": "5bf3df59aff09e0000862766",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709082,
      "updated": 1542709082
    },
    {
      "id": "5bf3df5aaff09e0000862767",
      "text": "「200次元の埋め込みベクトルと、人間が入力した少数の2次元ベクトルから、人間が2次元ベクトルを入力しなかったものについて2次元ベクトルを推測する」っている欠損値処理が[線形回帰]で誤差なく推測できている時、その追加の2次元は残りの次元に[線形従属]なわけだからPCAかけたら誤差なく削減される",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709082,
      "updated": 1542709099
    },
    {
      "id": "5bf3dfa1aff09e0000862769",
      "text": "\tこれは単なる[回転]である",
      "userId": "582e63d27c56960011aff09e",
      "created": 1542709154,
      "updated": 1542709173
    }
  ]
}