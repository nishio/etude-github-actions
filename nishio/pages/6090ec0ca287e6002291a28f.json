{
  "id": "6090ec0ca287e6002291a28f",
  "title": "Hatena2013-02-02",
  "created": 1359730800,
  "updated": 1359730800,
  "lines": [
    {
      "id": "6090ec2faff09e00003ddc4b",
      "text": "Hatena2013-02-02",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc4c",
      "text": "code:hatena",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc4d",
      "text": " <body>",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc4e",
      "text": " *1359774217*PrologとHaskellの挙動の違い",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc4f",
      "text": " foo(0)とfoo(N)を用意しておいて、Nの時にはなにか処理をしてからfoo(N - 1)を再帰呼び出しする、というコーディングパターンをPrologで使う際に、Haskellの発想で書くと罠にハマるのでメモ。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc50",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc51",
      "text": " まずHaskellで挙動を確認してみる。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc52",
      "text": " >||",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc53",
      "text": " foo 0 = do{ print \"rule1\"; print 0 }",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc54",
      "text": " foo n = do{ print \"rule2\"; print n }",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc55",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc56",
      "text": " main = do",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc57",
      "text": "   foo (1 - 1)",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc58",
      "text": "   foo 1",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc59",
      "text": "   foo 0",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc5a",
      "text": " ||<",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc5b",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc5c",
      "text": " >||",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc5d",
      "text": " \"rule1\"",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc5e",
      "text": " 0",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc5f",
      "text": " \"rule2\"",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc60",
      "text": " 1",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc61",
      "text": " \"rule1\"",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc62",
      "text": " 0",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc63",
      "text": " ||<",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc64",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc65",
      "text": " foo(1 - 1)でfoo 0の定義が呼ばれていることがわかる。またfoo 0でfoo 0の定義だけが呼ばれていることがわかる。(何を当たり前のことを、と思うかもしれないけども、その思い込みにハマった)",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc66",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc67",
      "text": " Prologで同じような書き方をしてみよう。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc68",
      "text": " >||",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc69",
      "text": " foo(0) :- print('rule1: '), print(0).",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc6a",
      "text": " foo(N) :- print('rule2: '), print(N).",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc6b",
      "text": " ||<",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc6c",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc6d",
      "text": " >||",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc6e",
      "text": " ?- foo(1 - 1).",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc6f",
      "text": " rule2: 1-1",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc70",
      "text": " true.",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc71",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc72",
      "text": " ?- foo(1).",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc73",
      "text": " rule2: 1",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc74",
      "text": " true.",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc75",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc76",
      "text": " ?- foo(0).",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc77",
      "text": " rule1: 0",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc78",
      "text": " true ;",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc79",
      "text": " rule2: 0",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc7a",
      "text": " true.",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc7b",
      "text": " ||<",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc7c",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc7d",
      "text": " Prologでは、まずfoo(1 - 1)はfoo(0)にマッチしないのでrule2になっている。Haskellではパターンマッチのタイミングで1-1の評価が強制されて0になるが、Prologではされない。またfoo(0)の時に、rule1にマッチした後、rule2にもマッチしている。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc7e",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc7f",
      "text": " Prologでフィボナッチを計算している例などを見ると、うまくこの落とし穴を避けるような書き方をしてある。出かけないといけないので続きはまた今度。ヒントはカットとis。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc80",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc81",
      "text": " *1359814741*Twitterにログインできなくなった",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc82",
      "text": " 「<a href='http://www.itmedia.co.jp/news/articles/1302/02/news013.html'>Twitter、25万人のパスワードを含む個人情報漏えいの可能性 - ITmedia ニュース</a>」の影響でTwitterへのパスワードがリセットされた。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc83",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc84",
      "text": " リセットされた旨のメールが届いている人は、そこからリセットをすれば良いらしい。しかし僕には届いていない。「メールアドレスが間違ってる」とか「メールサーバが死んでいる」とか「スパムに入っている」などのミスではないかと思ったが、どうもそうでもなさそうだ。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc85",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc86",
      "text": " まず、僕の記憶の中のメールアドレスをパスワードリセット画面で入れてみると「いいですね」と表示される。存在しないhoge@...orgなどを入れると「メールアドレスまたは電話番号が無効です」と表示されるので、このメアドは有効なアカウントと紐付いているのだろう。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc87",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc88",
      "text": " [f:id:nishiohirokazu:20130202230531p:image]",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc89",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc8a",
      "text": " 次にこのメアドに対して自分でメールを送ってみた。問題なくGMailに転送された。というわけでメールサーバが死んでいるわけでもない。しかしこのパスワードリセット画面からこのメールアドレス宛のメールを送信しても、届かない。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc8b",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc8c",
      "text": " 最後に、spamに分類されているのではないかと確認してみたが、そこにもない。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc8d",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc8e",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc8f",
      "text": " 他にどういう可能性があるかなぁ。なんだかもうめんどくさくて「Twitterなんて人生に必須なわけじゃないから使えないならもう使えないままでいいかー」みたいな気分になってきた。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc90",
      "text": " ",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc91",
      "text": " 追記: なお、はてなからのTwitter連携とか、iPhoneのTwitterアプリとかからは投稿ができるようだ。このブログエントリーもはてな連携を使ってTwitterに投稿しておく。",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc92",
      "text": " </body>",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc93",
      "text": "",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddc94",
      "text": "[はてなダイアリー 2013-02-02 https://nishiohirokazu.hatenadiary.org/archive/2013/02/02]",
      "created": 1359730800,
      "updated": 1359730800,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}