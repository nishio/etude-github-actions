{
  "id": "5fe30c516622630022645270",
  "title": "PAST2L",
  "created": 1608715346,
  "updated": 1608912798,
  "lines": [
    {
      "id": "5fe30c516622630022645270",
      "text": "PAST2L",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608715346
    },
    {
      "id": "5fe30c52aff09e0000ba5ecb",
      "text": "from [第二回 アルゴリズム実技検定]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608715346
    },
    {
      "id": "5fe30c52aff09e0000ba5ecc",
      "text": "PAST2L",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608715346
    },
    {
      "id": "5fe313bcaff09e0000b5fdac",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608717244,
      "updated": 1608717244
    },
    {
      "id": "5fe32ba7aff09e00000828b5",
      "text": "[https://gyazo.com/c664b1d0acb09d62cb4f03914e6ca3ca]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608723367,
      "updated": 1608723369
    },
    {
      "id": "5fe32ba8aff09e00000828b6",
      "text": "[L - 辞書順最小 https://atcoder.jp/contests/past202004-open/tasks/past202004_l]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608723369,
      "updated": 1608723375
    },
    {
      "id": "5fe313b7aff09e0000b5fdab",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608717240,
      "updated": 1608717248
    },
    {
      "id": "5fe30c52aff09e0000ba5ecd",
      "text": "  最初の文字として選ぶことが可能な範囲が一つ定まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608717248
    },
    {
      "id": "5fe30c52aff09e0000ba5ece",
      "text": "  最初の文字はその中の最小のものだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608717248
    },
    {
      "id": "5fe30c52aff09e0000ba5ecf",
      "text": "  最小が複数あったら？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608889630
    },
    {
      "id": "5fe5b51daff09e000020eb6e",
      "text": "  　最も早いものを選べば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608889630,
      "updated": 1608889630
    },
    {
      "id": "5fe30c52aff09e0000ba5ed0",
      "text": "  　それ以外を先頭として辞書順最小のがもし存在するなら、先頭を最も早いものに入れ替えても辞書順最小なので。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608717248
    },
    {
      "id": "5fe30c52aff09e0000ba5ed1",
      "text": "  先頭1文字を決めると、2文字目として選べる範囲が決まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608717248
    },
    {
      "id": "5fe30c52aff09e0000ba5ed2",
      "text": "  　これを繰り返せば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608717248
    },
    {
      "id": "5fe30c52aff09e0000ba5ed3",
      "text": "　公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608718781
    },
    {
      "id": "5fe30c52aff09e0000ba5ed4",
      "text": "　　具体的な実装に関して上記だとTLEの可能性がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608718781
    },
    {
      "id": "5fe30c52aff09e0000ba5ed5",
      "text": "　改めて考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608715346,
      "updated": 1608830317
    },
    {
      "id": "5fe4cd6eaff09e00009c8a7e",
      "text": "　　一旦TLEになってみる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608830318,
      "updated": 1608830326
    },
    {
      "id": "5fe4cd82aff09e00009c8a7f",
      "text": "　　それから高速化の方法を考える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608830339,
      "updated": 1608830347
    },
    {
      "id": "5fe4cd65aff09e00009c8a7d",
      "text": "　　範囲に対するargminを効率よく計算できるといい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608830310,
      "updated": 1608889477
    },
    {
      "id": "5fe5b485aff09e000020eb6d",
      "text": "　　　[Disjoint Sparse Table]か？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608889477,
      "updated": 1608889490
    },
    {
      "id": "5fe5c03caff09e0000411f59",
      "text": "　sample AC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892477,
      "updated": 1608892480
    },
    {
      "id": "5fe5b469aff09e000020eb6c",
      "text": "\t\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608889450,
      "updated": 1608892471
    },
    {
      "id": "5fe5c037aff09e0000411f4b",
      "text": "\t\t def solve(N, K, D, AS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892471,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f4c",
      "text": "       end = N - D * (K - 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f4d",
      "text": "       start = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f4e",
      "text": "       ret = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f4f",
      "text": "       for _i in range(K):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f50",
      "text": "           subseq = AS[start:end]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f51",
      "text": "           if not subseq:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f52",
      "text": "               return [-1]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f53",
      "text": "           v = min(subseq)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f54",
      "text": "           ret.append(v)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f55",
      "text": "           start = AS.index(v, start) + D",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f56",
      "text": "           end += D",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f57",
      "text": "       return ret",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892472
    },
    {
      "id": "5fe5c037aff09e0000411f58",
      "text": "　\t8 TLE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892472,
      "updated": 1608892611
    },
    {
      "id": "5fe5c035aff09e0000411f4a",
      "text": "　ここから高速化するとなると、やっぱり[Disjoint Sparse Table]かなー",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892469,
      "updated": 1608893332
    },
    {
      "id": "5fe5c17aaff09e000020eb70",
      "text": "　範囲が後ろにずれていくだけなので[優先度キュー]でよい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892795,
      "updated": 1608892836
    },
    {
      "id": "5fe5c1a4aff09e000020eb71",
      "text": "　　無効になった値を読み飛ばすスタイル",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892836,
      "updated": 1608892844
    },
    {
      "id": "5fe5c7bcaff09e000020eb72",
      "text": "　 [スライドRange Argminを優先度キューで]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608894396,
      "updated": 1608912798
    },
    {
      "id": "5fe5c0d1aff09e000020eb6f",
      "text": "\tAC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608892625,
      "updated": 1608893263
    },
    {
      "id": "5fe5c350aff09e0000411f5b",
      "text": "\t\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893265,
      "updated": 1608893268
    },
    {
      "id": "5fe5c354aff09e0000411f5c",
      "text": "\t\t def solve(N, K, D, AS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893269,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f5d",
      "text": "       from heapq import heappush, heappop, heapify",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f5e",
      "text": "       end = N - D * (K - 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f5f",
      "text": "       start = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f60",
      "text": "       ret = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f61",
      "text": "       queue = [(AS[i], i) for i in range(start, end)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f62",
      "text": "       heapify(queue)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f63",
      "text": "       for _i in range(K):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f64",
      "text": "           if start >= end:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f65",
      "text": "               return [-1]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f66",
      "text": "           while True:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f67",
      "text": "               v, i = heappop(queue)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f68",
      "text": "               if start <= i < end:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f69",
      "text": "                   break",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f6a",
      "text": "           ret.append(v)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f6b",
      "text": "           start = i + D",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f6c",
      "text": "           for i in range(end, min(end + D, N)):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f6d",
      "text": "               heappush(queue, (AS[i], i))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f6e",
      "text": "           end += D",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f6f",
      "text": "       return ret",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893270
    },
    {
      "id": "5fe5c355aff09e0000411f70",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893270,
      "updated": 1608893271
    },
    {
      "id": "5fe5c34eaff09e0000411f5a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608893262,
      "updated": 1608893262
    }
  ]
}