{
  "id": "6090ec0ca287e6002291a2ba",
  "title": "Hatena2013-08-19",
  "created": 1376838000,
  "updated": 1376838000,
  "lines": [
    {
      "id": "6090ec30aff09e00003de871",
      "text": "Hatena2013-08-19",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de872",
      "text": "code:hatena",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de873",
      "text": " <body>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de874",
      "text": " *1376891440*necomimiを改造して脳波データを取り出した",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de875",
      "text": " 脳波で猫耳が動く「<a href=\"http://www.amazon.co.jp/gp/product/B007YNBOJM/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=B007YNBOJM&linkCode=as2&tag=nishiohirokaz-22\">necomimi</a>」が、なんと3000円台で投げ売りされて話題になっていました。僕も3150円で買いました。なんと中に入っている脳波チップを単体で買うより安い！(<a href='http://www.switch-science.com/catalog/978/'>スイッチサイエンス</a>ではいま4980円)",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de876",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de877",
      "text": " 頭に着けるための電極とセットになっているのにチップより安いだなんて！よしこれを改造してPCで脳波の値を取得できるようにしよう！",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de878",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de879",
      "text": " necomimiの分解・改造に関しては既に先人がいくつかのエントリーを上げておられます。まずこちら: <a href='http://hizwarp.net/archives/386'>nekomimiを分解してみた</a>。シールを剥がすとネジが出てくるのでそれを回せば簡単に開くとの話。これはそのとおりでした。簡単でした。シールを剥がす時にノリが残ってネチョネチョにならないように慎重に剥がす必要があるけど。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de87a",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de87b",
      "text": " 上記スイッチサイエンスのページから各ピンがどういう意味かの説明PDFが見れます。Pin1が額でPin2がその線のシールド線(ケーブルがノイズを受けるのをキャンセルするためか）、Pin5が耳でPin4がそのシールド、じゃあPin3はどこにつながるんだ？Pin3も耳電極につながってるんじゃないかと思ったけども、テスターではPin5だけが耳電極と導通。耳たぶ電極は2つの金属で挟む形になっているけども、その片方だけがPin5と導通。これでいいのかなぁ。ちょっと不安。最悪の場合僕のnecomimiがのPin3の配線が断線している可能性も考えられる。手元には1個しかないので誰か他の人にPin3がどこにつながっているのか確認して欲しいところです。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de87c",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de87d",
      "text": " あ、耳たぶ電極のことを「心拍センサ」と書いているブログを何処かで見かけましたけど、心拍センサはLEDと受光素子が向かい合わせになっている構造で、こっちは両方金属なので心拍センサでないことは明らかです。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de87e",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de87f",
      "text": " さて次は心拍データをnecomimiの外に引っ張りだす配線をしましょう。こちらを参照:<a href='http://www.kako.com/neta/2013-019/2013-019.html'>小ネタ</a>。脳波チップTGAM1の出力はスイッチサイエンスのサイトに書いてあるとおり「UART(57600 baud、8ビット、パリティ無し、 1 ストップビット)」なので、このUARTのTXとGNDを引っ張り出します。僕は最初間違えてTXとRXを引っ張りだしてしまった…。ここのサイトのようにTXを回路から、GNDを電池ボックスから取る形に変更して、ちゃんと信号が取れるようになりました。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de880",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de881",
      "text": " 取り出したUARTの信号をUSB端子経由でPCで読むために、秋月のAE-UM232R(FT232RLを使ったUSB-シリアル変換基板)を使います。今回、チップは3.3Vと書いてあったので、以前自分が書いたエントリー<a href='http://d.hatena.ne.jp/nishiohirokazu/20130406/1365258081'>AE-UM232Rで3.3V出力を出す方法</a>を参考にしてジャンパピンを設定します。J1を1-2間ショートにする必要があります。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de882",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de883",
      "text": " 回路のクローズアップ。黒いケーブルがnecomimiのGNDにつながっていて、それが青いワイヤーでAE-UM232RのGNDにつながっています。白いケーブルがnecomimiのTXにつながっていて、これが3本のワイヤーを経由してAE-UM232RのRXD、反対側の5本目のピンにつながっています。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de884",
      "text": " [f:id:nishiohirokazu:20130819203954j:image]",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de885",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de886",
      "text": " これで /dev/tty.usbserial とかからチップの出力が読めるようになります。おっと書き忘れていましたが僕の環境はMac OS X 10.7.5です。この出力をどうこうする上では、チップを作っているNeuroSkyがSDKを公開しているのでそれを参照するのがよいでしょう。<a href='http://developer.neurosky.com/docs/doku.php?id=thinkgear_connector_tgc'>thinkgear_connector_tgc [NeuroSky Developer - Wiki]</a>。Windows版とMac版のアプリが用意されています。アプリを起動したらそのアプリがシリアルを読みつつサーバになって、TCPで13854ポートをListenし始めるので、適当なプログラムからそこへ接続すればJSON形式でデータが送られてくる…はずなんだけどもJSON形式にする設定の仕方がわからずバイナリフォーマットで送られてきたので「<a href=\"http://www.music.mcgill.ca/~ben/306/binary_socket_protocol.pdf\">Binary Socket Packet Format</a>」を参考にして自分でパースしました。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de887",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de888",
      "text": " ここでeSenseが返す「集中」と「瞑想」の値でグラフを書いてみるとなんと正弦波に。これはThinkGear Connectorを起動するときにシリアルデバイスの指定を間違っていてうまく接続できなくて、色々設定を変えて試している時にうっかり「Demo mode」をONにしてしまったからでした。デモモードをOFFにすると、今度はバイナリパケットのフォーマットは正しいのに、ペイロードが0の状態に…うむむ。よくわからないのでNeurosky提供のツールを使わないで自前でシリアル通信をしてみることにします。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de889",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de88a",
      "text": " あ、ちなみにnecomimiはモーター音がうるさいのでドラえもん化しました。モーターの部分も裏のシールを剥がせばネジ穴が出るので簡単です。白黒の信号線は耳電極のケーブルが出る穴を広げてそこから外へ出しています。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de88b",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de88c",
      "text": " [f:id:nishiohirokazu:20130819145001j:image]",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de88d",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de88e",
      "text": " シリアル通信にはpyserialを使えばOK。こっちのフォーマットは上記ソケットを流れるバイナリフォーマットと似ているけども違うフォーマット(<a href='http://developer.neurosky.com/docs/doku.php?id=thinkgear_communications_protocol'>thinkgear_communications_protocol [NeuroSky Developer - Wiki]</a>を参照)なのでパーサをまた書くのかー面倒だなーと思ったのですが、ちょっと調べてみたら既に書いている人がいました。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de88f",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de890",
      "text": " https://pypi.python.org/pypi/thinkgear/0.2",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de891",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de892",
      "text": " PyPIに上がっているので pip install thinkgear ってするだけでライブラリがインストールされます。というわけで数行のPythonスクリプトを書くだけでOK。ThinkGearRawWaveDataを表示しないで捨てているのは、これが生データのパケットなので画面があっという間に流れてしまうから。捨ててやると残りのパケットは1秒に1回の頻度で送られてくるので目視で観察するのに適当です。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de893",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de894",
      "text": " >|python|",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de895",
      "text": " import thinkgear",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de896",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de897",
      "text": " PORT = '/dev/tty.usbserial-A9004xwG'",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de898",
      "text": " for packets in thinkgear.ThinkGearProtocol(PORT).get_packets():",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de899",
      "text": "     for p in packets:",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de89a",
      "text": "         if isinstance(p, thinkgear.ThinkGearRawWaveData):",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de89b",
      "text": "             continue",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de89c",
      "text": "         print p",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de89d",
      "text": " ||<",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de89e",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de89f",
      "text": " このスクリプトの出力はこんな感じ https://gist.github.com/nishio/6260262",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a0",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a1",
      "text": " >||",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a2",
      "text": " POOR SIGNAL: 26",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a3",
      "text": " ASIC EEG Power: EEGPowerData(delta=1087207, theta=316167, lowalpha=848603, highalpha=153512, lowbeta=225246, highbeta=115827, lowgamma=113654, midgamma=80802)",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a4",
      "text": " ATTENTION eSense: 0",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a5",
      "text": " MEDITATION eSense: 0",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a6",
      "text": " POOR SIGNAL: 51",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a7",
      "text": " ASIC EEG Power: EEGPowerData(delta=644431, theta=203717, lowalpha=354474, highalpha=333722, lowbeta=141786, highbeta=80020, lowgamma=73025, midgamma=72347)",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a8",
      "text": " ATTENTION eSense: 0",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8a9",
      "text": " MEDITATION eSense: 0",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8aa",
      "text": " ||<",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8ab",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8ac",
      "text": " 脳波の強度が8つの分類ごとに表示されています。delta=644431, theta=203717, lowalpha=354474, highalpha=333722, lowbeta=141786, highbeta=80020, lowgamma=73025, midgamma=72347…と。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8ad",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8ae",
      "text": " あれれ…やっぱりeSenseの集中と瞑想の値が0だな…。2通りのソフトウェアで両方うまく行かないってことはハードウェアの問題なのだろうか？？ センサーからの信号の質を表すPOOR SIGNALは、ヘッドセットを外すと200になり、つけると26ぐらいまで下がるので良好な信号が得られているってことだと思うのだが…まさかこれが0にならないとeSenseの出力が出ないとか？",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8af",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b0",
      "text": " とりあえずここまでの情報でも誰かの役に立ちそうだと思うのでシェアしておきます。もしeSenseの値までとれた方がいましたら教えていただけるとありがたいです。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b1",
      "text": " ",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b2",
      "text": " 状況を整理するために追記",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b3",
      "text": " - 分解前に普通に装着した状態で、耳はなんだかそれなりに動いていたけども、目を閉じて瞑想しようがアクションゲームをしようがはっきりわかる変化はなかった。この時点ですでに断線していた可能性が考えられるが比較対象がないのでよくわからない。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b4",
      "text": " - 脳波チップのPin3がセンサーに繋がっていないことを疑問に思っているが、比較できる別のデバイスがないので正しいのかおかしいのかわからない。誰かデバイスを持っている人に確認して欲しい。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b5",
      "text": " - ThinkGear Connecterでセンサーの値が0になってしまう現象を観測したのはドラえもん化の前。また、センサーからの信号でモーターがドライブされる回路の構造を考えても、モーターの回線を切ったことがセンサーからの出力に影響するとは考えにくい。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b6",
      "text": " - UARTから読み込んでパースするあたりが問題なく動いていることから、読み出しのための回路が壊れているとは考えにくい。回路が壊れてて「バイナリプロトコルに正しく従いつつeSenseの値だけ0」という出力が出てくる確率は低そう。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b7",
      "text": " - 「自分はeSenseの値もとれている、POOR SIGNALは0」という情報を頂きました。ということはシグナルの質が悪いのでチップがeSenseの値を出していないと可能性が高いか…その理由はなんだろう。やっぱりPin3が気になるので、これを耳センサにつないだりGNDにつないだりを試してみようかな。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b8",
      "text": " - 「PCにつないだせいでACアダプタからのノイズが脳波回路の方にまで流れてシグナルの質が下がっているのではないか、ACアダプタを抜いてバッテリー駆動にしたらどうか」というご指摘があったので試してみましたが、POOR SIGNALの値に変化はありませんでした。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8b9",
      "text": " - 信号線とUART-USB変換基板の間にフォトカプラを挟んで電気的に絶縁する案も。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8ba",
      "text": " - 「Pin3は耳電極の片側に導通していた」という情報を頂きました。信号の質が悪いのはPin3～耳電極間が断線しているせい、という可能性が高まりました。次はこの修理を試してみたいと思います。",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8bb",
      "text": " </body>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8bc",
      "text": " <comments>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8bd",
      "text": " <comment>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8be",
      "text": " <username>あおざかな</username>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8bf",
      "text": " <body>私もつい先日necomimiを購入し，全く同じトラブルに出くわしました．<br><br>やはり，PCと繋げることが主な原因のようです<br>USB→シリアル変換の内部でDC-DCコンバータにでも繋がってるのが<br>問題なんじゃないでしょうか？<br><br>私の場合は，TGAM1のVCCが3.3V出力なのを利用して<br>それをそのままBluetoothBeeにつなぎ，PCのBluetoothの<br>シリアル変換ポートで受け取ったところ正常に受け取れました．<br>(信号品質も0です)<br><br>おそらく，XBeeなど他のものでも上手くいくと思います．</body>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8c0",
      "text": " <timestamp>1377521874</timestamp>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8c1",
      "text": " </comment>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8c2",
      "text": " </comments>",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8c3",
      "text": "",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de8c4",
      "text": "[はてなダイアリー 2013-08-19 https://nishiohirokazu.hatenadiary.org/archive/2013/08/19]",
      "created": 1376838000,
      "updated": 1376838000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}