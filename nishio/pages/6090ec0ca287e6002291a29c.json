{
  "id": "6090ec0ca287e6002291a29c",
  "title": "Hatena2013-03-13",
  "created": 1363100400,
  "updated": 1363100400,
  "lines": [
    {
      "id": "6090ec30aff09e00003ddfcf",
      "text": "Hatena2013-03-13",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd0",
      "text": "code:hatena",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd1",
      "text": " <body>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd2",
      "text": " *1363167178*状態のあるコードに対するテストの自動生成",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd3",
      "text": " BLUE*アルゴリズムを実装してみたので、せっかくだからテストの自動生成をやってみた。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd4",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd5",
      "text": " 今回テスト対象にするコードの仕様は",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd6",
      "text": " - 開く、閉じる、書き込む、の3つの操作ができる",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd7",
      "text": " - 開いてないのに書き込んだり閉じたりしたらエラーになる",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd8",
      "text": " というもの",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfd9",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfda",
      "text": " そしてこちらがそれの「バグのある実装」：",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfdb",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfdc",
      "text": " >|python|",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfdd",
      "text": " class Target(object):  # bad impl.",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfde",
      "text": "     def __init__(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfdf",
      "text": "         self.opened = False",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe0",
      "text": "         self.closed = False",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe1",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe2",
      "text": "     def open(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe3",
      "text": "         self.opened = True",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe4",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe5",
      "text": "     def write(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe6",
      "text": "         if not self.opened:",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe7",
      "text": "             raise RuntimeError",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe8",
      "text": "         if self.closed:",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfe9",
      "text": "             raise RuntimeError",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfea",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfeb",
      "text": "     def close(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfec",
      "text": "         if not self.opened:",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfed",
      "text": "             raise RuntimeError",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfee",
      "text": "         self.closed = True",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfef",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff0",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff1",
      "text": " まずは手動でテストを書く。e_plusは「エラーにならないはずの操作」で、e_minusは「エラーになるはずの操作」、open, close, writeがそれぞれo, c, wと略されている。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff2",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff3",
      "text": " >||",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff4",
      "text": " e_plus = ['o', 'oc', 'ow', 'owc', 'oww', 'owwc', 'owww']",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff5",
      "text": " e_minus = ['c', 'w', 'ocw']",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff6",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff7",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff8",
      "text": " このテストをBLUE*に食わせると、その条件をみたすようなDFAが作られる。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddff9",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddffa",
      "text": " [f:id:nishiohirokazu:20130313181238p:image]",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddffb",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddffc",
      "text": " これを幅優先探索してテストケースを生成し、それをDFAと実際の実装の両方に食わせて、結果が異なるものを探す。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddffd",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddffe",
      "text": " まず4つ目の候補でミスマッチが見つかった。openしてまたopenした際に、DFAは「エラーになるべき」と主張しているが、実装はエラーにならない、とのこと。うん、それは仕様には明確には書かれていない。今回はエラーになるべきと判断したことにする。仕様に追記して実装を修正しよう。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ddfff",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de000",
      "text": " >||",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de001",
      "text": " 4: for input ['o', 'o']: dfa said False, but target said True",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de002",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de003",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de004",
      "text": " 実装を修正。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de005",
      "text": " >|python|",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de006",
      "text": "     def open(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de007",
      "text": "         if self.opened:",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de008",
      "text": "             raise RuntimeError",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de009",
      "text": "         self.opened = True",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de00a",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de00b",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de00c",
      "text": " 再度実行。今度は8番目の候補でミスマッチが見つかった。曰く「openしてcloseした後、さらにcloseした場合、DFAはエラーを期待したが、実装はそうなってない」とのこと。閉じているものを再度閉じた時にエラーになるべきかどうかは仕様に明記されていない。これはエラーになるべきと判断して、実装を修正する。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de00d",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de00e",
      "text": " >||",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de00f",
      "text": " 8: for input ['o', 'c', 'c']: dfa said False, but target said True",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de010",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de011",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de012",
      "text": " 勘の良い人は気づいていたと思うけど「開いているか、開いてないか」の2状態を管理したいだけなのにclosedなんてフラグは必要ないわけだよね。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de013",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de014",
      "text": " >|python|",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de015",
      "text": " class Target(object):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de016",
      "text": "     def __init__(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de017",
      "text": "         self.opened = False",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de018",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de019",
      "text": "     def open(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de01a",
      "text": "         if self.opened:",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de01b",
      "text": "             raise RuntimeError",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de01c",
      "text": "         self.opened = True",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de01d",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de01e",
      "text": "     def write(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de01f",
      "text": "         if not self.opened:",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de020",
      "text": "             raise RuntimeError",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de021",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de022",
      "text": "     def close(self):",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de023",
      "text": "         if not self.opened:",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de024",
      "text": "             raise RuntimeError",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de025",
      "text": "         self.opened = False",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de026",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de027",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de028",
      "text": " 実装を修正したので再度探索を実行。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de029",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de02a",
      "text": " 今度は「openしてcloseした後openした場合、DFAはエラーになると期待したが実装はそうではない」とのこと。閉じた後再度開けるのかどうかも仕様には明記されていないな。これは開けるという仕様にする。つまり、これはDFAの側が間違っている。こういう場合は「それはエラーにならないのが正しいんだよ」とe_plusに追加して教えてやる。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de02b",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de02c",
      "text": " >||",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de02d",
      "text": " 7: for input ['o', 'c', 'o']: dfa said False, but target said True",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de02e",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de02f",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de030",
      "text": " ocooは成功すると思ったらしいが、でもこれはエラーになるのが正しい。これは「エラーになるのが正しいんだよ」とe_minusに追加して教えてやる。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de031",
      "text": " >||",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de032",
      "text": " 13: for input ['o', 'c', 'o', 'o']: dfa said True, but target said False",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de033",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de034",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de035",
      "text": " これも実装が正しい。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de036",
      "text": " >||",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de037",
      "text": " 16: for input ['o', 'w', 'c', 'o']: dfa said False, but target said True",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de038",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de039",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de03a",
      "text": " これも実装が正しい。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de03b",
      "text": " >||",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de03c",
      "text": " 34: for input ['o', 'w', 'w', 'w', 'o']: dfa said True, but target said False",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de03d",
      "text": " ||<",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de03e",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de03f",
      "text": " そうすると探索プログラムが「長さ20以下の入力列について、ミスマッチは見つかりませんでした」と報告してくる。めでたしめでたし。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de040",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de041",
      "text": " 長さ20以下の操作列をテスト、ってことで素朴に全探索してたら3 ** 20で3486784401個あるんだけども、こちらではエラーになるパスより先は探索しないので53130個で済んでいる。何も考えずにランダムにテストするのに比べると6万倍の高速化ですな。一方人間の記述としては正のテストが9個、負のテストが5個なのでその記述から約4000倍のテストが生成されていることになる。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de042",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de043",
      "text": " この時のDFAはこんな感じになっている。人間が書いたら3と5はくっつけると思うけど、まあ間違ってはいない。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de044",
      "text": " [f:id:nishiohirokazu:20130313182644p:image]",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de045",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de046",
      "text": " 今回は入力にノイズが入っていないが、BLUE*自体はノイズのある列からどうやってDFAを推定するか、というアルゴリズムなので近いうちにノイズのある例で使ってみたい。",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de047",
      "text": " ",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de048",
      "text": " 参考文献",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de049",
      "text": " - \"BLUE*: a Blue-Fringe Procedure for Learning DFA with Noisy Data\" by M Sebban, J Janodet, F Tantini",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de04a",
      "text": " - \"From Test Cases to FSMs: Augmented Test-driven Development and Property Inference\"  by Thomas Arts and Simon Thompson",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de04b",
      "text": " </body>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de04c",
      "text": " <comments>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de04d",
      "text": " <comment>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de04e",
      "text": " <username>shiracha</username>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de04f",
      "text": " <body>これは一種のモデルチェックとしてとらえたらいいんですかね？<br>普通のモデルチェッカだとモデルの全体をLTLなんかを使って頑張ってユーザが作成しますが<br>モデルの一部だけを示すことでモデルの残りの挙動を推論してくれる、ととらえるとすごく面白い方向性だなーって思います。<br>質問なのですが、どういうところからこれ思いついたんですか？</body>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de050",
      "text": " <timestamp>1363275174</timestamp>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de051",
      "text": " </comment>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de052",
      "text": " <comment>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de053",
      "text": " <username>nishiohirokazu</username>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de054",
      "text": " <body>参考文献を追加しておきました。まだななめ読みしかしていませんが。</body>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de055",
      "text": " <timestamp>1363316521</timestamp>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de056",
      "text": " </comment>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de057",
      "text": " <comment>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de058",
      "text": " <username>seizans</username>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de059",
      "text": " <body>中程の<br>> 曰く「openしてcloseした後、さらにcloseした場合、DFAはエラーを期待したが、実装はそうなってない」とのこと。<br>> 閉じた後再度開けるのかどうか仕様には明記されていないな。<br>の2つの文は咬み合っていない気がします。<br>open -> close -> close なら、閉じた後再度閉じられるのかどうか、でしょうか？<br><br>あと細かいのと、どういうDFAができればよいかちゃんと把握していないのですが、<br>> この時のDFAはこんな感じになっている。人間が書いたら3と5はくっつけると思うけど、まあ間違ってはいない。<br>これは人間が書いたら 1 と 3 と 5 をくっつけませんか？</body>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de05a",
      "text": " <timestamp>1365864444</timestamp>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de05b",
      "text": " </comment>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de05c",
      "text": " <comment>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de05d",
      "text": " <username>nishiohirokazu</username>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de05e",
      "text": " <body>>> 曰く「openしてcloseした後、さらにcloseした場合、DFAはエラーを期待したが、実装はそうなってない」とのこと。<br>>> 閉じた後再度開けるのかどうか仕様には明記されていないな。<br>>の2つの文は咬み合っていない気がします。<br><br>そのとおりですね、次のテストの説明とごっちゃになっていたようです。修正しました！<br><br>>これは人間が書いたら 1 と 3 と 5 をくっつけませんか？<br><br>そうですね、あとは0が非受理状態なことも間違っていて、そこも含めてキレイなDFAを書くなら「閉じている状態」と「開いている状態」の2状態だけのDFAになるはずです。</body>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de05f",
      "text": " <timestamp>1365867023</timestamp>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de060",
      "text": " </comment>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de061",
      "text": " </comments>",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de062",
      "text": "",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de063",
      "text": "[はてなダイアリー 2013-03-13 https://nishiohirokazu.hatenadiary.org/archive/2013/03/13]",
      "created": 1363100400,
      "updated": 1363100400,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}