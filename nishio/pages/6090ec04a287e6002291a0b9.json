{
  "id": "6090ec04a287e6002291a0b9",
  "title": "Hatena2010-05-24",
  "created": 1274626800,
  "updated": 1274626800,
  "lines": [
    {
      "id": "6090ec28aff09e00003d6225",
      "text": "Hatena2010-05-24",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6226",
      "text": "code:hatena",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6227",
      "text": " <body>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6228",
      "text": " *1274665895*今朝の日記",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6229",
      "text": " Twitterから転載",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d622a",
      "text": " ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d622b",
      "text": " - 乗換駅を乗り過ごす",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d622c",
      "text": " - 別の駅で乗り換えることにする",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d622d",
      "text": " - 気がつくとその駅についてすでにドアが開いている",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d622e",
      "text": " - 慌てる",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d622f",
      "text": " >>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6230",
      "text": " 考え事していたら乗換駅についていて、あわてて近くの手すりにかかっていたビニール傘をもって外にでたら、自分の左肘にも同じビニール傘がかかっていた。端の席で傘を手すりにかけて寝てたおじさんごめんなさい。あなたの傘は日本橋の改札にあずけてあります。",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6231",
      "text": " <<",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6232",
      "text": " - 乗り換える",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6233",
      "text": " >>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6234",
      "text": " 単純なモンテカルロは各々の試行が独立だから各試行は純粋な関数にしておいて上で集計する実装にすることで将来なにも考えずに並列化できる。だから純粋に実装すべき。しかしUCBを使うモンテカルロは各試行が前の試行によって決まるからむずかしい、ってことか。",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6235",
      "text": " <<",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6236",
      "text": " - また乗り過ごす",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6237",
      "text": " >>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6238",
      "text": " また乗り過ごした…。一回の通勤で二回乗り過ごして一回乗り過ごしそうになるとかどっかおかしいんじゃないか。",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6239",
      "text": " <<",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d623a",
      "text": " ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d623b",
      "text": " 結論: モンテカルロが悪い",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d623c",
      "text": " ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d623d",
      "text": " *1274703831*[Haskell]Random",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d623e",
      "text": " mainの中でmkStdGenするぎりぎりまでIOモナドで包まない、ってのにチャレンジしてみた。",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d623f",
      "text": " ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6240",
      "text": " >|haskell|",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6241",
      "text": " import Random",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6242",
      "text": " ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6243",
      "text": " dice :: (RandomGen g) => g -> (Int, g)",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6244",
      "text": " dice g = randomR (1, 6) g ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6245",
      "text": " ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6246",
      "text": " dice_seq :: (RandomGen g) => g -> [Int]",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6247",
      "text": " dice_seq g = ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6248",
      "text": "     let ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6249",
      "text": "         first_result = dice g",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d624a",
      "text": "     in",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d624b",
      "text": "       (fst first_result) : map fst (iterate (dice.snd) first_result)",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d624c",
      "text": " ",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d624d",
      "text": " main = print $ take 10 $ dice_seq $ mkStdGen 1",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d624e",
      "text": " ||<",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d624f",
      "text": " </body>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6250",
      "text": " <comments>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6251",
      "text": " <comment>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6252",
      "text": " <username>TOKOROTEN</username>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6253",
      "text": " <body>並列化された世界においてモンテカルロ法は実行されており、並列化されたモンテカルロ西尾はランダムに駅を乗り過ごす。<br>モンテカルロ西尾は、基本的には正しい答えを選択するが、確率的に間違うので、今回のような事例が発生する。</body>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6254",
      "text": " <timestamp>1274706482</timestamp>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6255",
      "text": " </comment>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6256",
      "text": " </comments>",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6257",
      "text": "",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6258",
      "text": "[はてなダイアリー 2010-05-24 https://nishiohirokazu.hatenadiary.org/archive/2010/05/24]",
      "created": 1274626800,
      "updated": 1274626800,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}