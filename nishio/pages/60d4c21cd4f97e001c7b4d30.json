{
  "id": "60d4c21cd4f97e001c7b4d30",
  "title": "Rust",
  "created": 1624556065,
  "updated": 1675840509,
  "lines": [
    {
      "id": "60d4c21cd4f97e001c7b4d30",
      "text": "Rust",
      "userId": "582e63d27c56960011aff09e",
      "created": 1624556065,
      "updated": 1675759241
    },
    {
      "id": "63e22c38aff09e0000a9a79b",
      "text": "2015 Rust 1.0 リリース",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675766841,
      "updated": 1675766855
    },
    {
      "id": "63e20ad5aff09e000004dc80",
      "text": "Rust自体は2010年リリース",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758293,
      "updated": 1675758326
    },
    {
      "id": "63e20cc8aff09e0000d53d80",
      "text": "同時期にC++に起こったことを見るのが良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758792,
      "updated": 1675758813
    },
    {
      "id": "63e20af8aff09e0000d53d7a",
      "text": "　2011年のC++11",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758329,
      "updated": 1675758732
    },
    {
      "id": "63e20c8caff09e0000d53d7f",
      "text": " 　std::unique_ptr",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758732,
      "updated": 1675759331
    },
    {
      "id": "63e20acdaff09e000004dc7f",
      "text": " \t\t確保したメモリ領域を指すポインタがユニークであることが保証できるなら、スコープを抜ける時に解放して良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758285,
      "updated": 1675758735
    },
    {
      "id": "63e20b92aff09e0000d53d7c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758482,
      "updated": 1675758788
    },
    {
      "id": "63e20d0daff09e0000d53d81",
      "text": "C++は過去に書かれたソースコードとの互換性を保つことを重視している",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758861,
      "updated": 1675758885
    },
    {
      "id": "63e20d25aff09e0000d53d83",
      "text": "　なので「unique_ptrで統一した方がいいのになぁ」と思っても、そうやるわけにはいかない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758886,
      "updated": 1675759023
    },
    {
      "id": "63e20dafaff09e0000d53d84",
      "text": "　そこでRustが生まれた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759023,
      "updated": 1675759035
    },
    {
      "id": "63e20ac9aff09e000004dc7e",
      "text": "　[不自由な手法が好まれるようになる]の一種",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758282,
      "updated": 1675763171
    },
    {
      "id": "63e21de3aff09e00002efa37",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675763172,
      "updated": 1675763173
    },
    {
      "id": "60d4c271aff09e000026c2e5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1624556146,
      "updated": 1624556146
    },
    {
      "id": "63e20ac8aff09e000004dc7a",
      "text": "[コーディングを支える技術加筆案]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758281,
      "updated": 1675758281
    },
    {
      "id": "63e20e5faff09e0000d53d85",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759199,
      "updated": 1675759199
    },
    {
      "id": "63e20ac8aff09e000004dc7c",
      "text": "　GC以前、参照カウント、マーク&スイープ、あたりから書く？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675758281,
      "updated": 1675759204
    },
    {
      "id": "63e20ebdaff09e000004dc82",
      "text": "　\t参照カウントとshared_ptr",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759294,
      "updated": 1675759302
    },
    {
      "id": "63e20e64aff09e0000d53d87",
      "text": "　[ライフタイム]の概念？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759204,
      "updated": 1675759208
    },
    {
      "id": "63e20e67aff09e0000d53d88",
      "text": "　RAII・参照・借用チェッカー？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759208,
      "updated": 1675759392
    },
    {
      "id": "63e21008aff09e0000d53d89",
      "text": "　　話をする上でRAIIなしでは難しい気がするな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759624,
      "updated": 1675759642
    },
    {
      "id": "63e21019aff09e0000d53d8a",
      "text": "　　https://ja.wikipedia.org/wiki/RAII",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759642,
      "updated": 1675759644
    },
    {
      "id": "63e20e63aff09e0000d53d86",
      "text": "\tC++11 ムーブセマンティクス",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759203,
      "updated": 1675759333
    },
    {
      "id": "63e20ee6aff09e000004dc84",
      "text": "\t\t右辺値参照の話になると大部分の読者には行き過ぎかな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759334,
      "updated": 1675759363
    },
    {
      "id": "63e20ee5aff09e000004dc83",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759333,
      "updated": 1675759333
    },
    {
      "id": "63e21063aff09e0000d53d8b",
      "text": "　C++のメモリ管理と捉えると他の言語の人が興味を失う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759717,
      "updated": 1675759736
    },
    {
      "id": "63e21078aff09e0000d53d8d",
      "text": "　　「開けたら閉めろ」的な制約に関する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759736,
      "updated": 1675759749
    },
    {
      "id": "63e21091aff09e0000d53d8e",
      "text": "　　「電気をつけたら消せ」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759761,
      "updated": 1675759767
    },
    {
      "id": "63e21098aff09e0000d53d8f",
      "text": "　　　「でもまだ使ってる人がいるなら消してはいけない」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759768,
      "updated": 1675759780
    },
    {
      "id": "63e21064aff09e0000d53d8c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675759717,
      "updated": 1675759717
    },
    {
      "id": "63e211c5aff09e0000d53d90",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675760070,
      "updated": 1675760070
    },
    {
      "id": "63e32887aff09e0000a9a7df",
      "text": "https://doc.rust-jp.rs/book-ja/ch04-00-understanding-ownership.html",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831431,
      "updated": 1675831431
    },
    {
      "id": "63e32877aff09e0000a9a7dc",
      "text": ">所有権を理解する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831415,
      "updated": 1675831417
    },
    {
      "id": "63e32877aff09e0000a9a7dd",
      "text": ">所有権はRustの最もユニークな機能であり、これのおかげでガベージコレクタなしで安全性担保を行うことができるのです。 故に、Rustにおいて、所有権がどう動作するのかを理解するのは重要です。この章では、所有権以外にも、関連する機能を いくつか話していきます: 借用、スライス、そして、コンパイラがデータをメモリにどう配置するかです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831415,
      "updated": 1675831418
    },
    {
      "id": "63e3287aaff09e0000a9a7de",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831418,
      "updated": 1675831418
    },
    {
      "id": "63e32a25aff09e0000a9a7e0",
      "text": "(メモ: 余計なスコープを後で消す)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831846,
      "updated": 1675840509
    },
    {
      "id": "63e32a25aff09e0000a9a7e1",
      "text": "code:rust",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831846,
      "updated": 1675831848
    },
    {
      "id": "63e32a27aff09e0000a9a7e3",
      "text": " fn main() {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831848,
      "updated": 1675831848
    },
    {
      "id": "63e32a28aff09e0000a9a7e4",
      "text": "     {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831848,
      "updated": 1675831848
    },
    {
      "id": "63e32a28aff09e0000a9a7e5",
      "text": "         let x = 1;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831848,
      "updated": 1675831848
    },
    {
      "id": "63e32a28aff09e0000a9a7e6",
      "text": "         let y = x;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831848,
      "updated": 1675831848
    },
    {
      "id": "63e32a28aff09e0000a9a7e7",
      "text": "         println!(\"x: {}\", x);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831848,
      "updated": 1675831848
    },
    {
      "id": "63e32a28aff09e0000a9a7e8",
      "text": "         println!(\"y: {}\", y);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831848,
      "updated": 1675831848
    },
    {
      "id": "63e32a28aff09e0000a9a7e9",
      "text": "     }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831848,
      "updated": 1675831848
    },
    {
      "id": "63e32a28aff09e0000a9a7ea",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831848,
      "updated": 1675831848
    },
    {
      "id": "63e32a29aff09e0000a9a7eb",
      "text": "code:output",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831849,
      "updated": 1675831852
    },
    {
      "id": "63e32a2caff09e0000a9a7ec",
      "text": " x: 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831852,
      "updated": 1675831861
    },
    {
      "id": "63e32a35aff09e0000a9a7ed",
      "text": " y: 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831861,
      "updated": 1675831861
    },
    {
      "id": "63e32a26aff09e0000a9a7e2",
      "text": "code:rust",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831846,
      "updated": 1675831957
    },
    {
      "id": "63e32a94aff09e0000a9a7ef",
      "text": " fn main() {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831957,
      "updated": 1675831957
    },
    {
      "id": "63e32a95aff09e0000a9a7f0",
      "text": "     {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831957,
      "updated": 1675831957
    },
    {
      "id": "63e32a95aff09e0000a9a7f1",
      "text": "         let x = String::from(\"hello\");",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831957,
      "updated": 1675831957
    },
    {
      "id": "63e32a95aff09e0000a9a7f2",
      "text": "         let y = x;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831957,
      "updated": 1675831957
    },
    {
      "id": "63e32a95aff09e0000a9a7f3",
      "text": "         println!(\"x: {}\", x);  // NG",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831957,
      "updated": 1675831957
    },
    {
      "id": "63e32a95aff09e0000a9a7f4",
      "text": "         println!(\"y: {}\", y);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831957,
      "updated": 1675831957
    },
    {
      "id": "63e32a95aff09e0000a9a7f5",
      "text": "     }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831957,
      "updated": 1675831957
    },
    {
      "id": "63e32a95aff09e0000a9a7f6",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831957,
      "updated": 1675831957
    },
    {
      "id": "63e32a92aff09e0000a9a7ee",
      "text": "code:error",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831954,
      "updated": 1675831961
    },
    {
      "id": "63e32a99aff09e0000a9a7f8",
      "text": " error[E0382]: borrow of moved value: `x`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831961,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a7f9",
      "text": "  --> src/main.rs:5:27",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a7fa",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a7fb",
      "text": " 3 |         let x = String::from(\"hello\");",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a7fc",
      "text": "   |             - move occurs because `x` has type `String`, which does not implement the `Copy` trait",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a7fd",
      "text": " 4 |         let y = x;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a7fe",
      "text": "   |                 - value moved here",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a7ff",
      "text": " 5 |         println!(\"x: {}\", x);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a800",
      "text": "   |                           ^ value borrowed here after move",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a801",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a802",
      "text": "   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a803",
      "text": " help: consider cloning the value if the performance cost is acceptable",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a804",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a805",
      "text": " 4 |         let y = x.clone();",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32aadaff09e0000a9a806",
      "text": "   |                  ++++++++",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831981,
      "updated": 1675831981
    },
    {
      "id": "63e32a97aff09e0000a9a7f7",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675831960,
      "updated": 1675831960
    },
    {
      "id": "63e3458daff09e0000e8e464",
      "text": "C++だと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838861,
      "updated": 1675838864
    },
    {
      "id": "63e34590aff09e0000e8e466",
      "text": "code:cpp",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838864,
      "updated": 1675838867
    },
    {
      "id": "63e34592aff09e0000e8e467",
      "text": " #include <iostream>",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838867,
      "updated": 1675838871
    },
    {
      "id": "63e34596aff09e0000e8e468",
      "text": " #include <string> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838871,
      "updated": 1675838871
    },
    {
      "id": "63e34596aff09e0000e8e469",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838871,
      "updated": 1675838871
    },
    {
      "id": "63e34596aff09e0000e8e46a",
      "text": " int main () {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838871,
      "updated": 1675838871
    },
    {
      "id": "63e34596aff09e0000e8e46b",
      "text": "     std::string x(\"abc\");",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838871,
      "updated": 1675838871
    },
    {
      "id": "63e34596aff09e0000e8e46c",
      "text": "     std::string y;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838871,
      "updated": 1675838871
    },
    {
      "id": "63e34596aff09e0000e8e46d",
      "text": "     y = x;  // (*) copy",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838871,
      "updated": 1675838887
    },
    {
      "id": "63e34596aff09e0000e8e46e",
      "text": "     std::cout << x << std::endl;  // OK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838871,
      "updated": 1675838879
    },
    {
      "id": "63e3459baff09e0000e8e471",
      "text": "     std::cout << y << std::endl;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838875,
      "updated": 1675838875
    },
    {
      "id": "63e34596aff09e0000e8e470",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838871,
      "updated": 1675838871
    },
    {
      "id": "63e3458daff09e0000e8e465",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675838861,
      "updated": 1675838861
    },
    {
      "id": "63e34801aff09e0000e8e476",
      "text": "code:cpp",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839489,
      "updated": 1675839507
    },
    {
      "id": "63e3480eaff09e0000e8e477",
      "text": " #include <iostream>",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839503
    },
    {
      "id": "63e3480eaff09e0000e8e478",
      "text": " #include <string> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839503
    },
    {
      "id": "63e3480eaff09e0000e8e479",
      "text": " #include <memory> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839503
    },
    {
      "id": "63e3480eaff09e0000e8e47a",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839503
    },
    {
      "id": "63e3480eaff09e0000e8e47b",
      "text": " int main () {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839503
    },
    {
      "id": "63e3480eaff09e0000e8e47c",
      "text": "     std::unique_ptr<std::string> x = std::make_unique<std::string>(std::string(\"abc\"));",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839503
    },
    {
      "id": "63e3480eaff09e0000e8e47d",
      "text": "     std::unique_ptr<std::string> y;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839503
    },
    {
      "id": "63e3480eaff09e0000e8e47e",
      "text": "     std::cout << *x << std::endl;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839513
    },
    {
      "id": "63e3480eaff09e0000e8e481",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839503,
      "updated": 1675839503
    },
    {
      "id": "63e347dfaff09e0000e8e472",
      "text": "`no member named 'make_unique' in namespace 'std'`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839456,
      "updated": 1675839488
    },
    {
      "id": "63e347dfaff09e0000e8e473",
      "text": "`make_unique is an upcoming C++14 feature `",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839456,
      "updated": 1675839460
    },
    {
      "id": "63e347e0aff09e0000e8e474",
      "text": "\tこうか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839456,
      "updated": 1675839561
    },
    {
      "id": "63e34842aff09e0000e8e484",
      "text": "\t\t$ clang++ -std=c++14 t.cpp && ./a.out",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839555,
      "updated": 1675839555
    },
    {
      "id": "63e34815aff09e0000e8e482",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839510,
      "updated": 1675839510
    },
    {
      "id": "63e3497faff09e0000e8e48b",
      "text": "code:cpp",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839872,
      "updated": 1675839875
    },
    {
      "id": "63e34981aff09e0000e8e48c",
      "text": " #include <iostream>",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839873,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e48d",
      "text": " #include <string> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e48e",
      "text": " #include <memory> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e48f",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e490",
      "text": " int main () {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e491",
      "text": "     std::unique_ptr<std::string> x = std::make_unique<std::string>(std::string(\"abc\"));",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e492",
      "text": "     std::unique_ptr<std::string> y;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e493",
      "text": "     y = std::move(x);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e494",
      "text": "     std::cout << *y << std::endl;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e495",
      "text": "     std::cout << *x << std::endl;  // here",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34983aff09e0000e8e496",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839876,
      "updated": 1675839876
    },
    {
      "id": "63e34815aff09e0000e8e483",
      "text": "code:output",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839510,
      "updated": 1675839889
    },
    {
      "id": "63e34990aff09e0000e8e497",
      "text": " abc",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839889,
      "updated": 1675839889
    },
    {
      "id": "63e34991aff09e0000e8e498",
      "text": " Segmentation fault",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839889,
      "updated": 1675839889
    },
    {
      "id": "63e34972aff09e0000e8e485",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839858,
      "updated": 1675839858
    },
    {
      "id": "63e34972aff09e0000e8e486",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839858,
      "updated": 1675839894
    },
    {
      "id": "63e347e0aff09e0000e8e475",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675839456,
      "updated": 1675839456
    },
    {
      "id": "63e32b11aff09e0000a9a80a",
      "text": ">他の言語を触っている間に\"shallow copy\"と\"deep copy\"という用語を耳にしたことがあるなら、 データのコピーなしにポインタと長さ、許容量をコピーするという概念は、shallow copyのように思えるかもしれません。 ですが、コンパイラは最初の変数をも無効化するので、shallow copyと呼ばれる代わりに、 ムーブとして知られているわけです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832082,
      "updated": 1675832083
    },
    {
      "id": "63e32af6aff09e0000a9a807",
      "text": ">Rustでは、 自動的にデータの\"deep copy\"が行われることは絶対にないわけです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832055,
      "updated": 1675832056
    },
    {
      "id": "63e32af7aff09e0000a9a808",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832055,
      "updated": 1675832055
    },
    {
      "id": "63e32b14aff09e0000a9a80b",
      "text": "値がスタックに置かれてるかヒープに置かれてるかを意識する必要がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832084,
      "updated": 1675832179
    },
    {
      "id": "63e32b74aff09e00003bd3fe",
      "text": "　わかってる人にとってはさほど難しいことではない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832181,
      "updated": 1675832193
    },
    {
      "id": "63e32b81aff09e00003bd3ff",
      "text": "　今まで意識していなかった人にとっては、新しく意識することが増えるわけだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832193,
      "updated": 1675832219
    },
    {
      "id": "63e32b9baff09e00003bd400",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832219,
      "updated": 1675832219
    },
    {
      "id": "63e32b9baff09e00003bd401",
      "text": "code:rust",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832219,
      "updated": 1675832502
    },
    {
      "id": "63e32cb5aff09e0000a9a80c",
      "text": " fn main() {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a80d",
      "text": "     {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a80e",
      "text": "         let x = String::from(\"hello\");",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a80f",
      "text": "         foo(x);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a810",
      "text": "         println!(\"x: {}\", x);  // NG",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a811",
      "text": "     }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a812",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a813",
      "text": " fn foo(x: String){",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a814",
      "text": "     println!(\"x: {}\", x);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32cb6aff09e0000a9a815",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832502,
      "updated": 1675832502
    },
    {
      "id": "63e32b56aff09e00003bd3fd",
      "text": "code:error",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832150,
      "updated": 1675832506
    },
    {
      "id": "63e32cbaaff09e0000a9a817",
      "text": " error[E0382]: borrow of moved value: `x`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832507,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a818",
      "text": "  --> src/main.rs:5:27",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a819",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a81a",
      "text": " 3 |         let x = String::from(\"hello\");",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a81b",
      "text": "   |             - move occurs because `x` has type `String`, which does not implement the `Copy` trait",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a81c",
      "text": " 4 |         foo(x);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a81d",
      "text": "   |             - value moved here",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a81e",
      "text": " 5 |         println!(\"x: {}\", x);  // NG",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a81f",
      "text": "   |                           ^ value borrowed here after move",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a820",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a821",
      "text": " note: consider changing this parameter type in function `foo` to borrow instead if owning the value isn't necessary",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a822",
      "text": "  --> src/main.rs:8:11",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a823",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a824",
      "text": " 8 | fn foo(x: String){",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a825",
      "text": "   |    ---    ^^^^^^ this parameter takes ownership of the value",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a826",
      "text": "   |    |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a827",
      "text": "   |    in this function",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a828",
      "text": "   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a829",
      "text": " help: consider cloning the value if the performance cost is acceptable",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a82a",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a82b",
      "text": " 4 |         foo(x.clone());",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a82c",
      "text": "   |              ++++++++",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832523
    },
    {
      "id": "63e32ccbaff09e0000a9a82d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832523,
      "updated": 1675832524
    },
    {
      "id": "63e32d2faff09e0000a9a82e",
      "text": ">所有権を取り、またその所有権を戻す、ということを全ての関数でしていたら、ちょっとめんどくさいですね。 関数に値は使わせるものの所有権を取らないようにさせるにはどうするべきでしょうか。 ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832624,
      "updated": 1675832624
    },
    {
      "id": "63e32d30aff09e0000a9a82f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832624,
      "updated": 1675832624
    },
    {
      "id": "63e32d30aff09e0000a9a830",
      "text": "code:rust",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832624,
      "updated": 1675832682
    },
    {
      "id": "63e32d6aaff09e0000a9a831",
      "text": " fn main() {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a832",
      "text": "     {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a833",
      "text": "         let x = String::from(\"hello\");",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a834",
      "text": "         foo(&x);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a835",
      "text": "         println!(\"x: {}\", x);  // OK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a836",
      "text": "     }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a837",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a838",
      "text": " fn foo(x: &String){",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a839",
      "text": "     println!(\"x: {}\", x);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32d6baff09e0000a9a83a",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832683,
      "updated": 1675832683
    },
    {
      "id": "63e32cb8aff09e0000a9a816",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832505,
      "updated": 1675832505
    },
    {
      "id": "63e32de0aff09e0000a9a83b",
      "text": ">s1の値を参照する参照を生成することができますが、これを所有することはありません。 所有してないということは、指している値は、参照がスコープを抜けてもドロップされないということです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832800,
      "updated": 1675832801
    },
    {
      "id": "63e32de2aff09e0000a9a83d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832802,
      "updated": 1675832802
    },
    {
      "id": "63e32de2aff09e0000a9a83e",
      "text": "`cannot borrow `s` as mutable more than once at a time`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832802,
      "updated": 1675832844
    },
    {
      "id": "63e32de1aff09e0000a9a83c",
      "text": ">これは、新たなRustaceanにとっては、 壁です。なぜなら、多くの言語では、いつでも好きな時に可変化できるからです。...この制約がある利点は、コンパイラがコンパイル時にデータ競合を防ぐことができる点です。 データ競合とは、競合条件と類似していて、これら3つの振る舞いが起きる時に発生します:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832801,
      "updated": 1675832939
    },
    {
      "id": "63e32e5faff09e0000a9a843",
      "text": "> 2つ以上のポインタが同じデータに同時にアクセスする。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832928,
      "updated": 1675832928
    },
    {
      "id": "63e32e5faff09e0000a9a844",
      "text": "> 少なくとも一つのポインタがデータに書き込みを行っている。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832928,
      "updated": 1675832928
    },
    {
      "id": "63e32e5faff09e0000a9a845",
      "text": "> データへのアクセスを同期する機構が使用されていない。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832928,
      "updated": 1675832928
    },
    {
      "id": "63e32e5faff09e0000a9a846",
      "text": "> データ競合は未定義の振る舞いを引き起こし、実行時に追いかけようとした時に特定し解決するのが難しい問題です。 しかし、Rustは、データ競合が起こるコードをコンパイルさえしないので、この問題が発生しないようにしてくれるわけです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832928,
      "updated": 1675832928
    },
    {
      "id": "63e32e5faff09e0000a9a83f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832928,
      "updated": 1675832928
    },
    {
      "id": "63e32e74aff09e0000a9a847",
      "text": "`cannot borrow `s` as mutable because it is also borrowed as immutable`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832949,
      "updated": 1675832978
    },
    {
      "id": "63e32e8eaff09e0000a9a848",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675832975,
      "updated": 1675832975
    },
    {
      "id": "63e32f2faff09e0000a9a858",
      "text": "code:rust",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833136,
      "updated": 1675833138
    },
    {
      "id": "63e32f31aff09e0000a9a859",
      "text": " fn main() {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833138,
      "updated": 1675833148
    },
    {
      "id": "63e32f3baff09e0000a9a85a",
      "text": "     {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833148,
      "updated": 1675833148
    },
    {
      "id": "63e32f3baff09e0000a9a85b",
      "text": "         foo();",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833148,
      "updated": 1675833148
    },
    {
      "id": "63e32f3baff09e0000a9a85c",
      "text": "     }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833148,
      "updated": 1675833148
    },
    {
      "id": "63e32f3baff09e0000a9a85d",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833148,
      "updated": 1675833148
    },
    {
      "id": "63e32f3baff09e0000a9a85e",
      "text": " fn foo() -> &String{",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833148,
      "updated": 1675833148
    },
    {
      "id": "63e32f3baff09e0000a9a85f",
      "text": "     let x = String::from(\"hello\");",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833148,
      "updated": 1675833148
    },
    {
      "id": "63e32f3baff09e0000a9a860",
      "text": "     &x",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833148,
      "updated": 1675833148
    },
    {
      "id": "63e32f3baff09e0000a9a861",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833148,
      "updated": 1675833148
    },
    {
      "id": "63e32f24aff09e0000a9a84b",
      "text": "code:error",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833125,
      "updated": 1675833135
    },
    {
      "id": "63e32f28aff09e0000a9a84d",
      "text": " error[E0106]: missing lifetime specifier",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833128,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a84e",
      "text": "  --> src/main.rs:6:13",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a84f",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a850",
      "text": " 6 | fn foo() -> &String{",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a851",
      "text": "   |             ^ expected named lifetime parameter",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a852",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a853",
      "text": "   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a854",
      "text": " help: consider using the `'static` lifetime",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a855",
      "text": "   |",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a856",
      "text": " 6 | fn foo() -> &'static String{",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f2aaff09e0000a9a857",
      "text": "   |              +++++++",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833131,
      "updated": 1675833131
    },
    {
      "id": "63e32f27aff09e0000a9a84c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1675833127,
      "updated": 1675833127
    }
  ]
}