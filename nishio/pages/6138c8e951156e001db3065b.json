{
  "id": "6138c8e951156e001db3065b",
  "title": "プログラミング言語で「しかし」",
  "created": 1631111402,
  "updated": 1631112254,
  "lines": [
    {
      "id": "6138c8e951156e001db3065b",
      "text": "プログラミング言語で「しかし」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111402,
      "updated": 1631112254
    },
    {
      "id": "6138c8efaff09e0000fbf373",
      "text": ">[rashita2 https://twitter.com/rashita2/status/1435434283481534467]: 考えてみると、プログラミングにおいてはある行と次の行が逆接でつながっている、ということはない。ある意味すべてが順接だし、それはつまり順接ですらない（実行順に並んでいるだけ）とも言える。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111408,
      "updated": 1631111756
    },
    {
      "id": "6138c9a0aff09e0000fbf375",
      "text": "\t>[rashita2 https://twitter.com/rashita2/status/1435434493247037441]: if 文もあるが、それは実行順（行）の制御であって、行と行の「内容」が順接ではない形で表現されているわけではない。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111739
    },
    {
      "id": "6138c9a0aff09e0000fbf377",
      "text": "\t>[rashita2 https://twitter.com/rashita2/status/1435434709652180993]: たぶんこの話と、[パラグラフ・ライティング]の話はつながっているのではないか。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111744
    },
    {
      "id": "6138c9a0aff09e0000fbf378",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf379",
      "text": ">[nishio https://twitter.com/nishio/status/1435438293827522567]: 「プログラミング言語で『しかし』をどう表現するか」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf37a",
      "text": ">たしかに下記だと「しかし」ではなく「ただし」だしな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138ca0baff09e0000fbf395",
      "text": "code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111691,
      "updated": 1631111694
    },
    {
      "id": "6138ca0eaff09e0000fbf396",
      "text": " let x = 0;  // xは0である",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111695,
      "updated": 1631111771
    },
    {
      "id": "6138ca13aff09e0000fbf397",
      "text": " if(some_condition()){ // ただしある条件が満たされたときは",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111700,
      "updated": 1631111794
    },
    {
      "id": "6138ca1aaff09e0000fbf398",
      "text": " \tx = 1; // xは1である",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111706,
      "updated": 1631111800
    },
    {
      "id": "6138ca1daff09e0000fbf399",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111709,
      "updated": 1631111711
    },
    {
      "id": "6138ca20aff09e0000fbf39a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111712,
      "updated": 1631111712
    },
    {
      "id": "6138c9a0aff09e0000fbf37e",
      "text": ">[nishio https://twitter.com/nishio/status/1435438869441224713]: 自然言語になぜ「しかし」が必要なのか。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf37f",
      "text": ">「Aである、しかしBである、なのでCである」って展開はプログラミング言語で書くときには「Cである」だけ書いてAとBはコメントとかになりそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf380",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf381",
      "text": ">[dankogai https://twitter.com/dankogai/status/1435439602622287874]: perl には \"0 but true\" という表現があって、数値として評価すると0だが真偽値だと真になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111673
    },
    {
      "id": "6138c9a0aff09e0000fbf383",
      "text": "\t>[nishio https://twitter.com/nishio/status/1435449873579474944]: それってx but yが「数値としてはxだが真偽値としてはyになるオブジェクトを作る二項演算」ということですか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111674
    },
    {
      "id": "6138c9a0aff09e0000fbf385",
      "text": "\t>[dankogai https://twitter.com/dankogai/status/1435450846808973315]: 演算ではなく(スケーラー)値。もちろん文字列としては引用符の中身の通り。値の型は評価時に定まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111676
    },
    {
      "id": "6138c9a0aff09e0000fbf386",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf387",
      "text": ">[torus https://twitter.com/torus/status/1435566883927777280]: しかしって、人に指示する時には使わないから命令型プログラミングでは使いどころがなさそう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf388",
      "text": ">でも宣言型の言語ならありかな。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf389",
      "text": ">Haskell の関数は最も一般的なケースを最後に書くけど、順番を逆にして 2 行目以降にしかしをつけるとか。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111683
    },
    {
      "id": "6138c9a0aff09e0000fbf38b",
      "text": ">[torus https://twitter.com/torus/status/1435589050396602368]: 人に命令するのにやたらと「とは言え」っていう人いたな。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf38c",
      "text": ">無理のないペースで進めてください。とは言え今が正念場なので週末はないと思ってください。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf38d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf38e",
      "text": ">[arton https://twitter.com/arton/status/1435570684785152001]: 今日なら会える。しかし今日以外は無理。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf38f",
      "text": ">today? ? i.can : i.cant",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138c9a0aff09e0000fbf390",
      "text": ">しかしは「:」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111818
    },
    {
      "id": "6138ca8baff09e0000fbf39b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111819,
      "updated": 1631111819
    },
    {
      "id": "6138c9a0aff09e0000fbf392",
      "text": ">[takiuchi https://twitter.com/takiuchi/status/1435574269606387713]: 例外処理じゃない？ ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111824
    },
    {
      "id": "6138ca90aff09e0000fbf39c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111824,
      "updated": 1631111824
    },
    {
      "id": "6138c9a0aff09e0000fbf394",
      "text": ">[nishio https://twitter.com/nishio/status/1435611140860510213]: たしかに(ifではなく) elseやcatchなら「しかし」っぽさがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111584,
      "updated": 1631111584
    },
    {
      "id": "6138ca97aff09e0000fbf39d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111832,
      "updated": 1631111832
    },
    {
      "id": "6138ca97aff09e0000fbf39e",
      "text": "code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111832,
      "updated": 1631111837
    },
    {
      "id": "6138ca9daff09e0000fbf3a0",
      "text": "\tif (you.age >= 18) {  // あなたが18歳以上なら",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111838,
      "updated": 1631112203
    },
    {
      "id": "6138cb3baff09e0000fbf3a4",
      "text": "   you.watch(this_site);  // あなたはこのサイトを見る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111995,
      "updated": 1631112227
    },
    {
      "id": "6138cb3baff09e0000fbf3a5",
      "text": " } else {  // しかしそうでないなら",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111995,
      "updated": 1631112205
    },
    {
      "id": "6138cb3baff09e0000fbf3a6",
      "text": "   return;  // 帰れ！",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111995,
      "updated": 1631112207
    },
    {
      "id": "6138cb3baff09e0000fbf3a7",
      "text": " }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111995,
      "updated": 1631111995
    },
    {
      "id": "6138cae7aff09e0000fbf3a3",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1631111912,
      "updated": 1631111912
    }
  ]
}