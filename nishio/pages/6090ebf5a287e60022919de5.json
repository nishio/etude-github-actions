{
  "id": "6090ebf5a287e60022919de5",
  "title": "Hatena2008-02-13",
  "created": 1202828400,
  "updated": 1202828400,
  "lines": [
    {
      "id": "6090ec1baff09e00003c7054",
      "text": "Hatena2008-02-13",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7055",
      "text": "code:hatena",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7056",
      "text": " <body>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7057",
      "text": " *1202871697*今日は7時に起きた",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7058",
      "text": " そしていつもより20分程度早く出社した。ネットしなければ2時間早く出社できたんだけど。ネットしつつ、一段落したので出社してもまだいつもより早い。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7059",
      "text": " 健全な精神はまず健全な生活リズムから。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c705a",
      "text": " 健全な精神よ健全な肉体に宿れかし。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c705b",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c705c",
      "text": " -----",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c705d",
      "text": " いまこう書いていて「健全な精神が健全な肉体に宿るといいのになぁ」という意味だったのを確認しようと思って検索したら「「健全な精神は健全な肉体に宿る」という格言の間違いを指摘した玉木正之氏が「ユウェナリス( Juvenalis 60-136 )は若者が体を鍛えるだけで勉強しないことを嘆き、『健全な肉体には健全な精神も！』（肉体だけ鍛えてもダメ！）といった」のだと書いているのを見て、なるほどそうだったのかと、久しぶりに手もとにある原文をひもといてみたが、どうもそうでもなさそうなのでここで報告したい」という<a href=\"http://www.geocities.jp/hgonzaemon/intro_juvenal_intro.html\">文章</a>を発見。ふむふむ。原文を読もうと思ったけど挫折。http://www.thelatinlibrary.com/juvenal/10.shtml を mens sana in corpore sanoで検索すると該当箇所が見つかるよ。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c705e",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c705f",
      "text": " *1202892802*MySpaceとfacebookの違いについて",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7060",
      "text": " facebookはパスワードの強度を表示してくれるのに対して、MySpaceは10文字以下とか言うとんでもない制限がかかっている。それなのに数字記号と英字のそれぞれが含まれないといけない。きっと「普段使っているパスワードじゃダメだからちょっと変えて作ったんだけど忘れてしまった」って人が続出するに違いない。「忘れないように紙にメモしてデスクトップに貼る」って人も出るに違いない。MySpace始める前から嫌いになる人もいるにちがいない。とりあえずここに一人いる。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7061",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7062",
      "text": " ------",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7063",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7064",
      "text": " うがぁっ、MySpace、パスワードを平文メールで送ってきやがった！！！あｓｄｆｇふじこｌｐ！",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7065",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7066",
      "text": " *1202894504*確定申告",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7067",
      "text": " あ、いま思い出した。そして調べてみた。船井若手奨励賞の受賞が平成19年3月28日付けだから、賞金＝雑所得に対する所得税を今申告して払わないといけないんだよね。いくらもらったのか忘れたけど…。20万くらいかなぁ。そして税率は20%かなぁ。4万払うのかなぁ。こういうの全部税務署に行って聞けばいいんだろうか。とりあえず「確定申告」って書いてある雑誌がいっぱい売ってるから1冊買って帰るかなぁ。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7068",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7069",
      "text": " http://www.funai.or.jp/sinko/ipsj.html とりあえず20万であることは確認した。まぁ銀行に振り込まれたのでまったくもらった実感がないけど、税金は払わないといけない。国民の義務。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c706a",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c706b",
      "text": " *1202897430*del.icio.us",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c706c",
      "text": " del.icio.usがソーシャルブックマークなんだな。よく「diggってdiggって」って言われるからdiggがはてなブックマークに相当するものなのかと思いこんでいたよ。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c706d",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c706e",
      "text": " *1202897968*2月26日　Asiajin Meeting Tokyo #1",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c706f",
      "text": " サイボウズラボでAsiajin Meeting Tokyo #1ってのがあるのだけど↓",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7070",
      "text": " <a href=\"http://asiajin.com/blog/2008/02/12/asiasin-meeting-tokyo-1/\">Asiajin Meeting Tokyo #1 on 26th(Tue), Feb. | Asiajin</a>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7071",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7072",
      "text": " それに参加して話します、ってのをブログに書いた↓",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7073",
      "text": " <a href=\"http://nishiohirokazu.blogspot.com/2008/02/ill-speak-on-asiajin-meeting-tokyo-1.html\">NISHIO Hirokazu's blog: I'll speak on Asiajin Meeting Tokyo #1</a>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7074",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7075",
      "text": " 口頭でしか参加しますって言ってないけど大丈夫かな？",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7076",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7077",
      "text": " *1202899095*ちなみに",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7078",
      "text": " MySpaceとdel.icio.usとfacebookのアカウントを作った。それぞれへのリンクはここに書いた→　http://www.nishiohirokazu.org/",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7079",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c707a",
      "text": " いきさつに関してはここに書いた→　<a href=\"http://nishiohirokazu.vox.com/library/post/hi-long-time-no-see.html\">Hi, long time no see! - Vox</a>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c707b",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c707c",
      "text": " 洋物ウェブサービスには顔写真を晒す文化があるようなので近いうちにかっこいい写真を作る。(「撮る」じゃなくて「作る」なのは以下略)",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c707d",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c707e",
      "text": " *1202901917*ふと気がついた",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c707f",
      "text": " はてブされるけどはてスタされない記事と、はてスタされるけどはてブされない記事と、どう違うんだろう。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7080",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7081",
      "text": " -----",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7082",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7083",
      "text": " >>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7084",
      "text": " kazuhooku ブクマは理性、スターは感情",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7085",
      "text": " <<",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7086",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7087",
      "text": " なるほど、それはあるかも。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7088",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7089",
      "text": " *1202903913*速い",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c708a",
      "text": " ujihisaはとても速い(facebookのフレンド追加的な意味で)",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c708b",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c708c",
      "text": " で彼のフレンドを見たら知っている顔がたくさんあったから追加しようかと思ったけど、毎回capchaを要求されるので心が折れた。プログラマは単調な作業を3回繰り返せない。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c708d",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c708e",
      "text": " *1202907958*不快かどうかは主観なわけで。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c708f",
      "text": " 一般論として、人によっては不快に思い、別の人は不快に思わないような種類の行動をする人Xが近くにいたとする。そして誰一人「その行動は人を不快にするかも知れませんよ」と忠告しないので、Xはその行動を続けたとする。ある日ある人YがXに「お前迷惑だよ」と口にしたとたんに、「俺も前から迷惑だと思ってたんだよね」「俺もー俺もー」「マナーがなってないよねー」「俺はずっと無視してたから」「お前○○するなら先に××するのが筋だろ」「大体お前の行動は紛らわしいから背中に△△って書いて貼っておけよ」と何人もで一斉に責め立てたとする。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7090",
      "text": " 一人目は単なる指摘だから構わないが、二人目以降はもう少し気を使った方がいいのではないかと思う。Xの気持ちも少しは考えてあげるべきじゃないかと思う。そして何人もで一人の人間を叩く流れができた後でやってきて、自分が反論されるリスクを負うこともなく大勢の中の一人として石を投げて優越感を感じるような行為は、僕をとても不快にさせる。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7091",
      "text": " 少なくともここに一人不快に感じている人がいる、ということに気づいていない第二のXがいるかも知れないのであえて書いておいた。一般論なのでリンクは貼らない。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7092",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7093",
      "text": " *1202912207*[Python]Bloom filterのシンプルな実装",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7094",
      "text": " <a href=\"http://en.wikipedia.org/wiki/Bloom_filter\">Bloom filter</a>は指定されたものがリストに含まれるならばTrue、含まれないならばFalseを返すようなデータ構造である。もちろん、単純にリストを保持するだけでもリストに含まれるかどうかの判定は可能だが、Bloom filterのメリットはオリジナルのリストを保存しておく必要がないという点にある。そのためメモリの消費量を格段に節約することができる。しかし、そのメモリ効率の代償として多少正確性が失われる。Bloom filterは指定されたものがリストにない場合でもたまにTrueを返すのだ。しかし、間違ってTrueを返す確率はあらかじめ計算することができるので、誤差が許容できる範囲であれば問題なく使うことができる。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7095",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7096",
      "text": " 下記はアルゴリズム勉強用のシンプルな実装である。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7097",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7098",
      "text": " >|python|",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7099",
      "text": " SIZE = 1987",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c709a",
      "text": " def hashes(s):",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c709b",
      "text": "     xs = [0, 0, 0]",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c709c",
      "text": "     for c in s:",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c709d",
      "text": "         o = ord(c)",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c709e",
      "text": "         xs[0] = xs[0] * 137 + o",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c709f",
      "text": "         xs[1] = xs[1] * 69 + o",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a0",
      "text": "         xs[2] = xs[2] * 545 + o",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a1",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a2",
      "text": "     return [x % SIZE for x in xs]",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a3",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a4",
      "text": " class BloomFilter(object):",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a5",
      "text": "     def __init__(self):",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a6",
      "text": "         self.bitarray = [0] * SIZE",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a7",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a8",
      "text": "     def add(self, s):",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70a9",
      "text": "         for x in hashes(s):",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70aa",
      "text": "             self.bitarray[x] = 1",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ab",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ac",
      "text": "     def query(self, s):",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ad",
      "text": "         return all(",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ae",
      "text": "             self.bitarray[x] == 1",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70af",
      "text": "             for x in hashes(s))",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b0",
      "text": " ||<",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b1",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b2",
      "text": " hashes関数は3つの異なるハッシュ関数を使って3つのハッシュ値を計算して返す。BloomFilterはビットアレイを持つが、ここでは実装の簡潔さのためにリストで代用している。これはBloom filterのメリットを大きく損なうので、実用的な目的でこのコードを使ってはいけない。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b3",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b4",
      "text": " 下記はPythonのインタラクティブシェルで試した結果である。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b5",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b6",
      "text": " >|python|",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b7",
      "text": " >>> bf = BloomFilter()",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b8",
      "text": " >>> bf.add(\"hoge\")",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70b9",
      "text": " >>> bf.query(\"hoge\")",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ba",
      "text": " True",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70bb",
      "text": " >>> bf.query(\"hoga\")",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70bc",
      "text": " False",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70bd",
      "text": " >>> bf.add(\"foo\")",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70be",
      "text": " >>> bf.add(\"bar\")",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70bf",
      "text": " >>> bf.add(\"baz\")",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c0",
      "text": " >>> bf.query(\"hoga\")",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c1",
      "text": " False",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c2",
      "text": " >>> bf.query(\"foo\")",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c3",
      "text": " True",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c4",
      "text": " ||<",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c5",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c6",
      "text": " 文字列がaddされたとき、Bloom filterはハッシュ値を計算して、ビットアレイの対応する場所に1を書き込む。文字列がqueryされたときは、またハッシュ値を計算して、対応する場所がすべて1である場合に限りTrueを返す。想像できると思うが、文字列をどんどんaddしていくと、ビットアレイはどんどん1だらけになり、BloomFilterはTrueと答えやすくなる。間違えてTrueと答える確率は簡単に推定できる。ビットアレイのサイズをm、ハッシュ関数の数をk、追加する文字列の数をnとすると、問題の確率は(1 - exp(-float(k * n) / m)) ** kになる。このコードの場合であれば、m は 1987、k は 3である。なのでnが100の時、確率は0.003、nが1000の時、確率は0.47になる。1000個の文字列をaddしたいならビットアレイのサイズを増やす必要がある。",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c7",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c8",
      "text": " You can see the English version here: <a href=\"http://nishiohirokazu.blogspot.com/2008/02/pythonsimple-impl-of-bloom-filter.html\">NISHIO Hirokazu's blog: [Python]Simple Impl. of Bloom Filter</a>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70c9",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ca",
      "text": " *1202913016*青春",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70cb",
      "text": " RE:なんか、青春っぽいことしたいよねー - IT戦記 - UK is not Britonish - ハチロク世代",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70cc",
      "text": " http://generation1986.g.hatena.ne.jp/ukstudio/20080213/1202865198",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70cd",
      "text": " >>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ce",
      "text": " (開発)合宿で深夜に「お前、あいつ(言語)のどこが好きなんだよー」と語り合う青春",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70cf",
      "text": " <<",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d0",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d1",
      "text": " A:「や、やっぱインデントかなー」",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d2",
      "text": " B:「えー、インデントのどこがいいんだよー。ブロックの終わりにendないのキモイ」",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d3",
      "text": " A:「なな、なんだと、Pythonたんをバカにするのか！おまえこそendのどこがいいんだよ、beginがないくせにendだけあるとかわけわかんないよ！」",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d4",
      "text": " B:「なんだよー、Pascal脳かー。やれやれこれだからPの付くやつは～」",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d5",
      "text": " C:「おまえ今Perlをバカにしたな？(--#)」",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d6",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d7",
      "text": " こうですか？わかりません！(＞＜)",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d8",
      "text": " # 続けると単純に言語間フレームを巻き起こしそうな気配がするので以下略",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70d9",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70da",
      "text": " *1202920234*facebook",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70db",
      "text": " >>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70dc",
      "text": " Here are some friends of your friends that you might know",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70dd",
      "text": " <<",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70de",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70df",
      "text": " おお、7人中6人は知ってる。takesakoさんやhigeponさんやdankogaiだんが含まれている。でもkoizukaさんとは面識がないはずなのにどういう基準でsuggestされたんだろう？",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e0",
      "text": " ",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e1",
      "text": " *1202920299*しまった",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e2",
      "text": " パソコンの横に置いてあった干し芋を食べてしまった。9時回っているのに！",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e3",
      "text": " </body>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e4",
      "text": " <comments>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e5",
      "text": " <comment>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e6",
      "text": " <username>ujihisa</username>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e7",
      "text": " <body>うふふ</body>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e8",
      "text": " <timestamp>1202956777</timestamp>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70e9",
      "text": " </comment>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ea",
      "text": " <comment>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70eb",
      "text": " <username>ujihisa</username>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ec",
      "text": " <body>HINT: ujihisaのfriend</body>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ed",
      "text": " <timestamp>1202956833</timestamp>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ee",
      "text": " </comment>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70ef",
      "text": " </comments>",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70f0",
      "text": "",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c70f1",
      "text": "[はてなダイアリー 2008-02-13 https://nishiohirokazu.hatenadiary.org/archive/2008/02/13]",
      "created": 1202828400,
      "updated": 1202828400,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}