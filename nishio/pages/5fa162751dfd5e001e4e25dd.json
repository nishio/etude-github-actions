{
  "id": "5fa162751dfd5e001e4e25dd",
  "title": "abc027_c",
  "created": 1604412054,
  "updated": 1604413239,
  "lines": [
    {
      "id": "5fa162751dfd5e001e4e25dd",
      "text": "abc027_c",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412054,
      "updated": 1604412066
    },
    {
      "id": "5fa16295aff09e0000ea9850",
      "text": "https://atcoder.jp/contests/abc027/tasks/abc027_c",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412054,
      "updated": 1604412062
    },
    {
      "id": "5fa1629daff09e0000ea9851",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412062,
      "updated": 1604413151
    },
    {
      "id": "5fa162a6aff09e0000ea9853",
      "text": " 　こういう問題を考える時にGrundy数を使うと見通しが良くなったりするのだろうか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412070,
      "updated": 1604413151
    },
    {
      "id": "5fa162c6aff09e0000ea9854",
      "text": " 　二進法で考えると毎ターン1ビットずつシフトしていくので、桁数がNのそれを超えるタイミングは割とすぐくる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412102,
      "updated": 1604413151
    },
    {
      "id": "5fa16417aff09e0000ea9855",
      "text": " 　例えば100の時、3ターン後には確実に終わる、奇数手番は負けたくないので1ターン目にインクリメントすることで1ターン早く終結させる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412439,
      "updated": 1604413151
    },
    {
      "id": "5fa16496aff09e0000ea9856",
      "text": " 　　偶数手番には回避不能",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412566,
      "updated": 1604413151
    },
    {
      "id": "5fa164a4aff09e0000ea9857",
      "text": " 　110の場合、奇数手番がインクリメントしても超えることができない、偶数手番は当然協力しない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412580,
      "updated": 1604413151
    },
    {
      "id": "5fa164ddaff09e0000ea9858",
      "text": " 　1000の時、4ターンで終わる、偶数手番は負けたくないので適当にインクリメントして1ターン早く終わらせる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412637,
      "updated": 1604413151
    },
    {
      "id": "5fa1654caff09e0000ea9859",
      "text": " 　というわけでNがn桁の場合に、基本はnターンで終わるので、それが嫌な側がインクリメントすることでNより大きくして1ターン早く終わらせられるか、の判定になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412748,
      "updated": 1604413151
    },
    {
      "id": "5fa1659eaff09e0000ea985a",
      "text": " 　負ける側は自分側ビットのうちNで1なものは全部1にした上で最低一つの0を1にしなければならない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412830,
      "updated": 1604413151
    },
    {
      "id": "5fa165f8aff09e0000ea985b",
      "text": " 　勝つ側はNで1であるビットを0にすることができる、これが上記の1になるビットよりも左であれば相手手番はNより大きくすることは不可能になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412920,
      "updated": 1604413151
    },
    {
      "id": "5fa162a5aff09e0000ea9852",
      "text": "　公式解説OK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604412070,
      "updated": 1604413166
    },
    {
      "id": "5fa166eeaff09e0000ea985d",
      "text": "　 整理すると「Nの二進法表記の桁数で、どちらのプレイヤーが数を増やしたいかが決まる」「それがわかればlog Nステップのシミュレーションで答えが出る」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604413167,
      "updated": 1604413239
    },
    {
      "id": "5fa166eaaff09e0000ea985c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604413162,
      "updated": 1604413162
    }
  ]
}