{
  "id": "6090ebf7a287e60022919e56",
  "title": "Hatena2008-06-06",
  "created": 1212678000,
  "updated": 1212678000,
  "lines": [
    {
      "id": "6090ec1daff09e00003ca723",
      "text": "Hatena2008-06-06",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca724",
      "text": "code:hatena",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca725",
      "text": " <body>",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca726",
      "text": " *1212739424*[Python]RubyのStruct",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca727",
      "text": " RubyのStruct",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca728",
      "text": " >|ruby|",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca729",
      "text": " irb(main):018:0> FooBar = Struct.new(:foo, :bar)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca72a",
      "text": " => FooBar",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca72b",
      "text": " irb(main):019:0> FooBar.new(1, 2)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca72c",
      "text": " => #<struct FooBar foo=1, bar=2>",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca72d",
      "text": " irb(main):020:0> _.foo",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca72e",
      "text": " => 1",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca72f",
      "text": " ||<",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca730",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca731",
      "text": " へえー、これは便利。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca732",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca733",
      "text": " Pythonで作ってみた。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca734",
      "text": " >|python|",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca735",
      "text": " >>> def Struct(*keys):",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca736",
      "text": " \tclass _Struct(object):",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca737",
      "text": " \t    def __init__(self, *values):",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca738",
      "text": " \t\tself.__dict__.update(zip(keys, values))",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca739",
      "text": " \treturn _Struct",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca73a",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca73b",
      "text": " \t",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca73c",
      "text": " >>> Struct(\"foo\", \"bar\")",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca73d",
      "text": " <class '__main__._Struct'>",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca73e",
      "text": " >>> FooBar = Struct(\"foo\", \"bar\")",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca73f",
      "text": " >>> FooBar(1, 2)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca740",
      "text": " <__main__._Struct object at 0x01494E90>",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca741",
      "text": " >>> _.foo",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca742",
      "text": " 1",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca743",
      "text": " ||<",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca744",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca745",
      "text": " できたできた。こういうものを入れておくマイモジュールとか作ろうかなぁ。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca746",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca747",
      "text": " *1212743562*RubyとPythonの流れる方向の違い",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca748",
      "text": " >|ruby|",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca749",
      "text": " irb(main):021:0> s = \"123 456 789\"",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca74a",
      "text": " => \"123 456 789\"",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca74b",
      "text": " irb(main):022:0> s.scan(/\\d+/)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca74c",
      "text": " => [\"123\", \"456\", \"789\"]",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca74d",
      "text": " irb(main):024:0> s.scan(/\\d+/).map{|x| x.to_i + 1}",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca74e",
      "text": " => [124, 457, 790]",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca74f",
      "text": " ||<",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca750",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca751",
      "text": " >|python|",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca752",
      "text": " >>> s = \"123 456 789\"",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca753",
      "text": " >>> import re",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca754",
      "text": " >>> re.findall(r\"\\d+\", s)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca755",
      "text": " ['123', '456', '789']",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca756",
      "text": " >>> map(lambda x: int(x) + 1, re.findall(r\"\\d+\", s))",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca757",
      "text": " [124, 457, 790]",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca758",
      "text": " ||<",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca759",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca75a",
      "text": " 右に流れていくRubyがちょっとうらやましい。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca75b",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca75c",
      "text": " *1212754828*[Grass]草植えてみましたｗＷＷｗｗｗｗ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca75d",
      "text": " >||",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca75e",
      "text": " wWWWwWWWWwv wWWwWWWwv wWWwWWWwv wWWwWWWwv wWWwWWWwv wWWwWWWwv",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca75f",
      "text": " wWWwWWWwv wWWWwWWWWwv wWWwwwwwwwwwwwwWWWWWWwWWWWWWwWWWWWWWWWwWWWWWWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca760",
      "text": " WWWWWWwWWWWWWWWWWWWWwWWWWWWWWWWWWWWWwwWWWWWWWWWWWWWWwWWWWWWWWWWWWWWWww",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca761",
      "text": " wwwWWWWWWWWWWWWWWWWwwwwwwwWWWWWWWWWWWWWWWWWWwWWWWWWWWWWWWWWWWWWWWwWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca762",
      "text": " WWWWWWWWWWWWWWWWWWWwwWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwWWWWWWWWWWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca763",
      "text": " WWWWWWWWwWWWWWWWWWWWWWWWWWWWWWwwWWWWWWWWWWWWWWWWWWWWWWWWwWWWWWWWWWWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca764",
      "text": " WWWWWWWWWWWWWwwwwwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWwWWWWWWWWWWWWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca765",
      "text": " WWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWwWWWWWWWWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca766",
      "text": " WWWWWWWWWWWWWWWWwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwWWWWWWWWWWWWWWWWWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca767",
      "text": " WWWWWWWWWWWWWwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwww",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca768",
      "text": " wwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwWWWWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca769",
      "text": " WWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca76a",
      "text": " WWWWWWWWWWWWWWwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwww",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca76b",
      "text": " wwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwwwww",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca76c",
      "text": " wwwwwwwwwwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwww",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca76d",
      "text": " wwwwwwwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwww",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca76e",
      "text": " wwwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwwwww",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca76f",
      "text": " wwwWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwwwwwwWWW",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca770",
      "text": " WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWwwwwwwwwwwwwwwwwv",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca771",
      "text": " ||<",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca772",
      "text": " なんだこの沼は！",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca773",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca774",
      "text": " これはプログラミング言語Grassで書かれたプログラムです。実行すると「Hello, world!」って出るはずです。<a href=\"http://www.blue.sky.or.jp/grass/doc_ja.html\">ちょっと草植えときますね型言語 Grass</a>から手に入る、「Interpreter written in Ruby by UENO Katsuhiro」で検証しました。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca775",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca776",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca777",
      "text": " プログラムの後半ほどスタックが深くなるせいでwやWの続く長さが長くなるんですけど、それが沼地を眺めたときに自分に近いところは大きく、遠いところは小さく見えるのに似ています。面白い。Python版のインタプリタは近いうちにCodeReposに入れて<a href=\"http://mixi.jp/view_community.pl?id=2643444\">[mixi] プログラミング言語 Grass</a>とかで告知します。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca778",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca779",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca77a",
      "text": " 自分はGrassが生まれた情報科学若手の会に参加していたのに、id:higeponに先に実装されてしまった(<a href=\"http://d.hatena.ne.jp/higepon/20080605/1212678422#c\">うはｗｗｗ Mosh で Grass 実装したｗｗｗｗ - ひげぽん OSとか作っちゃうかMona-</a>)ので「かっとなってやった、今では反省している」ｗＷＷｗｗｗｗ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca77b",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca77c",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca77d",
      "text": " -----",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca77e",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca77f",
      "text": " CodeReposに入れました。処理系自体のコードはテストケース含めてline 220までだけど、草を生やしたい人にはそこから下の「どうやってHelloWorldを作ったか」っていうネタバレの部分が面白いかもね。余計な文字を取り除くと1301文字で、最適化の余地はたくさんあると思うので「俺の方が短く作れる！」という人はトラックバックしてください。(追記：128加算する関数が2つ定義されていることに気づいて早速1254に縮んだｗ)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca780",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca781",
      "text": " http://coderepos.org/share/browser/lang/python/grass/grass.py?rev=13335",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca782",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca783",
      "text": " -----",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca784",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca785",
      "text": " ちなみにGrassと同じ夜に生まれたKEMURI↓",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca786",
      "text": " http://www.nishiohirokazu.org/blog/2006/09/kemuri.html",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca787",
      "text": " こっちはGrassと違ってチューリング完全じゃないけど、任意の文字列を出力できることはわかっています。「Hello, world!」を出力する最短のプログラム長がいくらなのかは未解決問題です。一文字に1PUSH使うという条件の下で探索空間を有限にしたところでほったらかし。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca788",
      "text": " http://www.nishiohirokazu.org/blog/2007/03/haskellkemuri01.html",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca789",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca78a",
      "text": " *1212761894*[ja]あきない中",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca78b",
      "text": " f:id:nishiohirokazu:20080606230419j:image",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca78c",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca78d",
      "text": " 「秋が無い」と「商い」をかけている。江戸時代からあるはず。春夏冬二升五合と書いて「あきない　ますます　はんじょう」と読ませるのだが、二升五合まで書いてある看板の実物は見たことがない。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca78e",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca78f",
      "text": " *1212766268*帰った",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca790",
      "text": " 暑い！暑い！つい最近寒くて暖房をつけたとは思えない蒸し暑さ！",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca791",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca792",
      "text": " *1212771300*知ったかぶるのならググればいいじゃない、と言ったとか",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca793",
      "text": " http://slashdot.jp/it/comments.pl?threshold=0&mode=nested&commentsort=3&op_change=%E5%A4%89%E6%9B%B4&sid=404740",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca794",
      "text": " >>",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca795",
      "text": " オークションがダメなら",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca796",
      "text": " 正規のお店で買えば良いのよ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca797",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca798",
      "text": " って、某お姫様のようなコメントを書いてみる",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca799",
      "text": " -----",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca79a",
      "text": " >某お姫様",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca79b",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca79c",
      "text": " 言った（とされている）時には、姫じゃなかったけどな。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca79d",
      "text": " <<",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca79e",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca79f",
      "text": " <a href=\"http://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%AA%E3%83%BC%E3%83%BB%E3% 82%A2%E3%83%B3%E3%83%88%E3%83%AF%E3%83%8D%E3%83%83%E3%83%88\">マリー・アントワネット - Wikipedia</a>",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a0",
      "text": " >>",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a1",
      "text": " 「パンがなければ」の発言",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a2",
      "text": " ",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a3",
      "text": " マリー・アントワネットは、フランス革命前に民衆が貧困と食料難に陥った際、「パンがなければお菓子を食べればいいじゃない」と発言したと紹介されることがある(中略)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a4",
      "text": " しかし、これはマリー・アントワネット自身の言葉ではないとされる。ルソーの『告白』（1766年頃執筆）の第6巻に、ワインを飲むためにパンを探したが見つけられないルソーが、“家臣からの「農民にはパンがありません」との発言に対して「それならブリオッシュを食べればよい」とさる大公婦人が答えた”ことを思い出したとあり、この記事が有力な原典のひとつであるといわれている。(中略)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a5",
      "text": " アルフォンス・カーは、1843年に出版した『悪女たち』の中で、執筆の際にはこの発言は既にマリー・アントワネットのものとして流布していたが、1760年出版のある本に「トスカーナ大公国の公爵夫人」のものとして紹介されていると書いている。(中略)",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a6",
      "text": " 実際はこれは彼女を妬んだ他の貴族達の作り話で、飢饉の際子供の宮廷費を削って寄付したり、他の貴族達から寄付金を集めるなど、国民を大事に思うとても心優しい人物であった。",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a7",
      "text": " <<",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a8",
      "text": " </body>",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7a9",
      "text": "",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7aa",
      "text": "[はてなダイアリー 2008-06-06 https://nishiohirokazu.hatenadiary.org/archive/2008/06/06]",
      "created": 1212678000,
      "updated": 1212678000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}