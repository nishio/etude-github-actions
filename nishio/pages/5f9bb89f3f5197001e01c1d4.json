{
  "id": "5f9bb89f3f5197001e01c1d4",
  "title": "貪欲法の証明パターン",
  "created": 1604040866,
  "updated": 1610245559,
  "lines": [
    {
      "id": "5f9bb89f3f5197001e01c1d4",
      "text": "貪欲法の証明パターン",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604040866,
      "updated": 1604040866
    },
    {
      "id": "5f9bb8a1aff09e00001ab3e4",
      "text": "　[交換しても損しない]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604040866,
      "updated": 1604040879
    },
    {
      "id": "5fa75d18aff09e0000ef5efd",
      "text": "　　[交換しても悪化しない]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604803865,
      "updated": 1604803871
    },
    {
      "id": "5f9bdb45aff09e0000634ec8",
      "text": "　　ある順序で選択する貪欲法",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604049734,
      "updated": 1604049767
    },
    {
      "id": "5f9bdba7aff09e0000634ec9",
      "text": "　　順序の遅いものを早いもので置き換えても最大化したいスコアが減少しないことを示す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604049831,
      "updated": 1604049859
    },
    {
      "id": "5f9bb8a8aff09e00001ab3e6",
      "text": "　　https://penguinshunya.hatenablog.com/entry/2020/01/21/093846",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604040872,
      "updated": 1604040873
    },
    {
      "id": "5f9bb8a2aff09e00001ab3e5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604040866,
      "updated": 1604040866
    },
    {
      "id": "5f9bba2caff09e00001ab3ea",
      "text": "　https://mobile.twitter.com/maspy_stars/status/1198626710599528454",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041260,
      "updated": 1604041262
    },
    {
      "id": "5f9bba2daff09e00001ab3eb",
      "text": "　　>先進性を示す。任意の\"時点\"で最適な方法であることを、\"時系列\"順に示す。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041262,
      "updated": 1604049879
    },
    {
      "id": "5f9bba4eaff09e00001ab3ec",
      "text": "  > 最適解に仮定できる性質を課していく（2つ入れ替えても悪くならないのでこの形etc）と、貪欲になることを示す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041295,
      "updated": 1604049881
    },
    {
      "id": "5f9bba75aff09e00001ab3ed",
      "text": "　　https://maspypy.com/atcoder-参加感想-2020-04-13abc-163",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041338,
      "updated": 1604050183
    },
    {
      "id": "5f9bdd06aff09e0000634eca",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604050183,
      "updated": 1604050183
    },
    {
      "id": "5f9bba75aff09e00001ab3ee",
      "text": "　https://mobile.twitter.com/onakasuita_py/status/1250014171149692930",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041338,
      "updated": 1604041338
    },
    {
      "id": "5f9bba77aff09e00001ab3ef",
      "text": "\t\t>･各操作において最適たりうる選択(その選択を含む最適解が存在するという意味)を行う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041338,
      "updated": 1604049508
    },
    {
      "id": "5f9bda63aff09e00004477c3",
      "text": "  > ･各操作の後にはより規模の小さい問題に帰着でき、再帰的に解が求まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604049508,
      "updated": 1604049508
    },
    {
      "id": "5f9bda63aff09e00004477c4",
      "text": "  > ･証明は基本的に背理法で、最適解が全て「貪欲による選択」を含まないと仮定して矛盾を示す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604049508,
      "updated": 1604049508
    },
    {
      "id": "5f9bbac5aff09e00001ab3f0",
      "text": "\t\t\t>ex.)区間スケジューリング",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041420,
      "updated": 1604049556
    },
    {
      "id": "5f9bda93aff09e00004477c5",
      "text": "   > 時刻0で示す。I=`[L,R]`をRが最小なものの1つとし、全ての最適解がIを含まないと仮定する。最適解の1つを取り(最適解が存在することは明らか)、そのうちRが最小なものをJ=`[L',R']`とすると、Jは必ずIと置き換えられることで矛盾。従ってIを採用してよい。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604049556,
      "updated": 1604049570
    },
    {
      "id": "5f9bda95aff09e00004477c6",
      "text": "   >こうすると、貪欲の証明でよく目にする「損をしない」というフレーズが出てこない。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604049557,
      "updated": 1604049595
    },
    {
      "id": "5ffa6576aff09e0000ce110f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610245495,
      "updated": 1610245530
    },
    {
      "id": "5ffa6597aff09e0000ce1111",
      "text": "　まず下界を示す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610245527,
      "updated": 1610245527
    },
    {
      "id": "5ffa659caff09e0000ce1112",
      "text": "　　下界に一致することを示す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610245532,
      "updated": 1610245544
    },
    {
      "id": "5ffa65aaaff09e0000ce1113",
      "text": "　　よって最適解である",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610245546,
      "updated": 1610245553
    },
    {
      "id": "5ffa65b1aff09e0000ce1114",
      "text": "　　[ARC111]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610245553,
      "updated": 1610245559
    },
    {
      "id": "5ffa6576aff09e0000ce1110",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610245495,
      "updated": 1610245495
    },
    {
      "id": "5f9bbac5aff09e00001ab3f1",
      "text": "　[硬貨の問題が貪欲法で解けるための条件 - Qiita https://qiita.com/s417-lama/items/0cdd95fddb2067876896]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041420,
      "updated": 1604049618
    },
    {
      "id": "5f9bbac7aff09e00001ab3f2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041420,
      "updated": 1604041420
    },
    {
      "id": "5f9bbac7aff09e00001ab3f3",
      "text": "　https://kimiyuki.net/blog/2017/12/03/matroid-greedy-proof/",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041420,
      "updated": 1604049684
    },
    {
      "id": "5f9bb972aff09e00001ab3e7",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041075,
      "updated": 1604041075
    },
    {
      "id": "5f9bb972aff09e00001ab3e8",
      "text": "[貪欲法]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041075,
      "updated": 1604041080
    },
    {
      "id": "5f9bb973aff09e00001ab3e9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604041076,
      "updated": 1604041076
    }
  ]
}