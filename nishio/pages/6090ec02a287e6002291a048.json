{
  "id": "6090ec02a287e6002291a048",
  "title": "Hatena2009-12-14",
  "created": 1260716400,
  "updated": 1260716400,
  "lines": [
    {
      "id": "6090ec26aff09e00003d44da",
      "text": "Hatena2009-12-14",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44db",
      "text": "code:hatena",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44dc",
      "text": " <body>",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44dd",
      "text": " *1260774215*Pythonで2つの文字列がa == bだけどもnot(a is b)であるようなケース",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44de",
      "text": " <a href='http://d.hatena.ne.jp/Kmizukix/20091214'>文字列の比較で疑問</a>から引用:",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44df",
      "text": " >>",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e0",
      "text": " d1 = 'a a'",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e1",
      "text": " d2 = 'a a'",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e2",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e3",
      "text": " id(d1)",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e4",
      "text": " # => 27605856",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e5",
      "text": " id(d2)",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e6",
      "text": " # => 27606080",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e7",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e8",
      "text": " えっなんで？",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44e9",
      "text": " <<",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44ea",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44eb",
      "text": " 文字列は変更不可能なオブジェクトなので普通はisじゃなくて==で比較をするんだけどね。空白で区切られた同一内容の文字列を2つ、対話的環境で個別に作成してからisで比較するとFalseになるようだ。",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44ec",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44ed",
      "text": " >|python|",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44ee",
      "text": " Python 2.6.1 (r261:67515, Jan 25 2009, 00:21:48) ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44ef",
      "text": " [GCC 4.0.1 (Apple Inc. build 5490)] on darwin",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f0",
      "text": " >>> a = \"a a\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f1",
      "text": " >>> b = \"a a\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f2",
      "text": " >>> a is b",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f3",
      "text": " False",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f4",
      "text": " ||<",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f5",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f6",
      "text": " しかし、一つの式で書くとTrue",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f7",
      "text": " >|python|",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f8",
      "text": " >>> \"a a\" is \"a a\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44f9",
      "text": " True",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44fa",
      "text": " ||<",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44fb",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44fc",
      "text": " 一つの関数にまとめてもTrue",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44fd",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44fe",
      "text": " >|python|",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d44ff",
      "text": " >>> def foo():",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4500",
      "text": " ...     a = \"a a\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4501",
      "text": " ...     b = \"a a\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4502",
      "text": " ...     return a is b",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4503",
      "text": " ... ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4504",
      "text": " >>> foo()",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4505",
      "text": " True",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4506",
      "text": " ||<",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4507",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4508",
      "text": " 一つの行にまとめてもTrue",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4509",
      "text": " >|python|",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d450a",
      "text": " >>> a = \"a a\"; b = \"a a\"; a is b",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d450b",
      "text": " True",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d450c",
      "text": " ||<",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d450d",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d450e",
      "text": " 対話的環境で1行ずつ実行する際には、1行ごとにバイトコードへのコンパイルが行われている。関数を作ったり、1行で実行したりしている際にはまとめてコンパイルされている。そこの違いだろう。",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d450f",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4510",
      "text": " 「同じ内容の文字列は同じオブジェクトにする」というのを徹底的にやろうとすると文字列が作成される度に「これって今までに現れた文字列のどれかと一緒だろうか？」をチェックする必要が出てくるよね。それって結構大変な処理だし、Pythonの文字列はそもそも変更不可能なオブジェクトなので徹底する必要がないんだ。だから高速化のためにちょっと手を抜いてあるんだろう。なんだろうね。「アルファベットと数字以外の文字を含んでいるような文字列はまあ識別子にもなれないことだし同一内容の文字列がある確率が低いんじゃないか」とかかな？",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4511",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4512",
      "text": " >|python|",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4513",
      "text": " >>> a = \"a@\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4514",
      "text": " >>> b = \"a@\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4515",
      "text": " >>> a is b",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4516",
      "text": " False",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4517",
      "text": " >>> a = \"a!\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4518",
      "text": " >>> b = \"a!\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4519",
      "text": " >>> a is b",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d451a",
      "text": " False",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d451b",
      "text": " >>> a = \"a1\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d451c",
      "text": " >>> b = \"a1\"",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d451d",
      "text": " >>> a is b",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d451e",
      "text": " True",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d451f",
      "text": " ||<",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4520",
      "text": " ",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4521",
      "text": " もっと詳しく知りたい場合は、文字列を作って返すためのビルダー関数の中で「すでにある文字列だったらそれへのポインタ、そうでなかったら新しく作ってそれへのポインタを返そう」って感じで分岐をしたりとかしていると思われるのでそこからコードをたどってみればいいかと思う。",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4522",
      "text": " </body>",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4523",
      "text": "",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec26aff09e00003d4524",
      "text": "[はてなダイアリー 2009-12-14 https://nishiohirokazu.hatenadiary.org/archive/2009/12/14]",
      "created": 1260716400,
      "updated": 1260716400,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}