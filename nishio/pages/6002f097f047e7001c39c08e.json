{
  "id": "6002f097f047e7001c39c08e",
  "title": "keyence2021",
  "created": 1610805400,
  "updated": 1610855206,
  "lines": [
    {
      "id": "6002f097f047e7001c39c08e",
      "text": "keyence2021",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805400,
      "updated": 1610805407
    },
    {
      "id": "6002f097aff09e0000f0f4ae",
      "text": "[キーエンス プログラミング コンテスト 2021 - AtCoder https://atcoder.jp/contests/keyence2021] ARC相当の難易度",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805400,
      "updated": 1610805757
    },
    {
      "id": "600303efaff09e0000db21f9",
      "text": "A-Cの3問でした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610810352,
      "updated": 1610810352
    },
    {
      "id": "6002f328aff09e0000f0f4c8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806057,
      "updated": 1610806057
    },
    {
      "id": "6002f329aff09e0000f0f4c9",
      "text": "[https://gyazo.com/1cf13ccfd7b034a59134adbb8aa0b42a]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806057,
      "updated": 1610806085
    },
    {
      "id": "6002f344aff09e0000f0f4ca",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806085,
      "updated": 1610806085
    },
    {
      "id": "6002f1feaff09e0000a465e8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805758,
      "updated": 1610805758
    },
    {
      "id": "6002f1c7aff09e0000f0f4b5",
      "text": "[A - Two Sequences 2 https://atcoder.jp/contests/keyence2021/tasks/keyence2021_a]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805703,
      "updated": 1610805704
    },
    {
      "id": "6002f1bdaff09e0000f0f4b3",
      "text": "[https://gyazo.com/8886c1232049da6b710c42699eb6acb4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805694,
      "updated": 1610805696
    },
    {
      "id": "6002f1bfaff09e0000f0f4b4",
      "text": "\t[$ c_n = \\max a_ib_j[i\\le j\\le n] ]を求める問題 ([Iverson bracket]記法)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805696,
      "updated": 1610810561
    },
    {
      "id": "6002f24eaff09e0000f0f4b6",
      "text": "\t[$ c_n = \\max (c_{n-1},  \\max a_ib_n [i\\le n]) ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805839,
      "updated": 1610805972
    },
    {
      "id": "6002f0a8aff09e0000f0f4b0",
      "text": "\t[$ c_n = \\max (c_{n-1},  b_n \\max a_i [i\\le n]) ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805417,
      "updated": 1610805983
    },
    {
      "id": "6002f2d7aff09e0000f0f4b7",
      "text": "　というわけで [$ \\max a_i [i\\le n] ]を別途保存しておけばOK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805976,
      "updated": 1610806038
    },
    {
      "id": "6002f316aff09e0000a465ea",
      "text": "　code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806038,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4b8",
      "text": "　 def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4b9",
      "text": "      N = int(input())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4ba",
      "text": "      AS = list(map(int, input().split()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4bb",
      "text": "      BS = list(map(int, input().split()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4bc",
      "text": "      maxAS = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4bd",
      "text": "      x = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4be",
      "text": "      for i in range(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4bf",
      "text": "          x = max(x, AS[i])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4c0",
      "text": "          maxAS.append(x)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4c1",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4c2",
      "text": "      ret = AS[0] * BS[0]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4c3",
      "text": "      print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4c4",
      "text": "      for i in range(1, N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4c5",
      "text": "          ret = max(ret, maxAS[i] * BS[i])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4c6",
      "text": "          print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806053
    },
    {
      "id": "6002f325aff09e0000f0f4c7",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806053,
      "updated": 1610806054
    },
    {
      "id": "6002f2ecaff09e0000a465e9",
      "text": "[B - Mex Boxes https://atcoder.jp/contests/keyence2021/tasks/keyence2021_b]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610805997,
      "updated": 1610806120
    },
    {
      "id": "6002f35eaff09e0000f0f4cb",
      "text": "[https://gyazo.com/399ab72dbb56393a66ef66e1ef97034c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806111,
      "updated": 1610806118
    },
    {
      "id": "6002f365aff09e0000f0f4cc",
      "text": "\t同じ箱に同じ値を入れてもメリットがない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806118,
      "updated": 1610806169
    },
    {
      "id": "6002f399aff09e0000a465ec",
      "text": "\t数値が飛んでたら結果に影響しない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806169,
      "updated": 1610806169
    },
    {
      "id": "6002f39aaff09e0000a465ed",
      "text": "\tというわけで「0から順に連続して入れられるだけ入れる」が最適解になる貪欲法",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806170,
      "updated": 1610806207
    },
    {
      "id": "6002f3c9aff09e0000a465ee",
      "text": "\t箱の数の制限を忘れてて一度WAになった: (1)の`K > 0`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806217,
      "updated": 1610807543
    },
    {
      "id": "6002f377aff09e0000a465eb",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806136,
      "updated": 1610806254
    },
    {
      "id": "6002f3eeaff09e0000f0f4ce",
      "text": "\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806254,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4cf",
      "text": "      N, K = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d0",
      "text": "      AS = list(map(int, input().split()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d1",
      "text": "      from collections import Counter",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d2",
      "text": "      count = Counter(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d3",
      "text": "      ret = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d4",
      "text": "      while count[0] > 0 and K > 0:  # (1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610807532
    },
    {
      "id": "6002f3eeaff09e0000f0f4d5",
      "text": "          i = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d6",
      "text": "          K -= 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d7",
      "text": "          while count[i] > 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d8",
      "text": "              ret += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4d9",
      "text": "              count[i] -= 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4da",
      "text": "              i += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4db",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4dc",
      "text": "      print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806255
    },
    {
      "id": "6002f3eeaff09e0000f0f4dd",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806255,
      "updated": 1610806256
    },
    {
      "id": "6002f3ecaff09e0000f0f4cd",
      "text": "[C - Robot on Grid https://atcoder.jp/contests/keyence2021/tasks/keyence2021_c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806253,
      "updated": 1610806587
    },
    {
      "id": "6002f533aff09e0000f0f4de",
      "text": "[https://gyazo.com/e60412189e8d57b2f1c1e23ba8897f9c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806580,
      "updated": 1610806582
    },
    {
      "id": "6002f535aff09e0000f0f4df",
      "text": "\t最初、図の間違った方のDPをしてサンプルが合わなくて悩んだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806582,
      "updated": 1610806623
    },
    {
      "id": "6002f516aff09e0000a465ef",
      "text": "　　[https://gyazo.com/d77469b7257adfbca3f257a13f5e8b0e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806553,
      "updated": 1610806625
    },
    {
      "id": "6002f517aff09e0000a465f1",
      "text": "　　例えば＊を通らない経路は上のDPだと最終的な答えに1として出されるわけなのだが、＊がM個あるなら3^Mになるのが正しい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806553,
      "updated": 1610806748
    },
    {
      "id": "6002f626aff09e0000a465f3",
      "text": "　　最終的に何で割って辻褄を合わせればいいのかも一度間違えたがサンプルが親切なのでよく見ればよい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806822,
      "updated": 1610806877
    },
    {
      "id": "6002f642aff09e0000a465f4",
      "text": "　　　サンプル1の場合、ゴールまでの遷移が2回、＊が1つなので、1回余分だから3^1で割る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806850,
      "updated": 1610806939
    },
    {
      "id": "6002f69baff09e0000a465f5",
      "text": "　　　サンプル2の場合、遷移が4回、＊が4つなので3^0で割る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806940,
      "updated": 1610806983
    },
    {
      "id": "6002f6ccaff09e0000a465f6",
      "text": "　　REが出てるのはpowに負の値を入れられるのがPython3.8からなのを忘れてたせい see [mod Pでの逆元]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806989,
      "updated": 1610807068
    },
    {
      "id": "6002f7afaff09e0000a465f7",
      "text": "　　タプルをキーにした辞書を使っててTLEしたので、配列に変えた。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807216,
      "updated": 1610810670
    },
    {
      "id": "6003052eaff09e0000db21fa",
      "text": "　　\tW+2は、1オリジンなのと、端で条件分岐しないで良いように1マス広げとくのの組み合わせ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610810670,
      "updated": 1610810671
    },
    {
      "id": "6002f517aff09e0000a465f0",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610806553,
      "updated": 1610807072
    },
    {
      "id": "6002f720aff09e0000f0f4e1",
      "text": "\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807072,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4e2",
      "text": "      MOD = 998_244_353",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4e3",
      "text": "      H, W, K = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4e4",
      "text": "      CS = [0] * ((H + 2) * (W + 2))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4e5",
      "text": "      for _k in range(K):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4e6",
      "text": "          h, w, c = input().strip().split()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4e7",
      "text": "          CS[(int(h) * (W + 2) + int(w))] = ord(c)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4e8",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4e9",
      "text": "      table = [0] * ((H + 2) * (W + 2))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807312
    },
    {
      "id": "6002f730aff09e0000f0f4ec",
      "text": "      v = table[1 + (W + 2)] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4ed",
      "text": "      for h in range(1, H + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4ee",
      "text": "          for w in range(1, W + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4ef",
      "text": "              pos = h * (W + 2) + w",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4f0",
      "text": "              v = table[pos] % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807203
    },
    {
      "id": "6002f730aff09e0000f0f4f2",
      "text": "              c = CS[pos]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807204
    },
    {
      "id": "6002f730aff09e0000f0f4f4",
      "text": "              if c == 88:  # \"X\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4f5",
      "text": "                  table[pos + 1] += v * 3",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4f6",
      "text": "                  table[pos + (W + 2)] += v * 3",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4f7",
      "text": "              elif c == 68:  # \"D\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4f8",
      "text": "                  table[pos + (W + 2)] += v * 3",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4f9",
      "text": "              elif c == 82:  # \"R\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4fa",
      "text": "                  table[pos + 1] += v * 3",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4fb",
      "text": "              else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4fc",
      "text": "                  table[pos + 1] += v * 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4fd",
      "text": "                  table[pos + (W + 2)] += v * 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4fe",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f4ff",
      "text": "      ret = table[H * (W + 2) + W] % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f500",
      "text": "      LEN = (H + W - 2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f501",
      "text": "      NEGK = H * W - K",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f503",
      "text": "      ret *= pow(3, (MOD - 1 - (LEN - NEGK)), MOD)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f504",
      "text": "      ret %= MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f505",
      "text": "      print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807088
    },
    {
      "id": "6002f730aff09e0000f0f506",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807088,
      "updated": 1610807089
    },
    {
      "id": "6002f71eaff09e0000f0f4e0",
      "text": "[D - Choosing Up Sides https://atcoder.jp/contests/keyence2021/tasks/keyence2021_d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610807071,
      "updated": 1610809415
    },
    {
      "id": "60030048aff09e0000db21f3",
      "text": "\t[https://gyazo.com/b2e3f90a7532cacff62fc8ed74d62a72]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610809416,
      "updated": 1610809502
    },
    {
      "id": "6003009daff09e0000db21f4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610809502,
      "updated": 1610809502
    },
    {
      "id": "60030047aff09e0000db21f2",
      "text": "　考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610809415,
      "updated": 1610809522
    },
    {
      "id": "600300b2aff09e0000a465f9",
      "text": "　　8人を半分に分けて対戦させる時、1番の人と同じチームになる人が3人いて、それらの人の「同じだった回数」は1増えるので、1番以外の全員が同じ「1番と同じチームだった回数」になるのは3×7の21回目",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610809522,
      "updated": 1610809589
    },
    {
      "id": "600300f9aff09e0000a465fa",
      "text": "　　　間違いです",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610809594,
      "updated": 1610809597
    },
    {
      "id": "6003055caff09e0000a465fb",
      "text": " 　　　7箇所のうち3箇所が1であるようなベクトルを7つ足し合わせてすべて3にすることができればよい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610810716,
      "updated": 1610810904
    },
    {
      "id": "600300f4aff09e0000db21f5",
      "text": "　終了後Twitter",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610809589,
      "updated": 1610809990
    },
    {
      "id": "600302c9aff09e0000db21f6",
      "text": "　\t[双対ベクトル] [src https://twitter.com/ngtkana/status/1350449811309305856?s=21]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610810058,
      "updated": 1610814285
    },
    {
      "id": "600302cbaff09e0000db21f7",
      "text": "　\t[E - Odd Sum Rectangles https://atcoder.jp/contests/hitachi2020/tasks/hitachi2020_e]のN=Mのときと大体同じ問題 [src https://twitter.com/titia_til/status/1350443154089025537]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610810060,
      "updated": 1610810229
    },
    {
      "id": "600300afaff09e0000a465f8",
      "text": "\t\t再帰 [src https://twitter.com/SSRS_cp/status/1350442817785479170]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610809520,
      "updated": 1610810270
    },
    {
      "id": "6003150aaff09e0000a46608",
      "text": "\t\t[アダマール行列] [src https://twitter.com/nullkara/status/1350470699400400896?s=21] [src https://twitter.com/kyopro_friends/status/1350449299272790017?s=21]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610814731,
      "updated": 1610855206
    },
    {
      "id": "6003037eaff09e0000db21f8",
      "text": "\t\tD: N = 3だったら11110000 11001100 10101010 を作ってこれらを1以上選んでxor [src https://twitter.com/poyothon/status/1350443900259876870]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610810239,
      "updated": 1610811759
    },
    {
      "id": "60031366aff09e0000a46607",
      "text": "\t\t なるほど",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610814310,
      "updated": 1610814317
    },
    {
      "id": "60030932aff09e0000db21ff",
      "text": "\t　　同じ値の連続が[$ 2^i (0 \\le i < N)] であるようなものがN通り作れる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610811698,
      "updated": 1610812054
    },
    {
      "id": "60030a61aff09e0000a465fe",
      "text": "\t　　これらの値のXORは、それぞれを選択するかどうかの[$ 2^N]個あって、00000000以外はすべて1の個数が4個([$ 2^{N-1}])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610812002,
      "updated": 1610812123
    },
    {
      "id": "600309baaff09e0000db2200",
      "text": "　　　この集合はXORについて閉じている(0が単位元)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610811835,
      "updated": 1610812328
    },
    {
      "id": "600310a0aff09e0000a46606",
      "text": "　　　「同じチームであった回数」は「XORした値の0である桁の数」なので、異なるものをXORした時に0である桁の数が変わらないこの性質が都合が良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813600,
      "updated": 1610813670
    },
    {
      "id": "60030effaff09e0000db2215",
      "text": "　コンテスト後実装",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813183,
      "updated": 1610813255
    },
    {
      "id": "60030f21aff09e0000a46600",
      "text": "　　同じ値の連続が[$ 2^i (0 \\le i < N)] であるようなものをN通り作る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813217,
      "updated": 1610813266
    },
    {
      "id": "60030f51aff09e0000a46601",
      "text": "　　　なおPythonは256ビットの整数も問題なくビット演算できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813266,
      "updated": 1610814340
    },
    {
      "id": "60030f8aaff09e0000a46602",
      "text": "　　このN個をXORして作られる値を列挙する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813322,
      "updated": 1610813373
    },
    {
      "id": "60030fbcaff09e0000a46603",
      "text": "　　　部分集合の列挙をビット演算でやる、よく使う方法",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813373,
      "updated": 1610813429
    },
    {
      "id": "60030ffdaff09e0000a46604",
      "text": "　　2進数の文字列化をして、0と1をAとBに置き換える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813437,
      "updated": 1610813469
    },
    {
      "id": "6003101daff09e0000a46605",
      "text": "　AC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813469,
      "updated": 1610813480
    },
    {
      "id": "60030b82aff09e0000a465ff",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610812291,
      "updated": 1610813165
    },
    {
      "id": "60030eedaff09e0000db2202",
      "text": "\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813165,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2203",
      "text": "      N = int(input())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2204",
      "text": "      group = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2205",
      "text": "      for i in range(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2206",
      "text": "          P = 2 ** (2 ** i)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2207",
      "text": "          group = [x * (P + 1) for x in group]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2208",
      "text": "          group.append(P - 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2209",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db220a",
      "text": "      K = 2 ** N - 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db220b",
      "text": "      print(K)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db220c",
      "text": "      for i in range(1, K + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db220d",
      "text": "          x = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db220e",
      "text": "          for j in range(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db220f",
      "text": "              if (1 << j) & i:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2210",
      "text": "                  x = x ^ group[j]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2211",
      "text": "          s = f\"{x:0256b}\"[-(2 ** N):]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2212",
      "text": "          s = s.replace(\"0\", \"A\").replace(\"1\", \"B\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2213",
      "text": "          print(s)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610813179
    },
    {
      "id": "60030efbaff09e0000db2214",
      "text": "\t[アダマール行列 - Wikipedia https://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%80%E3%83%9E%E3%83%BC%E3%83%AB%E8%A1%8C%E5%88%97]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813179,
      "updated": 1610850817
    },
    {
      "id": "6003a201aff09e0000db2216",
      "text": "\t\tなるほど",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610850818,
      "updated": 1610851130
    },
    {
      "id": "6003a22caff09e0000db2217",
      "text": "\t\t[$ {\\displaystyle {\\boldsymbol {H}}^{\\intercal }{\\boldsymbol {H}}=n{\\boldsymbol {I}}_{n}} ] ということはつまり、[$ i \\neq j ] について [$ \\sum_k H_{ik}H_{kj} = 0]ということ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610850860,
      "updated": 1610852772
    },
    {
      "id": "6003a9a3aff09e0000db2220",
      "text": "\t\t\tなので、問題条件の「同じチームだった回数が任意のi<jについて等しい」を満たすわけだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610852772,
      "updated": 1610852773
    },
    {
      "id": "60030eecaff09e0000db2201",
      "text": "\t\t再帰的な構築 [$ \\begin{bmatrix} H & H\\\\ H & -H\\end{bmatrix}] は気づかなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610813164,
      "updated": 1610851203
    },
    {
      "id": "6003a363aff09e0000db2219",
      "text": "\t\t僕がやったのは 群の準同型[$ {\\displaystyle \\{1,-1,\\times \\}\\mapsto \\{0,1,\\oplus \\}} ] をして [$ {\\displaystyle {\\boldsymbol {F}}_{n}={\\begin{bmatrix}0_{1\\times 2^{n-1}}&1_{1\\times 2^{n-1}}\\\\{\\boldsymbol {F}}_{n-1}&{\\boldsymbol {F}}_{n-1}\\end{bmatrix}}}]することに相当する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610851172,
      "updated": 1610851406
    },
    {
      "id": "6003a59daff09e0000db221e",
      "text": "\t \t[$ 0_{1\\times 2^{n-1}} 1_{1\\times 2^{n-1}}]が P - 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610851742,
      "updated": 1610854155
    },
    {
      "id": "6003a482aff09e0000db221d",
      "text": " \t\t[$ {\\boldsymbol {F}}_{n-1} {\\boldsymbol {F}}_{n-1} ]が `group = [x * (P + 1) for x in group]`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610851459,
      "updated": 1610854156
    },
    {
      "id": "6003a3c0aff09e0000db221a",
      "text": "　　僕はその後、部分集合ごとにXORしたけど、[$ {\\displaystyle {\\boldsymbol {H}}_{2^{n}}={\\boldsymbol {F}}_{n}^{\\intercal }{\\boldsymbol {F}}_{n}} ]でも良いらしい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610851264,
      "updated": 1610854627
    },
    {
      "id": "6003b0e2aff09e00006b7da2",
      "text": "　　　Fはn行2^n列、各列は異なっているので、nビットの整数が全通り出てくる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610854627,
      "updated": 1610854742
    },
    {
      "id": "6003b1a4aff09e00006b7da3",
      "text": "　　　　順序には意味はない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610854820,
      "updated": 1610854919
    },
    {
      "id": "6003b1e8aff09e00006b7da4",
      "text": "　　　[$ H_{ij} = \\sum_k F_{ki}F_{kj}]なので、これは要するにpopcount(i & j) mod 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610854888,
      "updated": 1610855008
    },
    {
      "id": "6003b2beaff09e00006b7da5",
      "text": "　　　　下記のpopcountを使った構築に帰着する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610855103,
      "updated": 1610855132
    },
    {
      "id": "6003a623aff09e00006b7d9e",
      "text": "　公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610851876,
      "updated": 1610852386
    },
    {
      "id": "6003a822aff09e00006b7d9f",
      "text": "　　popcount(i & j)を使って構築してる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610852387,
      "updated": 1610852496
    },
    {
      "id": "6003a871aff09e00006b7da0",
      "text": "　　これはアダマール行列の再帰的な構築において、i & jの最上位ビットが1である場合だけ符号反転してるから",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610852466,
      "updated": 1610852573
    },
    {
      "id": "6003a8a9aff09e00006b7da1",
      "text": "　　　[https://gyazo.com/5c9aa6ca4a24a6d8af633a07ebb33cf5]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610852521,
      "updated": 1610852544
    },
    {
      "id": "6003a8bfaff09e0000db221f",
      "text": "\t\tpopcount(i & j)がij要素を符号反転した回数になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610852544,
      "updated": 1610852624
    },
    {
      "id": "6003a5d2aff09e00006b7d9d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610851795,
      "updated": 1610851795
    }
  ]
}