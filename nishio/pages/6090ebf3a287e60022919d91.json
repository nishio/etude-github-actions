{
  "id": "6090ebf3a287e60022919d91",
  "title": "Hatena2007-11-24",
  "created": 1195830000,
  "updated": 1195830000,
  "lines": [
    {
      "id": "6090ec18aff09e00003c4cec",
      "text": "Hatena2007-11-24",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4ced",
      "text": "code:hatena",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cee",
      "text": " <body>",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cef",
      "text": " *1195878573*PEG",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf0",
      "text": " あー。なんかトークン間のスペースを明示的に指定しないと行けない点をけなされるPEGだけど、それはトークンの区切り方が「一番メジャーな方法一つに決めうち」ではない、という逆の見方もできるんだ。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf1",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf2",
      "text": " というのは、今見ていたPEGによるPEGの定義では、コメントや改行を区切りに含めていた。それもすごくシンプルでわかりやすく書ける。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf3",
      "text": " >||",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf4",
      "text": " Spacing <- (Space / Comment)*",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf5",
      "text": " Comment <- ’#’ (!EndOfLine .)* EndOfLine",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf6",
      "text": " Space <- ’ ’ / ’\\t’ / EndOfLine",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf7",
      "text": " EndOfLine <- ’\\r\\n’ / ’\\n’ / ’\\r’",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf8",
      "text": " ||<",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cf9",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cfa",
      "text": " 式を書いていて長くなってくると、適宜折り返してコメントをつけて見やすくしたくなるよね。そういうことが簡単にサポートできる。yaccとかでどうやってやるのかは僕は詳しくないけども、下のような式はRubyで-3を返すので、きっと実装が難しいんだと思う。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cfb",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cfc",
      "text": " >||",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cfd",
      "text": " x = (1 ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cfe",
      "text": "   - 2 ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4cff",
      "text": "   - 3)",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d00",
      "text": " ||<",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d01",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d02",
      "text": " JavaScriptとPythonとPerlは正しく-4を返した。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d03",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d04",
      "text": " *1195884372*すき屋",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d05",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d06",
      "text": " ねぎたまとんとんとんじるさらだせっとつゆだくで！",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d07",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d08",
      "text": " *1195890910*中継",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d09",
      "text": " ラボに勉強会を中継する設備があればいいのにと思った。Python Developers Campを中継したみたいなアレ。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d0a",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d0b",
      "text": " まぁそれはさておき、明日のPEG勉強会",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d0c",
      "text": " http://www.coins.tsukuba.ac.jp/~i021216/diary/?date=20071121",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d0d",
      "text": " をなんかうまいこと配信できないかなぁとか考えているわけです。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d0e",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d0f",
      "text": " USBカメラ+ustreamで声拾えるかなぁ。発表資料はたぶん読めないよね。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d10",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d11",
      "text": " まぁ中継するかしないかさておき、当日は",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d12",
      "text": " http://www.lingr.com/room/parsing",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d13",
      "text": " でチャットしてると思う。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d14",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d15",
      "text": " *1195895216*未送信メール",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d16",
      "text": " おそらく何かのメモだと思うんだけど「12月右東京」って何だろう。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d17",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d18",
      "text": " *1195895481*今日の一枚",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d19",
      "text": " うちの加湿器。蒸気式。水タンクは2リットルの大容量。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d1a",
      "text": " 部屋の暖房も同時にできる。ただしフィルター式とかに比べると頻繁にお手入れをしないといけない。一日に何回か中にたまった黒い液体を始末しないと行けない。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d1b",
      "text": " 1日に1つずつ業務用杜仲茶のパックを消費する。数日に一回は全体を掃除しないと行けない。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d1c",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d1d",
      "text": " *1195929183*PEG in PEG",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d1e",
      "text": " できた！",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d1f",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d20",
      "text": " >|python|",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d21",
      "text": " >>> print data",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d22",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d23",
      "text": "     A <- \"a\" A? \"b\"",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d24",
      "text": "     B <- \"b\" B? \"c\"",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d25",
      "text": "     S <- &(A !\"b\") \"a\"+ B !\"c\"",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d26",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d27",
      "text": " >>> e.Grammar.match(data)",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d28",
      "text": " [('A', Sequence(ExactMatcher('a'), Optional(Ref('A')), ExactMatcher('b'))), ('B', Sequence(ExactMatcher('b'), Optional(Ref('B')), ExactMatcher('c'))), ('S', Sequence(AndPredicate(Sequence(Ref('A'), NotPredicate(ExactMatcher('b')))), OneOrMore(ExactMatcher('a')), Ref('B'), NotPredicate(ExactMatcher('c'))))]/58",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d29",
      "text": " >>> build_env(_.value)",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d2a",
      "text": " A",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d2b",
      "text": " Sequence(ExactMatcher('a'), Optional(Ref('A')), ExactMatcher('b'))",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d2c",
      "text": " B",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d2d",
      "text": " Sequence(ExactMatcher('b'), Optional(Ref('B')), ExactMatcher('c'))",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d2e",
      "text": " S",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d2f",
      "text": " Sequence(AndPredicate(Sequence(Ref('A'), NotPredicate(ExactMatcher('b')))), OneOrMore(ExactMatcher('a')), Ref('B'), NotPredicate(ExactMatcher('c')))",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d30",
      "text": " <simple_peg_2.Environment object at 0x022165B0>",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d31",
      "text": " >>> env = _",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d32",
      "text": " >>> env.S.match(\"aaabbbccc\")",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d33",
      "text": " 'aaabbbccc'/9",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d34",
      "text": " ||<",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d35",
      "text": " ",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d36",
      "text": " でも、モジュールに名前空間が1個決めうちで存在するので、そこは直さないとね。",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d37",
      "text": " 直したらこの手書きパーサを使って「PEGで定義されたPEGの文法」を読み込んでパーサを作って、それをつかって「PEGで定義されたPEGの文法」を読み込んで…",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d38",
      "text": " </body>",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d39",
      "text": "",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec18aff09e00003c4d3a",
      "text": "[はてなダイアリー 2007-11-24 https://nishiohirokazu.hatenadiary.org/archive/2007/11/24]",
      "created": 1195830000,
      "updated": 1195830000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}