{
  "id": "5dbfe05126db2d001725a94d",
  "title": "思考の結節点2019-10-31",
  "created": 1572855891,
  "updated": 1572856693,
  "lines": [
    {
      "id": "5dbfe05126db2d001725a94d",
      "text": "思考の結節点2019-10-31",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572855891,
      "updated": 1572855898
    },
    {
      "id": "5dbfe059aff09e0000393dc9",
      "text": "\t[Facebook https://www.facebook.com/nishiohirokazu/posts/10219661603747170]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572855898,
      "updated": 1572855907
    },
    {
      "id": "5dbfe060aff09e0000393dca",
      "text": "\t\t昨日作った「距離が近いものをリンク」って仕組み: [リンク作成支援]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572855905,
      "updated": 1572856079
    },
    {
      "id": "5dbfe102aff09e0000420645",
      "text": "\t\t過去の記憶との間の距離を計算するところまでは、[主観と感情]で書いた[好奇心モジュール]と同じ。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856066,
      "updated": 1572856066
    },
    {
      "id": "5dbfe07eaff09e0000420642",
      "text": "\t\t\t「好奇心モジュール」は現時点では独立したページになっていないが、いずれなるべき",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572855935,
      "updated": 1572856015
    },
    {
      "id": "5dbfe07daff09e0000420641",
      "text": "\t\t今は単純なユークリッド距離だが、コサイン類似度を使う場合は内積注意と同じ形になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572855934,
      "updated": 1572856085
    },
    {
      "id": "5dbfe114aff09e0000420646",
      "text": "\t\t\tすると、[次元削減注意]で書いたようにDropoutを入れることで遠い連想ができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856085,
      "updated": 1573315735
    },
    {
      "id": "5dbfe0fcaff09e0000420643",
      "text": "\t\tベクトルがイコールであるものを除外したのはこれに関連してそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856060,
      "updated": 1572856127
    },
    {
      "id": "5dbfe142aff09e0000420648",
      "text": "\t\t\t[独立欲求装置]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856131,
      "updated": 1572856138
    },
    {
      "id": "5dbfe14aaff09e0000420649",
      "text": "\t\t[思考の結節点20191021]を振り返ってみる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856138,
      "updated": 1572856156
    },
    {
      "id": "5dbfe15baff09e000042064a",
      "text": "\t\t新しいインプットからもっとも近い過去の記憶をピックアップしてそこにリンクを張るのは、ピックアップするところが「連想」であり、それをストックしている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856156,
      "updated": 1572856167
    },
    {
      "id": "5dbfe13aaff09e0000420647",
      "text": "\t\t\t[連想のストック]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856123,
      "updated": 1572856180
    },
    {
      "id": "5dbfe174aff09e000042064c",
      "text": "\t\tどうなると好ましいかを記述できれば、方策は獲得できる可能性がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856180,
      "updated": 1572856189
    },
    {
      "id": "5dbfe17daff09e000042064d",
      "text": "\t\t\t[知識を編むプログラム]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856190,
      "updated": 1572856200
    },
    {
      "id": "5dbfe188aff09e000042064e",
      "text": "\t\tまだできてないこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856201,
      "updated": 1572856213
    },
    {
      "id": "5dbfe195aff09e000042064f",
      "text": "\t  入力Xに対して、もっとも近い記憶Yを見つけることはできているが、僕自身を観察すると僕は「両方を読んで、その刺激で新しいアウトプットをする」をしている、このプロセスはどうすれば実現できるのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856213,
      "updated": 1572856216
    },
    {
      "id": "5dbfe1baaff09e000042065a",
      "text": "\t  \t(11/4) ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856251,
      "updated": 1572856372
    },
    {
      "id": "5dbfe27caff09e000042065b",
      "text": "\t  \t\t連想の[指し示し] は原始的な形のアウトプット",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856445,
      "updated": 1572856693
    },
    {
      "id": "5dbfe28aaff09e000042065c",
      "text": "\t  \t\t[https://gyazo.com/857c98bddda2aea44a7675704de926e6]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856458,
      "updated": 1572856583
    },
    {
      "id": "5dbfe306aff09e000075169f",
      "text": "\t\t\t\t\tコンテンツを、元々与えられたのとは違う配列で組み合わせた場合、それに対応するベクトルも当然異なったものになる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856583,
      "updated": 1572856627
    },
    {
      "id": "5dbfe33daff09e000042065d",
      "text": "\t\t\t\t\t\tこの新たなベクトルからもっとも近いコンテンツを選んで指し示す行為は「コンテンツの新たな組み合わせを入力としてアウトプットをする行為」だ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856638,
      "updated": 1572856679
    },
    {
      "id": "5dbfe195aff09e0000420650",
      "text": "\t\t768次元のDropoutの仕方は2^768通りあるので、現実的に全探索が不可能。XとYがあるDropoutの下で連想されて、その繋がりが有益である場合に、それは「そのDropoutの方法が有益な抽象化である」という示唆をする。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856213,
      "updated": 1572856247
    },
    {
      "id": "5dbfe195aff09e0000420655",
      "text": "\t\t\t2つの点の接続「XとYの接続」というデータが、一つ上のレイヤーの別のデータ点なので、それもストックされるべきなのだな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856213,
      "updated": 1572856369
    },
    {
      "id": "5dbfe174aff09e000042064b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1572856180,
      "updated": 1572856180
    }
  ]
}