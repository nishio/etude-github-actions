{
  "id": "5fe1db5683b8c80022c601db",
  "title": "PAST2N",
  "created": 1608637270,
  "updated": 1608791995,
  "lines": [
    {
      "id": "5fe1db5683b8c80022c601db",
      "text": "PAST2N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637270,
      "updated": 1608637270
    },
    {
      "id": "5fe427dbaff09e000080ed7c",
      "text": "[https://gyazo.com/e061127462d65fbc91305c7902b100a7]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608787932,
      "updated": 1608787934
    },
    {
      "id": "5fe427ddaff09e000080ed7d",
      "text": "[N - ビルの建設 https://atcoder.jp/contests/past202004-open/tasks/past202004_n]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608787934,
      "updated": 1608787942
    },
    {
      "id": "5fe427e6aff09e000080ed7e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608787942,
      "updated": 1608787942
    },
    {
      "id": "5fe1db56aff09e0000997915",
      "text": "from [第二回 アルゴリズム実技検定]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608637271
    },
    {
      "id": "5fe1db56aff09e0000997916",
      "text": "PAST2N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608637271
    },
    {
      "id": "5fe40e41aff09e00002684df",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608781377,
      "updated": 1608781382
    },
    {
      "id": "5fe1db56aff09e0000997917",
      "text": "  ある点について50000件の正方形の中からそれを含むものを見つけてコストを加算する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608781382
    },
    {
      "id": "5fe1db56aff09e0000997918",
      "text": "  ただし線形オーダーでは間に合わない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608781382
    },
    {
      "id": "5fe1db56aff09e0000997919",
      "text": "  どうするか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608781382
    },
    {
      "id": "5fe1db56aff09e000099791a",
      "text": "  1次元だったら累積和の変動ポイントを記録しといて二分探索なのだが、今回は二次元だ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608781382
    },
    {
      "id": "5fe1db56aff09e000099791b",
      "text": " 　2次元いもす法かな？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608781382
    },
    {
      "id": "5fe1db56aff09e000099791c",
      "text": " 　　座標圧縮しても10^5なので二次元でやるのは無理っぽい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608781382
    },
    {
      "id": "5fe40e48aff09e00002684e0",
      "text": " 公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608781385,
      "updated": 1608781388
    },
    {
      "id": "5fe1db56aff09e000099791d",
      "text": " 　[平面走査法]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608781382
    },
    {
      "id": "5fe1db56aff09e000099791e",
      "text": "　改めて考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608637271,
      "updated": 1608785088
    },
    {
      "id": "5fe41d2faff09e0000e638aa",
      "text": "　　[長方形区間add]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608785200,
      "updated": 1608785225
    },
    {
      "id": "5fe41cc0aff09e0000e638a8",
      "text": "　　これは[クエリの先読み]が必要かな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608785088,
      "updated": 1608785308
    },
    {
      "id": "5fe41cd3aff09e0000e638a9",
      "text": "　　クエリごとにN件の正方形の処理をしたら個別の処理がどんなに速くても間に合わない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608785108,
      "updated": 1608785150
    },
    {
      "id": "5fe41d4eaff09e0000e638ab",
      "text": "　　区間の境界線も含むので混ぜて(y, x)でソート",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608785230,
      "updated": 1608787954
    },
    {
      "id": "5fe41cbbaff09e0000e638a7",
      "text": "　　[https://gyazo.com/2fd0b0bd0c92f206061c4b4ef25c4fec]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608785086,
      "updated": 1608785700
    },
    {
      "id": "5fe41f22aff09e0000e638ad",
      "text": "　実装",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608785700,
      "updated": 1608788381
    },
    {
      "id": "5fe42999aff09e0000e638ae",
      "text": "　　セグメント木を作ろうとして気づいた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608788378,
      "updated": 1608788389
    },
    {
      "id": "5fe429a5aff09e0000e638af",
      "text": "　　　値の範囲が10^9→[座標圧縮]必要",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608788390,
      "updated": 1608788414
    },
    {
      "id": "5fe41f21aff09e0000e638ac",
      "text": "　　[RangeAddは二つのPointAdd]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608785700,
      "updated": 1608789691
    },
    {
      "id": "5fe42ebbaff09e0000e638b1",
      "text": "　　RangeAddとReadが同じ座標で重なった時「正方形の角も正方形の内側」という仕様なので、開始のRangeAddはReadより先に処理されなければならない。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608789692,
      "updated": 1608789774
    },
    {
      "id": "5fe42f13aff09e0000e638b2",
      "text": "　　　逆に終了のRangeAddは後に処理されなければならない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608789779,
      "updated": 1608789797
    },
    {
      "id": "5fe42f26aff09e0000e638b3",
      "text": "　　　座標を0.5ずらそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608789799,
      "updated": 1608789808
    },
    {
      "id": "5fe431c0aff09e0000e638b4",
      "text": "　　サンプル1は通ったのにサンプル2で負の値が出てきた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790468,
      "updated": 1608790491
    },
    {
      "id": "5fe431daaff09e0000e638b7",
      "text": "　　　→座標圧縮したのにセグメント木に元の座標でアクセスしてたミス",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790491,
      "updated": 1608791995
    },
    {
      "id": "5fe4324aaff09e000080ed7f",
      "text": "　AC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790603,
      "updated": 1608790604
    },
    {
      "id": "5fe4324caff09e000080ed81",
      "text": "\t\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790604,
      "updated": 1608790624
    },
    {
      "id": "5fe43260aff09e000080ed82",
      "text": "\t\t def solve(N, Q, SS, QS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790624,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed83",
      "text": "       xs = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed84",
      "text": "       for x, _, width, _ in SS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed85",
      "text": "           xs.append(x)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed86",
      "text": "           xs.append(x + width)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed87",
      "text": "       for x, _ in QS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed88",
      "text": "           xs.append(x)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed89",
      "text": "       xs.sort()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed8a",
      "text": "       x2i = {}",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed8b",
      "text": "       for i, x in enumerate(xs):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed8c",
      "text": "           x2i[x] = i",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed8d",
      "text": "       i2x = xs",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed8e",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed8f",
      "text": "       commands = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed90",
      "text": "       for x, y, width, cost in SS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed91",
      "text": "           start = x2i[x]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed92",
      "text": "           end = x2i[x + width]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed93",
      "text": "           commands.append((",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed94",
      "text": "               y, start - 0.5,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed95",
      "text": "               \"add\",",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed96",
      "text": "               start, end, cost",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed97",
      "text": "           ))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed98",
      "text": "           commands.append((",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed99",
      "text": "               y + width, end + 0.5,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed9a",
      "text": "               \"add\",",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed9b",
      "text": "               start, end, -cost",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed9c",
      "text": "           ))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed9d",
      "text": "       for x, y in QS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed9e",
      "text": "           commands.append((",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080ed9f",
      "text": "               y, x2i[x],",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda0",
      "text": "               \"read\",",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda1",
      "text": "               None, None, None",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda2",
      "text": "           ))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda3",
      "text": "       commands.sort()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda4",
      "text": "       result = {}",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda5",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda6",
      "text": "       # segtree",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda7",
      "text": "       from operator import add",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda8",
      "text": "       set_width(len(x2i) + 10)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080eda9",
      "text": "       table = [0] * SEGTREE_SIZE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edaa",
      "text": "       for y, x, typ, start, end, cost in commands:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edab",
      "text": "           if typ == \"add\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edac",
      "text": "               # range add as two point_add",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edad",
      "text": "               point_set(table, start, get_value(table, start) + cost, add)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edae",
      "text": "               point_set(table, end + 1, get_value(table, end + 1) - cost, add)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edaf",
      "text": "           else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edb0",
      "text": "               # point read as range sum",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edb1",
      "text": "               v = range_reduce(table, 0, x + 1, add, 0)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edb2",
      "text": "               result[(i2x[x], y)] = v",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edb3",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edb4",
      "text": "       # print answer",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edb5",
      "text": "       for q in QS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edb6",
      "text": "           print(result[q])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790625
    },
    {
      "id": "5fe43260aff09e000080edb7",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608790625,
      "updated": 1608790626
    },
    {
      "id": "5fe42e7baff09e0000e638b0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608789630,
      "updated": 1608789630
    }
  ]
}