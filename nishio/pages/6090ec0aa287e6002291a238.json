{
  "id": "6090ec0aa287e6002291a238",
  "title": "Hatena2012-05-31",
  "created": 1338390000,
  "updated": 1338390000,
  "lines": [
    {
      "id": "6090ec2eaff09e00003dc238",
      "text": "Hatena2012-05-31",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc239",
      "text": "code:hatena",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc23a",
      "text": " <body>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc23b",
      "text": " *1338449206*JSXをインストールしようとしてSSLの動的リンクで失敗した日記",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc23c",
      "text": " 下のようなエラーが出たけど、sudo port upgrade opensslで直ったよ。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc23d",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc23e",
      "text": " >||",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc23f",
      "text": " JSX[master]$ make setup           ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc240",
      "text": " npm install",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc241",
      "text": " npm http GET https://registry.npmjs.org/browserbuild",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc242",
      "text": " dyld: lazy symbol binding failed: Symbol not found: _SSL_CTX_set_next_proto_select_cb",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc243",
      "text": "   Referenced from: /opt/local/bin/node",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc244",
      "text": "   Expected in: /opt/local/lib/libssl.1.0.0.dylib",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc245",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc246",
      "text": " dyld: Symbol not found: _SSL_CTX_set_next_proto_select_cb",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc247",
      "text": "   Referenced from: /opt/local/bin/node",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc248",
      "text": "   Expected in: /opt/local/lib/libssl.1.0.0.dylib",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc249",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc24a",
      "text": " make: *** [setup] Trace/BPT trap: 5",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc24b",
      "text": " ||<",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc24c",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc24d",
      "text": " *1338456208*JSXからjQueryを使ってDOMの情報を取得",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc24e",
      "text": " jQueryなどのような静的型付けのことを何も考えていないサードパーティ製のライブラリをJSXから使えるか？",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc24f",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc250",
      "text": " 使えたので報告。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc251",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc252",
      "text": " もっとハマるかと思ったけど意外と素直に書けた。mainの最初の1行と最後の2行で「jQueryで最初のpタグを取得してそのinnerTextを取得し、文字列として編集してからコンソール出力」をやっている。間の5行のlogは答えにたどり着く過程を残してある。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc253",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc254",
      "text": " >||",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc255",
      "text": " import \"js.jsx\";",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc256",
      "text": " class _Main {",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc257",
      "text": "     static function main(args : string[]) : void {",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc258",
      "text": "         var jQuery = js.global[\"$\"] as function(:string):variant;",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc259",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc25a",
      "text": "         log jQuery;",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc25b",
      "text": "         log jQuery(\"p\");",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc25c",
      "text": "         log (jQuery(\"p\") as __noconvert__ Map.<variant>);",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc25d",
      "text": "         log (jQuery(\"p\") as __noconvert__ Map.<variant>)[\"0\"];",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc25e",
      "text": "         log ((jQuery(\"p\") as __noconvert__ Map.<variant>)[\"0\"] as Map.<variant>)[\"innerText\"];",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc25f",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc260",
      "text": "         var value : string = ((jQuery(\"p\") as __noconvert__ Map.<variant>)[\"0\"] as Map.<variant>)[\"innerText\"] as string;",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc261",
      "text": "         log value + \"---\" + value;",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc262",
      "text": "     }",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc263",
      "text": " }",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc264",
      "text": " ||<",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc265",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc266",
      "text": " 実際に試してみたい人のために少し解説すると、これをmain.jsって名前でコンパイルして、下のようなHTMLから呼んでいる。実行するとコンソールに「hoge---hoge」と表示されるはずだ。Chromeで確認した。(追記: コードをきれいにしてgithubに置いといた https://github.com/nishio/learning_jsx/tree/master/use_jquery)",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc267",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc268",
      "text": " >||",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc269",
      "text": " <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"></script>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc26a",
      "text": " <script src=\"main.js\"></script>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc26b",
      "text": " <script>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc26c",
      "text": "   $(function(){",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc26d",
      "text": "     _Main$main$AS([]);",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc26e",
      "text": "   })",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc26f",
      "text": " </script>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc270",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc271",
      "text": " <p>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc272",
      "text": " hoge",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc273",
      "text": " ||<",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc274",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc275",
      "text": " ハマったところは4つ。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc276",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc277",
      "text": " コードと離れていて読みづらいのでコードを再掲: ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc278",
      "text": " >|javascript|",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc279",
      "text": "         var jQuery = js.global[\"$\"]",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc27a",
      "text": "             as function(:string):variant;",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc27b",
      "text": "         var value : string = (((",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc27c",
      "text": "             jQuery(\"p\") as Map.<variant>)",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc27d",
      "text": "             [\"0\"] as Map.<variant>)",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc27e",
      "text": "             [\"innerText\"] as string);",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc27f",
      "text": " ||<",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc280",
      "text": " まず文字列を引数に取る関数の型はfunction(string):variantではなくfunction(:string):variantというところ。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc281",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc282",
      "text": " 2つめは「Map は [\"console\"] みたく [] 演算子必須です」 by @kazuho",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc283",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc284",
      "text": " 3つ目はjQuery(\"p\") as Array.<variant>はnullになるところ。これはArrayに変換しようとするがArrayではないので失敗してnullになるのかな。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc285",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc286",
      "text": " で、__noconvert__を付けてみたのだが、そうするとjQuery(\"p\") instanceof Array == falseなんでアサートが発生してデバッガが呼ばれてしまう。これが4つ目。Mapはキーの型がstring固定なのでjQueryみたいに数値で添字付けされている「Array風オブジェクト」をどうしたらいいんだ？としばし悩んだが、\"0\" == 0だったはずだからもしかしていけるんじゃね？と文字列の\"0\"でアクセスしてみたら問題なくいけた。めでたしめでたし。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc287",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc288",
      "text": " というわけでjQueryなどのような静的型付けのことを何も考えていないサードパーティ製のライブラリとJSXを混ぜて使えるか？という疑問に関しては間違いなくYESだと言えるだろう。ここではvariantと明示的なキャストを使って型チェックを避けつつ進んだけど、たとえば：",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc289",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc28a",
      "text": " https://github.com/jsx/JSX/blob/master/lib/js/js/web.jsx",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc28b",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc28c",
      "text": " みたいな形でnative class Hogehogeって宣言をして、Hogehogeがどういう型のメンバを持っているかをJSXに教えてやればすんなり行くはず。それはまた今度試す。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc28d",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc28e",
      "text": " Google Closure Compilerだと、このnative class宣言みたいなextern宣言を使うか、それとも片付けされていないサードパーティライブラリを使っている関数をまるごと/** @suppress {checkType} */してでかい穴を開けるかしかないので、JSXがvariantやキャストという形で小さい抜け穴を作れるのはとても好感が持てる。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc28f",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc290",
      "text": " 続編：<a href='http://d.hatena.ne.jp/nishiohirokazu/20120531/1338462986'>JSXからjQueryを使ってDOMの情報を操作 その2</a>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc291",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc292",
      "text": " *1338462986*JSXからjQueryを使ってDOMの情報を操作 その2",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc293",
      "text": " jquery-1.7.jsxを作って、さっきの全部自分でキャストしていたバージョンに比べてだいぶ見やすくなりました。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc294",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc295",
      "text": " >||",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc296",
      "text": " import \"jquery-1.7.jsx\";",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc297",
      "text": " class _Main {",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc298",
      "text": "     static function main(args : string[]) : void {",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc299",
      "text": "         var value : string = jQuery.as_func(\"p\").get(0).innerHTML;",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc29a",
      "text": "         log value + \"---\" + value;",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc29b",
      "text": "         jQuery.as_func(\"p\").get(1).innerHTML = \"piyo\";",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc29c",
      "text": "     }",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc29d",
      "text": " }",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc29e",
      "text": " ||<",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc29f",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a0",
      "text": " つまづいたところはまず「関数であり、かつメンバも持っている」というUnionな型を定義する方法がない点。とりあえずjQuery.as_funcってメソッドで関数としてキャストしたものを返すようにしてみた。(しかしこういう実体のあるメソッドを持っているとnative classになれないかもしれない)",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a1",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a2",
      "text": " 次に、$(\"p\")の返り値の型はなんなのか、という点。これをxとすると、x[0]ができて、かつx.clickもできないといけない。Arrayにキャストすることはできないのでas_arrayってメソッドを作る訳にはいかない。かといってclassにするには0とか1って名前のメンバは作れないし…。classにして配列アクセスだけgetってメソッドを作ればいい？？",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a3",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a4",
      "text": " などと悩んでいるうちにもう夜の8時になってしまったのでひとまずできたところまで公開。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a5",
      "text": " https://github.com/nishio/learning_jsx/tree/master/use_native_class",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a6",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a7",
      "text": " use_native_classって書いたのにnative classまだ使ってない。そしてdevelopブランチに入れてある方は、$(\"p\").cssと同じ物がとれているように見えるのに、なぜかそれを呼ぶとWindowが返ってくるという謎の状態になっている。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a8",
      "text": " https://github.com/nishio/learning_jsx/blob/ac1ffde2d515d4d8a09a94ed3cbac2f023e81569/use_native_class/jquery-1.7.jsx",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2a9",
      "text": " (追記: あっ、わかった、関数を取ってからそれを呼んでいるせいで$(\"p\").cssの中のthisがWindowを指すようになっているんだな。つまりMapにキャストしたのは間違いということか。続編→<a href='http://d.hatena.ne.jp/nishiohirokazu/20120601/1338479302'>JSXに「このオブジェクトはfooを持っているはず」と教えるには</a>)",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2aa",
      "text": " ",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2ab",
      "text": " っていうかjQueryが型の意味では汚すぎるのが問題なんだと思うなぁ。字数を少し削減するためだけに「関数でもありオブジェクトでもあります」ってやるあたりとか。",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2ac",
      "text": " </body>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2ad",
      "text": " <comments>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2ae",
      "text": " <comment>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2af",
      "text": " <username>yksoft</username>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b0",
      "text": " <body>Firefoxだとundefined---undefinedになっちゃうようですね…。</body>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b1",
      "text": " <timestamp>1338458220</timestamp>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b2",
      "text": " </comment>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b3",
      "text": " <comment>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b4",
      "text": " <username>nishiohirokazu</username>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b5",
      "text": " <body>Firefoxのサポートはあんまり重視してないんじゃないですかね、web.jsxが重たすぎて動かないらしいですし。</body>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b6",
      "text": " <timestamp>1338472473</timestamp>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b7",
      "text": " </comment>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b8",
      "text": " </comments>",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2b9",
      "text": "",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2eaff09e00003dc2ba",
      "text": "[はてなダイアリー 2012-05-31 https://nishiohirokazu.hatenadiary.org/archive/2012/05/31]",
      "created": 1338390000,
      "updated": 1338390000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}