{
  "id": "60918444641521001c1ce0a3",
  "title": "Will/Can/Mustとアジャイル",
  "created": 1620149352,
  "updated": 1620189112,
  "lines": [
    {
      "id": "60918444641521001c1ce0a3",
      "text": "Will/Can/Mustとアジャイル",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620149352,
      "updated": 1620153676
    },
    {
      "id": "60919534aff09e0000e853a8",
      "text": "[不確実性]が高い状況において、Mustを事前に詳細に計画する方法は機能しにくい。そこでMustの抽象度を上げ、詳細は個人が決定できるようにする。そうすると個人は自分のWillとCanに基づいて具体的な計画を自己決定し、高速に変化への対応を行うことができるようになる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153652,
      "updated": 1620189108
    },
    {
      "id": "60919658aff09e0000e853ab",
      "text": "[OKR]における組織のObjectiveとは「抽象度の高いMust」である。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153945,
      "updated": 1620189112
    },
    {
      "id": "60919534aff09e0000e853a9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153652,
      "updated": 1620153652
    },
    {
      "id": "60919534aff09e0000e853aa",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153652,
      "updated": 1620153652
    },
    {
      "id": "6091948faff09e0000c260c6",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1389631273581174787]: [Will/Can/Must] の例の３つの円と、[アジャイルソフトウェア開発宣言]が同一のものに思えてきた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153488,
      "updated": 1620154764
    },
    {
      "id": "6091998baff09e00000238cb",
      "text": "> Mustしかないと大規模にやって大規模にコケる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154764,
      "updated": 1620154768
    },
    {
      "id": "60919990aff09e00000238cc",
      "text": "> WillとCanがあると、ピボットして小さく実験できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154768,
      "updated": 1620154772
    },
    {
      "id": "60919994aff09e00000238cd",
      "text": "> なんか、そういうことなんだな…… それだけの話なんだな……",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154772,
      "updated": 1620154772
    },
    {
      "id": "609197e6aff09e000044ef62",
      "text": "\t[https://gyazo.com/3b0e43503854b840333a9975a55566a7]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154342,
      "updated": 1620154424
    },
    {
      "id": "60919838aff09e00000238c3",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154424,
      "updated": 1620154424
    },
    {
      "id": "609197e7aff09e000044ef65",
      "text": ">[perigsk https://twitter.com/perigsk/status/1389632704598052866]: もしよろしければ、1枚目の図が掲載されている書籍を教えていただきたいです",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154344,
      "updated": 1620154344
    },
    {
      "id": "609197e6aff09e000044ef63",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154342,
      "updated": 1620154342
    },
    {
      "id": "609197eeaff09e000044ef66",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1389633041052495872]: will can mustは様々な書籍やWebで紹介されているので、これといっておすすめの本はないのですが、この図は以下の書籍からです。 ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154350,
      "updated": 1620154390
    },
    {
      "id": "609197eeaff09e000044ef67",
      "text": "\t[チームのことだけ、考えた]。――[サイボウズ]はどのようにして「100人100通り」の働き方ができる会社になったか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154351,
      "updated": 1620154441
    },
    {
      "id": "6091981daff09e00000238c2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154398,
      "updated": 1620154398
    },
    {
      "id": "60919490aff09e0000c260c8",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1389635335491969027]: つまり、なんで従来の企業が機能不全に陥っているのか、なぜDXをしなくてはいけないのかというと、 社会の変化速度が上がることで、Mustが機能不全を起こして、Mustをベースとした業務遂行ができなくなっている ソフトウェアのアジリティを生かすにはWillとCanが必須、Mustは次善 こういうことかなー",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260c9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260ca",
      "text": ">[nishio https://twitter.com/nishio/status/1389640154046820352]: 「Mustが機能不全を起こす」とはどういうこと？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260cb",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260cc",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1389640918723006464]: ソフトウェア会社の躍進による社会の変化速度の上昇 -> 不確実性の上昇 -> 事前の計画に基づく事業(Must)ではアジリティを保てなくなってきている -> 変更可能性の高いソフトウェアを支配下に置くことで、アジリティを獲得する必要がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260cd",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260ce",
      "text": ">[nishio https://twitter.com/nishio/status/1389641765586554884]: 事前の計画に基づく事業(Must)がアジリティを保てないという時に、CanやWillはどう機能する？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260cf",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d0",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1389642230760046594]: 失敗を伴う低コストな探索に対してコストを支払うことができるようになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620154467
    },
    {
      "id": "60919863aff09e00000238c4",
      "text": "> Canが無ければ外注になり低コストにはできない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154467,
      "updated": 1620154470
    },
    {
      "id": "60919865aff09e00000238c5",
      "text": "> Willが無ければ失敗による痛みに耐えられない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154470,
      "updated": 1620154470
    },
    {
      "id": "60919490aff09e0000c260d1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d2",
      "text": ">[nishio https://twitter.com/nishio/status/1389644173389692929]: なるほど、つまり「作業する一個人」に注目した場合に「やるべきことMust」が会社や上司から与えられ、できるようになり、実行するというやり方では遅くて、自分がやりたいWillできるCanことを先にやる必要があるがWillがなければ失敗回避するしCanがなければオーバーヘッドがでかい、と。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d3",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d4",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1389645007540289538]: その書き方だと現場が暴走しているように見えるので、デザイン思考による探索とか、アジャイル開発によるすり合わせとか、不確実性を前提に現場に権限移譲をする、という言い方かなー",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d6",
      "text": ">[nishio https://twitter.com/nishio/status/1389645777509654529]: 「計画に従うことよりも変化への対応」の「計画」をMustと呼んでいて、それは「詳細度の高いMust」であり、マイクロマネジメント。もっと「抽象度の高いMust」「組織のOKR」だけ与えて詳細の決定を個人に移譲すれば個人のWillとCanに基づいて高速な試行錯誤ができる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d7",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d8",
      "text": ">[nishio https://twitter.com/nishio/status/1389646181773443075]: 「詳細計画権の現場への移譲」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260d9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260da",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1389647292353761282]: なるほど、アジャイル宣言における「計画」と、Mustを過度にマッピングしすぎていたようですね",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620154490
    },
    {
      "id": "60919879aff09e00000238c6",
      "text": "> 抽象度の高いMust（それはMustではなくObjectiveなのでは……）があればいいというのはそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154490,
      "updated": 1620154490
    },
    {
      "id": "60919490aff09e0000c260db",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260dc",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1389648400472178689]: WillとCanがあると、部署のObjectiveから個人のMustを作れる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620154499
    },
    {
      "id": "60919882aff09e00000238c7",
      "text": "> Mustは外から与えられる必要がなくなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154499,
      "updated": 1620154503
    },
    {
      "id": "60919886aff09e00000238c8",
      "text": "> 計画の詳細変更権を得ることができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154503,
      "updated": 1620154505
    },
    {
      "id": "60919888aff09e00000238c9",
      "text": "> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154505,
      "updated": 1620154505
    },
    {
      "id": "60919889aff09e00000238ca",
      "text": "> なるほど、OKRの価値の一つはこれか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620154505,
      "updated": 1620154510
    },
    {
      "id": "60919490aff09e0000c260dd",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260de",
      "text": ">[nishio https://twitter.com/nishio/status/1389648875166736384]: 最初「Mustが機能不全」ってのがピンと来なかったのだが、事前に詳細にMustを言語化しようとしているなら、それが不確実性の高い状況で機能不全になるのはわかりやすい。不確実であるからMustの抽象度を上げる必要があり、それはObjectiveに近づいていく、ということね。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620154215
    },
    {
      "id": "60919490aff09e0000c260df",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620153489
    },
    {
      "id": "60919490aff09e0000c260e0",
      "text": ">[nishio https://twitter.com/nishio/status/1389649791341060097]: なお僕のサイボウズにおけるMustは「中長期的視点で[チームワークあふれる社会]の創造に寄与すること」だと思ってます。それくらいの抽象度。まあ研究部門であることと長年の活動で細かい指示をしなくても有益そうなことをしそうだという信頼が培われてるって前提はあるので新入社員がどうかは別だが。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620153489,
      "updated": 1620154719
    }
  ]
}