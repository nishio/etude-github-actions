{
  "id": "6090ec05a287e6002291a0ff",
  "title": "Hatena2010-09-02",
  "created": 1283353200,
  "updated": 1283353200,
  "lines": [
    {
      "id": "6090ec29aff09e00003d733c",
      "text": "Hatena2010-09-02",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d733d",
      "text": "code:hatena",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d733e",
      "text": " <body>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d733f",
      "text": " *1283433244*LLの身軽さ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7340",
      "text": " >>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7341",
      "text": " @shnsk Q. Javaでなくて，Pythonの方がプロトタイピングに向いているシーンって，どこだろう #spro2010",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7342",
      "text": " <<",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7343",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7344",
      "text": " たとえば",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7345",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7346",
      "text": " >>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7347",
      "text": " [10/09/02 21:26:21] Y: 社内勉強会でScalaでこれを解く、というのが出されたから解いた",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7348",
      "text": " [10/09/02 21:26:22] Y: http://recruit.drecom.co.jp/event2010",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7349",
      "text": " [10/09/02 21:28:58] N: 重たい",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d734a",
      "text": " [10/09/02 21:29:04] N: ぷれーんてきすとでおけ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d734b",
      "text": " [10/09/02 21:29:27] N: ふむ、問題読んだ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d734c",
      "text": " [10/09/02 21:29:54] Y: 7110を含むフィボナッチ数列で、",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d734d",
      "text": " 初期値の組み合わせが一番小さいものをあげろ。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d734e",
      "text": " ※自然数に限る",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d734f",
      "text": " [10/09/02 21:30:02] Y: ぷれーんてきすと",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7350",
      "text": " [10/09/02 21:32:25] N: 解けた",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7351",
      "text": " [10/09/02 21:33:44] N: http://gist.github.com/561961",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7352",
      "text": " [10/09/02 21:33:45] N: 答え",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7353",
      "text": " <<",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7354",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7355",
      "text": " 3分ではEclipseを起動しただけで終わってしまう！",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7356",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7357",
      "text": " *1283437962*Pretty Print 7",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7358",
      "text": " さて、ここしばらくいじっていたpretty printだが、そろそろちゃんと動いたことに満足して関心が薄れてきたので、今までの経験上「ここでなんとなくほったらかすとしばらくしてからどういう状態だったのかわからなくなる！」と思って一気にリポジトリの公開とPython Package Indexに入れるところまでやっつけた。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7359",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d735a",
      "text": " <a href='http://pypi.python.org/pypi?:action=display&name=prettier&version=0.92'>Python Package Index : prettier 0.92</a>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d735b",
      "text": " <a href='https://bitbucket.org/nishio/prettierprint/src'>nishio / prettierprint / source &#8212; bitbucket.org</a>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d735c",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d735d",
      "text": " ** ここまでのストーリーのおさらい。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d735e",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20100825/1282701893'>Pythonいじり2</a>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d735f",
      "text": " -- Pythonで対話的実行の時に入力したコードの構文木を表示するようにしてみたが、構文木が長くなると適当に改行してくれないとみにくい。調べてみたらRubyはとある論文に基づいてprettyprint.rbを実装している。サンプルコードがHaskellで2ページ程度、これを移植すればいいんじゃない？",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7360",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20100826/1282828185'>PrettyPrint 1</a>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7361",
      "text": " -- とりあえず気合でHaskellで書かれたサンプルコードを逐語訳。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7362",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20100827/1282875637'>Pretty Print 2</a>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7363",
      "text": " -- テスト",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7364",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20100827/1282915401'>Pretty Print 3</a>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7365",
      "text": " -- テストのカバレッジを100%に。あとすごく遅い現象を発見して、それは遅延評価じゃなくなったせいだった。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7366",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20100829/1283096041'>Pretty Print 4</a>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7367",
      "text": " -- 元コードのutilityに入っていたspreadって関数は与えられたドキュメントのリストを水平に並べるものだが、それを「1行になる」と期待して使ったらならなかったのではまった話。っていうか今思うと1行になるようにするのがAPIの設計としては適切じゃないかという気がする。あと空白文字を挟んでつなげるのと改行を挟んでつなげるのの2つのユーティリティ関数が実装されていたがそんな決め打ちのセパレータじゃなくてPythonの\", \".join(xs)みたいに引数として渡せるべきじゃないの。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7368",
      "text": " -- まあここでもともと僕が欲しかった機能はサポート完了",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7369",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20100829/1283096543'>Pretty Print 6</a>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d736a",
      "text": " -- チューニング。最初に逐語訳をしたときに考えていた最適化をおおよそ実装し終わる。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d736b",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d736c",
      "text": " ** 今後について",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d736d",
      "text": " まずセパレータとかインデントの幅とかが決め打ちなのは変更できるべき。Haskell的に表現するなら各種の関数が設定の入ったenvを引数に取るようにするべきで、Python的には「somethingが毎回渡される関数の群れ」ってのは要するに「あるクラスのメソッドたち」なわけだ。だからPrettyPrinterってクラスを作ってその中に移動するのがよかろう。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d736e",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d736f",
      "text": " APIは若干整理の必要がある。論文に書いてあったのでそのまま実装したけど、fillwordsとか必要ないし。コア部分に関してはHaskell前提で書かれているものの直訳だから、Python前提で0から書けばもっと見やすくなるかも知れないなーという気がする。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7370",
      "text": " ",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7371",
      "text": " 最終的に標準ライブラリのpprintを置き換えられる性能・機能になれればいいなぁ。",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7372",
      "text": " </body>",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7373",
      "text": "",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7374",
      "text": "[はてなダイアリー 2010-09-02 https://nishiohirokazu.hatenadiary.org/archive/2010/09/02]",
      "created": 1283353200,
      "updated": 1283353200,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}