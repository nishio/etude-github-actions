{
  "id": "6090ebf8a287e60022919e59",
  "title": "Hatena2008-06-11",
  "created": 1213110000,
  "updated": 1213110000,
  "lines": [
    {
      "id": "6090ec1daff09e00003ca7d2",
      "text": "Hatena2008-06-11",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7d3",
      "text": "code:hatena",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7d4",
      "text": " <body>",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7d5",
      "text": " *1213193104*10年ぶりに見た映像",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7d6",
      "text": " <a href=\"http://jp.youtube.com/watch?v=2euIir_2big\">YouTube - 機動戦艦ナデシコ　あなたの一番になりたい</a>",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7d7",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7d8",
      "text": " >>",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7d9",
      "text": " 『機動戦艦ナデシコ』（きどうせんかん-）はSF・ラブコメアニメ。1996年10月1日から1997年3月25日までテレビ東京系で放送された。--- <a href=\"http://ja.wikipedia.org/wiki/%E6%A9%9F%E5%8B%95%E6%88%A6%E8%89%A6%E3% 83%8A%E3%83%87%E3%82%B7%E3%82%B3\">機動戦艦ナデシコ - Wikipedia</a>",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7da",
      "text": " <<",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7db",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7dc",
      "text": " テレビで見てからもう10年以上経つんだな。っていうかこんなに声低かったっけ？！こんな顔だったっけ？！あと見たこと無い人に見せたら服がエロいっていわれたorz 歌詞だよ歌詞！歌詞を聴いてよ！＞＜",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7dd",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7de",
      "text": " 歌詞→<a href=\"http://www.jtw.zaq.ne.jp/animesong/ki/nadesiko/anata.html\">あなたの一番になりたい</a>",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7df",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e0",
      "text": " *1213194290*不動点を求める関数の導出",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e1",
      "text": " 月曜日にgrassの話題で盛り上がったときにふと思った疑問を行き帰りの電車の中とかでずっと考えている。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e2",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e3",
      "text": " このエントリーでは、あえて一般的に使われる表記ではなくて、僕が一番わかりやすいと思う表記を使ってみる。つまり、「引数をそのまま返す関数I」は (\\x -> x) で、「引数xをとって『どんな引数で呼ばれても必ずxを返す関数』を返す関数K」は (\\x -> (\\y -> x)) で、「関数fを引数xで呼ぶ(またはxに関数fを適用する？)」は f(x) と表記することにする。イコールは代入ではなく「同じ物」という意味。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e4",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e5",
      "text": " ある関数fについて考える。あるxについて、 f(x) = x が成り立つとき、つまり、xに関数fを適用しても変化しないとき、「xはfの不動点」という。どんなものでもIの不動点。xはK(x)の不動点。Kの不動点は何？？",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e6",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e7",
      "text": " ある関数fが与えられたときに、その不動点を求めたい。ある「不動点を求める関数」Yがあって、Y(f) が f の不動点になるといいな。つまり、Y(f) = f(Y(f)) = f(f(Y(f)) = ...",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e8",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7e9",
      "text": " どういう関数ならこの条件を満たすか？",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7ea",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7eb",
      "text": " まず I = (\\x -> x) だったらどうか？ I(f) = f これじゃぜんぜん足りない。 I(f) = f(I(f)) になって欲しいわけなのでぜんぜん足りない。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7ec",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7ed",
      "text": " じゃぁ、M = (\\x -> x(x)) だったらどうか？ M(f) = f(f) ちょっと近づいた。M(f) = f(M(f)) になって欲しいんだ。中身がM(f)になって欲しいんだな。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7ee",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7ef",
      "text": " だったら、N = (\\x -> x(M(x))) ならどうだ？ N(f) = f(M(f)) だいぶゴールに近づいた。でもこれを繰り返していてもゴールにはたどり着けない感じがする。一歩飛躍が必要だ。表現力が足りない。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f0",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f1",
      "text": " もう一個引数を増やしてみる。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f2",
      "text": " (\\x, y -> ...)という形の関数を考える。たとえば F = (\\x, y -> x(y)) なら、F(f) = (\\y -> f(y)) になる。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f3",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f4",
      "text": " F(f) = f(F(f)) になって欲しいんだった。F(f)にもう一個何か引数を渡すと、今ならF(f)(y) = f(y) になっている。これが、F(f)(y) = f(F(f)(y))になるようなFとyがあればいいんだ。yがxの関数であれば、(\\x -> F(x)(y))が求めているYになる。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f5",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f6",
      "text": " F = (\\x, y -> x(y)) ではどうしても話がふくらまないので、1引数の時にやったようにyをふくらませてみる。 L = (\\x, y -> x(y(y)))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f7",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f8",
      "text": " L(x)(y) = x(y(y))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7f9",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7fa",
      "text": " L(x)(y) = x(L(x)(y))になってほしいんだった。お、ゴールは目前だ。上の式と見比べると、y = L(x) にするとよさそうな気配がする。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7fb",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7fc",
      "text": " y = L(x) なら L(x)(y) = L(x)(L(x)) で、L(x)(y) = x(y(y)) = x(L(x)(L(x))) 二つを見比べる。Y = (\\x -> L(x)(L(x))) とおけば Y(x) = x(Y(x)) だ！できた！",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7fd",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7fe",
      "text": " 展開してみよう。L = (\\x, y -> x(y(y))) だったので、L(x) = (\\y -> x(y(y)))。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca7ff",
      "text": " Y = (\\x -> L(x)(L(x))) = (\\x -> (\\y -> x(y(y)))((\\y -> x(y(y)))))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca800",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca801",
      "text": " Yコンビネータができたはずだけど、これがどう再帰呼び出しにつながっていくのかがわからない。第1引数が関数で第2引数が整数な関数(\\f, n -> ...)をYコンビネータにつっこんで再帰呼び出しとかしている例はよく見かけるけど、それじゃy(y)のところで整数がcallableじゃないのでエラーになるよね。まだいくつかピースが足りていない。明日も電車で考える。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca802",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca803",
      "text": " -----",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca804",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca805",
      "text": " 困ったときのPython頼み。Yが上の定義で、Y2が再帰呼び出しにYコンビネータが使えるという文脈でよく出てくるコードと、それを上に出てきたMコンビネータを使ってシンプルに書いたもの。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca806",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca807",
      "text": " >|python|",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca808",
      "text": " >>> Y = (lambda x: (lambda y: x(y(y)))(lambda y: x(y(y))))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca809",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca80a",
      "text": " >>> Y2 = (lambda f:((lambda g: f(lambda x: g(g)(x)))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca80b",
      "text": " \t          (lambda g: f(lambda x: g(g)(x)))))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca80c",
      "text": " >>> Y2(lambda f: lambda n: n and n * f(n - 1) or 1)",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca80d",
      "text": " <function <lambda> at 0x00DBEAB0>",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca80e",
      "text": " >>> _(5)",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca80f",
      "text": " 120",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca810",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca811",
      "text": " >>> M = lambda x: x(x)",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca812",
      "text": " >>> Y2 = (lambda f: M(lambda g: f(lambda x: g(g)(x))))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca813",
      "text": " <function <lambda> at 0x00DBEAF0>",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca814",
      "text": " >>> _(5)",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca815",
      "text": " 120",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca816",
      "text": " ||<",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca817",
      "text": " ",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca818",
      "text": " 間にlambda xが挟まっている。これの存在意義を明日電車で考える。",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca819",
      "text": " >||",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca81a",
      "text": " >>> Y =  (lambda x: M(lambda y: x(          y(y)   )))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca81b",
      "text": " >>> Y2 = (lambda f: M(lambda g: f(lambda x: g(g)(x))))",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca81c",
      "text": " ||<",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca81d",
      "text": " </body>",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca81e",
      "text": "",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1daff09e00003ca81f",
      "text": "[はてなダイアリー 2008-06-11 https://nishiohirokazu.hatenadiary.org/archive/2008/06/11]",
      "created": 1213110000,
      "updated": 1213110000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}