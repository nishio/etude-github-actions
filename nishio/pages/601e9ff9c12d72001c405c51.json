{
  "id": "601e9ff9c12d72001c405c51",
  "title": "ABC191",
  "created": 1612619779,
  "updated": 1612707627,
  "lines": [
    {
      "id": "601e9ff9c12d72001c405c51",
      "text": "ABC191",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612619779,
      "updated": 1612619780
    },
    {
      "id": "601ea077aff09e00006bc76f",
      "text": "D苦手…WAが解決しない…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612619896,
      "updated": 1612619896
    },
    {
      "id": "601ea077aff09e00006bc770",
      "text": "飛ばしてEはダイクストラでさっと解いて、残り30分",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612619896,
      "updated": 1612619904
    },
    {
      "id": "601ea07faff09e00006bc771",
      "text": "DをやるかFをやるかでFを考察する方が学びがありそうと判断し「いくつかの数のgcdであってmin以下のものの数」でサンプルは通ったがやっぱりTLE。この時点で残り13分なので残りはDをしてたけど最後まで解決せず4問",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612619904,
      "updated": 1612619934
    },
    {
      "id": "601ea0bfaff09e00006bc773",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612619968,
      "updated": 1612619968
    },
    {
      "id": "601ea0b5aff09e00006bc772",
      "text": "あー、そうか。Dは「10000倍して整数で扱おう…って二次関数の解を求めるところで平方根が出てくるじゃん…」となってたけど、そこを二分探索で求めるのか。数学的にはO(1)で解けるのでそれに無意識にこだわってしまったが、O(logR)でも間に合う、と。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612619958,
      "updated": 1612620024
    },
    {
      "id": "601ea0fcaff09e00001e9723",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620029,
      "updated": 1612620029
    },
    {
      "id": "601ea0fdaff09e00001e9724",
      "text": "Fは「いくつかの数のgcdであってmin以下のものの数」だと看破したのは正解であった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620029,
      "updated": 1612634310
    },
    {
      "id": "601ed8c6aff09e00005ef2a0",
      "text": "それを効率よく求める方法が思いつけるとよかった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634310,
      "updated": 1612634310
    },
    {
      "id": "601ea150aff09e00001e9725",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620113,
      "updated": 1612620113
    },
    {
      "id": "601ea004aff09e00006bc76d",
      "text": "[https://gyazo.com/11f20f1d7f862d6ea4fde7731ce46ca4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612619780,
      "updated": 1612619860
    },
    {
      "id": "601ea053aff09e00006bc76e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612619860,
      "updated": 1612619860
    },
    {
      "id": "601eab6daff09e00001e9731",
      "text": "水色に落ちるかなと思ったが、意外と+3だった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612622701,
      "updated": 1612622720
    },
    {
      "id": "601eab5eaff09e00006bc7ac",
      "text": "[https://gyazo.com/eb5db44a3f3f5b810b54a1c41e614c55]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612622687,
      "updated": 1612622688
    },
    {
      "id": "601eab60aff09e00006bc7ad",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612622688,
      "updated": 1612622688
    },
    {
      "id": "601ed8cfaff09e00005ef2a2",
      "text": "[https://gyazo.com/3a4098e5ac9f0a03bf0a1639e4628c98]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634319,
      "updated": 1612634321
    },
    {
      "id": "601ed8d0aff09e00005ef2a4",
      "text": "なるほど、DとFがかなり難易度高いのか。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634321,
      "updated": 1612634528
    },
    {
      "id": "601ed8cfaff09e00005ef2a3",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634319,
      "updated": 1612634319
    },
    {
      "id": "601ea167aff09e00001e9726",
      "text": "[C - Digital Graffiti https://atcoder.jp/contests/abc191/tasks/abc191_c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620136,
      "updated": 1612634091
    },
    {
      "id": "601ed7d9aff09e00005ef295",
      "text": "[https://gyazo.com/1a741c4111bc4f5db792ae0c93d2b057]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634073,
      "updated": 1612634079
    },
    {
      "id": "601ed7deaff09e00005ef296",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634079,
      "updated": 1612634079
    },
    {
      "id": "601ea169aff09e00001e9728",
      "text": " 塗られるマスの四隅の角について「なければ追加、既にあるなら取り除く」をやる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620138,
      "updated": 1612620185
    },
    {
      "id": "601ea198aff09e00001e9729",
      "text": " [https://gyazo.com/8f0bc7be1602e914181bc557889c5ef7]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620185,
      "updated": 1612620346
    },
    {
      "id": "601ea23aaff09e00001e972a",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620346,
      "updated": 1612620849
    },
    {
      "id": "601ea431aff09e00006bc791",
      "text": "\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620850,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc792",
      "text": "      H, W = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc793",
      "text": "      world = OneDimensionMap(H, W, 0)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc794",
      "text": "      for pos in world.allPosition():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc795",
      "text": "          if world.mapdata[pos] == 35:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620874
    },
    {
      "id": "601ea43faff09e00006bc796",
      "text": "              start = pos",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc797",
      "text": "              break",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc798",
      "text": "      corner = set()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc799",
      "text": "      visited = set()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc79a",
      "text": "      DIR4 = world.dir4()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc79b",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc79c",
      "text": "      def visit(pos):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc79d",
      "text": "          visited.add(pos)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc79e",
      "text": "          x, y = divmod(pos, W)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc79f",
      "text": "          for xy in [(x, y), (x + 1, y), (x, y + 1), (x + 1, y + 1)]:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a0",
      "text": "              if xy in corner:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a1",
      "text": "                  corner.remove(xy)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a2",
      "text": "              else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a3",
      "text": "                  corner.add(xy)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a4",
      "text": "          for dir in DIR4:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a5",
      "text": "              newpos = pos + dir",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a6",
      "text": "              if world.mapdata[newpos] == 35 and newpos not in visited:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a7",
      "text": "                  visit(newpos)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a8",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7a9",
      "text": "      visit(start)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7aa",
      "text": "      print(len(corner))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612620864
    },
    {
      "id": "601ea43faff09e00006bc7ab",
      "text": "　公式解説を見るともっとシンプルに書けることがわかる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620864,
      "updated": 1612623904
    },
    {
      "id": "601eb01faff09e00001e9736",
      "text": "　　なければ足して、あれば取る、というのは要するに「処理が行われた回数が奇数回か？」ということと同値",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612623904,
      "updated": 1612623909
    },
    {
      "id": "601eb025aff09e00001e9737",
      "text": "　　それが知りたいだけなら、足し算の順序は入れ替えても同じなので隣接順に処理する必要はない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612623909,
      "updated": 1612623926
    },
    {
      "id": "601eb18caff09e00001e9739",
      "text": "　　これでAC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624268,
      "updated": 1612624274
    },
    {
      "id": "601eb047aff09e00001e9738",
      "text": "　　code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612623943,
      "updated": 1612624253
    },
    {
      "id": "601eb17daff09e00006bc7b0",
      "text": "　　 def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624253,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b1",
      "text": "       H, W = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b2",
      "text": "       world = OneDimensionMap(H, W, 0)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b3",
      "text": "       from collections import defaultdict",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b4",
      "text": "       cornerCount = defaultdict(int)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b5",
      "text": "       for pos in world.allPosition():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b6",
      "text": "           if world.mapdata[pos] == 35:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b7",
      "text": "               for d in [0, 1, W, 1 + W]:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b8",
      "text": "                   cornerCount[pos + d] += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7b9",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7ba",
      "text": "       print(sum(v % 2 for v in cornerCount.values()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624254
    },
    {
      "id": "601eb17daff09e00006bc7bb",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624254,
      "updated": 1612624281
    },
    {
      "id": "601ed7f1aff09e00005ef297",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634098,
      "updated": 1612634098
    },
    {
      "id": "601ea256aff09e00001e972b",
      "text": "[E - Come Back Quickly https://atcoder.jp/contests/abc191/tasks/abc191_e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620374,
      "updated": 1612634127
    },
    {
      "id": "601ed7f3aff09e00005ef298",
      "text": "[https://gyazo.com/09e4ac9d774ae0eabc238dcfc4bf3380]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634099,
      "updated": 1612634123
    },
    {
      "id": "601ea25baff09e00001e972c",
      "text": " 自己辺や多重辺があることに注意が必要",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620380,
      "updated": 1612620413
    },
    {
      "id": "601ea27faff09e00001e972d",
      "text": " 多重辺は一番短いものだけ残しておく`# (2)`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620415,
      "updated": 1612620804
    },
    {
      "id": "601ea2dbaff09e00001e9730",
      "text": " 　辺 `edges[i][j]`で持ってるので多重辺を持つの面倒だったから",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620508,
      "updated": 1612620555
    },
    {
      "id": "601ea29faff09e00001e972e",
      "text": " 各点から[ダイクストラ法]で他の点への距離を求める(`dist`) `# (3)`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620447,
      "updated": 1612623619
    },
    {
      "id": "601ea2b7aff09e00001e972f",
      "text": " `edges[i][i]`と`dist[i][j] + dist[j][i]`[$ (i \\neq j)]の中で最小のものを見つければ良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620471,
      "updated": 1612620696
    },
    {
      "id": "601eaf53aff09e00006bc7ae",
      "text": " `# (1)`について",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612623699,
      "updated": 1612623730
    },
    {
      "id": "601eaf72aff09e00001e9732",
      "text": " 　辺に重みのあるグラフは普段は`defaultdict(dict)`で扱ってる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612623731,
      "updated": 1612623830
    },
    {
      "id": "601eafd6aff09e00001e9733",
      "text": " 　のだけど、今回`# (4)`でアクセスする時に値が存在するかどうかチェックするのめんどいなと思った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612623830,
      "updated": 1612623862
    },
    {
      "id": "601eafe2aff09e00001e9734",
      "text": " 　ので、値が存在しない時INFになるようにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612623843,
      "updated": 1612623843
    },
    {
      "id": "601eafe8aff09e00001e9735",
      "text": " 　普段からこれでいいな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612623849,
      "updated": 1612623854
    },
    {
      "id": "601ea169aff09e00001e9727",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620138,
      "updated": 1612620723
    },
    {
      "id": "601ea3b2aff09e00006bc775",
      "text": "\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc776",
      "text": "      N, M = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc777",
      "text": "      from collections import defaultdict",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc778",
      "text": "      INF = 9223372036854775807",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc779",
      "text": "      edges = defaultdict(lambda: defaultdict(lambda: INF))  # (1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620750
    },
    {
      "id": "601ea3b3aff09e00006bc77a",
      "text": "      for _i in range(M):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc77b",
      "text": "          frm, to, cost = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc77c",
      "text": "          # -1 for 1-origin vertexes",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc77d",
      "text": "          edges[frm-1][to-1] = min(edges[frm-1][to-1], cost)  # (2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620754
    },
    {
      "id": "601ea3b3aff09e00006bc77e",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc77f",
      "text": "      dist = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc780",
      "text": "      for start in range(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc781",
      "text": "          dist.append(one_to_all(start, N, edges, INF=INF))  # (3)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620795
    },
    {
      "id": "601ea3b3aff09e00006bc782",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc783",
      "text": "      for i in range(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc784",
      "text": "          x = INF",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc785",
      "text": "          for j in range(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc786",
      "text": "              if j == i:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc787",
      "text": "                  x = min(x, edges[i][i])  # (4)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612623770
    },
    {
      "id": "601ea3b3aff09e00006bc788",
      "text": "              else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc789",
      "text": "                  x = min(x, dist[i][j] + dist[j][i])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc78a",
      "text": "          if x == INF:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc78b",
      "text": "              print(-1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc78c",
      "text": "          else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc78d",
      "text": "              print(x)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620723
    },
    {
      "id": "601ea3b3aff09e00006bc78e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620723,
      "updated": 1612620724
    },
    {
      "id": "601ea3afaff09e00006bc774",
      "text": "[F - GCD or MIN https://atcoder.jp/contests/abc191/tasks/abc191_f]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612620720,
      "updated": 1612634178
    },
    {
      "id": "601ed839aff09e00005ef29a",
      "text": "[https://gyazo.com/f96883d47e47026ec6ee1ce02b352d83]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634170,
      "updated": 1612634173
    },
    {
      "id": "601eb33eaff09e00001e973c",
      "text": "　値はソートされていると考えて一般性を失わない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624703,
      "updated": 1612624718
    },
    {
      "id": "601eb22caff09e00006bc7bd",
      "text": "\t小さい例を考える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624429,
      "updated": 1612624642
    },
    {
      "id": "601eb301aff09e00001e973a",
      "text": "\t　値が二つの時、A2がA1の倍数なら1通り、違うなら2通り",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624642,
      "updated": 1612624742
    },
    {
      "id": "601eb22baff09e00006bc7bc",
      "text": "　　リアルタイムのメモを見るとここからすぐ「A1より小さいgcd(Ai, Aj)の個数を調べれば良い」と結論してるけど、なんでそうなったんだっけ…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624428,
      "updated": 1612624817
    },
    {
      "id": "601eb3b1aff09e00001e973d",
      "text": "　　gcdは取る順番によらないから引数は集合として考えてよくて、Aの部分集合のgcdがA1より小さくなった時にはそれを解にする手順が存在する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624817,
      "updated": 1612625098
    },
    {
      "id": "601eb4d6aff09e00001e973e",
      "text": "　問題はこれをどうやって効率よく計算するかで、素朴な2^Nは当然無理なので悩ましい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625111,
      "updated": 1612625180
    },
    {
      "id": "601eb51caff09e00001e973f",
      "text": "　　4TLE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625180,
      "updated": 1612625512
    },
    {
      "id": "601eb54baff09e00006bc7be",
      "text": "　　\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625227,
      "updated": 1612625230
    },
    {
      "id": "601eb54eaff09e00006bc7bf",
      "text": "　　\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625230,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7d6",
      "text": "        from math import gcd",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7d7",
      "text": "        N = int(input())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7d8",
      "text": "        AS = list(map(int, input().split()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7d9",
      "text": "        minA = min(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7da",
      "text": "        ALL = set(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7db",
      "text": "        NEW = set(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7dc",
      "text": "        while NEW:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7dd",
      "text": "            next = set()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7de",
      "text": "            for x in ALL:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7df",
      "text": "                for y in NEW:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e0",
      "text": "                    next.add(gcd(x, y))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e1",
      "text": "            ALL.update(NEW)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e2",
      "text": "            NEW = next - ALL",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e3",
      "text": "        ret = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e4",
      "text": "        for x in ALL:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e5",
      "text": "            if x < minA:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e6",
      "text": "                ret += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e7",
      "text": "    ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e8",
      "text": "        print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625518
    },
    {
      "id": "601eb66daff09e00006bc7e9",
      "text": " 公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625518,
      "updated": 1612625530
    },
    {
      "id": "601eb679aff09e00001e9741",
      "text": " 　[$ \\exists (S \\subset A) x = \\gcd(S) \\iff \\gcd(y[x\\text{ divides }y] ) = x ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625530,
      "updated": 1612625840
    },
    {
      "id": "601eb30baff09e00001e973b",
      "text": "　　ある集合Sについて成り立つなら、そこにxの倍数を追加しても成り立つ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612624652,
      "updated": 1612625988
    },
    {
      "id": "601eb847aff09e00001e9743",
      "text": "　　　なのですべての部分集合をケアする必要はない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625991,
      "updated": 1612630483
    },
    {
      "id": "601eb89caff09e00001e9744",
      "text": "　　　xの倍数であるものを全部含んだ集合だけを考えれば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626078,
      "updated": 1612630485
    },
    {
      "id": "601eb8b9aff09e00001e9745",
      "text": "　　xがAのどの数の約数でもない場合、集合が空になるので考えなくて良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626106,
      "updated": 1612626225
    },
    {
      "id": "601eb932aff09e00001e9746",
      "text": "　　　なのでいずれかの数の約数であるxについて、それと1対1対応する集合のgcdを取れば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626227,
      "updated": 1612630490
    },
    {
      "id": "601eb993aff09e00001e9747",
      "text": "　　　約数個数は対数オーダーなのでAが10^9でも問題ない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626323,
      "updated": 1612626402
    },
    {
      "id": "601eb824aff09e00001e9742",
      "text": "\t\tそれでも3TLE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612625958,
      "updated": 1612627112
    },
    {
      "id": "601ebd19aff09e00001e9748",
      "text": "   約数の数が多いテストケースで落ちるようになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627226,
      "updated": 1612627253
    },
    {
      "id": "601ebb86aff09e00006bc805",
      "text": "\t\t\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626822,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc806",
      "text": "\t\t\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc807",
      "text": "        from math import gcd",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc808",
      "text": "        from functools import reduce",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc809",
      "text": "        N = int(input())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc80a",
      "text": "        AS = list(map(int, input().split()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc80b",
      "text": "        minA = min(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc80c",
      "text": "        S = set(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc80d",
      "text": "        divisors = set()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc80e",
      "text": "        for x in S:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc80f",
      "text": "            divisors.update(get_divisors(x))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc810",
      "text": "        ret = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc811",
      "text": "        for d in sorted(divisors):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc812",
      "text": "            if d == minA:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc813",
      "text": "                break",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc814",
      "text": "            targets = [x for x in S if x % d == 0]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc815",
      "text": "            if reduce(gcd, targets) == d:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc816",
      "text": "                ret += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc817",
      "text": "        print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612626825
    },
    {
      "id": "601ebb89aff09e00006bc818",
      "text": "  約数列挙のタイミングでgcdまで計算すればAC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612626825,
      "updated": 1612627158
    },
    {
      "id": "601ebc3baff09e00006bc819",
      "text": "  \tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627004,
      "updated": 1612627015
    },
    {
      "id": "601ebc40aff09e00006bc81a",
      "text": "  \t\tdef main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627008,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc81b",
      "text": "        from math import gcd",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc81c",
      "text": "        from collections import defaultdict",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc81d",
      "text": "        N = int(input())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc81e",
      "text": "        AS = list(map(int, input().split()))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc81f",
      "text": "        minA = min(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc820",
      "text": "        S = set(AS)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc821",
      "text": "        gcds = defaultdict(int)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc822",
      "text": "        for x in S:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc823",
      "text": "            for d in get_divisors(x):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc824",
      "text": "                gcds[d] = gcd(gcds[d], x)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc825",
      "text": "    ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc826",
      "text": "        ret = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc827",
      "text": "        for d in sorted(gcds):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc828",
      "text": "            if d == minA:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc829",
      "text": "                break",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc82a",
      "text": "            if gcds[d] == d:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc82b",
      "text": "                ret += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc82c",
      "text": "        print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612627011
    },
    {
      "id": "601ebc42aff09e00006bc82d",
      "text": "　　前者がダメで後者ならOKなの、自明ではない気がする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627011,
      "updated": 1612631543
    },
    {
      "id": "601ecee5aff09e00006bc887",
      "text": "\t\tgcd",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612631782,
      "updated": 1612631785
    },
    {
      "id": "601ecdf7aff09e0000d6f3ac",
      "text": " 　　前者[$ \\sum_i \\sum_x [x < \\min(A)][x \\text{ divides } A_i] ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612631544,
      "updated": 1612631787
    },
    {
      "id": "601ecec6aff09e00006bc885",
      "text": " 　　後者[$ \\sum_i \\sum_x [x \\text{ divides } A_i] ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612631750,
      "updated": 1612631787
    },
    {
      "id": "601ecf85aff09e0000d6f3ad",
      "text": " 　　前者の方が小さいよな…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612631941,
      "updated": 1612631950
    },
    {
      "id": "601ebf98aff09e00006bc82e",
      "text": "　考察",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627865,
      "updated": 1612665749
    },
    {
      "id": "601f5394aff09e0000fb8ede",
      "text": "　　部分集合の個数は2^2000、それに対して値の範囲は10^9",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612665749,
      "updated": 1612665808
    },
    {
      "id": "601f53daaff09e0000fb8edf",
      "text": "　　[定義域より値域が狭い関数]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612665818,
      "updated": 1612665837
    },
    {
      "id": "601f53eeaff09e0000fb8ee0",
      "text": "　　こういう時に[値域と定義域の交換]をする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612665838,
      "updated": 1612665869
    },
    {
      "id": "601f540caff09e0000fb8ee1",
      "text": "　　[https://gyazo.com/fb7188f57e2178ce53cc7aa47100082c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612665869,
      "updated": 1612678487
    },
    {
      "id": "601f8555aff09e0000fb8ee2",
      "text": "　　Xを像とする元は複数個あり得るのだけど、その中から構成しやすいものを選べば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612678487,
      "updated": 1612678791
    },
    {
      "id": "601f8687aff09e0000fb8ee3",
      "text": "　　Zのような像にならない元は、何に写しても良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612678791,
      "updated": 1612678884
    },
    {
      "id": "601f8702aff09e0000fb8ee4",
      "text": "　　　元々の写像をf、反転した写像をgとするとき、ある元xがfの像に含まれるかどうかは [$ f(g(x)) = x]でわかる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612678914,
      "updated": 1612679168
    },
    {
      "id": "601f8800aff09e0000fb8ee7",
      "text": "　　これは通常の意味での逆写像ではない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612679168,
      "updated": 1612679391
    },
    {
      "id": "601f88dfaff09e0000fb8ee8",
      "text": "　　　通常は[$ f(x) = y \\iff g(y) = x ]であるような写像f,gを互いにもう片方の逆写像といい、全単射の時だけ存在する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612679391,
      "updated": 1612679544
    },
    {
      "id": "601f8978aff09e0000fb8ee9",
      "text": "　　　今回は与えられたfに対して[$ g(y) = x \\Rightarrow f(x) = y]が成り立てば良い、[ゆるい逆写像]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612679544,
      "updated": 1612679646
    },
    {
      "id": "601f8a7eaff09e0000fb8eea",
      "text": "　　今回の問題に関しては、[$ x = \\gcd(S) ] のゆるい逆関数が [$ S = \\{y|y\\in A, x\\text{ divides }y \\}]であることに気付くのが問題変形の第一歩だった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612679806,
      "updated": 1612679937
    },
    {
      "id": "601f8b02aff09e0000fb8eeb",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612679939,
      "updated": 1612679972
    },
    {
      "id": "601f87d1aff09e0000fb8ee5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612679122,
      "updated": 1612679160
    },
    {
      "id": "601f87f7aff09e0000fb8ee6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612679160,
      "updated": 1612679160
    },
    {
      "id": "601ed872aff09e00005ef29e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634226,
      "updated": 1612634226
    },
    {
      "id": "601ed872aff09e00005ef29f",
      "text": "[D - Circle Lattice Points https://atcoder.jp/contests/abc191/tasks/abc191_d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634226,
      "updated": 1612634226
    },
    {
      "id": "601ed85caff09e00005ef29c",
      "text": "[https://gyazo.com/3172c85b33db4ea6fc80c45aafa00a5e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612634204,
      "updated": 1612634220
    },
    {
      "id": "601ec739aff09e00001e9749",
      "text": "　[実数に対する大小判定]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629817,
      "updated": 1612707627
    },
    {
      "id": "601ff71caff09e0000c954b6",
      "text": "　まずは誤差を考えずに素朴に書いてみる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612707613,
      "updated": 1612707613
    },
    {
      "id": "601ec74baff09e00001e974a",
      "text": "　　二次関数の解の公式",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629835,
      "updated": 1612629850
    },
    {
      "id": "601ec75caff09e00001e974b",
      "text": "　　これでサンプルは全部通る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629852,
      "updated": 1612629861
    },
    {
      "id": "601ebf99aff09e00006bc830",
      "text": " \tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627865,
      "updated": 1612629874
    },
    {
      "id": "601ec025aff09e00006bc831",
      "text": " \t def main_simple():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628005,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc849",
      "text": "       from math import floor, ceil, sqrt",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc84a",
      "text": "       X, Y, R = map(float, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc84b",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc84c",
      "text": "       ret = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc84d",
      "text": "       for y in range(floor(Y - R), ceil(Y + R) + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc84e",
      "text": "           xcep = R ** 2 - (y - Y) ** 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc84f",
      "text": "           a = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc850",
      "text": "           b = -2 * X",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc851",
      "text": "           c = X ** 2 - xcep",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc852",
      "text": "           e = b * b - 4 * a * c",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc853",
      "text": "           if e < 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc854",
      "text": "               continue",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc855",
      "text": "           s = sqrt(e)  # (1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629890
    },
    {
      "id": "601ec10faff09e00006bc856",
      "text": "           r1 = (-b + s) / (2 * a)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc857",
      "text": "           r2 = (-b - s) / (2 * a)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc858",
      "text": "           ret += floor(r1) - ceil(r2) + 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc859",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec10faff09e00006bc85a",
      "text": "       print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612629874
    },
    {
      "id": "601ec78caff09e00001e974c",
      "text": "　さてこれの整数版を作ろう…と思ったが`# (1)`の平方根の計算が厄介",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629901,
      "updated": 1612629946
    },
    {
      "id": "601ec7baaff09e00001e974d",
      "text": "　　コンテスト中は平方根を使ったままなんとかしようとしてダメだった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629946,
      "updated": 1612629970
    },
    {
      "id": "601ec7d3aff09e00001e974e",
      "text": "　コンテスト後、これは二分探索で求めれば良いと気づいた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629972,
      "updated": 1612630024
    },
    {
      "id": "601ec10faff09e00006bc85b",
      "text": " [二分探索チェックリスト]を見ながらバグらせないように注意して書く",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612628240,
      "updated": 1612630049
    },
    {
      "id": "601ec6d1aff09e00006bc882",
      "text": " AC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629713,
      "updated": 1612629714
    },
    {
      "id": "601ec84baff09e00001e9750",
      "text": " 　`# (2)` これは確実に円の外である必要がある。 `# (4)`も同じ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612630092,
      "updated": 1612630281
    },
    {
      "id": "601ec8fbaff09e00006bc884",
      "text": " 　\t`floor(fX - fR)`だとちょうどピッタリ円周上になるケースがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612630268,
      "updated": 1612630268
    },
    {
      "id": "601ec8abaff09e00006bc883",
      "text": " 　`# (3)` 円の中心がちょうど整数である場合に、その頂点がダブルカウントされてしまわないように注意が必要",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612630187,
      "updated": 1612630242
    },
    {
      "id": "601ebf99aff09e00006bc82f",
      "text": " \tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612627865,
      "updated": 1612630052
    },
    {
      "id": "601ec6caaff09e00006bc85d",
      "text": " \t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc85e",
      "text": "       from math import floor, ceil, sqrt",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc85f",
      "text": "       fX, fY, fR = map(float, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc860",
      "text": "       X, Y, R = [round(x * 10000) for x in [fX, fY, fR]]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc861",
      "text": "       ret = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc862",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc863",
      "text": "       def isIn(x, y):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc864",
      "text": "           ret = (X - x * 10000) ** 2 + (Y - y * 10000) ** 2 <= R ** 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc865",
      "text": "           return ret",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc866",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc867",
      "text": "       for y in range(floor(fY - fR), ceil(fY + fR) + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc868",
      "text": "           # find start",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc869",
      "text": "           left = floor(fX - fR - 1)  # (2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630079
    },
    {
      "id": "601ec6cbaff09e00006bc86a",
      "text": "           init_right = right = floor(fX)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc86b",
      "text": "           if isIn(right, y):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc86c",
      "text": "               while left < right - 1:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc86d",
      "text": "                   x = (left + right) // 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc86e",
      "text": "                   if isIn(x, y):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc86f",
      "text": "                       right = x",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc870",
      "text": "                   else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc871",
      "text": "                       left = x",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc872",
      "text": "               ret += init_right - left",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc873",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc874",
      "text": "           # find end",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc875",
      "text": "           init_left = left = init_right + 1  # (3)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630107
    },
    {
      "id": "601ec6cbaff09e00006bc876",
      "text": "           right = ceil(fX + fR + 1)  # (4)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630255
    },
    {
      "id": "601ec6cbaff09e00006bc877",
      "text": "           if isIn(left, y):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc878",
      "text": "               while left < right - 1:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc879",
      "text": "                   x = (left + right) // 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc87a",
      "text": "                   if isIn(x, y):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc87b",
      "text": "                       left = x",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc87c",
      "text": "                   else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc87d",
      "text": "                       right = x",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc87e",
      "text": "               ret += right - init_left",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc87f",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc880",
      "text": "       print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612630052
    },
    {
      "id": "601ec6cbaff09e00006bc881",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629707,
      "updated": 1612629708
    },
    {
      "id": "601ec6c8aff09e00006bc85c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612629705,
      "updated": 1612629705
    }
  ]
}