{
  "id": "5ae97b8bf821270014490638",
  "title": "出力の次元",
  "created": 1525250969,
  "updated": 1537186036,
  "lines": [
    {
      "id": "5ae97b8bf821270014490638",
      "text": "出力の次元",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525250969,
      "updated": 1525250969
    },
    {
      "id": "5ae97b9caff09e0000585761",
      "text": "[https://gyazo.com/e1923c124bc1abcd896f8c10fa5cf521]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525250972,
      "updated": 1525250972
    },
    {
      "id": "5ae97dd6aff09e0000866946",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251544,
      "updated": 1525251544
    },
    {
      "id": "5ae97dd6aff09e0000866947",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251545,
      "updated": 1525251545
    },
    {
      "id": "5ae97dd6aff09e0000866948",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251545,
      "updated": 1525251545
    },
    {
      "id": "5ae97b99aff09e000058575f",
      "text": " 二次元での表現手法は脳内の高次の情報の低次元への埋め込み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525250969,
      "updated": 1525251215
    },
    {
      "id": "5ae97e0faff09e000086694f",
      "text": "  word2vecなんかでは数百次元のベクトルに単語の意味を埋め込む",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251601,
      "updated": 1525251602
    },
    {
      "id": "5ae97e0faff09e0000866950",
      "text": "  脳内でもそういう高次元の状態になっているだろう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251601,
      "updated": 1525251602
    },
    {
      "id": "5ae97e25aff09e0000866951",
      "text": " それを書き出し法で断片化してアウトプットする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251623,
      "updated": 1525251632
    },
    {
      "id": "5ae97e31aff09e0000866952",
      "text": "\tKJ法では、",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251635,
      "updated": 1525251683
    },
    {
      "id": "5ae97e5eaff09e0000866954",
      "text": "  まず書き出したものを並べる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251681,
      "updated": 1525251689
    },
    {
      "id": "5ae97e67aff09e0000866956",
      "text": "  \tこれは情報を無理やり2次元に埋め込んで、人間が観察し操作しやすい形にすること",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251689,
      "updated": 1525251707
    },
    {
      "id": "5ae97e0eaff09e000086694e",
      "text": "  次に、脳内の高次元空間での距離を良く保存するように位置を変更していく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251601,
      "updated": 1525251727
    },
    {
      "id": "5ae97e8daff09e0000866957",
      "text": "   これがグループ編成。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251727,
      "updated": 1525251728
    },
    {
      "id": "5ae97e64aff09e0000866955",
      "text": "   「2次元空間上に置かれている」という制約を守ったまま動かすので、2次元のまま",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251686,
      "updated": 1525251776
    },
    {
      "id": "5ae97e9faff09e0000866959",
      "text": "  カードを束ねることにより、異なる複数の「[詳細度レベル]」を持たせる ref. [KJ法は擬似3D]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251745,
      "updated": 1525251756
    },
    {
      "id": "5ae97e9faff09e000086695a",
      "text": "   [KJ法]が生まれた時代には複数の[詳細度]を持ったまま、保管や流通する手段がなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251745,
      "updated": 1525251746
    },
    {
      "id": "5ae97c8faff09e000086693a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251218,
      "updated": 1525251745
    },
    {
      "id": "5ae97ec3aff09e000086695b",
      "text": " 文章での表現は一次元への埋め込み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251781,
      "updated": 1525251781
    },
    {
      "id": "5b9f98eeaff09e0000877988",
      "text": " \t[一次元の文章]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1537186030,
      "updated": 1537186036
    },
    {
      "id": "5ae97d1eaff09e0000866943",
      "text": " 箇条書きを二次元と言われると「次元の低い話してるな」と感じる。 [箇条書きは二次元ではない]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251360,
      "updated": 1536798829
    },
    {
      "id": "5ae97d09aff09e000086693d",
      "text": " 音声発話に比べて箇条書きの方が柔軟な構造である",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251340,
      "updated": 1525251351
    },
    {
      "id": "5ae97d15aff09e0000866940",
      "text": "  が、それは一次元配列とツリーの比較と同種",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251351,
      "updated": 1525251355
    },
    {
      "id": "5ae97d19aff09e0000866941",
      "text": "  より表現力の高い構造を否定するものではない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251355,
      "updated": 1525251358
    },
    {
      "id": "5ae97d1caff09e0000866942",
      "text": "  [サピア・ウォーフの仮説]と同じ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251358,
      "updated": 1525251903
    },
    {
      "id": "5ae97d80aff09e0000866944",
      "text": "   人間の思考は自分が使う道具としての言語の表現力によって影響を受ける。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251458,
      "updated": 1525251479
    },
    {
      "id": "5ae97f40aff09e000086695c",
      "text": "   プログラミング言語での例:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251906,
      "updated": 1525251910
    },
    {
      "id": "5ae97d94aff09e0000866945",
      "text": "    高階関数のある言語の経験がない人は引数に関数を渡す抽象を思いつきにくい。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251479,
      "updated": 1525251910
    },
    {
      "id": "5ae97dfcaff09e000086694b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251582,
      "updated": 1525251789
    },
    {
      "id": "5ae97b9caff09e0000585760",
      "text": "2018-05-02",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525250972,
      "updated": 1525251342
    },
    {
      "id": "5ae97d0aaff09e000086693f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1525251340,
      "updated": 1525251340
    }
  ]
}