{
  "id": "5eee3a689056ad00210dab12",
  "title": "Pythonでmultiset",
  "created": 1592670826,
  "updated": 1608712708,
  "lines": [
    {
      "id": "5eee3a689056ad00210dab12",
      "text": "Pythonでmultiset",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592670826,
      "updated": 1592670838
    },
    {
      "id": "5eee3eb8aff09e00009b9ddd",
      "text": "Pythonに[multiset]が欲しいという意見がよくある e.g. [ABC170 E]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671929,
      "updated": 1592715723
    },
    {
      "id": "5eee3edcaff09e00009b9dde",
      "text": "だいたいのことが[heapq]との組み合わせでできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671964,
      "updated": 1592702042
    },
    {
      "id": "5eeeb45caff09e0000cc9e04",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592702044,
      "updated": 1592702044
    },
    {
      "id": "5eee3a89aff09e0000cc9e01",
      "text": "\t[heapq]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592670857,
      "updated": 1592671313
    },
    {
      "id": "5eee3c2faff09e00009b9dd2",
      "text": " \tO(logn)で要素の挿入",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671280,
      "updated": 1592671314
    },
    {
      "id": "5eee3c39aff09e00009b9dd3",
      "text": " \tO(1)で最小値の取得",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671290,
      "updated": 1592671314
    },
    {
      "id": "5eeeb46daff09e0000cc9e05",
      "text": "\t[heapq]とdict(ハッシュテーブル)の組み合わせ [heapq+dict]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592702061,
      "updated": 1608712708
    },
    {
      "id": "5eeeb475aff09e0000cc9e0b",
      "text": " \t[Pythonでmultisetの代用ができるデータ構造 - Tsuboの競プロブログ https://tsubo.hatenablog.jp/entry/2020/06/15/124657]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592702069,
      "updated": 1592702083
    },
    {
      "id": "5eeeb46daff09e0000cc9e06",
      "text": "\t\tO(logN)で要素の挿入、削除",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592702061,
      "updated": 1592702083
    },
    {
      "id": "5eeeb46daff09e0000cc9e07",
      "text": "  O(1)で要素の存在確認、最小値の取得",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592702061,
      "updated": 1592702083
    },
    {
      "id": "5eeeb46daff09e0000cc9e08",
      "text": "\t\t二分探索ができない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592702061,
      "updated": 1592702083
    },
    {
      "id": "5eee3b2eaff09e00009b9dd0",
      "text": "\t二分探索",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671022,
      "updated": 1592671349
    },
    {
      "id": "5eee3c75aff09e00009b9dd4",
      "text": "\t\t事前にソートして良いなら[bisect]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671349,
      "updated": 1592671385
    },
    {
      "id": "5eeeb4fdaff09e0000cc9e0c",
      "text": "\t\t　k番目の値は読むだけ。O(1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592702206,
      "updated": 1592702231
    },
    {
      "id": "5eeeb517aff09e0000cc9e0d",
      "text": "\t\t　「kを超える最初の場所」がright、「k以上の最初の場所」がleft",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592702231,
      "updated": 1592703724
    },
    {
      "id": "5eee3ea0aff09e00009b9ddc",
      "text": "\t\t固定のk番目の値が欲しい→ [heapq]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671904,
      "updated": 1592672009
    },
    {
      "id": "5eeef3ccaff09e00000e0c54",
      "text": "\t\t\t[k 番目の値を高速に取り出せるデータ構造のまとめ - BIT上二分探索や平衡二分探索木など - Qiita https://qiita.com/drken/items/1b7e6e459c24a83bb7fd]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592718285,
      "updated": 1592718295
    },
    {
      "id": "5eee3b2daff09e00009b9dcf",
      "text": "\t\t[フェニック木] [BIT]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671021,
      "updated": 1592718312
    },
    {
      "id": "5eee3e56aff09e00009b9dd7",
      "text": "\t\t\t値域のサイズD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671830,
      "updated": 1592671852
    },
    {
      "id": "5eee3e78aff09e00009b9dd8",
      "text": "   二分探索 O(logD)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671864,
      "updated": 1592671880
    },
    {
      "id": "5eee3e78aff09e00009b9dd9",
      "text": "\t\t　追加削除はO(logD)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671864,
      "updated": 1592671868
    },
    {
      "id": "5eee3e78aff09e00009b9dda",
      "text": "  \t[座標圧縮]でDを圧縮することが効果的",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671864,
      "updated": 1592671868
    },
    {
      "id": "5eee3e78aff09e00009b9ddb",
      "text": "\t\t\t「k番目の値」も「kを超える最初の値」も両方できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671864,
      "updated": 1592672117
    },
    {
      "id": "5eee3f31aff09e00009b9ddf",
      "text": "　[平衡二分木]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592672049,
      "updated": 1592711432
    },
    {
      "id": "5eeecb64aff09e0000cc9e0f",
      "text": "　　[RBST]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592707941,
      "updated": 1592991731
    },
    {
      "id": "5ef31ff2aff09e0000dff07e",
      "text": "　　AVL木",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592991730,
      "updated": 1594309470
    },
    {
      "id": "5f073b5faff09e000070552c",
      "text": "　　　https://juppy.hatenablog.com/entry/2019/02/26/python_AVL木_配列ver_競技プログラミング_Atcoder_",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594309472,
      "updated": 1594309473
    },
    {
      "id": "5f073b61aff09e000070552d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594309474,
      "updated": 1594309487
    },
    {
      "id": "5f073840aff09e0000705527",
      "text": "　「順序付き集合は平方分割が速い」らしい(未確認",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594308673,
      "updated": 1594308701
    },
    {
      "id": "5f07385daff09e0000705529",
      "text": "　　https://nagiss.hateblo.jp/entry/2019/06/04/220541",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594308701,
      "updated": 1594308703
    },
    {
      "id": "5f073840aff09e0000705528",
      "text": "\t\t\thttps://atcoder.jp/contests/abc140/submissions/7482671",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594308673,
      "updated": 1594317373
    },
    {
      "id": "5f075a3faff09e0000fd5d61",
      "text": "\tSkipList",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594317375,
      "updated": 1594317549
    },
    {
      "id": "5f075aeeaff09e0000b7a2c4",
      "text": "\t\thttps://atcoder.jp/contests/arc033/submissions/14718760",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594317551,
      "updated": 1594317551
    },
    {
      "id": "5f075af0aff09e0000b7a2c5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594317553,
      "updated": 1594317553
    },
    {
      "id": "5f07cbedaff09e0000fd5d62",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594346478,
      "updated": 1594346478
    },
    {
      "id": "5f07cbeeaff09e0000fd5d63",
      "text": "\t[C - データ構造 https://atcoder.jp/contests/arc033/tasks/arc033_3]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594346478,
      "updated": 1594346480
    },
    {
      "id": "5f07cbf0aff09e0000fd5d65",
      "text": "\t",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594346480,
      "updated": 1594346480
    },
    {
      "id": "5f07cbeeaff09e0000fd5d64",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594346478,
      "updated": 1594346478
    },
    {
      "id": "5eee3e55aff09e00009b9dd6",
      "text": "[データ構造]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671829,
      "updated": 1592672890
    },
    {
      "id": "5eee427aaff09e00009b9df1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592672890,
      "updated": 1592672890
    }
  ]
}