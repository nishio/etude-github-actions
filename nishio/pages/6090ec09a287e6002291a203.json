{
  "id": "6090ec09a287e6002291a203",
  "title": "Hatena2012-03-16",
  "created": 1331823600,
  "updated": 1331823600,
  "lines": [
    {
      "id": "6090ec2daff09e00003dab50",
      "text": "Hatena2012-03-16",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab51",
      "text": "code:hatena",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab52",
      "text": " <body>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab53",
      "text": " *1331906887*言語女子会: undefとnullは両方必要？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab54",
      "text": " Twitterのタイムラインが面白すぎて、ついうっかり言語を擬人化して脳内で言語女子会なるものを開いてしまいました。なお、登場人物と実在の人物は1対1に対応しません。",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab55",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab56",
      "text": " ** undefinedとnullの両方必要なの？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab57",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab58",
      "text": " とあるプログラミング言語が集う女子会にて:",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab59",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab5a",
      "text": " Perl: そういえばさ、なんでJavaScriptちゃんってundefinedとnullの両方もってるの？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab5b",
      "text": " JavaScript: えっ、未定義の変数にアクセスした時undefined返したいじゃない？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab5c",
      "text": " Python: 例外投げて死ねばいいじゃん",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab5d",
      "text": " Ruby: 例外投げて死ねばいいよね",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab5e",
      "text": " Python & Ruby: ねー&#9825;",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab5f",
      "text": " Java: いやそこは参照型ならnull、数値型なら0で初期化すべきでしょ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab60",
      "text": " C: これだから最近の若い子は…初期化にだってコストが掛かるんだからね！デフォルトで初期化するなんて無駄遣いよ！必要な人だけが責任をもって初期化すべきなのよ！",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab61",
      "text": " Perl: (Cおばさん怖い… Javaさんもなんか型苦しいし…) でもね、仮に初期化するとして、nullかundefかどっちか片方あればいいでしょ？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab62",
      "text": " Lisp: (あらあら それを言うなら nil と 空リスト も 片方でいいでしょ (と 思ったが 言葉には しない) そっと #t を 飲む)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab63",
      "text": " JavaScript: うーん、そうかなぁ。今彼氏がいないのと、生まれてからずっと彼氏がいないのは別じゃない？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab64",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab65",
      "text": " ** 空リストからpopしたら？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab66",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab67",
      "text": " JavaScript: 例えばさ、空のリストからpopした時ってundefined返したいじゃない？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab68",
      "text": " Python: 例外投げて死ねばいいよね、Rubyちゃん",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab69",
      "text": " Ruby: え？nilを返すでしょ常識的に考えて",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab6a",
      "text": " Python: は？じゃあnilの入っていたリストからpopした場合とどうやって区別するの？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab6b",
      "text": " C: これだから最近の若い子は…私は成功した時に0 <= n < 256の値を返す関数でも、失敗した時に-1を返すためだけにint型にしているというのに！まったく考えなしのゆとりなんだから！",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab6c",
      "text": " Ruby: (Cおばさん、めんどくさっ) Lispさんはどう思いますか？",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab6d",
      "text": " Lisp: (あらあら そんな昔のこと 忘れたわ (と gosh を 起動して 試してみる)) (car ()) は 例外を投げる ようね((by @ser1zw 「Common LispだとNILが返ってきますね（CLISPで確認）」thanks!))",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab6e",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab6f",
      "text": " ** 存在しないキーへのアクセス",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab70",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab71",
      "text": " JavaScript: あとオブジェクトに指定したキーがないときもundefinedを返したいの",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab72",
      "text": " Python: 例外投げて死ねばいいのに。私だったらobj.has_key(k)でチェックできるようにするなぁ ((PythonとRubyは辞書・ハッシュへのアクセスの話。obj.fooでアクセスした場合はRubyでもNoMethodErrorが投げられる)) ((by @a_yasui 「(has_keyは)2.6から非推奨、3.0 からは使えないかと。代わりに in を使いませう」thanks! ))",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab73",
      "text": " JavaScript: 今はそんな感じのことも出来るんだけど、たしか昔はできなくて…",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab74",
      "text": " Python: さっさと例外投げて死ねばいいのにねー、ね、Rubyちゃん",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab75",
      "text": " Ruby: nilを返すけどなにか文句ある？((by @niku_name 「ちなみに hash.fetch を使うと存在しないキーへのアクセスはPythonちゃんと同じような感じになります(例外を投げる) http://rurema.clear-code.com/1.9.3/method/Hash/i/fetch.html」thanks! ))",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab76",
      "text": " Memcached: (私はfalseを返すけどなぁ、と思っているが、言語じゃないので話の輪に入れない)((by @methane 「Memcachedがfalseを返すと言っていたのは、phpのクライアントの話で、ミドルウェアとしてのmemcachedはそもそもバイト列を格納するだけなのでfalseも0もnullも無いです。」thanks!))",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab77",
      "text": " Python: ふーん、で元からnilが入っている場合にはどうするの？(ニヤニヤ)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab78",
      "text": " Ruby: (-_-#)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab79",
      "text": " Haskell: いまさらundefinedとかnullとかでフラストレーション溜めてるおばさんたちはモナド使った方がいいにゅ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab7a",
      "text": " JavaScript: Haskellがブラウザで動くようになったら使うかもね、Maybeね",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab7b",
      "text": " Python: その可能性はNothingね((Haskellでは失敗するかもしれないことを表現するための型を構築するためにMaybeモナドという型クラスがあり、その失敗した時の型がNothing))",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab7c",
      "text": " Haskell: …(-_-)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab7d",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab7e",
      "text": " ** まとめ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab7f",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab80",
      "text": " Python: でもま、CさんやHaskellちゃんの言うとおり、返り値でエラーを伝える場合、それは成功した時に返されうる値以外でなきゃダメよねー、成功したのか失敗したのかわかんなくなっちゃうもんねー(とニヤニヤしながらRubyの顔を見る)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab81",
      "text": " Haskell: (賛成してもらえてとても嬉しいのだが、その感情はIOモナドに押し込められて無表情)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab82",
      "text": " Python: そういう意味で、リストや属性に入れられるnullと、失敗を伝えるための無効値undefinedを区別するのは合理的ね。JavaScriptちゃんもいいところあるのよね",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab83",
      "text": " JavaScript: あれ、いい忘れたけどundefinedはリストに入れられるよ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab84",
      "text": " Python: はぁ？！死ねばいいのに！！",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab85",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab86",
      "text": " ** あとがき",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab87",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab88",
      "text": " PerlはPythonがRubyをDISりはじめたあたりから、思い当たるフシがありすぎて心の中が$_=~#(;_;)#;#$@#{$#}...",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab89",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab8a",
      "text": " このSSを書くインスピレーションを与えてくれた皆さんにthanks! @__gfx__ @kazuho @__kan @tanakh",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab8b",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab8c",
      "text": " 興味を持った方には僕の書いた「言語設計の基礎知識」を含む60冊分のPDFが1冊にまとまったWebDB Press 総集編がオススメ: ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab8d",
      "text": " <iframe src=\"http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=AAFFAA&fc1=000000&lc1=0000FF&t=nishiohirokaz-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4774148318\" style=\"width:120px;height:240px;\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\"></iframe>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab8e",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab8f",
      "text": " ** 補足",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab90",
      "text": " 僕の発案だという勘違いがあるみたいなので引用しておきます。女子会になった理由はコレを「彼女」ではなく「彼氏」にしたかったからでした！ https://twitter.com/#!/__kan/status/180580941335502848",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab91",
      "text": " >>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab92",
      "text": " @__kan: nullとundefinedの両方が存在してる理由が分からないっていうけど、今彼女が居ないのと生まれてこのかた彼女がいないのは明確に区別するべきでしょう",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab93",
      "text": " <<",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab94",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab95",
      "text": " あとはこれを読んでMaybe→Nothingというオチを思いついたことも書く動機になりました笑 https://twitter.com/#!/tanakh/status/180593265706414080",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab96",
      "text": " >>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab97",
      "text": " @tanakh: 今更nullとかundefinedとかにフラストレーション貯めてる人はHaskel使ったほうがいいよ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab98",
      "text": " <<",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab99",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab9a",
      "text": " ** 反応まとめ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab9b",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab9c",
      "text": " - アセンブラばあちゃん「変数が定義出来るといろいろ大変なんだねえ」 (by @raitu thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab9d",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab9e",
      "text": " - アセンブリ言語ばあちゃん「未定義だぁ？NULLだぁ？そんなの持ってたって爺さんのフラグは立たんよ」(by id:yappo thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dab9f",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba0",
      "text": " - 建前は、ES5の仕様書では、4.3.9および4.3.11、「変数に値が割り振られていない時の値」「オブジェクト値が存在しないことを意図的に表現したい時の値」だよ(by @yukoba thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba1",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba2",
      "text": " - Clojureではnilと空リストは区別される。つまりClojureでは (pop '()) と (pop nil) は別物。（空リストは例外を発生させるが、nilはnilをpopする） (by @omasanori thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba3",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba4",
      "text": " -  「JS の undefined の一番残念なところは、それがただのグローバル変数であることだ。」 (by @tnacigam thanks!) ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba5",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba6",
      "text": " - PHPがハブられてるとことかリアルに女の人の集まりみたいで嫌だｗｗｗｗｗｗ (by id:Retrorocket thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba7",
      "text": " - PHP:(言語じゃないので話の輪に入れない) (by id:koyhoge thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba8",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daba9",
      "text": " - (Rubyで)最近20行程度のスクリプトをデバッグする際、keyの範囲を真面目に考えるのが面倒なので[]をfetchのaliasで上書きしたことがあった。ビバ、オープンクラス (by @yugui thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabaa",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabab",
      "text": " - SQLではnullがundefの意味になっててバグの温床になってるよなぁ。 (car ())はschemeではエラー、clispではnilなのか。再起終わるかはcdrで判定するから気づかなんだ。(by @Tomokatz thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabac",
      "text": " ",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabad",
      "text": " - Lua は nil と未定義を言語仕様上区別してない。(by @torus thanks!)",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabae",
      "text": " </body>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabaf",
      "text": " <comments>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb0",
      "text": " <comment>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb1",
      "text": " <username>tateisu</username>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb2",
      "text": " <body>Perlだとexists $hash{$key} と defined $hash{$key} で区別できますね。空リストも事前にサイズを検査すればよい話。</body>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb3",
      "text": " <timestamp>1331932748</timestamp>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb4",
      "text": " </comment>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb5",
      "text": " <comment>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb6",
      "text": " <username>func_hs</username>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb7",
      "text": " <body>yesodやCGIモナドを使えば、Haskellもブラウザで動かせます(´・ω・｀)</body>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb8",
      "text": " <timestamp>1331948758</timestamp>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabb9",
      "text": " </comment>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabba",
      "text": " <comment>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabbb",
      "text": " <username>nishiohirokazu</username>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabbc",
      "text": " <body>>yesodやCGIモナドを使えば、Haskellもブラウザで動かせます(´・ω・｀)<br><br>JavaScriptに「ブラウザで動けばね」って言われてCGIモナドでできるとか答えちゃうあたりがとてもHaskellっぽいですね…</body>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabbd",
      "text": " <timestamp>1332316458</timestamp>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabbe",
      "text": " </comment>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabbf",
      "text": " <comment>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabc0",
      "text": " <username>codd</username>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabc1",
      "text": " <body>SQL(というか関係モデル)でもnullを分類しようという話が元々はあったらしいですよ。<br>その実用性についてはプログラミング言語とはちょっと事情が異なりそうですが。<br><br>http://www.geocities.jp/mickindex/database/db_3vl.html</body>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabc2",
      "text": " <timestamp>1332776939</timestamp>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabc3",
      "text": " </comment>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabc4",
      "text": " </comments>",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabc5",
      "text": "",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dabc6",
      "text": "[はてなダイアリー 2012-03-16 https://nishiohirokazu.hatenadiary.org/archive/2012/03/16]",
      "created": 1331823600,
      "updated": 1331823600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}