{
  "id": "5a40a6a150047a0014dbad20",
  "title": "法律とプログラミングは未定義動作の扱いが異なる",
  "created": 1514186403,
  "updated": 1526465995,
  "lines": [
    {
      "id": "5a40a6a150047a0014dbad20",
      "text": "法律とプログラミングは未定義動作の扱いが異なる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186403,
      "updated": 1514186493
    },
    {
      "id": "5a40a6bcaff09e00001c3678",
      "text": "[nishio https://twitter.com/nishio/status/945115004419710976]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186428,
      "updated": 1514186442
    },
    {
      "id": "5a40a6cbaff09e00001c367a",
      "text": " [法律]と[プログラミング]がとても共通部分があるのに一見すごく違うのは何故なのか考えてたのだがすごく根幹の部分で違いがあることに気づいた。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186443,
      "updated": 1526465708
    },
    {
      "id": "5a40a6d4aff09e00001c367b",
      "text": " プログラミングでは「[未定義]のコードを実行すると鼻から悪魔が飛び出す」という表現で「未定義のことをやってはいけない」とする。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186452,
      "updated": 1526465713
    },
    {
      "id": "5afc04b0aff09e0000f85eab",
      "text": " 一方法律は、人間が原則自由に行動できることを前提とし、支障のあるところだけ制限するためのものなので「未定義のことはやってよい」なのだ。 #未定義動作",
      "userId": "582e63d27c56960011aff09e",
      "created": 1526465713,
      "updated": 1526465741
    },
    {
      "id": "5a40a6dcaff09e00001c367c",
      "text": " 有能なプログラマほど「[定義]は何か」を気にするのだが、条文を見ても検索しても発見できなかったり、果ては「法学者の間でも意見が分かれている」という記述にたどり着いて、なんじゃそりゃーとなる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186460,
      "updated": 1526465782
    },
    {
      "id": "5afc04f5aff09e0000f85eac",
      "text": "  その定義が問題になるような事態が発生したら、法廷に行けばよい。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1526465782,
      "updated": 1526465799
    },
    {
      "id": "5a40a6c9aff09e00001c3679",
      "text": "\t[yoosee https://twitter.com/yoosee/status/945118542499737600] ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186441,
      "updated": 1514186547
    },
    {
      "id": "5a40a721aff09e00001c367e",
      "text": " \t>この感覚はよくわかる。一方で契約書の場合は未定義は脆弱性になるので出来るだけきちんと定義してつぶす、という意味ではプログラミングと契約書（特に英文）はよく似てる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186529,
      "updated": 1514186530
    },
    {
      "id": "5a40a722aff09e00001c367f",
      "text": "  契約の場合「脆弱性を潰す=相手の自由を制限する」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186531,
      "updated": 1526465826
    },
    {
      "id": "5afc0521aff09e0000f85ead",
      "text": "  契約書をどこまで細かく書くかは、どこまで相手の自由を制限したいかに依存するもので正解はない。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1526465826,
      "updated": 1526465849
    },
    {
      "id": "5afc0538aff09e0000f85eae",
      "text": "   契約は、民法で定義されている規定値をオーバーライドするためのもの。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1526465849,
      "updated": 1526465898
    },
    {
      "id": "5afc056aaff09e0000f85eb0",
      "text": "   何も書かなくても問題ない。コンビニで物を買う時に売買契約書を交わさないが、売買契約は発生している。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1526465898,
      "updated": 1526465950
    },
    {
      "id": "5afc0539aff09e0000f85eaf",
      "text": "  これは「テストをどれくらい書けばいいんですか」と同じだなと思った。リスクを回避したい分だけ書く。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1526465849,
      "updated": 1526465961
    },
    {
      "id": "5a40a73faff09e00001c3680",
      "text": "  >実際には契約で完全に縛るというよりは ... shall be mutually agreed とかにして外部定義として運用に投げる、ということもするので、全てを厳密に定義するというよりは未定義を悪用されないように漏れをつぶしておく、というイメージですかねえ。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186560,
      "updated": 1514186599
    },
    {
      "id": "5a40a75aaff09e00001c3681",
      "text": "  重要なところだけテストでカバーするみたいな感じですね！",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186587,
      "updated": 1514186605
    },
    {
      "id": "5a40a75aaff09e00001c368c",
      "text": "  >困ったら運用に任せて逃げるあたりも似てるかもしれません...",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186587,
      "updated": 1514186609
    },
    {
      "id": "5a4136e4aff09e0000dcda60",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514223333,
      "updated": 1514223333
    },
    {
      "id": "5a4136e4aff09e0000dcda61",
      "text": "[takao https://www.facebook.com/nishiohirokazu/posts/10214120722668606?comment_id=10214123326853709&comment_tracking=%7B%22tn%22%3A%22R0%22%7D]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514223333,
      "updated": 1514223360
    },
    {
      "id": "5a4136e8aff09e0000dcda62",
      "text": " >API仕様には「できるルール」が書かれているため、何かをできるプログラムを作る際には、関係のあるAPIを調べておけばよいのですが、「できないルール」集の法律に、ある事柄が引っかからないかを調べるには全部を知っておかないといけないというイメージが苦手意識なのかな？と思いました。（法律を読んでいて、「ただし、」以降に自分のやりたいことが書いてあった場合の安心感はすごい。）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514223336,
      "updated": 1514223373
    },
    {
      "id": "5a41370faff09e0000dcda63",
      "text": "  プログラムの「書いてあることはやってよいこと」と法律の「書いてあることはやってはいけないこと」が逆であることによって、自分のやろうとしていることがやってよいのかどうか確認するまでのコストが大きく違う。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514223376,
      "updated": 1514223467
    },
    {
      "id": "5a41376baff09e0000dcda65",
      "text": "  \t「法律で禁止されていない」ということを知るまでのコストが高い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514223467,
      "updated": 1514223621
    },
    {
      "id": "5a413805aff09e0000dcda66",
      "text": "   何かよい方法はあるのか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514223621,
      "updated": 1526465995
    },
    {
      "id": "5a413670aff09e0000dcda5e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514223216,
      "updated": 1514223216
    },
    {
      "id": "5a40a71faff09e00001c367d",
      "text": "ref. #法律とプログラミングの教育の共通点",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514186529,
      "updated": 1514223240
    },
    {
      "id": "5a413674aff09e0000dcda5f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1514223220,
      "updated": 1514223220
    }
  ]
}