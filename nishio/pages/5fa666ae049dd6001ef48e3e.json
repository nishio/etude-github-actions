{
  "id": "5fa666ae049dd6001ef48e3e",
  "title": "abc152 f",
  "created": 1604740783,
  "updated": 1604740783,
  "lines": [
    {
      "id": "5fa666ae049dd6001ef48e3e",
      "text": "abc152 f",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e000029049b",
      "text": "from [競技プログラミングで解法を思いつくための典型的な考え方]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1609670090
    },
    {
      "id": "5fa666aeaff09e000029049c",
      "text": "abc152_f",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e000029049d",
      "text": "https://atcoder.jp/contests/abc152/tasks/abc152_f",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e000029049e",
      "text": "　N=50",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e000029049f",
      "text": "　木の2点を結ぶパスに1つ以上黒があることが条件",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a0",
      "text": "　　[余事象を考える]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a1",
      "text": "　　「パスがすべて白」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a2",
      "text": "　　これは求めやすい、パスの長さをxとしたら2^(N-x)ぐらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a3",
      "text": "　　一つの制約に注目して、それが違反してる場合の数は簡単に求まる。制約は複数ある、同時に満たされるケースがダブルカウントされてる→ [包除原理]だね",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a4",
      "text": "　　制約は20個ある。2^20はきわどい。DPするのかな？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a5",
      "text": "　　複数の制約のパスが重なることある？当然ある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a6",
      "text": "　　　これは厄介だな？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a7",
      "text": "　　　複数のパスの集合にパスを付け加えた場合の「重なる辺の数」を高速に得ることが必要？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a8",
      "text": "　　　[最小共通祖先]を前計算する？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904a9",
      "text": "　公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904aa",
      "text": "　　包除原理までOK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904ab",
      "text": "　　複数のパスの重なり合いに関して「[最小共通祖先]を求めて木上で累積和」らしい、よくわからん",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904ac",
      "text": "　　　2^20の全パターンでO(N+M)で数えるらしい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904ad",
      "text": "　別解",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904ae",
      "text": "　　辺が高々50なのでint64に収まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904af",
      "text": "　　パスをビットで表現しておけばORで重ね合わせを計算できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    },
    {
      "id": "5fa666aeaff09e00002904b0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604740783,
      "updated": 1604740783
    }
  ]
}