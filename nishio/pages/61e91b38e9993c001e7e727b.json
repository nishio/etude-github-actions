{
  "id": "61e91b38e9993c001e7e727b",
  "title": "(1.6.1) Varification by making",
  "created": 1548489468,
  "updated": 1553660629,
  "lines": [
    {
      "id": "61e91b38aff09e00005f166d",
      "text": "(1.6.1) Varification by making",
      "created": 1548489468,
      "updated": 1553660629,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f166e",
      "text": "Whether you understand correctly can be verified by making something based on the understanding and observing whether it works as expected.",
      "created": 1548489475,
      "updated": 1548489475,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f166f",
      "text": "",
      "created": 1548489483,
      "updated": 1548489483,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1670",
      "text": "The understanding in programming is relatively easy to verify. You can write and run a program. If your understanding is incorrect, you get an error. You can also modify the program a little and rerun it.",
      "created": 1548489475,
      "updated": 1548489475,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1671",
      "text": "",
      "created": 1548489485,
      "updated": 1548489485,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1672",
      "text": "Let's [compare] with the understanding in other domain. Woodworking is an act similar to programming in that it is to make things. Imagine making a chair with wood. You cut the woods and assemble it. After that, you realize that the design drawing is incorrect. You can not successfully assemble the piece of woods. Already it takes more time than programming. Suppose you misunderstand the position to open the hole, and you opened it where you should not open it. That piece of woods is useless anymore. You need to cut the woods again. Since programming is to make thing using digital data, the cost of trial and error is relatively low.",
      "created": 1548489475,
      "updated": 1551777325,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1673",
      "text": "",
      "created": 1548489475,
      "updated": 1548489492,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1674",
      "text": "Let's compare with another domain: drawing. After drawing, you often feel something unnatural. You know that it is unnatural, but you do not know what is wrong. If you show it to the right person, he can point out that a line is tilted, but you can not notice it by yourself. For programming, the error message tells us what is wrong in most cases. *46",
      "created": 1548489475,
      "updated": 1548489507,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1675",
      "text": "",
      "created": 1548489475,
      "updated": 1548489475,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1676",
      "text": "In this way, learning in programming is faster than other domains. In the chapter, \"[(1.2.2) How to keep motivated?]\", I told you to get rewards at short intervals is important to keep motivated. When the program you wrote worked as expected, you receive a [reward] of the sense of [accomplishment]. When it does not work as expected, you get a chance to deepen your understanding by digging down. Why does it not work as expected? What is the difference between the expected phenomena and the actual phenomena?",
      "created": 1548489475,
      "updated": 1553660076,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1677",
      "text": "",
      "created": 1548489475,
      "updated": 1548489475,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1678",
      "text": "Programming is suitable to learn the cycle of learning. By learning programming, you can learn how to learn. Knowledge of the way of learning is not obsolete even after 10 years.",
      "created": 1548489475,
      "updated": 1548489475,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1679",
      "text": "",
      "created": 1548489475,
      "updated": 1548489475,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f167a",
      "text": " [(1.6.1.1) Explanation is a type of making]",
      "created": 1548489475,
      "updated": 1553660636,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f167b",
      "text": "",
      "created": 1548489475,
      "updated": 1548489475,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f167c",
      "text": "---",
      "created": 1553586558,
      "updated": 1553586558,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f167d",
      "text": "",
      "created": 1553586563,
      "updated": 1553586563,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f167e",
      "text": "ã€€Footnote 46: Even in programming, sometimes the behavior is wrong but the error message does not appear. In the case, we suffer what is wrong like a drawing.",
      "created": 1548489475,
      "updated": 1553586562,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f167f",
      "text": "",
      "created": 1548489475,
      "updated": 1548489475,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1680",
      "text": "[en.icon]",
      "created": 1553660629,
      "updated": 1553660629,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}