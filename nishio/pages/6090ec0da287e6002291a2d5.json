{
  "id": "6090ec0da287e6002291a2d5",
  "title": "Hatena2014-01-11",
  "created": 1389366000,
  "updated": 1389366000,
  "lines": [
    {
      "id": "6090ec30aff09e00003ded0b",
      "text": "Hatena2014-01-11",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded0c",
      "text": "code:hatena",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded0d",
      "text": " <body>",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded0e",
      "text": " *1389429825*Python Bytecode短歌",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded0f",
      "text": " >||",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded10",
      "text": " 64 00 00 0c 04",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded11",
      "text": " 04 04 17 04 03 17 02",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded12",
      "text": " 04 03 17 04 03",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded13",
      "text": " 03 04 03 03 13 04 04",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded14",
      "text": " 14 04 17 18 17 0b 53",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded15",
      "text": " ||<",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded16",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded17",
      "text": " 空関数のco_codeをこれで置き換えて実行すると、2014と表示されます。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded18",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded19",
      "text": " 詳しい説明は後で。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded1a",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded1b",
      "text": " ** 味わい",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded1c",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded1d",
      "text": " 04を「ど」03を「ろ」17を「あ」と発音するなら",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded1e",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded1f",
      "text": " >||",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded20",
      "text": " 64 00 00 0c ど",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded21",
      "text": " ど ど あ ど ろ あ 02",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded22",
      "text": " ど ろ あ ど ろ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded23",
      "text": " ろ ど ろ ろ 13 ど ど",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded24",
      "text": " 14 ど あ 18 あ 0b 53",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded25",
      "text": " ||<",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded26",
      "text": " となる。もうちょっと工夫の余地がある。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded27",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded28",
      "text": " ** 難しいポイント",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded29",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded2a",
      "text": " 変数や関数呼び出しを使うためにはバイトコード部ではなく定数テーブルに名前の文字列を積んで、そのインデックスを指定してLOAD命令を発行する必要がある。短歌以外の部分に意味のある文字列を色々書き込むと「31文字で完結」という短歌の良さが失われるので避けたい。だから変数も関数も使ってはいけない。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded2b",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded2c",
      "text": " 定数を使うのはもちろん定数テーブルから読み込む必要がある。上記と同様にそこに書き込むことはやりたくない。ただ、実は空の関数でも定数テーブルには「None」が積まれている。唯一使える定数だ。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded2d",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded2e",
      "text": " 定数ロードの命令は3バイト消費するので不用意に使うとあっという間に31文字を使い切る。というわけで冒頭部に1回だけ使う。冒頭の64 00 00が「LOAD_CONST 0」である。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded2f",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded30",
      "text": " NoneにUNARY_NOT(0c)を使うことでboolへの変換が行われて、結果がTrueになる。Trueに対してBINARY_ADD(17)などの算術演算を使うことでintegerへの変換(True→1)が行われる。これによって数値を作るための種を生み出している。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded31",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded32",
      "text": " PythonのVMはスタックマシン。「04(ど)」はスタック先頭を複製する命令DUP_TOP。「03(ろ)」はスタック頭3個を回転する命令ROT_THREE。「17(あ)」がスタックトップ2つを加算して戻す命令BINARY_ADD。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded33",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded34",
      "text": " ** バイトコードの実行方法",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded35",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded36",
      "text": " 空の関数だけがおかれたモジュールをimportして、コンパイルされたpycファイルを開き、バイトコード部分を書き換えて別の名前で書き出す。その後、それをimportして実行。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded37",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded38",
      "text": " https://github.com/nishio/tanka/blob/master/tanka_src.py",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded39",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded3a",
      "text": " ** BPT(Byte per Tanka)についての考察",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded3b",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded3c",
      "text": " Python Bytecode短歌においてのBPT上限について考察する",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded3d",
      "text": " ",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded3e",
      "text": " 上5バイトは上記のコードと同じ、次の7バイトで以下のようにすることで残りがNOPでも618文字出力できる。",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded3f",
      "text": " >||",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded40",
      "text": "         ADD, # 2",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded41",
      "text": "         DUP, # 2 2",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded42",
      "text": "         ADD, # 4",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded43",
      "text": "         DUP, # 4 4",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded44",
      "text": "         POW, # 256",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded45",
      "text": "         DUP, # 256 256",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded46",
      "text": "         POW, # 256^256 (about 616 digits)",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded47",
      "text": " ||<",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded48",
      "text": " </body>",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded49",
      "text": "",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003ded4a",
      "text": "[はてなダイアリー 2014-01-11 https://nishiohirokazu.hatenadiary.org/archive/2014/01/11]",
      "created": 1389366000,
      "updated": 1389366000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}