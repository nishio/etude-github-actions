{
  "id": "60991085cd68ca001d4bd2ac",
  "title": "オブジェクト指向とGUI",
  "created": 1620643976,
  "updated": 1620644695,
  "lines": [
    {
      "id": "60991085cd68ca001d4bd2ac",
      "text": "オブジェクト指向とGUI",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620644445
    },
    {
      "id": "60991086aff09e00008bf308",
      "text": ">[kis https://twitter.com/kis/status/1391394299057774593]: データと処理をまとめるのがオブジェクト指向みたいな感じだけど、データと処理はわけたほうがいいぞよってだいたいなるんだよなー",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf309",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf30a",
      "text": ">[nishio https://twitter.com/nishio/status/1391395404705452033]: GUIプログラミングの早い段階ではデータ(ボタンのラベルなど)と処理(ボタンを押された時に実行されるコード)をまとめようとして、その時には(少なくとも関数がファーストクラスでなかったJavaでは)便利だったんじゃない？ extends JFrame implements MouseListenerみたいなことして。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf30b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf30c",
      "text": ">[kis https://twitter.com/kis/status/1391395696658370562]: GUIだけはオブジェクト指向が便利",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf30d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf30e",
      "text": ">[nishio https://twitter.com/nishio/status/1391395900908392457]: なのだけど関数がファーストクラスのJavaScriptとかにとって「イベントリスナを登録すりゃいいだけであって個別の処理をメソッドにする必要なんかないだろ」となった。 関数がファーストクラスになったことで「押した時に実行するコード」が「処理」から「データ」に変わったんだな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf30f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf310",
      "text": ">[kis https://twitter.com/kis/status/1391398531739492353]: JSの場合は、DOMがオブジェクトの役割を負ってくれて、JS側でオブジェクトを扱う必要がなくなったのもあると思ってます",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf311",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf312",
      "text": ">[nishio https://twitter.com/nishio/status/1391399294377201668]: あー、なるほど。オブジェクトのツリーは言語の外から(HTMLというオブジェクトツリーの記述言語で)与えられて、それに対する操作を記述するだけだからオブジェクト指向が必要なかったのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf313",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991087aff09e00008bf314",
      "text": ">[kis https://twitter.com/kis/status/1391400592312967169]: コンポーネントの組み立てにはオブジェクトが必要だけどアプリケーション処理では不要、て感じが。 JavaFXでもメソッドにアノテーションつければいいだけでオブジェクトもラムダも不要だし。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620643976,
      "updated": 1620643976
    },
    {
      "id": "60991260aff09e00000a1d2c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620644449,
      "updated": 1620644449
    },
    {
      "id": "60991261aff09e00000a1d2d",
      "text": "タイトル「オブジェクト指向はGUIコンポーネントの定義に(だけは少なくとも)便利」にしようかと思ったんだけどReactとか脱クラスコンポーネントしてるし、それって要するに「状態の更新」をGUIコンポーネント自身が持つ必要はない、持たない方が良い、という思想なわけで、結局「データとそのデータを破壊的に更新する処理を一塊にする」というオブジェクト指向の一側面は現代では古臭いものとみなされてるんじゃなかろうか。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620644449,
      "updated": 1620644695
    },
    {
      "id": "60991264aff09e00000a1d2e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1620644453,
      "updated": 1620644453
    }
  ]
}