{
  "id": "6090ebf5a287e60022919df8",
  "title": "Hatena2008-03-03",
  "created": 1204470000,
  "updated": 1204470000,
  "lines": [
    {
      "id": "6090ec1baff09e00003c7900",
      "text": "Hatena2008-03-03",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7901",
      "text": "code:hatena",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7902",
      "text": " <body>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7903",
      "text": " *1204531790*Python Developer Camp",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7904",
      "text": " pyspecとbuildbotとGainerを勉強する。",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7905",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7906",
      "text": " *1204538646*[CommonLisp][OOP]カウンタを作った",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7907",
      "text": " 自分には無理だと勝手に思いこんでいたけど、ちっとも難しくなかった。処理系のインストールを含めても1時間も掛からなかった。",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7908",
      "text": " >|commonlisp|",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7909",
      "text": " > (defclass counter () ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c790a",
      "text": "     ((count ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c790b",
      "text": "         :initform 0 ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c790c",
      "text": "         :accessor counter-value)))",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c790d",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c790e",
      "text": " #<STANDARD-CLASS COUNTER>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c790f",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7910",
      "text": " > (setq c (make-instance 'counter))",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7911",
      "text": " #<COUNTER #x19F0E4B1>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7912",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7913",
      "text": " > (defmethod push-button ((x counter)) ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7914",
      "text": "     (setf",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7915",
      "text": "         (counter-value x) ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7916",
      "text": "         (+ 1 (counter-value x))))",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7917",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7918",
      "text": " #<STANDARD-METHOD (#<STANDARD-CLASS COUNTER>)>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7919",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c791a",
      "text": " > (push-button c)",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c791b",
      "text": " 1",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c791c",
      "text": " > (push-button c)",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c791d",
      "text": " 2",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c791e",
      "text": " > (setq c2 (make-instance 'counter))",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c791f",
      "text": " #<COUNTER #x19F16E95>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7920",
      "text": " > (push-button c2)",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7921",
      "text": " 1",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7922",
      "text": " > (push-button c)",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7923",
      "text": " 3",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7924",
      "text": " ||<",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7925",
      "text": " これを参考にした：",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7926",
      "text": " http://www.geocities.jp/m_hiroi/clisp/clisp01.html",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7927",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7928",
      "text": " PythonでもJavaでもx.method(y, z)のxの型によってmethodの実体が決定されるが、CommonLispではyやzの型も使って絞り込むことができる。",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7929",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c792a",
      "text": " -----",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c792b",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c792c",
      "text": " でも最初は「すげー」と思ったけどどういうときに役に立つんだろう。すべての基底クラス的なオブジェクトがあれば(仮にObjとする)、(defmethod method((x Obj) (y Foo) ...)で「レシーバが何かにかかわらず引数yがFooなら同じ処理」ってのができるわけなのだけど、それってFooのメソッドにすべきな気がするし。",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c792d",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c792e",
      "text": " 特定のオブジェクトに属さない実装だとはいえ、((x Obj) ...)的な感じで第1引数のクラスを指定するのであれば、ユーザ側の視点から言えば「メソッドは特定のクラスに属するけど、全てのクラスがメソッドの追加が可能」ってのと何も変わらないんじゃないかと思う。",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c792f",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7930",
      "text": " -----",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7931",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7932",
      "text": " 引数の個数が異なるメソッドを作れないのか。技術的にどういう問題があって作れないのか謎だ。そして不便だ。",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7933",
      "text": " ",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7934",
      "text": " *1204540903*ついでに",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7935",
      "text": " Smalltalkでも試そうと思ってSqueakをインストールしたけどどこにコードを打ち込むのかがわからなくて挫折。",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7936",
      "text": " </body>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7937",
      "text": " <comments>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7938",
      "text": " <comment>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7939",
      "text": " <username>sumim</username>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c793a",
      "text": " <body>＞どこにコードを打ち込むのか…<br>文字を打てそうなところならどこでもＯＫです。<br><br>…が、それでは自由すぎるので普通はワークスペース（日本語版なら、デスクトップクリック→開く…→ワークスペース。英語環境では、デスクトップクリック→open...→workspace）がよいと思います。コードの実行は選択して alt(Win)/cmd(Mac) + d です。</body>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c793b",
      "text": " <timestamp>1204551000</timestamp>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c793c",
      "text": " </comment>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c793d",
      "text": " <comment>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c793e",
      "text": " <username>sumim</username>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c793f",
      "text": " <body>Squeak の独自の GUI や操作スタイルが鼻につくようでしたら、CUI で使える GNU Smalltalk をお薦めします。お使いの環境が Win だとうまく動かないかもなのが難点ですが…。<br><br>http://smalltalk.gnu.org/</body>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7940",
      "text": " <timestamp>1204551728</timestamp>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7941",
      "text": " </comment>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7942",
      "text": " </comments>",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7943",
      "text": "",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1baff09e00003c7944",
      "text": "[はてなダイアリー 2008-03-03 https://nishiohirokazu.hatenadiary.org/archive/2008/03/03]",
      "created": 1204470000,
      "updated": 1204470000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}