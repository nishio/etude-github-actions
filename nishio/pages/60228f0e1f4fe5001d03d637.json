{
  "id": "60228f0e1f4fe5001d03d637",
  "title": "2021年のTypeScriptベストプラクティス",
  "created": 1612877588,
  "updated": 1612969713,
  "lines": [
    {
      "id": "60228f0e1f4fe5001d03d637",
      "text": "2021年のTypeScriptベストプラクティス",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612877588,
      "updated": 1612885741
    },
    {
      "id": "60228f13aff09e00008a2bd6",
      "text": "10 bad TypeScript habits to break this year",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612877588,
      "updated": 1612877589
    },
    {
      "id": "60228f15aff09e00008a2bd7",
      "text": "http://startup-cto.net/10-bad-typescript-habits-to-break-this-year/",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612877589,
      "updated": 1612877611
    },
    {
      "id": "60228f2baff09e00008a2bd8",
      "text": "理由もセットで書いてあって良い記事だが、一覧性が良くないので箇条書きにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612877611,
      "updated": 1612885021
    },
    {
      "id": "6022ac1daff09e00008a2bfd",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612885021,
      "updated": 1612885021
    },
    {
      "id": "60228f2daff09e00008a2bd9",
      "text": "\t1: strictを使え",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612877614,
      "updated": 1612883985
    },
    {
      "id": "6022a7dbaff09e00008a2bf6",
      "text": "\t2: `||` ではなく `??` を使うか、そもそもデフォルト引数を使え",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612883932,
      "updated": 1612885799
    },
    {
      "id": "6022a7e0aff09e0000d3f55f",
      "text": "\t3: 型としてanyを使うのではなくunknownを使え",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612883937,
      "updated": 1612885801
    },
    {
      "id": "6022a7c2aff09e0000d3f55d",
      "text": " 4: asで型キャストするのではなく、型ガードでテストして型が違えばthrowするようにせよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612883906,
      "updated": 1612885822
    },
    {
      "id": "6022aa38aff09e00008a2bfa",
      "text": " 5: テストコードで、型の要求を部分的にしか満たさないアドホックなオブジェクトをanyにキャストしてモックとして使うのではなく、ちゃんとしたモックを一箇所で定義してそれを使え",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612884537,
      "updated": 1612887049
    },
    {
      "id": "6022aaf7aff09e00008a2bfb",
      "text": " 6: オブジェクトの種類によってあるプロパティを持っていたり持っていなかったりする時に、?でオプショナルなプロパティにするのではなく、どういう種類の時に持っているのかをインターフェースで明示せよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612884728,
      "updated": 1612884943
    },
    {
      "id": "6022abceaff09e00008a2bfc",
      "text": " 7: ジェネリクスの型変数も変数なので一文字変数は避けよう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612884943,
      "updated": 1612885116
    },
    {
      "id": "6022ac7caff09e00008a2bfe",
      "text": " 8: 真偽値でないものを条件式にしないで、明示的に比較演算子を使おう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612885116,
      "updated": 1612885272
    },
    {
      "id": "6022accfaff09e00008a2bff",
      "text": " 9: 真偽値でないものを真偽値にするために`!!`を使うのではなく、明示的に比較演算子を使おう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612885199,
      "updated": 1612885380
    },
    {
      "id": "6022a910aff09e00008a2bf7",
      "text": "\t10: nullとundefinedを同一視して`!= null`で条件分岐をするのではなく、undefinedとnullを区別して`!== null`と`!== undefined`を使い分けよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612884241,
      "updated": 1612885709
    },
    {
      "id": "6022a912aff09e00008a2bf8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612884243,
      "updated": 1612884243
    },
    {
      "id": "6022b05eaff09e00008a2c00",
      "text": "以下、個人的感想",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612886111,
      "updated": 1612886117
    },
    {
      "id": "6022b07aaff09e00008a2c02",
      "text": "　7: 意味を持たない型変数に関しては、意味を持たないことを表明するために一文字変数でいいと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612886138,
      "updated": 1612886194
    },
    {
      "id": "6022b0b3aff09e00008a2c03",
      "text": "　　まあ意味を持たない型変数を書く機会はさほど多くない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612886196,
      "updated": 1612886234
    },
    {
      "id": "6022b05faff09e00008a2c01",
      "text": "　10: これは強いプログラマの間でも意見が分かれるところだと思う。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612886112,
      "updated": 1612921961
    },
    {
      "id": "60233c69aff09e0000d3f563",
      "text": "　\t「undefinedを使うな、nullを使え」「nullを使うな、undefinedを使え」の両方があり「両方の派閥がいるので二つを区別するな, `!= null`を使え」派もいる。see: [nullとundefined - TypeScript Deep Dive 日本語版 https://typescript-jp.gitbook.io/deep-dive/recap/null-undefined]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612921961,
      "updated": 1612921961
    },
    {
      "id": "60233be2aff09e0000d3f561",
      "text": "　\tTypeScriptのstrictモードを前提にするならnullとundefinedの取り違えはコンパイラがチェックしてくれるはずであり、わざわざ緩い条件判断をする必要はない、というこの記事の主張は筋は通る。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612921826,
      "updated": 1612921894
    },
    {
      "id": "60233c25aff09e0000d3f562",
      "text": "　\t僕はTypeScriptを使い始めた時はこの辺りのことが良く分かってなかったけど、create-react-appでプロジェクトを作ったらデフォルトでこの件を警告してきたので早い段階で矯正された。see: [no-eq-null - Rules - ESLint https://eslint.org/docs/rules/no-eq-null]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612921894,
      "updated": 1612969667
    },
    {
      "id": "6023f6c5aff09e0000dcf6a2",
      "text": "　\t　今試したら警告されなかったたんだけど記憶違いなのか、警告しなくなったのか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612969669,
      "updated": 1612969713
    },
    {
      "id": "6022b19faff09e00008a2c05",
      "text": "　4, 6: これはやった方がベターであることに異論はないが、手間もだいぶ増えるので、トレードオフだと思う。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612886431,
      "updated": 1612886712
    },
    {
      "id": "6022b297aff09e00008a2c06",
      "text": "　残りのところは特に異論はない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612886679,
      "updated": 1612886702
    },
    {
      "id": "6022b0e4aff09e00008a2c04",
      "text": "\tやってみた [2日掛けてanyを撲滅した]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612886244,
      "updated": 1613132877
    },
    {
      "id": "60236127aff09e00002129ed",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1612931368,
      "updated": 1612931368
    }
  ]
}