{
  "id": "6090ec09a287e6002291a20a",
  "title": "Hatena2012-03-31",
  "created": 1333119600,
  "updated": 1333119600,
  "lines": [
    {
      "id": "6090ec2daff09e00003dae0c",
      "text": "Hatena2012-03-31",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae0d",
      "text": "code:hatena",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae0e",
      "text": " <body>",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae0f",
      "text": " *1333180917*Alloyを勉強する日記(0)",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae10",
      "text": " Java-ja温泉にてid:warufuzaketaichiに教えてもらったAlloyについて、勉強過程のログを記録しておく。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae11",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae12",
      "text": " 教科書は買ったけどまだ届いていない。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae13",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae14",
      "text": " <iframe src=\"http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=AAFFAA&fc1=000000&lc1=0000FF&t=nishiohirokaz-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4274068587\" style=\"width:120px;height:240px;\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\"></iframe>",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae15",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae16",
      "text": " Alloyでググっていたら圏の勉強の時にだいぶ参考にさせていただいた檜山さんのブログで言及されているのを発見したので、ざっと眺める。「関係圏Relでは、指数演算の実体が直積になっている」とか眼から鱗な感じ。ref. <a href='http://d.hatena.ne.jp/m-hiyama/20111118/1321600673'>Alloyの矢印記法と、モノイド閉圏としての関係圏 - 檜山正幸のキマイラ飼育記</a>",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae17",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae18",
      "text": " まあ、どう眼から鱗だったのか噛み砕いて説明できないのでわかった気になっているだけかもしれませんが ;p",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae19",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae1a",
      "text": " <a href='http://d.hatena.ne.jp/propella/20090712/p1'>Alloy: A Lightweight Object Modelling Notation - 言語ゲーム</a>の説明はとてもわかりやすかった。若干もやっとするので、きっと僕の脳内のモデルとこの文章を書いた人のモデルにどこか食い違いがあるんだと思うけど、どこが食い違っているか明確に言語化できていない。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae1b",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae1c",
      "text": " 「オブジェクト指向のプロパティは関数」というあたりが食い違いかな？",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae1d",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae1e",
      "text": " 追記: 理解した。ここで言う「関数」って言葉の意味は「定義域のオブジェクト一つに対して値域のオブジェクトがただ一つ対応する」っていう制約のことを言ってるんですね。納得。たしかに一般的な言語でfoo.barってやったばあい1つの値が返ってきて、なのでそれに慣れていると暗黙に「値域のオブジェクトは1個」と思い込んでしまいがち。だけど関係一般について考えると、これは0個かもしれないし5個かもしれない。そういうことを言いたかったのだと理解しました。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae1f",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae20",
      "text": " 論文のとりあえず3章を眺める http://sdg.csail.mit.edu/pubs/2002/alloy-journal.pdf",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae21",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae22",
      "text": " Alloyの文脈では、まず基本ブロックとして使われる「関係」が二項関係なので「より多項の関係を扱いたくなった時にどうするの？」「それ関数でできるよ！カリー化！カリー化！」って言わんがために「関数」があるという印象。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae23",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae24",
      "text": " スコーレム化：「全ての x について、ある y が存在し、R(x,y) が成り立つ」とは「ある関数 f が全ての x を y にマッピングし、全ての x について R(x,f(x)) が成り立つ」ref. <a href='http://ja.wikipedia.org/wiki/%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%AC%E3%83%A0%E6%A8%99%E6%BA%96%E5%BD%A2'>スコーレム標準形 - Wikipedia</a>",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae25",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae26",
      "text": " シングルトンであるという制約をsome x: T | x = vで表現しているのが理解出来ない。このコードを「あるSet Tの要素xについてx = v」と理解しているのだけど、それだとシングルトンだという制約には不足じゃないだろうか。all x: T | x = v なら「Tの任意の要素xについてx = v、つまりTの要素はv1個だけ」になりそうだ。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae27",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae28",
      "text": " 著者らいわく目新しいところはthe treatment of scalars as singleton sets, the encoding of sets as degenerate relations, and the dot operator used to form ‘navigation expressions'とのことで。1つ目のはまあ「要素(スカラー)と集合の演算」と「集合と集合の演算」の両方を考えるのはめんどいから要素はそれ1個が含まれている集合だとみなしましょう、ってこと。ちょうど最近のスクリプト言語が文字と文字列を区別するのがめんどくさくて、文字を長さ1の文字列とみなしているようなもの。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae29",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae2a",
      "text": " 2つ目のは「集合に入っているものがスカラーなのか関係なのか」とか考えるのは面倒だから関係じゃないものXが入ってた場合(Unit, X)っていう関係が入っているものとみなそう、って話。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae2b",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae2c",
      "text": " 3つ目の‘navigation expressions'ってのが何を指しているのかはいまいちよくわかってない。double dutyって言葉で表現されているけどもs.tのドットは単に関係の合成をする演算子だけども、sが集合でtが関係の時にはpythonで表現すると[x.t for x in s]みたいな感じになる。s.~tではなく~s.tが直積じゃないか、という点に関してはid:propellaさんに同意。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae2d",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae2e",
      "text": " AlloyはSat4jを使っているんだっけ？適当にいじって遊べるようなSATソルバってないかなぁ。あ、 http://alloy.mit.edu/alloy4/quickguide/gui.html をみると色々切り替えられるようだな。じゃあこの中からいじりやすい物を探すか。",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae2f",
      "text": " ",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae30",
      "text": " んん、sat4jとかのレイヤーの上にKodkodってのが乗ってるのか http://alloy.mit.edu/kodkod/download.html Alloyで制約問題を解いているのは実際にはこいつなのかな。Kodkodを使っているアプリの一覧が興味深い http://alloy.mit.edu/kodkod/apps.html",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae31",
      "text": " </body>",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae32",
      "text": "",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dae33",
      "text": "[はてなダイアリー 2012-03-31 https://nishiohirokazu.hatenadiary.org/archive/2012/03/31]",
      "created": 1333119600,
      "updated": 1333119600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}