{
  "id": "6059c3635037120023fd37b6",
  "title": "Scratch",
  "created": 1616495462,
  "updated": 1616593909,
  "lines": [
    {
      "id": "6059c3635037120023fd37b6",
      "text": "Scratch",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495462,
      "updated": 1616495463
    },
    {
      "id": "6059c367aff09e00008eef05",
      "text": "昼休みにちょっとScratchやってみよう。派生したものとか昔のとかは触ったことがあったけどよく考えたら本家の最新のは知らないことに気づいた。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495464,
      "updated": 1616495488
    },
    {
      "id": "6059c37faff09e00008eef06",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495488,
      "updated": 1616495488
    },
    {
      "id": "6059c37faff09e00008eef07",
      "text": "ここでアカウントを作ればいいのかな https://scratch.mit.edu/",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495488,
      "updated": 1616495496
    },
    {
      "id": "6059c389aff09e00008eef09",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495497,
      "updated": 1616495497
    },
    {
      "id": "6059c3e4aff09e0000b6d587",
      "text": "リストを作る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495589,
      "updated": 1616495592
    },
    {
      "id": "6059c389aff09e00008eef0a",
      "text": " スプライト単位のスコープと、その外側のグローバルスコープがあるということがわかった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495497,
      "updated": 1616495594
    },
    {
      "id": "6059c397aff09e00008eef0b",
      "text": "\t[https://gyazo.com/91640da3d32314448ea3a93b30daece5]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495511,
      "updated": 1616495596
    },
    {
      "id": "6059c3c8aff09e00008eef0c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495561,
      "updated": 1616495561
    },
    {
      "id": "6059c3d0aff09e00008eef0d",
      "text": "スタックマシンができた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495568,
      "updated": 1616495609
    },
    {
      "id": "6059c3f9aff09e00008eef0e",
      "text": "\t[https://gyazo.com/ad3f12799bbb97c41bd08ab177eb0241]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495609,
      "updated": 1616495617
    },
    {
      "id": "6059c400aff09e00008eef0f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495617,
      "updated": 1616495617
    },
    {
      "id": "6059c409aff09e00008eef10",
      "text": "ネット上の記事で「関数を定義できる」と認識してたけど、値を返さないプロシージャが定義できるだけかな…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495625,
      "updated": 1616495626
    },
    {
      "id": "6059c40aaff09e00008eef11",
      "text": "\t>abee2: ユーザーが定義したブロックに引数はありますが、返り値はありません(それなので、関数ではなくプロシージャ)。組込関数(両端の丸いレポーターブロック、尖ったブーリアンブロック)は返り値を持ちます。ずっとみんな指摘しているのに導入されないのはScratch七不思議のひとつと言われています。[Twitter https://twitter.com/abee2/status/1371293853358039040]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495626,
      "updated": 1616495731
    },
    {
      "id": "6059c388aff09e00008eef08",
      "text": "\t[Snap!]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495496,
      "updated": 1616496727
    },
    {
      "id": "6059c858aff09e00008eef3e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496728,
      "updated": 1616496728
    },
    {
      "id": "6059c496aff09e00008eef13",
      "text": "メッセージ送受信はできるがメッセージは引数を持てなさそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495766,
      "updated": 1616495766
    },
    {
      "id": "6059c497aff09e00008eef15",
      "text": "\tパラメータを共有スペースに置いて通知だけメッセージでやるタイプなら可能か",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495767,
      "updated": 1616495774
    },
    {
      "id": "6059c49faff09e00008eef16",
      "text": "\tスタックのpush/popをくくり出そうかと思ったけど、この方式だと特に嬉しいところがないな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495775,
      "updated": 1616495784
    },
    {
      "id": "6059c4a8aff09e00008eef18",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495784,
      "updated": 1616495784
    },
    {
      "id": "6059c4a8aff09e00008eef19",
      "text": "リテラルで空白文字入れられない？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495784,
      "updated": 1616495792
    },
    {
      "id": "6059c4b0aff09e00008eef1a",
      "text": "\tそんなことなかった、逆に変数を間違えて変数名のリテラルにしてた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495792,
      "updated": 1616495795
    },
    {
      "id": "6059c4a0aff09e00008eef17",
      "text": "\t[https://gyazo.com/f9b0f4cfa373a896572dc4d83a8c710e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495776,
      "updated": 1616495857
    },
    {
      "id": "6059c546aff09e00008eef28",
      "text": "\t変数を入れるべきところに変数名をリテラルとして入れてつねにfalseな式になってしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495942,
      "updated": 1616495942
    },
    {
      "id": "6059c4f1aff09e00008eef1f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495857,
      "updated": 1616495857
    },
    {
      "id": "6059c505aff09e00008eef20",
      "text": "length of xにリストを入れてしまったが、リストの長さを取得するのは同じ名前だけど赤いブロック",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495878,
      "updated": 1616495878
    },
    {
      "id": "6059c506aff09e00008eef21",
      "text": "\t[https://gyazo.com/b4d5fafffcdedff2640532a1e1735762]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495879,
      "updated": 1616495886
    },
    {
      "id": "6059c53aaff09e00008eef26",
      "text": "\t文字列の長さを返す関数にリストを渡してしまうと「文字列化したものの長さ」が返ってしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495930,
      "updated": 1616495931
    },
    {
      "id": "6059c53baff09e00008eef27",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495931,
      "updated": 1616495932
    },
    {
      "id": "6059c50daff09e00008eef22",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495886,
      "updated": 1616495886
    },
    {
      "id": "6059c510aff09e00008eef23",
      "text": "文字列をパースして足し算引き算ができるようになりました。FORTHのサブセット。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495888,
      "updated": 1616495895
    },
    {
      "id": "6059c517aff09e00008eef24",
      "text": "\t[https://gyazo.com/9ce2efabcbfb529cb64e3d33d048d7a3]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495896,
      "updated": 1616495903
    },
    {
      "id": "6059c51eaff09e00008eef25",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495903,
      "updated": 1616495903
    },
    {
      "id": "6059c496aff09e00008eef14",
      "text": "値を返す関数は、値を入れておく変数を用意すれば実現できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495766,
      "updated": 1616495954
    },
    {
      "id": "6059c552aff09e00008eef2a",
      "text": "\t[https://gyazo.com/75c6b2394566896c89bac4dc6ee1d2ca]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495954,
      "updated": 1616495962
    },
    {
      "id": "6059c55aaff09e00008eef2b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495962,
      "updated": 1616495962
    },
    {
      "id": "6059c565aff09e00008eef2c",
      "text": "たらい回しをすることもできます笑",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495973,
      "updated": 1616495974
    },
    {
      "id": "6059c566aff09e00008eef2d",
      "text": "\t[https://gyazo.com/005e0b80cc9db1bde4e11f0fa63725dd]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495974,
      "updated": 1616495982
    },
    {
      "id": "6059c56daff09e00008eef2e",
      "text": "\tいや、まてよ、ローカル変数が使えないからとnxとかをグローバル変数にしてしまったから他の呼び出しの最中に上書きされるのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495982,
      "updated": 1616495990
    },
    {
      "id": "6059c584aff09e00008eef31",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496004,
      "updated": 1616496004
    },
    {
      "id": "6059c552aff09e00008eef29",
      "text": "ローカル変数がないため「返り値を関数呼び出し後即座に別の変数に入れておく」ができないから、返り値をスタックに積んでおいて必要になった時に取り出すことにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616495954,
      "updated": 1616496004
    },
    {
      "id": "6059c581aff09e00008eef30",
      "text": "\t[https://gyazo.com/83eb45f492c9a69c958c7e4095c8c550]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496002,
      "updated": 1616496013
    },
    {
      "id": "6059c58daff09e00008eef32",
      "text": "\tステップ実行とウォッチ式が欲しかった()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496013,
      "updated": 1616496038
    },
    {
      "id": "6059c5a6aff09e00008eef34",
      "text": "\t\t「最後の実行結果がスタックトップにある」ということを忘れてnxとnzを逆にして停止しない関数になってしまった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496038,
      "updated": 1616496088
    },
    {
      "id": "6059c5a7aff09e00008eef35",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496039,
      "updated": 1616496039
    },
    {
      "id": "6059c59eaff09e00008eef33",
      "text": "ローカル変数がない件、正確には「ブロックの中で新たに代入を行うことはできない」であって引数はローカル変数になるから、関数の部分適用みたいなブロックを作るという手もあるか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496030,
      "updated": 1616496031
    },
    {
      "id": "6059c580aff09e00008eef2f",
      "text": "\t[https://gyazo.com/d97eef4ac78091828b83b2fb1c65aeba]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496001,
      "updated": 1616496056
    },
    {
      "id": "6059c5b8aff09e00008eef36",
      "text": "\tできたが...w",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496056,
      "updated": 1616496069
    },
    {
      "id": "6059c5c5aff09e00008eef38",
      "text": "\tスタックに積む方式とどっちがわかりやすいのか微妙だな。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496070,
      "updated": 1616496082
    },
    {
      "id": "6059c5d2aff09e00008eef39",
      "text": "\t後者のアプローチは「新しい変数に値を束縛するたびにその値とそこ以降での実行に必要な値を全部引数にして関数呼び出し」って感じで機械的に変換できるから簡単だという解釈もできる(ほんとか？)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496082,
      "updated": 1616496101
    },
    {
      "id": "6059c5c4aff09e00008eef37",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496069,
      "updated": 1616496069
    },
    {
      "id": "6059c5edaff09e00008eef3a",
      "text": "あとは不定長のリストをプログラムの中で好きなだけ作りたいけど、それに関しては文字列にしちゃう手と、一つのリストの中でリンクトリストを作る手とがあるな。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496109,
      "updated": 1616496110
    },
    {
      "id": "6059c5efaff09e00008eef3c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496111,
      "updated": 1616496119
    },
    {
      "id": "6059c5f6aff09e00008eef3d",
      "text": "次の課題は「開きカッコと閉じカッコで構成された文字列が与えられる。カッコが対応しているか判定せよ」で、その次が「S式で表現された計算をせよ」なのかな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496119,
      "updated": 1616496119
    },
    {
      "id": "6059c5edaff09e00008eef3b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496110,
      "updated": 1616496110
    },
    {
      "id": "605b43d5aff09e0000dc918d",
      "text": "[Scratchで個別のスプライトにメッセージを送る]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616593878,
      "updated": 1616593909
    },
    {
      "id": "6059ddd8aff09e00008eef52",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616502233,
      "updated": 1616502233
    }
  ]
}