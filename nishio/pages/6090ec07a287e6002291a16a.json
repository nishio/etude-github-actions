{
  "id": "6090ec07a287e6002291a16a",
  "title": "Hatena2011-04-11",
  "created": 1302447600,
  "updated": 1302447600,
  "lines": [
    {
      "id": "6090ec2baff09e00003d89ca",
      "text": "Hatena2011-04-11",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89cb",
      "text": "code:hatena",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89cc",
      "text": " <body>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89cd",
      "text": " *1302505085*関数だけでリストを作った",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89ce",
      "text": " 今日のお昼休みの話題は、リストがないときにどうやってリスト的なモノを作るか→タプルでLispのconsに相当することをやればいい→じゃあタプルも無かったらどうか→チャーチ的な方法で関数だけでも作れるはず→じゃあ作ってみよう",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89cf",
      "text": " ",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d0",
      "text": " 作れるはずってことしか記憶になくてどうやって構築するのかわからなかったのだけどとりあえずノートを出してごにょごにょしてたらできた。要するに1番目の引数を返す関数と2番目の引数を返す関数が構築出来ればいいんだからfst = ^x. Kx, snd = ^x. Iなわけですね。KとIはそれぞれKコンビネータとIコンビネータ。<a href='http://d.hatena.ne.jp/takuto_h/20110401/ibis'>Ibis</a>を使って実際に挙動を確認してみた:",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d1",
      "text": " ",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d2",
      "text": " >||",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d3",
      "text": " Online interpreter",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d4",
      "text": " Ibis Interpreter",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d5",
      "text": " > let id = fun x -> x",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d6",
      "text": " - : ('a -> 'a) = <closure>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d7",
      "text": " > let const = fun x -> (fun y -> x)",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d8",
      "text": " - : ('a -> ('b -> 'a)) = <closure>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89d9",
      "text": " ",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89da",
      "text": " > let fst = fun x -> const x",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89db",
      "text": " - : ('a -> ('b -> 'a)) = <closure>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89dc",
      "text": " > let snd = fun x -> id",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89dd",
      "text": " - : ('a -> ('b -> 'b)) = <closure>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89de",
      "text": " > let cons = fun x -> (fun y -> (fun z -> z x y))",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89df",
      "text": " - : ('a -> ('b -> (('a -> ('b -> 'c)) -> 'c))) = <closure>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e0",
      "text": " ",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e1",
      "text": " > let list1 = cons 1 (cons 2 (cons 3 id))",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e2",
      "text": " - : ((int -> (((int -> (((int -> (('a -> 'a) -> 'b)) -> 'b) -> 'c)) -> 'c) -> 'd))",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e3",
      "text": " -> 'd) = <closure>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e4",
      "text": " > list1 fst",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e5",
      "text": " - : int = 1",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e6",
      "text": " > list1 snd fst",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e7",
      "text": " - : int = 2",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e8",
      "text": " > list1 snd snd fst",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89e9",
      "text": " - : int = 3",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89ea",
      "text": " ||<",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89eb",
      "text": " ",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89ec",
      "text": " *1302523974*後で読む",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89ed",
      "text": " <a href='http://www.amazon.co.jp/dp/4641161763/ref=as_li_ss_til?tag=nishiohirokaz-22&camp=1027&creative=7407&linkCode=as4&creativeASIN=4641161763&adid=0JJSB43ZZXWTZ5ZFK445'>Amazon.co.jp： 分業と競争―競争優位のアウトソーシング・マネジメント: 武石 彰: 本</a>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89ee",
      "text": " </body>",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89ef",
      "text": "",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2baff09e00003d89f0",
      "text": "[はてなダイアリー 2011-04-11 https://nishiohirokazu.hatenadiary.org/archive/2011/04/11]",
      "created": 1302447600,
      "updated": 1302447600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}