{
  "id": "5f0f2a9381b13b002465c18b",
  "title": "tenka1_2015_qualB_b",
  "created": 1594829461,
  "updated": 1594829843,
  "lines": [
    {
      "id": "5f0f2a9381b13b002465c18b",
      "text": "tenka1_2015_qualB_b",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829461,
      "updated": 1594829461
    },
    {
      "id": "5f0f2bbeaff09e0000ee777c",
      "text": "[B - 天下一リテラル https://atcoder.jp/contests/tenka1-2015-qualb/tasks/tenka1_2015_qualB_b]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829759,
      "updated": 1594829759
    },
    {
      "id": "5f0f2aa9aff09e0000ee777b",
      "text": " Pythonのサブセット的な言語をパースして辞書リテラルか集合リテラルか区別する問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829482,
      "updated": 1594829762
    },
    {
      "id": "5f0f2aeaaff09e0000b1e1f1",
      "text": " 一瞬「どこまで真面目に実装すべきか？」と迷う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829547,
      "updated": 1594829762
    },
    {
      "id": "5f0f2b05aff09e0000b1e1f2",
      "text": "\t 空辞書を除外すれば入力の2文字目以降に一つリテラルがあるのは確定",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829573,
      "updated": 1594829843
    },
    {
      "id": "5f0f2bcbaff09e0000ee777e",
      "text": "\t それを読み飛ばして、次の文字がカンマかコロンかで識別できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829771,
      "updated": 1594829771
    },
    {
      "id": "5f0f2b53aff09e0000b1e1f3",
      "text": " 真面目にプログラミング言語を実装する用途ならこの「読み飛ばし」の部分で真面目にリテラルをパースする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829651,
      "updated": 1594829790
    },
    {
      "id": "5f0f2bddaff09e0000ee777f",
      "text": " \t今回は読み飛ばせればOK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829790,
      "updated": 1594829790
    },
    {
      "id": "5f0f2b88aff09e0000b1e1f4",
      "text": "\t 集合リテラルも辞書リテラルもカッコがバランスしてるからバランスするところまで読み飛ばすだけでいい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829704,
      "updated": 1594829794
    },
    {
      "id": "5f0f2a94aff09e0000ee7760",
      "text": "code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829461,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7762",
      "text": " def parse(s, i):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7763",
      "text": "     if s[i] in string.digits:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7764",
      "text": "         while s[i] in string.digits:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7765",
      "text": "             i += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7766",
      "text": "     else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7767",
      "text": "         bracket = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7768",
      "text": "         i += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7769",
      "text": "         while bracket:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee776a",
      "text": "             if s[i] == \"{\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee776b",
      "text": "                 bracket += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee776c",
      "text": "             elif s[i] == \"}\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee776d",
      "text": "                 bracket -= 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee776e",
      "text": "             i += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee776f",
      "text": "     if s[i] == \":\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7770",
      "text": "         return \"dict\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7771",
      "text": "     else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7772",
      "text": "         return \"set\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7773",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7774",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7775",
      "text": " def solve(s):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7776",
      "text": "     if s == \"{}\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7777",
      "text": "         return \"dict\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7778",
      "text": "     assert s[0] == \"{\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee7779",
      "text": "     return parse(s, 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829478
    },
    {
      "id": "5f0f2aa6aff09e0000ee777a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829478,
      "updated": 1594829479
    },
    {
      "id": "5f0f2aa4aff09e0000ee7761",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594829476,
      "updated": 1594829476
    }
  ]
}