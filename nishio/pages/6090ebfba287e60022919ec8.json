{
  "id": "6090ebfba287e60022919ec8",
  "title": "Hatena2008-10-09",
  "created": 1223478000,
  "updated": 1223478000,
  "lines": [
    {
      "id": "6090ec1faff09e00003cca6d",
      "text": "Hatena2008-10-09",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca6e",
      "text": "code:hatena",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca6f",
      "text": " <body>",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca70",
      "text": " *1223570211*[TopCoder]SRM421 Div1 easy",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca71",
      "text": " http://www.topcoder.com/stat?c=problem_statement&pm=10104&rd=13512",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca72",
      "text": " 直線上のx[i]の位置にm[i]の質量がn個並んでいる。万有引力は距離の二乗に反比例する。別のものを置いたときにプラス方向へ引く力とマイナス方向へ引く力が釣り合うポイントがn-1個あることがわかっている。これを求めよ。って問題。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca73",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca74",
      "text": " チャットから引用",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca75",
      "text": " >>",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca76",
      "text": " それは二分探索で普通に解けた。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca77",
      "text": " 上限をx[i+1], 下限をx[i]にして",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca78",
      "text": " pos = (上限 + 下限) / 2にして",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca79",
      "text": " posの位置でどっち方向の力が強いか計算する",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca7a",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca7b",
      "text": " 上に引っ張ってたら上により過ぎだからもっと下がらないと行けない",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca7c",
      "text": " 上限 = posして繰り返し",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca7d",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca7e",
      "text": " 上限と下限の差が要求されている制度より狭くなったらbreak",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca7f",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca80",
      "text": " これでおわり",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca81",
      "text": " <<",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca82",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca83",
      "text": " 上の説明では言及していないけど、与えられた各質量の間に1個ずつしか釣り合いの点がないことが自明じゃない人もいるかと思うので簡単に説明する。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca84",
      "text": " ２つの質量の間の点に注目する。その点の少しプラス側では、プラス側にある質量に近づいたのでプラス方向に引く力が強まり、逆にマイナスに引く力は弱まる。この二つの力が一致する点が釣り合いの点なので、これは２つの質量の間には１個しかない。(下がるばっかりの線と上がるばっかりの線は１カ所でしか交差しないよね）",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca85",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca86",
      "text": " >|cpp|",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca87",
      "text": "   vector <double> getPoints(vector <int> x, vector <int> m) {",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca88",
      "text": "     vector<double> result;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca89",
      "text": "     size_t N = x.size();",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca8a",
      "text": "     for(size_t i=0; i<N-1; i++){",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca8b",
      "text": "       double ub = x[i + 1];",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca8c",
      "text": "       double lb = x[i];",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca8d",
      "text": "       while(true){",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca8e",
      "text": " \tdouble pos = (ub + lb) / 2;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca8f",
      "text": " \tdouble lforce = 0.0, uforce = 0.0;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca90",
      "text": " \tfor(size_t j=0; j<=i; j++){",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca91",
      "text": " \t  double d = x[j] - pos;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca92",
      "text": " \t  lforce += m[j] / d / d;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca93",
      "text": " \t}",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca94",
      "text": " \tfor(size_t j=i+1; j<N; j++){",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca95",
      "text": " \t  double d = x[j] - pos;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca96",
      "text": " \t  uforce += m[j] / d / d;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca97",
      "text": " \t}",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca98",
      "text": " \tif(uforce > lforce){",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca99",
      "text": " \t  ub = pos;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca9a",
      "text": " \t}else{",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca9b",
      "text": " \t  lb = pos;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca9c",
      "text": " \t}",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca9d",
      "text": " \tif(ub - lb < 1e-10){",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca9e",
      "text": " \t  result += pos;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cca9f",
      "text": " \t  break;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa0",
      "text": " \t};",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa1",
      "text": "       }",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa2",
      "text": "     }",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa3",
      "text": "     return result;",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa4",
      "text": "   }",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa5",
      "text": " ||<",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa6",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa7",
      "text": " ちなみに、result += posはvector<double>に対して+=しているわけだけど、これって意外と知らないひとが多いね。boost/assign.hppを使っています。push_backって長くて面倒だもの。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa8",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaa9",
      "text": " *1223570694*[TopCoder]戦線布告された",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaaa",
      "text": " http://generation1986.g.hatena.ne.jp/n4_t/20081009",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaab",
      "text": " >>",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaac",
      "text": " まずはnishioさんを追撃、であります。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaad",
      "text": " <<",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaae",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaaf",
      "text": " 今年の頭にも戦線布告されたんだけど http://d.hatena.ne.jp/nishiohirokazu/20080101/1199187895",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab0",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab1",
      "text": " 調べてみたら、12ポイント差だった。知らない間に背後につかれていた。怖い怖い。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab2",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab3",
      "text": " *1223572405*[TopCoder]SRM421 Div1 normalがわからない",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab4",
      "text": " http://www.topcoder.com/stat?c=problem_statement&pm=10074&rd=13512",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab5",
      "text": " 整数のリストが与えられる。これはケーキのサイズ。これを最大maxCuts回切って、一番大きい断片と一番小さい断片のサイズの差が一番小さくなるようにせよ、という問題。どうするんだこれ。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab6",
      "text": " >>",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab7",
      "text": " CONSTRAINTS",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab8",
      "text": " -weights will contain between 1 and 50 elements, inclusive.",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccab9",
      "text": " -Each element of weights will be between 1 and 1,000,000,000, inclusive.",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaba",
      "text": " -maxCuts will be between 1 and 100,000, inclusive.",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccabb",
      "text": " <<",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccabc",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccabd",
      "text": " 切断数を1個ずつ増やしながら探索するとかでは無理そう。ケーキのサイズは最大1,000,000,000で、許される切断の回数は最大100,000回。ケーキは最大50個。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccabe",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccabf",
      "text": " ちなみに問題文には書かれていないけども、ケーキをn回切るときにはn等分すると考えていい。なぜかというと、等分してない場合で、断片のどれかが最大もしくは最小になる場合、等分すれば最大の断片はもっと小さくなり、最小の断片はもっと大きくなるので、より「差の小さい」状態が存在することになる。逆に最大でも最小でもない場合、答えに影響しないので等分でもかまわない。よって常に等分する条件を付け加えても答えは変わらない。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac0",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac1",
      "text": " -----",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac2",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac3",
      "text": " 漠然と考えてわからないときは端から考える。まずケーキが1個のときは分割数関係なく0.0を返す。ケーキがいくつかあって分割数の上限が0回の場合、答えはたんに最大値と最小値の差。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac4",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac5",
      "text": " ケーキが2個あって、分割数が1の時を考える。分割するのは大きい方。大きい方をa, 小さい方をbとする。a == bなら分割しなくていい。分割後の差b - a / 2がa - bより大きければ分割しないでいい。つまりbがa * 3 / 4より大きければ分割する必要がある。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac6",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac7",
      "text": " 分割数は1のままで、ケーキがたくさんある場合。分割するのは最大のケーキ。なぜなら、そうでない場合は最大と最小の差が変化しないか増えるかのどちらかだから。最大のピースを分割して、最小を下回らない場合、これは他のピースのサイズによらず差が縮まる。下回る場合が厄介。つまりmax / 2 < min の場合、2番目に大きいケーキを2ndとして、max - min > 2nd - max / 2 が成り立つかどうかが分かれ目。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac8",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccac9",
      "text": " うーん。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccaca",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccacb",
      "text": " 切断数の上限が2の場合、maxを3分割する選択肢と、maxと2ndをそれぞれ2分割する選択肢がある。",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccacc",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccacd",
      "text": " うーん、道筋が見えないぞ。 ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccace",
      "text": " ",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccacf",
      "text": " (続きは後で書く)",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccad0",
      "text": " </body>",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccad1",
      "text": "",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003ccad2",
      "text": "[はてなダイアリー 2008-10-09 https://nishiohirokazu.hatenadiary.org/archive/2008/10/09]",
      "created": 1223478000,
      "updated": 1223478000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}