{
  "id": "5d2da809da330a001720f1ad",
  "title": "storeのsubscribeとuseEffect",
  "created": 1563273226,
  "updated": 1563273229,
  "lines": [
    {
      "id": "5d2da809da330a001720f1ad",
      "text": "storeのsubscribeとuseEffect",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d28",
      "text": "from [pRegroup-done-2019]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1580046375
    },
    {
      "id": "5d2da809aff09e0000708d29",
      "text": "storeのsubscribeとuseEffect",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d2a",
      "text": "storeのsubscribeとuseEffectが意味合い的に重複しているけどどっちをどう使うのが良いのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d2b",
      "text": "こんな感じで良いのかlistenerにした方がいいのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d2c",
      "text": "code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d2d",
      "text": "  useEffect(() => {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d2e",
      "text": "    ...",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d2f",
      "text": "  }, [store.getState().items]);",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d30",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d31",
      "text": "subscribeの説明を読む",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d32",
      "text": "https://redux-docs.netlify.com/api/store#a-id-subscribe-class-anchor-a-subscribelistener-subscribe",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d33",
      "text": ">It is a low-level API. Most likely, instead of using it directly, you'll use React (or other) bindings. If you commonly use the callback as a hook to react to state changes, you might want to write a custom observeStore utility. The Store is also an Observable, so you can subscribe to changes with libraries like RxJS.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    },
    {
      "id": "5d2da809aff09e0000708d34",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1563273226,
      "updated": 1563273226
    }
  ]
}