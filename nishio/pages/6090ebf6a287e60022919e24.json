{
  "id": "6090ebf6a287e60022919e24",
  "title": "Hatena2008-04-17",
  "created": 1208358000,
  "updated": 1208358000,
  "lines": [
    {
      "id": "6090ec1caff09e00003c94a3",
      "text": "Hatena2008-04-17",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94a4",
      "text": "code:hatena",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94a5",
      "text": " <body>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94a6",
      "text": " *1208407306*GIL (global interpreter lock)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94a7",
      "text": " 昨日のアンケートに「GILを取り除く」という選択肢が追加されていた。GILが何なのかわからない人もいるだろうから簡単に説明しようと思ったけど",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94a8",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94a9",
      "text": " - Matzにっき(2007-09-13) It isn't Easy to Remove the GIL",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94aa",
      "text": " -- http://www.rubyist.net/~matz/20070913.html#p02",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ab",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ac",
      "text": " を読む方がいいかと思ったので紹介しておく。実例で説明すると「処理重たいなぁ。→そうだCPU2つあるから2つのスレッドでやったら2倍速いんじゃないか？→やってみる→あれ、片方しか使われていないぞ？？」というのがありがちなはまりパターンかな。インタプリタ単位でロックがかかるので、ばりばり計算する処理を2つのスレッドでやっても2倍速くなるどころかスレッドの切り替えコストで逆に遅くなる。そういうことがやりたいならインタプリタを二つ起動する必要がある。もちろんI/O待ちがたくさんある場合は、待っている間ブロックせず他のスレッドが計算できるようにスレッドを使う価値はある。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ad",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ae",
      "text": " *1208418992*TopCoderプロキシ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94af",
      "text": " TopCoderのArenaはJavaWebStartで、www.topcoder.com:80からソフトウェアをダウンロードした後www.topcoder.com:5001にアクセスをする。というわけでwww.topcoder.comは普段は66.37.210.86。というわけでhostsを書き換えてwww.topcoder.comが127.0.0.1を指すようにした上でローカルで下のようなスクリプトを起動。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b0",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b1",
      "text": " (削除されました)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b2",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b3",
      "text": " これでTopCoderのサイトからJavaWebStartで起動するところまではうまくいくのだけど、ログインをしようとするとタイムアウトになる。なんでだろうなぁ。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b4",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b5",
      "text": " 出力は",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b6",
      "text": " (削除されました)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b7",
      "text": " って感じなので、サーバの返答を受信して、返事が来ないから全部受信し終わったと考えてクローズしているところが実は焦りすぎということなんだろうか。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b8",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94b9",
      "text": " -----",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ba",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94bb",
      "text": " あ、そっか。HTTPと違うからサーバに送って、サーバから返事が返ってきても終わりじゃないんだ。そこでcloseしちゃダメだな。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94bc",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94bd",
      "text": " >||",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94be",
      "text": " got result, len 31",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94bf",
      "text": " sending result",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c0",
      "text": " sent result",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c1",
      "text": " getting result",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c2",
      "text": " timeout('timed out',)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c3",
      "text": " ----------",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c4",
      "text": " getting data",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c5",
      "text": " got data, len 41",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c6",
      "text": " sending data",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c7",
      "text": " sent data",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c8",
      "text": " getting data",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94c9",
      "text": " ||<",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ca",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94cb",
      "text": " やっぱりそうだった。しかし、じゃぁどういうときにcloseすればいいんだろうか。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94cc",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94cd",
      "text": " -----",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ce",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94cf",
      "text": " とりあえず、他の人の書いたファイルをダウンロードできるようになった。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d0",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d1",
      "text": " >|python|",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d2",
      "text": " \"\"\"",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d3",
      "text": " topcoder proxy",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d4",
      "text": " \"\"\"",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d5",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d6",
      "text": " import SocketServer",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d7",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d8",
      "text": " class ProxyHandler(SocketServer.StreamRequestHandler):",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94d9",
      "text": "     PORT = 5001",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94da",
      "text": "     def handle(self):",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94db",
      "text": "         print \"connect from:\", self.client_address",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94dc",
      "text": "         s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94dd",
      "text": "         print \"connecting to TopCoder\"",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94de",
      "text": "         s.connect((\"66.37.210.86\", self.PORT))",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94df",
      "text": "         print \"connected to TopCoder\"",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e0",
      "text": "         from time import sleep",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e1",
      "text": "         TO_CLOSE = False",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e2",
      "text": "         while not TO_CLOSE:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e3",
      "text": "             try:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e4",
      "text": "                 while True:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e5",
      "text": "                     print \"getting data\",",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e6",
      "text": "                     data = self.request.recv(8192)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e7",
      "text": "                     print \"got data, len\", len(data)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e8",
      "text": "                     if len(data) == 0:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94e9",
      "text": "                         TO_CLOSE = True",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ea",
      "text": "                         break",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94eb",
      "text": "                     print \"sending data\",",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ec",
      "text": "                     s.send(data)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ed",
      "text": "                     print \"sent data\"",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ee",
      "text": "             except Exception, e:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ef",
      "text": "                 print repr(e)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f0",
      "text": "                 ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f1",
      "text": "             try:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f2",
      "text": "                 while True:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f3",
      "text": "                     print \"getting result\",",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f4",
      "text": "                     result = s.recv(8192)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f5",
      "text": "                     print \"got result, len\", len(result)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f6",
      "text": "                     if len(result) == 0:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f7",
      "text": "                         TO_CLOSE = True",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f8",
      "text": "                         break",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94f9",
      "text": "                     if \"#include\" in result:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94fa",
      "text": "                         print \"code found!\"",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94fb",
      "text": "                         start = result.index(\"#include\")",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94fc",
      "text": "                         end = result.index(\"\\x00\", start)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94fd",
      "text": "                         import time",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94fe",
      "text": "                         filename = time.strftime(",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c94ff",
      "text": "                             r\"C:\\topcoder\\dl\\%m%d_%H%M%S.cpp\")",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9500",
      "text": "                         file(filename, \"w\").write(result[start:end])",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9501",
      "text": "                     ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9502",
      "text": "                     print \"sending result\",",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9503",
      "text": "                     self.request.send(result)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9504",
      "text": "                     print \"sent result\"",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9505",
      "text": "             except Exception, e:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9506",
      "text": "                 print repr(e)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9507",
      "text": "             print \"----------\"",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9508",
      "text": "             sleep(1)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9509",
      "text": "             ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c950a",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c950b",
      "text": "         s.close()",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c950c",
      "text": "         self.request.close()",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c950d",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c950e",
      "text": " class ProxyHandler80(ProxyHandler):",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c950f",
      "text": "     PORT = 80",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9510",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9511",
      "text": " import thread",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9512",
      "text": " import socket",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9513",
      "text": " socket.setdefaulttimeout(1.0)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9514",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9515",
      "text": " server = SocketServer.ThreadingTCPServer(('localhost', 5001), ProxyHandler)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9516",
      "text": " print 'listening:', server.socket.getsockname()",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9517",
      "text": " thread.start_new_thread(server.serve_forever, ())",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9518",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9519",
      "text": " server = SocketServer.ThreadingTCPServer(('localhost', 80), ProxyHandler80)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c951a",
      "text": " print 'listening:', server.socket.getsockname()",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c951b",
      "text": " thread.start_new_thread(server.serve_forever, ())",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c951c",
      "text": " ||<",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c951d",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c951e",
      "text": " *1208423855*なんか",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c951f",
      "text": " サイボウズラボに関する誤解が広がっている気がするんだけど、勤務形態が交渉次第で柔軟に設定できるだけであって制度として社員全員が週3日勤務なわけではないよ。っていうか同期に「ラボって週3日勤務なの？！」って言われるから勘弁してｗ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9520",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9521",
      "text": " *1208425951*[cpp]今日のC++",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9522",
      "text": " 覚えたこと。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9523",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9524",
      "text": " - using namespace std;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9525",
      "text": " -- STLの諸々の関数をグローバル空間にぶちまける。TopCoder的には常套手段。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9526",
      "text": " - algorithmのなかにminとmaxはあるが、引数は2個限定。min_elementとかでリストの中の最小値の場所を得ることができるのでPythonのmin(xs)に相当するのはxs[min_element(xs.begin(), xs.end())]かな。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9527",
      "text": " - &lt;?=",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9528",
      "text": " -- 最小値演算子 http://www.asahi-net.or.jp/~WG5K-ICKW/html/online/gcc-2.95.2/gcc_5.html thanks @renha",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9529",
      "text": " -- 最新のgccからは取り除かれているのでTopCoder以外では使わない方がよさそう",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c952a",
      "text": " -- for(int i=0;i&lt;xs.size();i++){result&lt;?=f(xs[i])}とかやってPythonでいうところのmin(f(x) for x in xs)を実現する。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c952b",
      "text": " - 参照は右から読む",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c952c",
      "text": " -- gcc -lstdc++ foo.cpp って書いたら参照が右にないからエラーになった。gcc foo.cpp -lstdc++が正解。もしくはg++ foo.cpp。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c952d",
      "text": " - templateの定義の最後にはセミコロンがいる",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c952e",
      "text": " - template&lt;0> struct Numbersって書いて怒られた。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c952f",
      "text": " -- template&lt;> struct Numbers&lt;0>が正解。変なの。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9530",
      "text": " -- 最初のが自由度で、後のがどこに何がはまっているか",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9531",
      "text": " - template&lt;int N>&lt;int M>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9532",
      "text": " -- expected unqualified-id before '<' token",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9533",
      "text": " -- &lt;int N, int M>だな",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9534",
      "text": " - wrong number of template arguments (1, should be 2)",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9535",
      "text": " -",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9536",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9537",
      "text": " *1208431832*[cpp]C++のテンプレートで素数計算",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9538",
      "text": " C++のテンプレートで計算をするなんて変態だと思っていたのだけど、奥さんがさくっと10分くらいで書いたFizzBuzzのコードを見るとなんか非常に素直で読みやすいコードだったので、僕もテンプレートで何かしてみることにしました。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9539",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c953a",
      "text": " -Kazuho@Cybozu Labs: C++ テンプレートで(いまさら)FizzBuzz",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c953b",
      "text": " --http://labs.cybozu.co.jp/blog/kazuho/archives/2008/04/fizzbuzz_cpp_template.php",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c953c",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c953d",
      "text": " そんなわけでできたのが素数を求めるコード。途中の「数字を全部出す」と「2の倍数を出す」をコメントで残してあります。isPrime2とかisPrime3とかあるのは3つ合わせてisPrimeの働きをする型のそれぞれの名前を思いつかないので適当な名前になっています。テンプレートにはデフォルトの型引数があるみたいなのでisPrime本体は必要ないですね。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c953e",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c953f",
      "text": " >|cpp|",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9540",
      "text": " #include <iostream>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9541",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9542",
      "text": " using namespace std;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9543",
      "text": " template<int N, int D> struct isPrime2;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9544",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9545",
      "text": " template<int N, int D, int R> struct isPrime3{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9546",
      "text": "   isPrime3(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9547",
      "text": " \t// N % D != 0",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9548",
      "text": " \t// so we should check if N % (D-1) == 0",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9549",
      "text": " \tisPrime2<N, D-1>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c954a",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c954b",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c954c",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c954d",
      "text": " template<int N, int D> struct isPrime3<N, D, 0>{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c954e",
      "text": "   isPrime3(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c954f",
      "text": " \t// N % D == 0",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9550",
      "text": " \t// so N is not prime",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9551",
      "text": " \t// cout << N << \" is not prime\" << endl;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9552",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9553",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9554",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9555",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9556",
      "text": " template<int N, int D> struct isPrime2{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9557",
      "text": "   isPrime2(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9558",
      "text": " \t// if N % D == 0?",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9559",
      "text": " \tisPrime3<N, D, N%D>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c955a",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c955b",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c955c",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c955d",
      "text": " template<int N> struct isPrime2<N, 1>{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c955e",
      "text": "   isPrime2(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c955f",
      "text": " \t// cout << N << \" is prime!\" << endl;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9560",
      "text": " \tcout << N << \" \";",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9561",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9562",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9563",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9564",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9565",
      "text": " template<int N> struct isPrime{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9566",
      "text": "   isPrime(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9567",
      "text": " \tisPrime2<N, N-1>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9568",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9569",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c956a",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c956b",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c956c",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c956d",
      "text": " /* ver.2",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c956e",
      "text": " template<int N, int R> struct isDividable_{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c956f",
      "text": "   isDividable_(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9570",
      "text": " \tcout << N << endl;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9571",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9572",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9573",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9574",
      "text": " template<int N> struct isDividable_<N, 0>{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9575",
      "text": "   isDividable_(){}",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9576",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9577",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9578",
      "text": " template<int N, int M> struct isDividable {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9579",
      "text": "   isDividable(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c957a",
      "text": " \tisDividable_<N, N%M>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c957b",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c957c",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c957d",
      "text": " */",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c957e",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c957f",
      "text": " /* ver.1",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9580",
      "text": " template<int N> struct Print {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9581",
      "text": "   Print() {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9582",
      "text": " \tcout << N << endl;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9583",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9584",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9585",
      "text": " */",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9586",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9587",
      "text": " template<int N> struct Numbers {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9588",
      "text": "   Numbers(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9589",
      "text": " \tNumbers<N-1>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c958a",
      "text": " \t// insert visiter here",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c958b",
      "text": " \t/* ver.1",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c958c",
      "text": " \t   Print<N>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c958d",
      "text": " \t*/",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c958e",
      "text": " \t/* ver.2",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c958f",
      "text": " \t   isDividable<N, 2>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9590",
      "text": " \t*/",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9591",
      "text": " \tisPrime<N>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9592",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9593",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9594",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9595",
      "text": " template<> struct Numbers<1> {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9596",
      "text": "   Numbers(){} // empty",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9597",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9598",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9599",
      "text": " int main(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c959a",
      "text": "   Numbers<100>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c959b",
      "text": " }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c959c",
      "text": " ||<",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c959d",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c959e",
      "text": " 余計なものを取り除いて名前を付け替えてアンタビファイしたやつは↓",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c959f",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a0",
      "text": " >|cpp|",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a1",
      "text": " #include <iostream>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a2",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a3",
      "text": " using namespace std;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a4",
      "text": " template<int N, int D> struct isPrime;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a5",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a6",
      "text": " template<int N, int D, int R> struct isPrime_{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a7",
      "text": "   isPrime_(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a8",
      "text": "     isPrime<N, D-1>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95a9",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95aa",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ab",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ac",
      "text": " template<int N, int D> struct isPrime_<N, D, 0>{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ad",
      "text": "   isPrime_(){}",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ae",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95af",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b0",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b1",
      "text": " template<int N, int D=N-1> struct isPrime{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b2",
      "text": "   isPrime(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b3",
      "text": "     // if N % D == 0?",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b4",
      "text": "     isPrime_<N, D, N%D>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b5",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b6",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b7",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b8",
      "text": " template<int N> struct isPrime<N, 1>{",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95b9",
      "text": "   isPrime(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ba",
      "text": "     cout << N << \" \";",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95bb",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95bc",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95bd",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95be",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95bf",
      "text": " template<int N> struct Primes {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c0",
      "text": "   Primes(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c1",
      "text": "     Primes<N-1>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c2",
      "text": "     isPrime<N>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c3",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c4",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c5",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c6",
      "text": " template<> struct Primes<1> {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c7",
      "text": "   Primes(){} // empty",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c8",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95c9",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ca",
      "text": " int main(){",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95cb",
      "text": "   Primes<100>();",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95cc",
      "text": " }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95cd",
      "text": " ||<",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ce",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95cf",
      "text": " *1208438940*[cpp]",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d0",
      "text": " 動かない理由は後で考える。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d1",
      "text": " >|cpp|",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d2",
      "text": " class MinDifference {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d3",
      "text": " public:",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d4",
      "text": "   int closestElements(int A0, int X, int Y, int M, int n) {",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d5",
      "text": " \tint res=10000;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d6",
      "text": " \t",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d7",
      "text": " \tvector<int> a(1,A0);",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d8",
      "text": " \tfor(;a.size()<n;a.push_back(((a.back()*X)+Y)%M));",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95d9",
      "text": " \tsort(a.begin(), a.end());",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95da",
      "text": " \tvector<int> buf;",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95db",
      "text": " \tadjacent_difference(a.begin(), a.end(), buf);",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95dc",
      "text": " \treturn buf[min_element(buf.begin() + 1, buf.end())];;\t",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95dd",
      "text": "   }",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95de",
      "text": " };",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95df",
      "text": " ||<",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e0",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e1",
      "text": " エラーメッセージは下記。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e2",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e3",
      "text": " >||",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e4",
      "text": " MinDifference.cpp: In member function `int MinDifference::closestElements(int, i",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e5",
      "text": " nt, int, int, int)':",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e6",
      "text": " MinDifference.cpp:113: error: no match for 'operator[]' in 'buf[std::min_element",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e7",
      "text": "  [with _ForwardIterator = __gnu_cxx::__normal_iterator<int*, std::vector<int, st",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e8",
      "text": " d::allocator<int> > >]((&buf)->std::vector<_Tp, _Alloc>::begin [with _Tp = int,",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95e9",
      "text": " _Alloc = std::allocator<int>](), (&buf)->std::vector<_Tp, _Alloc>::end [with _Tp",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ea",
      "text": "  = int, _Alloc = std::allocator<int>]())]'",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95eb",
      "text": " /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/c++/bits/stl_vector.h:462: note: candi",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ec",
      "text": " dates are: typename _Alloc::reference std::vector<_Tp, _Alloc>::operator[](size_",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ed",
      "text": " t) [with _Tp = int, _Alloc = std::allocator<int>]",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ee",
      "text": " /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/c++/bits/stl_vector.h:476: note:  type",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ef",
      "text": " name _Alloc::const_reference std::vector<_Tp, _Alloc>::operator[](size_t) const",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f0",
      "text": " [with _Tp = int, _Alloc = std::allocator<int>]",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f1",
      "text": " /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/c++/bits/stl_numeric.h: In function `_",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f2",
      "text": " OutputIterator std::adjacent_difference(_InputIterator, _InputIterator, _OutputI",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f3",
      "text": " terator) [with _InputIterator = __gnu_cxx::__normal_iterator<int*, std::vector<i",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f4",
      "text": " nt, std::allocator<int> > >, _OutputIterator = std::vector<int, std::allocator<i",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f5",
      "text": " nt> >]':",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f6",
      "text": " MinDifference.cpp:112:   instantiated from here",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f7",
      "text": " /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/c++/bits/stl_numeric.h:279: error: no",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f8",
      "text": " match for 'operator*' in '*__result'",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95f9",
      "text": " MinDifference.cpp:112:   instantiated from here",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95fa",
      "text": " /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/c++/bits/stl_numeric.h:283: error: no",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95fb",
      "text": " match for 'operator++' in '++__result'",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95fc",
      "text": " /usr/lib/gcc/i686-pc-cygwin/3.4.4/include/c++/bits/stl_numeric.h:286: error: no",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95fd",
      "text": " match for 'operator++' in '++__result'",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95fe",
      "text": " ||<",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c95ff",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9600",
      "text": " *1208441718*疲れた",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9601",
      "text": " ",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9602",
      "text": " とてもねむたい。明日は大雨らしい。やだなあ。ねむい。",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9603",
      "text": " </body>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9604",
      "text": " <comments>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9605",
      "text": " <comment>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9606",
      "text": " <username>jbking</username>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9607",
      "text": " <body>プロトコルを解析してパケットの長さを計算するか、下位プロトコル(TCP)の転送を監視する方法がいいのかぁ。</body>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9608",
      "text": " <timestamp>1208423838</timestamp>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9609",
      "text": " </comment>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c960a",
      "text": " <comment>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c960b",
      "text": " <username>kazuhooku</username>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c960c",
      "text": " <body>一般的なコーディングパターンとしては、以下のような感じになると思います。read か write に失敗したら close<br><br>while (1) {<br>  poll_for_read(client_fd and server_fd);<br>  if (read_is_ready(client_fd)) {<br>    write(server_fd, read(client_fd));<br>  }<br>  if (read_is_ready(server_fd)) {<br>    write(client_fd, read(server_fd));<br>  }<br>}</body>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c960d",
      "text": " <timestamp>1208428699</timestamp>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c960e",
      "text": " </comment>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c960f",
      "text": " <comment>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9610",
      "text": " <username>herumi</username>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9611",
      "text": " <body>std::min_elementは最小要素を指すイテレータを返すので，*std::min_element(xs.begin(), xs.end())が正解です．<br>もしxs[]でできたとしたら，たまたまうまく動いただけのはずです．そして[]を使うとlistでは使えないのでうれしくないです．<br><br>C++はLLと違っていじくり回しながら文法を理解していくような言語じゃないと思います．<br>それはLLほどには文法の自然さや簡単さを目指して設計されていない部分が多いからです(特にtemplate周り)．<br>トリッキーな部分から入ると余計な落とし穴にはまって結果的にコストがかかると思います．<br>また最小値演算子も不要だし，TopCoderで上位のコードがC++のお手本として優れているというわけでもありません．<br>老婆心ですが，ここは，きちんと定番の本で勉強することをお薦めします．</body>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9612",
      "text": " <timestamp>1208440567</timestamp>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9613",
      "text": " </comment>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9614",
      "text": " </comments>",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9615",
      "text": "",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1caff09e00003c9616",
      "text": "[はてなダイアリー 2008-04-17 https://nishiohirokazu.hatenadiary.org/archive/2008/04/17]",
      "created": 1208358000,
      "updated": 1208358000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}