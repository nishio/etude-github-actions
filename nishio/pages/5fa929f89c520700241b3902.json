{
  "id": "5fa929f89c520700241b3902",
  "title": "ACLPC L",
  "created": 1604921849,
  "updated": 1604921849,
  "lines": [
    {
      "id": "5fa929f89c520700241b3902",
      "text": "ACLPC L",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a1",
      "text": "from [AtCoder Library Practice Contest]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a2",
      "text": "ACLPC_L",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a3",
      "text": "[L - Lazy Segment Tree https://atcoder.jp/contests/practice2/tasks/practice2_l]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a4",
      "text": "\t[https://gyazo.com/b616e54f13c09c43d58d90950621c511]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a5",
      "text": "　[転倒数]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a6",
      "text": "　二値の列に対して(0の個数, 1の個数, 転倒数)を対応づける。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a7",
      "text": "　 この値は、2つの列を結合したものについて計算することがこの値だけからできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a8",
      "text": "\t　 (DPを構築する時のような気持ち)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43a9",
      "text": "　 code::",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43aa",
      "text": "　 \tf((a1, b1, c1), (a2, b2, c2)) = (a1 + a2, b1 + b2, c1 + c2 + b1 * a2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43ab",
      "text": "　 これは落ち着いて考えれば当たり前",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43ac",
      "text": "　 　0の個数、1の個数に関しては単なる和",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43ad",
      "text": "　 　転倒数は、それぞれの元々の転倒数に、結合によって増える量を足す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43ae",
      "text": "　 　この結合によって増える量とは「転倒してる数のペア」がそれぞれの列に分かれてるものの個数なので「左の列の中の1の個数」に「右の列の中の0の個数」をかけたものになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43af",
      "text": "　 この合成演算fは結合的であり単位元(0, 0, 0)を持つので[モノイド]である",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43b0",
      "text": "　 　実際、群である: [二値文字列の転倒数が従う群構造 - Qiita https://qiita.com/hamko/items/92660ac5aed9df4d346d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43b1",
      "text": "　 よってこの値はセグメント木の値域に使うことができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43b2",
      "text": " 作用は列のビット反転だが、この時に値はどうなるか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43b3",
      "text": "　　`(y, x, x * y - z)`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43b4",
      "text": "　　異なる数値の組み合わせがx * yペアあって、うちzペアが転倒してる、反転させると残りが転倒ペアになる [余事象]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    },
    {
      "id": "5fa929f9aff09e00004f43b5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604921849,
      "updated": 1604921849
    }
  ]
}