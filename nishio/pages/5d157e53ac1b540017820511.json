{
  "id": "5d157e53ac1b540017820511",
  "title": "Promise",
  "created": 1561689685,
  "updated": 1613983803,
  "lines": [
    {
      "id": "5d157e53ac1b540017820511",
      "text": "Promise",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561689685,
      "updated": 1561689685
    },
    {
      "id": "5d157e7faff09e0000e8d892",
      "text": "[Promise - JavaScript | MDN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561689728,
      "updated": 1561689773
    },
    {
      "id": "6033703baff09e00008587ee",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983803,
      "updated": 1613983803
    },
    {
      "id": "60336f4daff09e0000677883",
      "text": "[How do Promises Work? - Quil's Fluffy World https://robotlolita.me/articles/2015/how-do-promises-work/]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983566,
      "updated": 1613983797
    },
    {
      "id": "60337035aff09e00008587eb",
      "text": "\t日本語訳: [Promiseはどう動作するのか – Promiseを実装してみる | POSTD https://postd.cc/how-do-promises-work/]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983797,
      "updated": 1613983797
    },
    {
      "id": "60337035aff09e00008587ec",
      "text": "良い解説だが日本語訳はあまり良くない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983797,
      "updated": 1613983797
    },
    {
      "id": "60337035aff09e00008587ed",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983797,
      "updated": 1613983797
    },
    {
      "id": "60336fb1aff09e0000aeaaed",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983666,
      "updated": 1613983666
    },
    {
      "id": "60336fb1aff09e0000aeaaee",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983666,
      "updated": 1613983666
    },
    {
      "id": "60336f53aff09e0000677884",
      "text": "2019/6に[Promise - JavaScript | MDN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise]に対して",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983572,
      "updated": 1613983655
    },
    {
      "id": "60336f6baff09e0000677886",
      "text": "\t>「resolveが非同期的に呼ばれる」という言葉は曖昧だ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983598,
      "updated": 1613983598
    },
    {
      "id": "60336f71aff09e0000677887",
      "text": "と書いたが、今見たらその表現が見つけられなかった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983601,
      "updated": 1613983668
    },
    {
      "id": "60336fe7aff09e0000aeaaef",
      "text": "2021/2現在、もっと明確に書かれている。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983719,
      "updated": 1613983762
    },
    {
      "id": "60336fddaff09e00008587ea",
      "text": "\t>プロミスは非同期であることが保証されていることに注意してください。したがって、既に「解決済み」のプロミスに対するアクションは、スタックがクリアされ、クロックティックが経過した後にのみ実行されます。この効果は setTimeout(action,10) とよく似ています",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983710,
      "updated": 1613983710
    },
    {
      "id": "60336f59aff09e0000677885",
      "text": "---old",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613983577,
      "updated": 1613983768
    },
    {
      "id": "5d157eadaff09e0000e8d893",
      "text": "「resolveが非同期的に呼ばれる」という言葉は曖昧だ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561689773,
      "updated": 1561690759
    },
    {
      "id": "5d158287aff09e0000e8d8c0",
      "text": "\tPromiseの第一引数である(resolve, reject) => {...}の中でresolveを同期的に呼ぼうが非同期的に呼ぼうが、thenの第一引数に渡された関数は非同期的に呼ばれる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690759,
      "updated": 1613983563
    },
    {
      "id": "5d15828caff09e0000e8d8c1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690764,
      "updated": 1561690764
    },
    {
      "id": "5d1581a6aff09e0000e8d8be",
      "text": "code::",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690535,
      "updated": 1561690537
    },
    {
      "id": "5d158177aff09e0000e8d8b2",
      "text": " create promise start",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d158178aff09e0000e8d8b3",
      "text": " promise body start",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d158178aff09e0000e8d8b4",
      "text": " sync body start",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d158178aff09e0000e8d8b5",
      "text": " sync body end",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d158178aff09e0000e8d8b6",
      "text": " promise body end",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d158178aff09e0000e8d8b7",
      "text": " create promise end",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d158178aff09e0000e8d8b8",
      "text": " specify promise.then start",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d158178aff09e0000e8d8b9",
      "text": " specify promise.then end",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d158178aff09e0000e8d8ba",
      "text": " resolved ok",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690488,
      "updated": 1561690539
    },
    {
      "id": "5d1581a3aff09e0000e8d8bd",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690531,
      "updated": 1561690531
    },
    {
      "id": "5d157e55aff09e0000e8d86f",
      "text": "code:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561689685,
      "updated": 1561689699
    },
    {
      "id": "5d158140aff09e0000e8d895",
      "text": "   const syncBody = (resolve: any, reject: any) => {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690432,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d896",
      "text": "     console.log(\"sync body start\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d897",
      "text": "     resolve(\"ok\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d898",
      "text": "     console.log(\"sync body end\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d899",
      "text": "   }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d89a",
      "text": "   const asyncBody = (resolve: any, reject: any) => {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d89b",
      "text": "     console.log(\"async body start\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d89c",
      "text": "     setTimeout(() => {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d89d",
      "text": "       console.log(\"timeout start\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d89e",
      "text": "       resolve(\"ok\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d89f",
      "text": "       console.log(\"timeout end\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a0",
      "text": "     }, 1000)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a1",
      "text": "     console.log(\"async body end\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a2",
      "text": "   }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a3",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a4",
      "text": "   console.log(\"create promise start\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a5",
      "text": "   let p = new Promise((resolve, reject) => {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a6",
      "text": "     console.log(\"promise body start\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a7",
      "text": "     syncBody(resolve, reject)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a8",
      "text": "     console.log(\"promise body end\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8a9",
      "text": "   })",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8aa",
      "text": "   console.log(\"create promise end\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8ab",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8ac",
      "text": "   console.log(\"specify promise.then start\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8ad",
      "text": "   p.then((x) => {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8ae",
      "text": "     console.log(\"resolved\", x)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8af",
      "text": "   })",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8b0",
      "text": "   console.log(\"specify promise.then end\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690433
    },
    {
      "id": "5d158140aff09e0000e8d8b1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690433,
      "updated": 1561690434
    },
    {
      "id": "5d157e63aff09e0000e8d880",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561689699,
      "updated": 1561690431
    },
    {
      "id": "5d15813eaff09e0000e8d894",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1561690431,
      "updated": 1561690431
    }
  ]
}