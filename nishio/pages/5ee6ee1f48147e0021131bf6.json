{
  "id": "5ee6ee1f48147e0021131bf6",
  "title": "フェニック木",
  "created": 1592192559,
  "updated": 1602311110,
  "lines": [
    {
      "id": "5ee6ee1f48147e0021131bf6",
      "text": "フェニック木",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592192559,
      "updated": 1592192559
    },
    {
      "id": "5ee6ee2eaff09e00001e9a2e",
      "text": "部分和の計算と要素の更新の両方を効率的に行える木構造",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592192559,
      "updated": 1592192559
    },
    {
      "id": "5ee6ee30aff09e00001e9a30",
      "text": "[フェニック木 - Wikipedia https://ja.wikipedia.org/wiki/%E3%83%95%E3%82%A7%E3%83%8B%E3%83%83%E3%82%AF%E6%9C%A8]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592192560,
      "updated": 1592192568
    },
    {
      "id": "5ee6ee2faff09e00001e9a2f",
      "text": "\t[蟻本]では[Binary lndexed Tree]と呼ばれてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592192559,
      "updated": 1602298275
    },
    {
      "id": "5f8121a2aff09e0000245f1d",
      "text": "\t[BIT]と略される",
      "userId": "582e63d27c56960011aff09e",
      "created": 1602298275,
      "updated": 1602298275
    },
    {
      "id": "5f8121a2aff09e0000245f1e",
      "text": "\t[fenwick tree]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1602298275,
      "updated": 1602298275
    },
    {
      "id": "5f8121a2aff09e0000245f1f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1602298275,
      "updated": 1602298275
    },
    {
      "id": "5ee79b16aff09e0000c497d9",
      "text": "[Binary Indexed Tree のはなし http://hos.ac/slides/20140319_bit.pdf]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592236823,
      "updated": 1592236852
    },
    {
      "id": "5ee79b17aff09e0000c497da",
      "text": "\t>保坂 和宏 (東京大学理学部数学科)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592236823,
      "updated": 1592236856
    },
    {
      "id": "5ee79b38aff09e0000c497de",
      "text": " > 第 13 回 JOI 春合宿",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592236856,
      "updated": 1592236856
    },
    {
      "id": "5ee79b38aff09e0000c497df",
      "text": " > 2014/03/19",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592236856,
      "updated": 1592236856
    },
    {
      "id": "5ee79b3aaff09e0000c497e0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592236858,
      "updated": 1592236858
    },
    {
      "id": "5ee79b95aff09e0000c497e1",
      "text": "k 番目の値を高速に取り出せるデータ構造として使うことができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592236949,
      "updated": 1602267546
    },
    {
      "id": "5ee6fb2faff09e000038e0ce",
      "text": "　集合への追加削除とkth取得",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592195887,
      "updated": 1602298273
    },
    {
      "id": "5ee79c93aff09e00000011a8",
      "text": "　　素朴な方法としては値域のサイズDの配列を用意して、値のあるところに1を立てる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237204,
      "updated": 1592237797
    },
    {
      "id": "5efb39f7aff09e00005d469c",
      "text": "　　　[値域と定義域の交換]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1593522679,
      "updated": 1593522684
    },
    {
      "id": "5ee79d19aff09e00000011a9",
      "text": "　　　インクリメントに変えれば同じ値が複数個あるケースにも対応できる([multiset])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237338,
      "updated": 1592237391
    },
    {
      "id": "5ee79d98aff09e00000011ab",
      "text": "　　　O(1)で追加削除可能",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237465,
      "updated": 1592671709
    },
    {
      "id": "5ee79c5caff09e00000011a7",
      "text": "   kthの取得は端から数えていくので遅い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237148,
      "updated": 1592237997
    },
    {
      "id": "5ee79db9aff09e00000011ac",
      "text": "   これをBITにする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237497,
      "updated": 1592237519
    },
    {
      "id": "5ee79dcfaff09e00000011ad",
      "text": "  BITは部分和がO(logD) ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237520,
      "updated": 1592237786
    },
    {
      "id": "5ee79e2caff09e00000011ae",
      "text": "   これに対して二分探索すれば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237613,
      "updated": 1592237658
    },
    {
      "id": "5ee79e5baff09e00000011af",
      "text": "   工夫するとO(logD)　see 保坂さんの資料",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237659,
      "updated": 1592671719
    },
    {
      "id": "5eee3e27aff09e00008b9a38",
      "text": "\t　ただし追加削除はO(logD)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592671783,
      "updated": 1602311105
    },
    {
      "id": "5ee79ef4aff09e00000011b2",
      "text": " \t[座標圧縮]でDを圧縮することが効果的",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237812,
      "updated": 1602311110
    },
    {
      "id": "5ee79fa1aff09e0000c497e4",
      "text": "　　集合の中である値の次の値が知りたい時",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237986,
      "updated": 1602267427
    },
    {
      "id": "5f80a923aff09e0000405be1",
      "text": "　　　まずその値までの和を取って、1加えて二分探索",
      "userId": "582e63d27c56960011aff09e",
      "created": 1602267428,
      "updated": 1602267457
    },
    {
      "id": "5f80a95baff09e0000405be3",
      "text": "　　　これを繰り返せば「ある値より大きいものの取得」もできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1602267484,
      "updated": 1602267509
    },
    {
      "id": "5f80a943aff09e0000405be2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1602267460,
      "updated": 1602267460
    },
    {
      "id": "5ee79d58aff09e00000011aa",
      "text": "\tref [k 番目の値を高速に取り出せるデータ構造のまとめ - BIT上二分探索や平衡二分探索木など - Qiita https://qiita.com/drken/items/1b7e6e459c24a83bb7fd]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237401,
      "updated": 1592237982
    },
    {
      "id": "5ee79f9aaff09e0000c497e3",
      "text": "\t\t[k 番目に小さい値を取得可能な集合を管理するデータ構造 - kazuma8128’s blog https://kazuma8128.hatenablog.com/entry/2018/06/20/210631]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592237979,
      "updated": 1592239271
    },
    {
      "id": "5ee7a4a6aff09e0000c497e6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592239271,
      "updated": 1592239271
    },
    {
      "id": "5ee7ac5faff09e0000f7a84d",
      "text": "code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241247,
      "updated": 1592241250
    },
    {
      "id": "5ee7ac6caff09e0000f7a876",
      "text": " N = 1000",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1594190392
    },
    {
      "id": "5f056a38aff09e0000d07bf1",
      "text": " bit = [0] * (N + 1)  # 1-origin",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594190393,
      "updated": 1594190397
    },
    {
      "id": "5ee7ac6daff09e0000f7a878",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1594190399
    },
    {
      "id": "5ee7ac6daff09e0000f7a87a",
      "text": " def bit_add(pos, val):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a87b",
      "text": "     x = pos",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a87c",
      "text": "     while x <= N:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a87d",
      "text": "         bit[x] += val",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a87e",
      "text": "         x += x & -x  # (x & -x) = rightmost 1 = block width",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a87f",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a880",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a881",
      "text": " def bit_sum(pos):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a882",
      "text": "     ret = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a883",
      "text": "     x = pos",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a884",
      "text": "     while x > 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a885",
      "text": "         ret += bit[x]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a886",
      "text": "         x -= x & -x",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a887",
      "text": "     return ret",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a888",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a889",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a88a",
      "text": " def bit_bisect(lower):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a88b",
      "text": "     \"find a s.t. v1 + v2 + ... + va >= lower\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a88c",
      "text": "     x = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a88d",
      "text": "     k = 1 << (N.bit_length() - 1)  # largest 2^m <= N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a88e",
      "text": "     while k > 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a88f",
      "text": "         if (x + k <= N and bit[x + k] < lower):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a890",
      "text": "             lower -= bit[x + k]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a891",
      "text": "             x += k",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a892",
      "text": "         k //= 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a893",
      "text": "     return x + 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a894",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a895",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a896",
      "text": " bit_add(12, 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a897",
      "text": " bit_add(34, 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a898",
      "text": " bit_add(56, 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a899",
      "text": " print(bit_sum(20))  # => 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a89a",
      "text": " print(bit_sum(40))  # => 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a89b",
      "text": " print(bit_sum(60))  # => 3",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac6daff09e0000f7a89c",
      "text": " print(bit_bisect(2))  # => 34",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241261,
      "updated": 1592241261
    },
    {
      "id": "5ee7ac62aff09e0000f7a84f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241250,
      "updated": 1592241260
    },
    {
      "id": "5ee88c13aff09e0000505573",
      "text": "https://judge.yosupo.jp/submission/12646",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592298516,
      "updated": 1592298516
    },
    {
      "id": "5ee7ac60aff09e0000f7a84e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592241248,
      "updated": 1592241248
    },
    {
      "id": "5eee4283aff09e00009b9df2",
      "text": "[データ構造]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592672899,
      "updated": 1592672899
    },
    {
      "id": "5eee4283aff09e00009b9df3",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1592672899,
      "updated": 1592672899
    }
  ]
}