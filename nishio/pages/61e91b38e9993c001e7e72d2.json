{
  "id": "61e91b38e9993c001e7e72d2",
  "title": "(1.3.1.1) Lazy Evaluation Study Method",
  "created": 1547629267,
  "updated": 1643599768,
  "lines": [
    {
      "id": "61e91b38aff09e00005f1858",
      "text": "(1.3.1.1) Lazy Evaluation Study Method",
      "created": 1547629267,
      "updated": 1553660190,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1859",
      "text": "The \"[start from what you want to know]\" approach is called the [lazy evaluation study method]. (*14)",
      "created": 1547629267,
      "updated": 1553223125,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f185a",
      "text": "The [lazy evaluation] is a technical term. It is related to execution order of programs. Suppose you have the following source code.",
      "created": 1547629267,
      "updated": 1547629318,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f185b",
      "text": "",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f185c",
      "text": "code:code",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f185d",
      "text": "\ttask3(task1(),  task2())",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f185e",
      "text": "",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f185f",
      "text": "In most programming languages, this code is executed in the order: \"execute task 1 to get the result, execute task 2 to get the result, execute task 3 and get the result\". On the other hand, in the lazy evaluation language, this code is executed in a different order: \"When the result of task 3 becomes necessary, start execution of task 3. If the execution of task 3 needs the result of task 1, execute task 1 and get the result. If the execution of task 3 needs the result of task 1, execute task 1 and get the result, execute task 2 and get the result.\"",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1860",
      "text": "",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1861",
      "text": "The lazy evaluation language does not run codes unless it is required. It executes the code in the [order of necessity] rather than the [order of appearance]: \"do task 1 and then do task 2.\" (*15)",
      "created": 1547629267,
      "updated": 1553223114,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1862",
      "text": "",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1863",
      "text": "Doing the same strategy for learning is the [lazy evaluation study method]. Instead of reading a book from the first page, you divide the purpose and read it skipping from the necessary pages for the purpose. By the information gathering, you get fragmentary knowledge. The fragment will connect one day as if to build up a jigsaw puzzle. (*16)",
      "created": 1547629267,
      "updated": 1553223118,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1864",
      "text": "",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1865",
      "text": "---",
      "created": 1553582739,
      "updated": 1553582739,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1866",
      "text": "",
      "created": 1553582740,
      "updated": 1553582740,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1867",
      "text": "\t*14: A software engineer [Hitoshi Amano] proposed the lazy evaluation study method in 2008.",
      "created": 1547629267,
      "updated": 1553582735,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1868",
      "text": "\t*15: The lazy evaluation language is said to be efficient because it calculates what is needed only. On the other hand, it makes a lot of [thunks] (something like a note that \"Calculate it if necessary\"), so it consumes much [memory].",
      "created": 1547629267,
      "updated": 1553582736,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f1869",
      "text": "\t*16: The idea of ​​connecting afterward is also related to [Connecting Dots] introduced in Chapter 7, [(7.1.3.3) we can only connect dots looking backwards].",
      "created": 1547629267,
      "updated": 1643599768,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f186a",
      "text": "",
      "created": 1547629267,
      "updated": 1547629267,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "61e91b38aff09e00005f186b",
      "text": "[en.icon]",
      "created": 1553660190,
      "updated": 1553660190,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}