{
  "id": "6090ec05a287e6002291a10f",
  "title": "Hatena2010-10-08",
  "created": 1286463600,
  "updated": 1286463600,
  "lines": [
    {
      "id": "6090ec29aff09e00003d769d",
      "text": "Hatena2010-10-08",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d769e",
      "text": "code:hatena",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d769f",
      "text": " <body>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a0",
      "text": " *1286507906*Rubyのモジュールをおさらい",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a1",
      "text": " >|ruby|",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a2",
      "text": " module Foo",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a3",
      "text": "   def hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a4",
      "text": "     puts \"hello\"",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a5",
      "text": "   end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a6",
      "text": " end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a7",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a8",
      "text": " Foo::hello ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76a9",
      "text": " #-> undefined method `hello' for Foo:Module (NoMethodError)",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76aa",
      "text": " ||<",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ab",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ac",
      "text": " includeしないと使えないのかな…",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ad",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ae",
      "text": " >|ruby|",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76af",
      "text": " module Foo",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b0",
      "text": "   def hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b1",
      "text": "     puts \"hello\"",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b2",
      "text": "   end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b3",
      "text": " end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b4",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b5",
      "text": " module Bar",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b6",
      "text": "   include Foo",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b7",
      "text": "   def hello2",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b8",
      "text": "     hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76b9",
      "text": "     hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ba",
      "text": "   end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76bb",
      "text": " end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76bc",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76bd",
      "text": " def tmp",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76be",
      "text": "   include Bar",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76bf",
      "text": "   hello2",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c0",
      "text": " end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c1",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c2",
      "text": " tmp",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c3",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c4",
      "text": " hello # 呼べる",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c5",
      "text": " ||<",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c6",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c7",
      "text": " うーむ、includeすれば使えるは使えるが、includeはモジュールの中のメソッドをクラスに追加するのであって、メソッドのローカル変数として関数オブジェクトをインポートするのとは違うんだなぁ。これだと実質的に「インポートしたモジュールの中身はグローバルスコープにぶちまけられます」って状態だよねぇ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c8",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76c9",
      "text": " >|ruby|",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ca",
      "text": " module Foo",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76cb",
      "text": "   def hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76cc",
      "text": "     puts \"hello\"",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76cd",
      "text": "   end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ce",
      "text": " end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76cf",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d0",
      "text": " module Bar",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d1",
      "text": "   include Foo",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d2",
      "text": "   def hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d3",
      "text": "     Foo::hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d4",
      "text": "     Foo::hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d5",
      "text": "   end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d6",
      "text": " end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d7",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d8",
      "text": " include Bar",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76d9",
      "text": " Bar::hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76da",
      "text": " #-> stack level too deep (SystemStackError)",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76db",
      "text": " ||<",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76dc",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76dd",
      "text": " ああー。やっぱどっちのモジュール由来かとか忘れてincludeの時点で単純にObjectに混ぜ込んでしまってるんだなぁ。モジュールで継承＆オーバーライドは無理ってことでファイナルアンサー？？",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76de",
      "text": " >>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76df",
      "text": " @knu っmodule_function",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e0",
      "text": " <<",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e1",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e2",
      "text": " >|ruby|",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e3",
      "text": " module Foo",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e4",
      "text": "   def hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e5",
      "text": "     puts \"hello\"",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e6",
      "text": "   end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e7",
      "text": "   module_function :hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e8",
      "text": " end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76e9",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ea",
      "text": " module Bar",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76eb",
      "text": "   def hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ec",
      "text": "     Foo.hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ed",
      "text": "     Foo.hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ee",
      "text": "   end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ef",
      "text": "   module_function :hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f0",
      "text": " end",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f1",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f2",
      "text": " Bar.hello",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f3",
      "text": " ||<",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f4",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f5",
      "text": " なるほど、module_functionをよんでやらないとモジュールオブジェクトのメンバにならないのか。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f6",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f7",
      "text": " *1286540000*クラスが持つ3つの役割",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f8",
      "text": " 某所のチャットで話題になって、流れ去りそうだったのでもったいないから転載しておいた。事後承諾で。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76f9",
      "text": " <hr>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76fa",
      "text": " MIYAMOTO Daisuke: 型の継承と実装の継承を区別する方法がないんだよな。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76fb",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76fc",
      "text": " 西尾泰和(nishio.hirokazu): 型を継承させずに実装を継承させたい→それ移譲で　ってことかな？",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76fd",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76fe",
      "text": " MIYAMOTO Daisuke: そそ。そもそも、クラスに「型としての役割」と「実装としての役割」という複数の責務があることに、俺は長い間気づかなかった。これに気づかないと、型継承と実装継承が頭の中で整理できない。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d76ff",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7700",
      "text": " 西尾泰和(nishio.hirokazu): 僕が最近気づいたことも加えると、クラスには「ユーザ定義型」「インスタンスを作成する道具」「実装の再利用の単位」という3つの役割がある。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7701",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7702",
      "text": " MIYAMOTO Daisuke: あぁ、インスタンスの生成器ね。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7703",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7704",
      "text": " 西尾泰和(nishio.hirokazu): 「型」って役割だけ取り出したのがJavaのインターフェイスで、型の弱いスクリプト言語では「型」って役割がない分だけシンプル。Rubyはモジュールを「インスタンス作成」の機能がなくて「実装の再利用の単位」として扱うことで多重継承を分かりやすくしている",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7705",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7706",
      "text": " MIYAMOTO Daisuke: なるほど。Rubyはよく分かってないけど、なるほど。Javaのabstractクラス、も、インスタンスを生成する道具 という役割を放棄しているよね。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7707",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7708",
      "text": " 西尾泰和(nishio.hirokazu): なるほど。インターフェイスだけじゃないわけだ。そうかー、「型」って役割も兼ねているから複雑になるわけかー、なるほど。なんでスクリプト言語でオブジェクト指向を学ぶと楽なのかちょっとわかった",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7709",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d770a",
      "text": " MIYAMOTO Daisuke: うん、俺も「型の弱いスクリプト言語では「型」って役割がない分だけシンプル」ってのがピンと来た。↑トゥギャりたいなｗ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d770b",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d770c",
      "text": " <hr>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d770d",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d770e",
      "text": " 僕が最近気づいたって書いているのはTraitsの論文にクラスに「インスタンスを作成する道具」という役割と「実装の再利用の単位」という役割があり、この二つの役割は相反する、って書いてあったのがキッカケ。で、チャットで言われて気づいたけども静的型付け言語ではさらに「ユーザ定義型」という役割まであって、これももちろん「再利用の単位」としての役割とは必ずしもマッチしないわけよね。なのに再利用がしたいという理由で継承を使っちゃうケースが沢山あって、それでリスコフの置換原則だとかそういうのがよく言及されるようになったわけだ。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d770f",
      "text": " ",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7710",
      "text": " そういう意味では動的型付け言語にインターフェイスを入れるって発想はあながち悪くなかったのかも知れないなぁ。",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7711",
      "text": " </body>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7712",
      "text": " <comments>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7713",
      "text": " <comment>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7714",
      "text": " <username>knu</username>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7715",
      "text": " <body>module_functionは、指定したインスタンスメソッドをprivateにし、なおかつモジュールに同名のシングルトンメソッドを作る命令です。<br>（<モジュール/クラス>メソッド＝その<モジュール/クラス>オブジェクトのシングルトンメソッド）<br><br>include Foo<br>hello<br><br>で呼ばれるのは前者、<br><br>Foo.hello<br><br>で呼ばれるのは後者です。<br><br>include Fooする使い方をしないのなら後者を定義するだけなので、単刀直入に<br><br>def Foo.hello<br>  # ..<br>end<br><br>でOKです。ただしふつうはmodule Foo ... endのまとまりの中に書きたいので<br><br>module Foo<br>  def self.hello  # ここでのselfはFooを指す<br>  end<br><br>  def do_smtn  # これはインスタンスメソッドになる<br>  end<br>end<br><br>とします。</body>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7716",
      "text": " <timestamp>1286538976</timestamp>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7717",
      "text": " </comment>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7718",
      "text": " <comment>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7719",
      "text": " <username>otn</username>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d771a",
      "text": " <body>< 型の弱い<br>> 変数に型のない or 動的型の</body>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d771b",
      "text": " <timestamp>1286634129</timestamp>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d771c",
      "text": " </comment>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d771d",
      "text": " <comment>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d771e",
      "text": " <username>otn</username>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d771f",
      "text": " <body>3つめのコード10行目の<br>  Foo::hello<br>ですが、モジュールFooで定義したhelloを呼び出すならsuperです。<br><br>Foo::helloだとFoo.helloと同じでFooをselfにして(その時点の)helloを呼び出すので、再帰呼び出し。</body>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7720",
      "text": " <timestamp>1286639533</timestamp>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7721",
      "text": " </comment>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7722",
      "text": " <comment>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7723",
      "text": " <username>Too</username>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7724",
      "text": " <body>moduleは制限された多重継承するための仕組みで、includeすると継承パスにmoduleを差し込みます。<br>module B;end<br>class A;end<br>p A.ancestors # => [A, Object, Kernel]<br>class A<br>  include B<br>end<br>p A.ancestors # => [A, B, Object, Kernel]<br>なので、個々のメソッドを取ってくるとかはできません。<br>また、自クラスのメソッドを上書きするとかもできません。<br><br>クラス(モジュール)メソッドは、インスタンスメソッドとはあまり関係はありません。<br>たんにそのクラス(モジュール)自体に定義されている特異メソッドというだけのことです。<br>それだとモジュールを名前空間的に使うのに面倒くさいので、module_functionメソッドがあるわけです。<br><br>トップレベルはObjectクラスの内部にいるのと同じです。<br>トップレベルでincludeするとObjectクラスにincludeされるので、グローバルにメソッドが呼べるようになります。<br>その結果として、クラスオブジェクトからでも呼べるようになるわけです。<br>module Foo<br>  def bar() :Foo_bar end<br>end<br>include Foo<br>class Bazz; end<br>bar #当然トップレベルからは呼べる<br>Bazz.new.bar #インスタンスからも呼べる<br>Foo.bar #もちろんモジュールオブジェクトからも呼べる<br>p Foo.class.ancestors # => [Module, Object, Foo, Kernel]<br><br>ついでに<br>トップレベルのメソッドは、Objectに定義されるためにグローバル関数的なプライベートメソッドとなりますが、<br>あくまでもメソッドです。レシーバが存在します。<br>def tmp<br>  include Math<br>end<br>tmp # self.tmp()の意味なんだけどプライベートメソッドなのでレシーバを指定したメソッドコールはできません。<br>この場合Mathがincludeされるのはトップレベル(Objectクラス)になります。</body>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7725",
      "text": " <timestamp>1287988337</timestamp>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7726",
      "text": " </comment>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7727",
      "text": " </comments>",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7728",
      "text": "",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec29aff09e00003d7729",
      "text": "[はてなダイアリー 2010-10-08 https://nishiohirokazu.hatenadiary.org/archive/2010/10/08]",
      "created": 1286463600,
      "updated": 1286463600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}