{
  "id": "5f660c707929930038f2bc8b",
  "title": "ABC179",
  "created": 1600523377,
  "updated": 1604050473,
  "lines": [
    {
      "id": "5f660c707929930038f2bc8b",
      "text": "ABC179",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523377,
      "updated": 1600523378
    },
    {
      "id": "5f6616f2aff09e00004b6277",
      "text": "Dが難しかったので先にEを解いてから戻って解いて5問正解",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600526067,
      "updated": 1600526130
    },
    {
      "id": "5f660c72aff09e00004b6230",
      "text": "[https://gyazo.com/1b1cfda315bbb1cd751451ec5b3ff6de]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523378,
      "updated": 1600523390
    },
    {
      "id": "5f660c7eaff09e00004b6231",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523390,
      "updated": 1600523390
    },
    {
      "id": "5f660ca9aff09e00004b6232",
      "text": "[C - A x B + C https://atcoder.jp/contests/abc179/tasks/abc179_c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523434,
      "updated": 1600526232
    },
    {
      "id": "5f66178eaff09e00004b6278",
      "text": "\t[https://gyazo.com/26cf926e3eaf69b4d5887fc799ae4ed5]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600526223,
      "updated": 1600526224
    },
    {
      "id": "5f661790aff09e00004b6279",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600526224,
      "updated": 1600526224
    },
    {
      "id": "5f660dbeaff09e000041a008",
      "text": "　飛び飛びに存在する解がいくつあるか数える問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523710,
      "updated": 1600523840
    },
    {
      "id": "5f660e42aff09e000041a009",
      "text": "　切り上げ切り捨てでバグりがち",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523842,
      "updated": 1600526271
    },
    {
      "id": "5f6617bfaff09e00004b627a",
      "text": "　\t最初`N - 1`を`N - A + 1`にしてた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600526271,
      "updated": 1600526738
    },
    {
      "id": "5f661915aff09e00004b627d",
      "text": "　\t `A==2`だとあってしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600526613,
      "updated": 1600526740
    },
    {
      "id": "5f6617c0aff09e00004b627b",
      "text": "\t\tA=3, N=10の時 (3, 1, 7), (3, 2, 4), (3, 3, 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600526273,
      "updated": 1600526461
    },
    {
      "id": "5f66187faff09e00004b627c",
      "text": "\t\tA=3, N=9の時 (3, 1, 6), (3, 2, 3)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600526463,
      "updated": 1600526691
    },
    {
      "id": "5f66197faff09e00004b627e",
      "text": "\t\tここから `(N - 1) // A`とわかる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600526719,
      "updated": 1600526752
    },
    {
      "id": "5f660caaaff09e00004b6234",
      "text": " code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523434,
      "updated": 1600526594
    },
    {
      "id": "5f660cacaff09e00004b6235",
      "text": "  def solve(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523437,
      "updated": 1600526594
    },
    {
      "id": "5f660cacaff09e00004b6236",
      "text": "      ret = N - 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523437,
      "updated": 1600526594
    },
    {
      "id": "5f660cacaff09e00004b6237",
      "text": "      for i in range(2, N + 1):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523437,
      "updated": 1600526594
    },
    {
      "id": "5f660cacaff09e00004b6238",
      "text": "          ret += (N - 1) // i",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523437,
      "updated": 1600526594
    },
    {
      "id": "5f660cacaff09e00004b6239",
      "text": "      return ret",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523437,
      "updated": 1600526594
    },
    {
      "id": "5f660cacaff09e00004b623a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523437,
      "updated": 1600523438
    },
    {
      "id": "5f9ac4a4aff09e0000e24b89",
      "text": "[ABC179D]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978405,
      "updated": 1603978421
    },
    {
      "id": "5f660cc5aff09e00004b623b",
      "text": "[E - Sequence Sum https://atcoder.jp/contests/abc179/tasks/abc179_e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523461,
      "updated": 1600575083
    },
    {
      "id": "5f66d663aff09e0000a4b55b",
      "text": "\t[https://gyazo.com/e62eff03c360b9b33d1aa6475b91817a]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600575076,
      "updated": 1600575078
    },
    {
      "id": "5f66d666aff09e0000a4b55c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600575078,
      "updated": 1600575078
    },
    {
      "id": "5f660f25aff09e000041a00d",
      "text": "　[ループ検出]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600524071,
      "updated": 1600530257
    },
    {
      "id": "5f661abcaff09e000041a012",
      "text": "　　やたら変数に束縛してるのは、printしてデバッグしたからです",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600527037,
      "updated": 1600527102
    },
    {
      "id": "5f661affaff09e000041a013",
      "text": "　　\tloop_startが1ずれてたのとloop_tailを末尾からとってたバグ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600527103,
      "updated": 1600527187
    },
    {
      "id": "5f66d68faff09e0000a4b55d",
      "text": "　　ループの開始点を見つけるのはO(1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600575119,
      "updated": 1600575294
    },
    {
      "id": "5f66d73eaff09e0000a4b55e",
      "text": "　　\t`visited` が0の時は未出現で、非0の時は最初に出現した位置+1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600575294,
      "updated": 1600575469
    },
    {
      "id": "5f660cc5aff09e00004b623c",
      "text": " code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523462,
      "updated": 1600581285
    },
    {
      "id": "5f660cc7aff09e00004b623d",
      "text": "  def solve(N, X, M):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b623e",
      "text": "      visited = [0] * M",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b623f",
      "text": "      a = X",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6240",
      "text": "      ret = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6241",
      "text": "      for i in range(N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6242",
      "text": "          if visited[a]:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6243",
      "text": "              s = sum(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6245",
      "text": "              loop_start = visited[a] - 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6246",
      "text": "              loop_end = i",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6248",
      "text": "              loop_sum = sum(ret[loop_start:loop_end])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6249",
      "text": "              loop_length = loop_end - loop_start",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b624b",
      "text": "              loop_count = (N - i) // loop_length",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b624c",
      "text": "              loop_left = (N - i) % loop_length",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b624f",
      "text": "              loop_tail = sum(ret[loop_start:loop_start + loop_left])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6250",
      "text": "              return s + loop_count * loop_sum + loop_tail",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6252",
      "text": "          ret.append(a)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6253",
      "text": "          visited[a] = (i + 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6254",
      "text": "          a = (a * a) % M",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6255",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cc8aff09e00004b6256",
      "text": "      return sum(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523464,
      "updated": 1600581285
    },
    {
      "id": "5f660cfcaff09e00004b6258",
      "text": "　Twitter見てたら[ダブリング]で解いた人も居たみたい？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600523516,
      "updated": 1600581350
    },
    {
      "id": "5f66eea0aff09e00009aa520",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600581280,
      "updated": 1600581280
    },
    {
      "id": "5f66e276aff09e00009aa519",
      "text": "[F - Simplified Reversi https://atcoder.jp/contests/abc179/tasks/abc179_f]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600578166,
      "updated": 1600580663
    },
    {
      "id": "5f66ec2faff09e0000a4b590",
      "text": "\t[https://gyazo.com/c75f91099aca8b95b10f33faaa847edb]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580655,
      "updated": 1600580657
    },
    {
      "id": "5f66e293aff09e00009aa51c",
      "text": " 範囲更新、点取得なので[双対セグメント木]で良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600578196,
      "updated": 1604050473
    },
    {
      "id": "5f66edb8aff09e0000a4b596",
      "text": " \tのだが、相対セグメント木だけ自作コードの整理がまだだった…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600581048,
      "updated": 1600581049
    },
    {
      "id": "5f66ec3faff09e0000a4b592",
      "text": "  残り10分だったので焦ってしまった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580672,
      "updated": 1600580672
    },
    {
      "id": "5f66e36baff09e00009aa51d",
      "text": " 値が変化する点を二分探索という手もある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600578413,
      "updated": 1600581126
    },
    {
      "id": "5f66ec48aff09e0000a4b593",
      "text": " \tだが、Pythonのbisectはソート済み配列を要求する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580680,
      "updated": 1600580689
    },
    {
      "id": "5f66ec50aff09e0000a4b594",
      "text": " \tこの問題条件だと配列への挿入が発生してO(N)になるから良くないね",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580689,
      "updated": 1600580691
    },
    {
      "id": "5f66e409aff09e00009aa51e",
      "text": " 　本質的にはPythonで使える平衡二分木をすぐ取り出して使えるように準備しとくべきなのかなー",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600578570,
      "updated": 1600578612
    },
    {
      "id": "5f66e434aff09e00009aa51f",
      "text": "\t 今回の問題に限れば「先頭以外への追加は必要ない」ので、逆順で持てば末尾追加でO(1)になるが、トリッキーだよなぁ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600578612,
      "updated": 1600580716
    },
    {
      "id": "5f66ed40aff09e0000a4b595",
      "text": "\t逆順で持って二分探索するバージョン",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580929,
      "updated": 1600580964
    },
    {
      "id": "5f66e278aff09e00009aa51a",
      "text": " \tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600578168,
      "updated": 1600580931
    },
    {
      "id": "5f66ec0faff09e0000638fe2",
      "text": " \t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fe3",
      "text": "       from bisect import bisect_left",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fe4",
      "text": "       N, Q = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fe5",
      "text": "       ret = (N - 2) ** 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fe6",
      "text": "       xs = [-N]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fe7",
      "text": "       xvals = [N - 2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fe8",
      "text": "       ys = [-N]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fe9",
      "text": "       yvals = [N - 2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fea",
      "text": "       for _q in range(Q):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638feb",
      "text": "           q, x = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fec",
      "text": "           if q == 1:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fed",
      "text": "               i = bisect_left(xs, -x)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fee",
      "text": "               ret -= xvals[i - 1]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638fef",
      "text": "               if i == len(xs) and yvals[-1] > x - 2:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff0",
      "text": "                   ys.append(-xvals[i - 1] - 2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff1",
      "text": "                   yvals.append(x - 2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff2",
      "text": "           else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff3",
      "text": "               y = x",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff4",
      "text": "               i = bisect_left(ys, -y)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff5",
      "text": "               ret -= yvals[i - 1]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff6",
      "text": "               if i == len(ys) and xvals[-1] > y - 2:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff7",
      "text": "                   xs.append(-yvals[i - 1] - 2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff8",
      "text": "                   xvals.append(y - 2)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ff9",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec10aff09e0000638ffa",
      "text": "       print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580624,
      "updated": 1600580931
    },
    {
      "id": "5f66ec0eaff09e0000638fe1",
      "text": "　点取得だから遅延セグメント木がはなく[双対セグメント木]で十分なのだが、遅延セグメント木を使って解いてる人もたくさんいるからそれでよかったのかもなぁ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600580622,
      "updated": 1600584889
    },
    {
      "id": "5f66ef64aff09e00009aa522",
      "text": "　関連記事",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600581477,
      "updated": 1600584970
    },
    {
      "id": "5f66fd09aff09e00001d7c2c",
      "text": "　　https://hackmd.io/@tatyam-prime/DualSegmentTree",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600584970,
      "updated": 1600584971
    },
    {
      "id": "5f66fd06aff09e00001d7c2b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1600584970,
      "updated": 1600584970
    }
  ]
}