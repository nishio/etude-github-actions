{
  "id": "5b758bd8987af60014f6bfa7",
  "title": "なぜ知的生産術に投資するのか",
  "created": 1534430176,
  "updated": 1660551461,
  "lines": [
    {
      "id": "5b758bd8987af60014f6bfa7",
      "text": "なぜ知的生産術に投資するのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534430176,
      "updated": 1534430724
    },
    {
      "id": "62fa011faff09e000012e8bf",
      "text": "2018-10-05",
      "userId": "582e63d27c56960011aff09e",
      "created": 1660551455,
      "updated": 1660551461
    },
    {
      "id": "5bb6e80eaff09e0000011367",
      "text": "[https://gyazo.com/4065834a7837554cd9c0bbf34ff9b140]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713615,
      "updated": 1538713615
    },
    {
      "id": "5bb6e8a9aff09e0000011369",
      "text": "\t[エンジニアの知的生産術]への導入にあたる2ページコラム",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713769,
      "updated": 1538713769
    },
    {
      "id": "5bb6e815aff09e0000011368",
      "text": "\t技術評論社 電脳会議 vol.190([PDF http://image.gihyo.co.jp/assets/pdf/dennou/2018/d_190.pdf])に掲載されました",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713622,
      "updated": 1538713683
    },
    {
      "id": "5bb6e7f5aff09e0000011362",
      "text": "\t[BMOT特別授業第1回「知的生産」]で知的生産を実演して作られたものがこう言う形でリリースされました",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713589,
      "updated": 1538713979
    },
    {
      "id": "5bb6e93baff09e000001136a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713916,
      "updated": 1538713916
    },
    {
      "id": "5bb6e93baff09e000001136b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713916,
      "updated": 1538713916
    },
    {
      "id": "5bb6e7f5aff09e0000011363",
      "text": "あとで本文を転載する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713589,
      "updated": 1538713926
    },
    {
      "id": "5bb6e946aff09e000001136c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713926,
      "updated": 1538713926
    },
    {
      "id": "5bb6e7f5aff09e0000011360",
      "text": "-----以下原稿",
      "userId": "582e63d27c56960011aff09e",
      "created": 1538713589,
      "updated": 1538713915
    },
    {
      "id": "5b758bd4aff09e0000febe21",
      "text": "[* 知的生産性の前に…]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534430183,
      "updated": 1534430321
    },
    {
      "id": "5b758c45aff09e0000febe22",
      "text": "私は2018年の8月10日に「エンジニアのための知的生産術」という本を出版しました。この本は、私が今までに学んできた知的生産に関する知識をまとめ、濃縮して1冊の本にしたものです。このコラムでは、なぜ私が知的生産に関心を持ち、知的生産術の知識を得るために時間とお金を投資してきたのかを解説します。ですが、知的生産というイメージしにくいものについて考える前に、まずは物理的なものの生産について考えてみましょう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534430296,
      "updated": 1534430843
    },
    {
      "id": "5b758e35aff09e0000febe25",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534430792,
      "updated": 1534430792
    },
    {
      "id": "5b758e35aff09e0000febe24",
      "text": "[* 靴下の生産性は機械によって向上した]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534430792,
      "updated": 1534430818
    },
    {
      "id": "5b758c61aff09e0000febe23",
      "text": "具体例として靴下の生産を考えます。靴下は、かつて職人が一つ一つ手で編んでいました。1589年に靴下編み機が発明されます。当時は、手編みの方が良い靴下ができる、と考えられていましたが、1812年には全ヨーロッパで3万台以上もの靴下編み機が使われるようになります。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534430325,
      "updated": 1534431480
    },
    {
      "id": "5b759108aff09e0000febe27",
      "text": "なぜ靴下編み機がたくさん作られたのでしょうか？ それは、靴下編み機を使った方が生産性が高いからです。手編みの靴下に比べて多少質が悪くても、同じ時間でたくさん作ることができました。顧客に提供できる価値、顧客から得られる売り上げという点では、機械を使う方が有利だったのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534431515,
      "updated": 1534434585
    },
    {
      "id": "5b758f6daff09e000003a754",
      "text": "[https://gyazo.com/ac444aff9aff3903af45c3f3b552cc1d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534431085,
      "updated": 1534431085
    },
    {
      "id": "5b758e7eaff09e0000febe26",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534430865,
      "updated": 1534430865
    },
    {
      "id": "5b758f6daff09e000003a753",
      "text": "[* プログラミングの生産性は言語によって向上した]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534431085,
      "updated": 1534431745
    },
    {
      "id": "5b7591e2aff09e0000febe28",
      "text": "次に、知的生産の一種としてプログラミングについて考えてみましょう。みなさんは「自動プログラミング」と聞くと何をイメージするでしょうか？人工知能の進化によって今後生まれてくる技術でしょうか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534431734,
      "updated": 1534431864
    },
    {
      "id": "5b7cacb8aff09e00005cc930",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897337,
      "updated": 1534897337
    },
    {
      "id": "5b759265aff09e0000febe2b",
      "text": "- 自動プログラミングの概念は、もっと古いものです。たとえば1956年に出版されたプログラミング言語FORTRANのマニュアルは“The Fortran Automatic Coding System for the IBM 704”というタイトルでした。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534431864,
      "updated": 1534897340
    },
    {
      "id": "5b7cacb7aff09e00005cc92f",
      "text": "+ 自動プログラミングの概念は、もっと古いものです。たとえば1950年代に生まれたプログラミング言語FORTRANは、当時Automatic Coding Systemと呼ばれていました。(改段落)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897336,
      "updated": 1534897441
    },
    {
      "id": "5b7cacbfaff09e00005cc932",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897343,
      "updated": 1534897343
    },
    {
      "id": "5b7cacb7aff09e00005cc92e",
      "text": "- FORTRANという名前は数式翻訳システム(FORmula TRANslation system)を縮めて作られました。`C = A * B` のような数式を書くだけで、コンピュータが自動的に「メモリ上の適切な値をレジスタにロードし、掛け算をして、レジスタ上のその計算結果をまたメモリに書き戻す」という機械語で書かれたプログラムを生成する、これを自動プログラミングだと当時の人は考えたわけです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897336,
      "updated": 1534897491
    },
    {
      "id": "5b7cad4eaff09e00005cc934",
      "text": "+ FORTRANは数式翻訳システム(FORmula TRANslation system)です。`C = A * B` のような数式を書くだけで、コンピュータが自動的に「メモリ上の適切な値をレジスタにロードし、掛け算をして、レジスタ上のその計算結果をまたメモリに書き戻す」という機械語で書かれたプログラムを生成するシステムです。これを自動プログラミングだと当時の人は考えたわけです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897486,
      "updated": 1534897533
    },
    {
      "id": "5b7cad56aff09e00005cc935",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897495,
      "updated": 1534897495
    },
    {
      "id": "5b7cad4eaff09e00005cc933",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897486,
      "updated": 1534897486
    },
    {
      "id": "5b7599fdaff09e0000febe2c",
      "text": "この時代には、効率の良いプログラムは人間が機械語を書くことでしか作ることができないと考えられていました。実際、初期のFORTRANが出力する機械語プログラムは、熟練した人間が書いたものに比べれば効率の悪いものでした。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534433808,
      "updated": 1534434524
    },
    {
      "id": "5b7cade7aff09e00005cc938",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897640,
      "updated": 1534897640
    },
    {
      "id": "5b759cbfaff09e0000febe2e",
      "text": "- それから60年経って、いまほとんどのプログラマはプログラミング言語を使ってプログラムを書いています。なぜでしょうか？それは、プログラミング言語を使った方が生産性が高いからです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534434514,
      "updated": 1534897644
    },
    {
      "id": "5b7cade3aff09e00005cc937",
      "text": "+ それから60年経って、今現在ほとんどのプログラマはプログラミング言語を使ってプログラムを書いています。なぜでしょうか？それは、プログラミング言語を使った方が生産性が高いからです。靴下の生産と同じ構図ですね。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534897635,
      "updated": 1534897680
    },
    {
      "id": "5b759c66aff09e000003a756",
      "text": "[https://gyazo.com/414da3e943997a0d3bd811b55d1e8781]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534434407,
      "updated": 1534434407
    },
    {
      "id": "5b75920caff09e0000febe29",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534431777,
      "updated": 1534431777
    },
    {
      "id": "5b759c66aff09e000003a755",
      "text": "[* 利益は設備に投資する]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534434407,
      "updated": 1534434611
    },
    {
      "id": "5b759d1eaff09e0000febe2f",
      "text": "みなさんが靴下工場の経営者だとします。工場で靴下をたくさん作って売って、たくさんの利益が出たら、その利益を何に投資しますか？靴下の需要が高くて、作れば作っただけ売れるのなら、靴下編み機を買い足して、さらにたくさんの靴下を作ろうとすることでしょう。これが拡大再生産と呼ばれる戦略です。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534434609,
      "updated": 1534435036
    },
    {
      "id": "5b7cb225aff09e00005cc93b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534898725,
      "updated": 1534898725
    },
    {
      "id": "5b759f13aff09e0000febe31",
      "text": "- では、知的生産の場合はどうでしょうか。プログラミング言語を買うのでしょうか。今やプログラミング言語は無料のものが大部分です。新しい生産性向上手段を獲得するためには、金銭だけでなく、習得時間も支払う必要があります。靴下編み機の場合も、装置を買った後で、作業員がその操作方法を学んでいました。装置の金額が、作業員が習得にかける時間のコストよりも大きくて、目立たなかったのです。逆に、知的生産では、装置であるプログラミング言語の金額よりも、習得するためにかける時間のコストの方が大きいのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534435110,
      "updated": 1534898727
    },
    {
      "id": "5b75a186aff09e0000febe35",
      "text": "+ では、プログラミングの場合はどうでしょうか。プログラミング言語に投資するをことになります。しかし「プログラミング言語を買う」と考えると少し変です。お金以外のコストを見落としているからです。新しい生産性向上手段を獲得するためには、お金だけでなく、時間も支払う必要があります。靴下編み機の場合も、装置を買うだけでなく、その操作方法を学びます。装置の金額が大きくて、習得にかける時間コストが目立たないだけです。逆に、プログラミングでは、装置であるプログラミング言語やコンピュータの金銭的コストよりも、習得するためにかける時間のコストの方が大きいのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534435737,
      "updated": 1534899124
    },
    {
      "id": "5b7cb22caff09e00005cc93c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534898732,
      "updated": 1534898732
    },
    {
      "id": "5b75a0d2aff09e0000febe34",
      "text": "[* 知識はあなたに帰属する]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534435557,
      "updated": 1534435754
    },
    {
      "id": "5b75a198aff09e0000febe36",
      "text": "ここまでの話を一旦まとめます。生産性を向上するためには、物を得るためにお金を払うことと、その物を使うための知識を得るために時間をかけることの両方が必要です。そして知的生産に関しては、しばしば時間のコストの方が大きいわけです。ソフトウェア開発において「フリーランス」という働き方が可能なのは、ソフトウェアを開発するという知的生産においては物の設備投資のコストが個人で払える程度だからです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534435755,
      "updated": 1534899226
    },
    {
      "id": "5b7cb4f2aff09e00005cc942",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899443,
      "updated": 1534899443
    },
    {
      "id": "5b7cb419aff09e00005cc93d",
      "text": "- この「物」と「知識」を比較したときに、重要な差があります。知識は個人に帰属していて、引きはがすことができません。例えばあなたが会社に買ってもらったラップトップは、会社に帰属しているので、あなたが転職するときには会社に置いていく必要があります。しかしあなたの脳内の知識は、あなたに帰属しているので、あなたが持っていくことができます。会社は、引き継ぎ資料を作れというかもしれませんが、その場合もあなたの脳内の知識がオリジナルで、引き継ぎ資料はその劣化コピーです。資料を会社に渡したからと言ってあなたの記憶が消えるわけではありません。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899226,
      "updated": 1534899229
    },
    {
      "id": "5b7cb420aff09e00005cc93f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899232,
      "updated": 1534899232
    },
    {
      "id": "5b7cb420aff09e00005cc940",
      "text": "+ この「物」と「知識」を比較したときに、重要な差があります。物の例としてあなたが会社に買ってもらったコンピュータは、会社に帰属していて、あなたが転職するときには会社に置いていく必要があります。しかしあなたの脳内の知識は、あなたに帰属していて、引きはがすことができません。あなたは知識を持って転職することができます。会社に引き継ぎ資料を残す場合も、あなたの脳内の知識がオリジナルで、引き継ぎ資料は劣化コピーです。資料を会社に渡したからと言ってあなたの記憶が消えるわけではありません。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899233,
      "updated": 1534899446
    },
    {
      "id": "5b7cb41faff09e00005cc93e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899232,
      "updated": 1534899232
    },
    {
      "id": "5b75a179aff09e000003a758",
      "text": "[https://gyazo.com/e67ee38e5a111e08675535b1b5e636ea]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534435706,
      "updated": 1534435706
    },
    {
      "id": "5b75ae5daff09e0000febe43",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534439024,
      "updated": 1534439024
    },
    {
      "id": "5b75ae5daff09e0000febe44",
      "text": "[* 知識は使ってもなくならない]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534439024,
      "updated": 1534439044
    },
    {
      "id": "5b7cb525aff09e00005cc947",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899493,
      "updated": 1534899493
    },
    {
      "id": "5b75a056aff09e0000febe33",
      "text": "- お金は使うとなくなりますが、知識は使ってもなくなりません。つまり、知識を得ることは、使っても減らない「魔法のクレジットカード」を手に入れるようなものなのです。これはお得です。そう考えていろいろなことを学んでいきました。そしてある日、気づきました。「プログラミング言語を学ぶことによって、プログラミングの生産性が高まる」を一段抽象化すると「知識を得ることによってXの生産性が高まる」になります。このXに「知識を得ること」を代入するともっと得だ、と。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534435433,
      "updated": 1534899494
    },
    {
      "id": "5b7cb51baff09e00005cc944",
      "text": "+ お金は使うとなくなりますが、知識は使ってもなくなりません。知識を得ることは、使っても減らない「魔法のクレジットカード」を手に入れるようなものです。これはお得です。私はそう考えていろいろなことを学んできました。そしてある日、気づきました。「プログラミング言語を学ぶことによって、プログラミングの生産性が高まる」を一段抽象化すると「知識を得ることによってXの生産性が高まる」になります。このXに「知識を得ること」を代入するともっと得だ、と。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899484,
      "updated": 1534899541
    },
    {
      "id": "5b7cb522aff09e00005cc946",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899490,
      "updated": 1534899490
    },
    {
      "id": "5b7cb522aff09e00005cc945",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899490,
      "updated": 1534899490
    },
    {
      "id": "5b75a975aff09e0000febe3a",
      "text": "つまり、知識獲得の効率を向上する知識が欲しいわけです。そこでまず、プログラミング言語の知識を獲得するときにどのようなことが行われているかを観察することにしました。その結果はWeb+DB Pressの「エンジニアの学び方」という特集記事にまとめました。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534437768,
      "updated": 1534438098
    },
    {
      "id": "5b75aab0aff09e0000febe40",
      "text": "[https://gyazo.com/cef7b727561e4a5209893f6974e19102]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534438083,
      "updated": 1534438083
    },
    {
      "id": "5b75aaabaff09e0000febe3d",
      "text": "http://gihyo.jp/lifestyle/feature/01/engineer-studying",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534438078,
      "updated": 1534438078
    },
    {
      "id": "5b75af0faff09e0000febe45",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534439202,
      "updated": 1534439202
    },
    {
      "id": "5b75ae43aff09e0000febe42",
      "text": "[* 知識獲得から知的生産へ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534438998,
      "updated": 1534439211
    },
    {
      "id": "5b75aa2daff09e0000febe3c",
      "text": "- 知識獲得はインプットにフォーカスしています。しかし、具体的にプログラミングの例で考えたとき、プログラミング言語の知識を得るがプログラムを書かないという状況は少しおかしいです。一般化すると、アウトプットが主であって、そのアウトプットを効率よくするために知識をインプットするのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534437952,
      "updated": 1534899624
    },
    {
      "id": "5b7cb5a4aff09e00005cc948",
      "text": "+ 知識獲得という言葉はインプットに重点が置かれています。しかし、具体的にプログラミングの例で考えると、プログラミング言語の知識を得るのにプログラムを書かないという状況はおかしいですね。プログラムを書くためにプログラミングの知識を得るのです。一般化すると、アウトプットが主であって、そのアウトプットを効率よくするために知識をインプットするのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899621,
      "updated": 1534899693
    },
    {
      "id": "5b7cb5abaff09e00005cc94a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899627,
      "updated": 1534899627
    },
    {
      "id": "5b7cb5aaaff09e00005cc949",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534899627,
      "updated": 1534899627
    },
    {
      "id": "5b75b100aff09e0000febe47",
      "text": "こうして「エンジニアの学び方」のインプットの話から、アウトプットのためにインプットをする「エンジニアの知的生産術」が生まれました。第1章が「エンジニアの学び方」に相当する部分、第2章はやる気のマネジメントです。この2つではサイクルを回す学び方と、サイクルを回し続けるための原動力を解説します。3章は記憶、4章は読書の話で、この2つはインプットの方法です。第5章が「考えをまとめるには」第6章が「アイデアを思いつくには」です。これがアウトプットです。膨大なインプットから、アイデアを結晶化させて、それを実現していくプロセスについて解説します。6章までは「どう学ぶか(how)」を解説していますが、私はhowよりもwhatの方が大事だと考えているので、7章で何を学ぶかをどう決めるかの戦略について解説します。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534439699,
      "updated": 1534440804
    },
    {
      "id": "5b7d10f5aff09e000043d627",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534922997,
      "updated": 1534922997
    },
    {
      "id": "5b7d10f5aff09e000043d626",
      "text": "#エンジニアの知的生産術_加筆案",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534922997,
      "updated": 1644914378
    },
    {
      "id": "5b75b544aff09e0000febe4b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1534440792,
      "updated": 1534440792
    }
  ]
}