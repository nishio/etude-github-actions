{
  "id": "602a040be2d08f001c9d10dc",
  "title": "Jestメモ",
  "created": 1613366287,
  "updated": 1615559525,
  "lines": [
    {
      "id": "602a040be2d08f001c9d10dc",
      "text": "Jestメモ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613366287,
      "updated": 1613366289
    },
    {
      "id": "603ca44daff09e00008442e9",
      "text": "[Jestメモ Day1]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614586957,
      "updated": 1614586995
    },
    {
      "id": "602b7172aff09e00007bbb80",
      "text": "[Jestメモ Day2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613459827,
      "updated": 1614587030
    },
    {
      "id": "603ca4a8aff09e00008442ea",
      "text": "[Jestメモ Day3]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587049,
      "updated": 1614587066
    },
    {
      "id": "603ca4f1aff09e00008442ec",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587121,
      "updated": 1614587121
    },
    {
      "id": "603ca4bdaff09e00008442eb",
      "text": "2021-02-22",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587070,
      "updated": 1614587121
    },
    {
      "id": "603345deaff09e00007ca1fc",
      "text": "\t[非同期なReactの状態更新をテストする]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613972959,
      "updated": 1613972968
    },
    {
      "id": "603345e8aff09e00007ca1fe",
      "text": "\t[useStateを差し替える]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613972969,
      "updated": 1613972980
    },
    {
      "id": "603345f4aff09e00007ca1ff",
      "text": "\t[useEffectで作ったPromiseをexport]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613972980,
      "updated": 1613972986
    },
    {
      "id": "603345faaff09e00007ca200",
      "text": "\tようやく「前回の対話IDがある時にはメニューがあり、なければない」をまともにテストすることができた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613972986,
      "updated": 1613973142
    },
    {
      "id": "60335b62aff09e00007ca23f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613978467,
      "updated": 1613978468
    },
    {
      "id": "6038c0f1aff09e0000ea89e9",
      "text": "　「サーバが寝てる時、1秒待ってから再挑戦」ってコードどうテストすればいいんだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332146,
      "updated": 1614332224
    },
    {
      "id": "6038c140aff09e000087f5f6",
      "text": "　\tなるほど、setTimeoutを生で使うのではなくPromiseで包んで「1秒後にresolveされるPromise」を作るのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332225,
      "updated": 1614332233
    },
    {
      "id": "60335b3daff09e00007ca23e",
      "text": "　\t[setTimeoutをPromiseで包む]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1613978430,
      "updated": 1614332144
    },
    {
      "id": "6038c0efaff09e0000ea89e8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332144,
      "updated": 1614332144
    },
    {
      "id": "6038c14aaff09e000087f5f7",
      "text": "\tRegroupの方をテストしようとすると、ドラッグがたくさんあるのが問題だなぁ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332234,
      "updated": 1614332249
    },
    {
      "id": "6038c159aff09e000087f5f9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332250,
      "updated": 1614332250
    },
    {
      "id": "6038c15aaff09e000087f5fa",
      "text": "2021-02-25",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332250,
      "updated": 1614332277
    },
    {
      "id": "6038c15eaff09e000087f5fb",
      "text": "\tJestでRegroup上でのドラッグなどのテストをどうやるかを悩み中…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332255,
      "updated": 1614332278
    },
    {
      "id": "6038c176aff09e000087f5fc",
      "text": "\t\tイベントを記録してテストにつかいたいが、mousemove系を全部記録すると量が多い問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332278,
      "updated": 1614332294
    },
    {
      "id": "6038c17eaff09e000087f5fe",
      "text": "\t\t その種のイベントは直前だけ記録するようにしておいてスペースキーを押した時だけイベント記録に直前のイベントを追加する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332286,
      "updated": 1614332296
    },
    {
      "id": "6038c17eaff09e000087f600",
      "text": "\t これで「長縄ツールで囲む」を少ないイベントで表現できるようになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332286,
      "updated": 1614332298
    },
    {
      "id": "6038c17eaff09e000087f601",
      "text": "\t\t 問題は「スペースキーを押した」はPCではできるけどiPadでは難しいことか…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332286,
      "updated": 1614332300
    },
    {
      "id": "6038c17eaff09e000087f602",
      "text": "\t\t 時間で間引くか？それなら入力する時に少し止まることで記録させられる？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332286,
      "updated": 1614332301
    },
    {
      "id": "6038c159aff09e000087f5f8",
      "text": "\t\t[MouseMoveを間引いてSentry]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332249,
      "updated": 1614332314
    },
    {
      "id": "6038c199aff09e000087f603",
      "text": "\t座標の値は取れたが、テストの中でfireEventしてるのに何も起こらない、どこで握り潰されてるのか追いかけるの難しいぞ…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332314,
      "updated": 1614332328
    },
    {
      "id": "6038c1a8aff09e000087f605",
      "text": "\t\tテストのニーズとしては「キャンバスにmousedownした時にイベントが届く」なんてのは十分試されてるからテストしなくても良くて、イベントが届いた後のところをテストしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332328,
      "updated": 1614332337
    },
    {
      "id": "6038c1b1aff09e000087f606",
      "text": "\t\t厳しい感じだけどなんとかできた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332337,
      "updated": 1614332345
    },
    {
      "id": "6038c1b8aff09e000087f607",
      "text": "  \tToolEvent風に見えるオブジェクトを使って型エラーをignoreしてToolEventだよと言って渡す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332345,
      "updated": 1614332348
    },
    {
      "id": "6038c1b8aff09e000087f608",
      "text": "  \tドラッグをエミュレートして「何もないところを投げ縄でかこむ」を自動化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332345,
      "updated": 1614332349
    },
    {
      "id": "6038c1b8aff09e000087f609",
      "text": "  \t　これは「マウスダウンの時点で死ぬ」「選択はできるが変なところに線が出る」「囲まれた領域をドラッグすると移動対象がなくて死ぬ」ってバグの山だった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332345,
      "updated": 1614332350
    },
    {
      "id": "6038c1b8aff09e000087f60a",
      "text": " \t テストで再現した上で、囲んだ範囲に何もなかった時には囲まれる前のモードに戻すようにした、仮に同じバグが発生しても次はテストでわかるはず",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332345,
      "updated": 1614332352
    },
    {
      "id": "6038c1a8aff09e000087f604",
      "text": "\t無理やりテストして無理やり直した感じがあるのでリファクタしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332328,
      "updated": 1614332365
    },
    {
      "id": "6038c1cdaff09e000087f60b",
      "text": " \t本当はまずリファクタしたかったのだけど、流石にバグってるものをテストも書かずにリファクタしたら盛大に壊れると思ったので堪えた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332365,
      "updated": 1614332368
    },
    {
      "id": "6038c1dcaff09e000087f60c",
      "text": " \t投げ縄と選択対象の衝突判定の中で直接投げ縄を消したりバルーンメニューを消したりしてるの良くない設計",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332380,
      "updated": 1614332380
    },
    {
      "id": "6038c201aff09e000087f612",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332418,
      "updated": 1614332418
    },
    {
      "id": "6038c1ffaff09e000087f611",
      "text": "2021-02-26",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332415,
      "updated": 1614332416
    },
    {
      "id": "6038c1ddaff09e000087f60e",
      "text": "\t付箋ドラッグのテストを書く前に画面サイズを確認してみたら600×300で、リサイズするたびに倍になるという謎の現象が…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332381,
      "updated": 1614332397
    },
    {
      "id": "6038c225aff09e000087f614",
      "text": "\t\t何もせずにリサイズイベントを起こすだけでキャンバスが2倍に広がる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332453,
      "updated": 1614332457
    },
    {
      "id": "6038c229aff09e000087f615",
      "text": "\t\t1ピクセルとキャンバス上の1単位が2倍ズレてたりしそうな気配",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332457,
      "updated": 1614332457
    },
    {
      "id": "6038c238aff09e000087f616",
      "text": "\t\tとりあえず付箋を追加したときに実際に追加される位置はこのサイズに無関係に決まってるみたいなので別の話として切り分けて進めよう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332472,
      "updated": 1614332472
    },
    {
      "id": "6038c1edaff09e000087f60f",
      "text": "\tレガシーコード改善ガイドのことを思い出してる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332398,
      "updated": 1614332409
    },
    {
      "id": "6038c1f7aff09e000087f610",
      "text": "\t\t「安全にリファクタするにはテストが必要だがテストをするためにリファクタが必要」笑",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332407,
      "updated": 1614332427
    },
    {
      "id": "6038c20daff09e000087f613",
      "text": "\t\t[レガシーコードのジレンマ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332429,
      "updated": 1614332437
    },
    {
      "id": "6038c1dcaff09e000087f60d",
      "text": "\t付箋をクリックしてバルーンメニューが出ることはテストできたので意外と簡単だなと思いながらドラッグのテストをしたらテストランナーが終了しなくなった、なぜ…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332380,
      "updated": 1614332507
    },
    {
      "id": "6038c25caff09e000087f618",
      "text": "\t\tたぶんある種のオブジェクトをJestが画面表示用に文字列化するときに無限ループになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332508,
      "updated": 1614332554
    },
    {
      "id": "6038c296aff09e0000ea89ea",
      "text": "\t\t循環参照というわけではないはずだが…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332566,
      "updated": 1614332579
    },
    {
      "id": "6038c25baff09e000087f617",
      "text": "\t投げ縄選択で付箋が選択されるところまでテストできた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332507,
      "updated": 1614332591
    },
    {
      "id": "6038c2afaff09e000087f61a",
      "text": "\t\tテストでカバーした上で、衝突判定のコードの中からメニューのUIを操作する気持ち悪い状態を解消することができた、めでたしめでたし",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332592,
      "updated": 1614332603
    },
    {
      "id": "6038c2afaff09e000087f619",
      "text": "\tカバレッジは39%くらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332591,
      "updated": 1614332614
    },
    {
      "id": "6038c2c6aff09e000087f61b",
      "text": " 複数選んでグループ化するのと、まとめて移動するののテストを足して46%",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332614,
      "updated": 1614332614
    },
    {
      "id": "6038c2c6aff09e000087f61c",
      "text": "\t まあボチボチと足していこう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332614,
      "updated": 1614332617
    },
    {
      "id": "6038c2c9aff09e000087f61d",
      "text": "\tjestの通常のテストランナーでテストするときにはあんなに非同期のことが気になったのにelectronを使うときには特に気にせずに書いてて問題なく動いている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332618,
      "updated": 1614332630
    },
    {
      "id": "6038c2d1aff09e000087f61f",
      "text": "\t ただしテストに時間はかかる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332626,
      "updated": 1614332631
    },
    {
      "id": "6038c2d8aff09e000087f620",
      "text": "\tうーむ、ペンのボタンをクリックしたのにペンに切り替わらない不可解…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332632,
      "updated": 1614332641
    },
    {
      "id": "6038c2e1aff09e000087f622",
      "text": "\t\tペンの実装がいまマウスイベントを流し込んでる場所よりも前にイベントをつかんでるからペンに切り替えると自動化できないってことか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332642,
      "updated": 1614332653
    },
    {
      "id": "6038c2edaff09e000087f623",
      "text": "\t\tペン描画のテストはできたが、ペンで描いた後にパスとそのパスを包んでるグループの両方が表示順の中に出現する…これは2回描いているバグなのでは…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332653,
      "updated": 1614332661
    },
    {
      "id": "6038c2fdaff09e000087f624",
      "text": "\tカバレッジは51%になった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332670,
      "updated": 1614332670
    },
    {
      "id": "6038c2feaff09e000087f625",
      "text": "\t 二重に描画してるかもしれない問題は来週にしよう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332670,
      "updated": 1614332672
    },
    {
      "id": "6038c2e1aff09e000087f621",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614332641,
      "updated": 1614332641
    },
    {
      "id": "603ca43daff09e00008442e6",
      "text": "2021-03-01",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614586942,
      "updated": 1614586943
    },
    {
      "id": "603ca6deaff09e0000a326e3",
      "text": "　二重描画は単純なバグだったので直した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587614,
      "updated": 1614587664
    },
    {
      "id": "603ca70faff09e0000a326e4",
      "text": "　　この予期しない不整合を放置しておくと別の不具合が発生しそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587664,
      "updated": 1614587664
    },
    {
      "id": "603ca713aff09e0000a326e5",
      "text": "　　パスを選択してグループ化したり解除したりしてるとさらにおかしな状態に発展しそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587667,
      "updated": 1614587699
    },
    {
      "id": "603ca733aff09e0000a326e6",
      "text": "　テストケースの中でPaper.jsのプロジェクトが作られて、削除されないので溜まっていた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587699,
      "updated": 1614587735
    },
    {
      "id": "603ca756aff09e0000a326e7",
      "text": "　　各テストケースの後に実行されるaftereachで全部削除した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587735,
      "updated": 1614587767
    },
    {
      "id": "603ca673aff09e0000a326e1",
      "text": "　今までカバレッジの割合の小さい方から見てたけど、カバーされてないstatement数多い順はできないのかなー、それをテストすれば効率良くカバレッジが伸びるということじゃん",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587508,
      "updated": 1614587589
    },
    {
      "id": "603ca6c5aff09e0000a326e2",
      "text": " 　なかったので行数多い順で眺める、行数の一番多い赤いやつをやるか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614587589,
      "updated": 1614587796
    },
    {
      "id": "603ca43faff09e00008442e7",
      "text": " \t[https://gyazo.com/b795c664b893480f62eb605cabcdaf41]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614586944,
      "updated": 1614587799
    },
    {
      "id": "603ca442aff09e00008442e8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614586948,
      "updated": 1614586948
    },
    {
      "id": "603de576aff09e00008a27d6",
      "text": "2021-03-02",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614669174,
      "updated": 1614669402
    },
    {
      "id": "603de938aff09e00008a27ff",
      "text": "\t[サードパーティライブラリの中の非同期処理をテストする]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614670136,
      "updated": 1614670171
    },
    {
      "id": "603e05efaff09e00008a2800",
      "text": "\t[最初のパスがジャンプするバグ]の究明のために2回パスを描くテストをしたかったが、Paper.jsでのキャンバスの再描画が非同期だった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614677487,
      "updated": 1614677588
    },
    {
      "id": "603e05efaff09e00008a2801",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614677488,
      "updated": 1614677488
    },
    {
      "id": "603f44d0aff09e0000ce100d",
      "text": "2021-03-03",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614759120,
      "updated": 1614759121
    },
    {
      "id": "603f61d4aff09e00009cd744",
      "text": "\t[MouseMoveを間引いてSentry]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614766548,
      "updated": 1614766559
    },
    {
      "id": "603f44d1aff09e0000ce100e",
      "text": "\t[iPadのSafariでconsole.log]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614759121,
      "updated": 1614766547
    },
    {
      "id": "603f61d2aff09e00009cd743",
      "text": "\t`60.32% Statements 1444/2394 41.48% Branches 358/863 59.55% Functions 240/403 60.93% Lines 1421/2332`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614766547,
      "updated": 1614838818
    },
    {
      "id": "60407be0aff09e0000ce100f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614838753,
      "updated": 1614838753
    },
    {
      "id": "60420d1daff09e00000ccf54",
      "text": "2021-03-04",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941470,
      "updated": 1614941471
    },
    {
      "id": "60420d52aff09e00000ccf5b",
      "text": "\tタッチイベントを使ってマルチタッチ操作のテスト",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941523,
      "updated": 1614941523
    },
    {
      "id": "60420d53aff09e00000ccf5c",
      "text": "\t二本指タップが動かないで離された場合にクリックになる問題の再現は以前と同じ「なぜかToolEventが届かない」に阻まれてできてないのだけど、謎のエラーが出る原因を追いかけていたら別のバグが見つかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941524,
      "updated": 1614941535
    },
    {
      "id": "60420d5eaff09e00000ccf5d",
      "text": "\t 二本指タップが動かないで離された場合にズームが0になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941535,
      "updated": 1614941538
    },
    {
      "id": "60420d5eaff09e00000ccf5e",
      "text": "\t たぶんこれが稀に発生してた白紙になる問題の原因だな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941535,
      "updated": 1614941552
    },
    {
      "id": "60420d1faff09e00000ccf55",
      "text": "\t不可解な現象",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941471,
      "updated": 1614941495
    },
    {
      "id": "60420d37aff09e00000ccf56",
      "text": " \tキャンバスにマウスイベントを投げても反応しない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941495,
      "updated": 1614941497
    },
    {
      "id": "60420d37aff09e00000ccf57",
      "text": " \tタッチイベントを投げたら反応した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941495,
      "updated": 1614941498
    },
    {
      "id": "60420d37aff09e00000ccf58",
      "text": " \tタッチなら反応するのだなと思ってテストケースを書いたが反応しない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941495,
      "updated": 1614941500
    },
    {
      "id": "60420d37aff09e00000ccf59",
      "text": " \tテストケースの実行順番によって「touchstartが反応しないままtouchmoveだけ反応する」という現象が起きた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941495,
      "updated": 1614941500
    },
    {
      "id": "60420d3eaff09e00000ccf5a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941502,
      "updated": 1614941502
    },
    {
      "id": "60420cc7aff09e00000ccf4a",
      "text": "2021-03-05",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941383,
      "updated": 1614941384
    },
    {
      "id": "60420cc8aff09e00000ccf4b",
      "text": "\telecron側で「Reactの状態更新がactで包まれてない」とという旨の警告が出ていることに気づく(jest側に中継されない)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941384,
      "updated": 1614941403
    },
    {
      "id": "60420cd8aff09e00000ccf4c",
      "text": " どこに包まれてない状態更新があるのかelecronでは表示されない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941401,
      "updated": 1614941404
    },
    {
      "id": "60420cd8aff09e00000ccf4d",
      "text": " console.logを入れて範囲を絞り込む",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941401,
      "updated": 1614941405
    },
    {
      "id": "60420cd8aff09e00000ccf4e",
      "text": " 場所はわかったが状態更新をモックで差し替えたときにそれも差し代わっているはずでは？？？となってる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941401,
      "updated": 1614941405
    },
    {
      "id": "60420cdeaff09e00000ccf4f",
      "text": " useStateをモックで差し替えるコードは動いている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941406,
      "updated": 1614941437
    },
    {
      "id": "60420ceeaff09e00000ccf50",
      "text": " その後、実際にその差し替えたuseStateは呼ばれている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941422,
      "updated": 1614941427
    },
    {
      "id": "60420ceeaff09e00000ccf51",
      "text": " しかし問題のuseStateの時には呼ばれてない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941422,
      "updated": 1614941427
    },
    {
      "id": "60420d00aff09e00000ccf52",
      "text": " [jest.spyOnで差し替わってなかった]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941440,
      "updated": 1614941466
    },
    {
      "id": "60420d19aff09e00000ccf53",
      "text": "　[Facebookでの議論 https://www.facebook.com/1129148772/posts/10224268346672864/?d=n]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614941466,
      "updated": 1614958554
    },
    {
      "id": "60424fb4aff09e00002b8c98",
      "text": "  useState、jest.mockで差し替えても良いかも",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614958518,
      "updated": 1614958584
    },
    {
      "id": "60424ff8aff09e00002b8c9a",
      "text": "  　Reactをインポートして書き換えて再エクスポートするモックモジュールを作る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614958584,
      "updated": 1614958632
    },
    {
      "id": "60425028aff09e00002b8c9c",
      "text": "  setStateを直接呼ぶのではなく、それを呼ぶonClickをつけてfireEventで呼んでみる、解釈が正しければactがない旨の警告は出ないはず",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614958632,
      "updated": 1614959029
    },
    {
      "id": "60424fdaaff09e00002b8c99",
      "text": "　　コンポーネントを分けるテクニックを応用して、Promiseを使う手前と後とを分けてテストすることで非同期の問題を気にしなくて良くなる、という解決法を試す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614958554,
      "updated": 1614959178
    },
    {
      "id": "6042526baff09e00002b8c9e",
      "text": "　　Container/Presentation分離",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614959216,
      "updated": 1614959228
    },
    {
      "id": "60425284aff09e00002b8c9f",
      "text": "　　　そう設計することでテストしやすくなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614959237,
      "updated": 1614959245
    },
    {
      "id": "6042528daff09e00002b8ca0",
      "text": "　　　一方で「まだテストコードのないものにテストを追加する」時、リファクタしてからテストするのではなく、テストでカバーしてからリファクタしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614959245,
      "updated": 1614959305
    },
    {
      "id": "60425246aff09e00002b8c9d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1614959178,
      "updated": 1614959178
    },
    {
      "id": "604336eaaff09e0000e410a6",
      "text": "\tそもそも「actで包め」って警告が出たから素直に包んだのだけど、包むと何が行われるのか理解してないな…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615017706,
      "updated": 1615017716
    },
    {
      "id": "6043372eaff09e0000e410ab",
      "text": "\t\treact-dom/test-utils",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615017774,
      "updated": 1615017784
    },
    {
      "id": "604336e8aff09e0000e410a4",
      "text": "\t\t\thttps://github.com/facebook/react/blob/master/packages/react-dom/src/test-utils/ReactTestUtilsPublicAct.js#L76",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615017704,
      "updated": 1615017785
    },
    {
      "id": "604336e9aff09e0000e410a5",
      "text": "\t\treact-testing-library",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615017705,
      "updated": 1615017800
    },
    {
      "id": "6043373baff09e0000e410ac",
      "text": " \t\tact",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615017788,
      "updated": 1615017804
    },
    {
      "id": "60433729aff09e0000e410aa",
      "text": " \t\t\thttps://github.com/testing-library/react-testing-library/blob/master/src/act-compat.js",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615017769,
      "updated": 1615017804
    },
    {
      "id": "60433fe5aff09e0000e410ae",
      "text": "\t\t\ttests",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615020006,
      "updated": 1615020008
    },
    {
      "id": "6043370daff09e0000e410a7",
      "text": "\t\t\t\thttps://github.com/testing-library/react-testing-library/tree/master/src/__tests__",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615017741,
      "updated": 1615020008
    },
    {
      "id": "60433782aff09e0000e410ad",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615017859,
      "updated": 1615017859
    },
    {
      "id": "604598deaff09e000074e7e5",
      "text": "2021-03-08",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615173855,
      "updated": 1615173855
    },
    {
      "id": "604598dfaff09e000074e7e6",
      "text": "\t[react-dom/test-utilsのactは何をする？]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615173856,
      "updated": 1615173943
    },
    {
      "id": "604598e1aff09e000074e7e7",
      "text": "\t>useState、jest.mockで差し替えても良いかも",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615173857,
      "updated": 1615192181
    },
    {
      "id": "6045e073aff09e000074e7ea",
      "text": "\t\t`Do not import @jest/globals outside of the Jest test environment`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615192180,
      "updated": 1615192182
    },
    {
      "id": "6045e089aff09e0000cc46ed",
      "text": "\t\tなぜこのエラーになるのかよくわかってない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615192202,
      "updated": 1615192209
    },
    {
      "id": "6045bcd8aff09e000074e7e8",
      "text": "\t[requestAnimationFrame + jest-electron = unstable behavoir]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615183064,
      "updated": 1615192168
    },
    {
      "id": "604b7b52aff09e0000e549dc",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615559506,
      "updated": 1615559506
    },
    {
      "id": "604b7b3baff09e0000e549db",
      "text": "2021-03-09~2021-03-12",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615559484,
      "updated": 1615559505
    },
    {
      "id": "6045e055aff09e000074e7e9",
      "text": "\t[Can't perform a React state update on an unmounted component]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1615192149,
      "updated": 1615559525
    }
  ]
}