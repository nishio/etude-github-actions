{
  "id": "5f6f47de7898020020fc6c4c",
  "title": "ACL Beginner Contest",
  "created": 1601128416,
  "updated": 1601314228,
  "lines": [
    {
      "id": "5f6f47de7898020020fc6c4c",
      "text": "ACL Beginner Contest",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601128416,
      "updated": 1601128438
    },
    {
      "id": "5f6f55c1aff09e0000e6dcf1",
      "text": "[AtCoder Library]を使える問題が出されるコンテスト。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131970,
      "updated": 1601131998
    },
    {
      "id": "5f6f55d1aff09e0000e6dcf2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131985,
      "updated": 1601131985
    },
    {
      "id": "5f6f47f6aff09e0000525638",
      "text": "BをケアレスミスしたことにCの提出後に気づき修正、Dを実装してサンプルを通してから提出したもののWAで、Eを見たら[遅延伝搬セグメント木]だなと思ったのでそちらを解く。何度か失敗してAC。Dに戻って「これはセグメント木でDPだな」と気づいたが、その時点で残り10分。間に合わず。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601128438,
      "updated": 1601136868
    },
    {
      "id": "5f6f47f6aff09e0000525639",
      "text": "[https://gyazo.com/cf293b51cdb0f3e61921e381956d2872]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601128438,
      "updated": 1601128476
    },
    {
      "id": "5f6f481baff09e000052563a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601128476,
      "updated": 1601128476
    },
    {
      "id": "5f6f4901aff09e0000e6dce9",
      "text": "うわ、あと9ポイントで水色！惜しい！",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601128706,
      "updated": 1601128727
    },
    {
      "id": "5f6f47e0aff09e0000525636",
      "text": "[https://gyazo.com/9dabf4b98969d40e2b5509564cfe5ff0]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601128417,
      "updated": 1601128418
    },
    {
      "id": "5f6f47e2aff09e0000525637",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601128418,
      "updated": 1601128418
    },
    {
      "id": "5f6f5342aff09e0000525642",
      "text": "[B - Integer Preference https://atcoder.jp/contests/abl/tasks/abl_b]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131331,
      "updated": 1601136773
    },
    {
      "id": "5f6f6870aff09e00005256bf",
      "text": "\t[https://gyazo.com/f4f4a47bc47a888934ec7935d5699512]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601136753,
      "updated": 1601136754
    },
    {
      "id": "5f6f541aaff09e0000e6dcec",
      "text": "　ケアレスミスした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131546,
      "updated": 1601136759
    },
    {
      "id": "5f6f541eaff09e0000e6dced",
      "text": "\t　大急ぎで直したので不格好な条件式",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131550,
      "updated": 1601136759
    },
    {
      "id": "5f6f5343aff09e0000525644",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131331,
      "updated": 1601131476
    },
    {
      "id": "5f6f53d3aff09e0000525645",
      "text": "\t A, B, C, D = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131476,
      "updated": 1601131476
    },
    {
      "id": "5f6f53d3aff09e0000525646",
      "text": "  # if A <= D <= B or A <= C <= B:  # NG",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131476,
      "updated": 1601131476
    },
    {
      "id": "5f6f53d3aff09e0000525647",
      "text": "  if A <= D <= B or A <= C <= B or C <= A <= D:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131476,
      "updated": 1601131476
    },
    {
      "id": "5f6f53d3aff09e0000525648",
      "text": "      print(\"Yes\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131476,
      "updated": 1601131476
    },
    {
      "id": "5f6f53d3aff09e0000525649",
      "text": "  else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131476,
      "updated": 1601131476
    },
    {
      "id": "5f6f53d3aff09e000052564a",
      "text": "      print(\"No\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131476,
      "updated": 1601131476
    },
    {
      "id": "5f6f53e3aff09e000052564c",
      "text": "\t落ち着いて考えるとこう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131492,
      "updated": 1601131593
    },
    {
      "id": "5f6f53d3aff09e000052564b",
      "text": "\t code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131476,
      "updated": 1601131493
    },
    {
      "id": "5f6f53ebaff09e000052564e",
      "text": "   A, B, C, D = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131499,
      "updated": 1601131705
    },
    {
      "id": "5f6f54b8aff09e0000525651",
      "text": "   if D < A or B < C:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131705,
      "updated": 1601131705
    },
    {
      "id": "5f6f54b8aff09e0000525652",
      "text": "       print(\"No\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131705,
      "updated": 1601131705
    },
    {
      "id": "5f6f54b8aff09e0000525653",
      "text": "   else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131705,
      "updated": 1601131705
    },
    {
      "id": "5f6f54b8aff09e0000525654",
      "text": "       print(\"Yes\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131705,
      "updated": 1601131705
    },
    {
      "id": "5f6f54b8aff09e0000525655",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131705,
      "updated": 1601131706
    },
    {
      "id": "5f6f54bbaff09e0000525656",
      "text": "[C - Connect Cities https://atcoder.jp/contests/abl/tasks/abl_c]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131707,
      "updated": 1601136737
    },
    {
      "id": "5f6f684daff09e00005256bd",
      "text": "\t[https://gyazo.com/d392de5b2ccc1dc816648fb819b6adbf]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601136717,
      "updated": 1601136719
    },
    {
      "id": "5f6f5514aff09e0000e6dcee",
      "text": "　繋がってる都市の塊がいくつあるか数えて(Xとする)、その一つから残りX-1個に道を引けば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131797,
      "updated": 1601131856
    },
    {
      "id": "5f6f5550aff09e0000e6dcef",
      "text": "　「繋がってる都市の塊」=[連結成分]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131857,
      "updated": 1601131879
    },
    {
      "id": "5f6f54bcaff09e0000525657",
      "text": "\tというわけで[UnionFind]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131708,
      "updated": 1601131888
    },
    {
      "id": "5f6f5459aff09e0000525650",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131610,
      "updated": 1601131912
    },
    {
      "id": "5f6f5587aff09e0000525659",
      "text": "\t def solve(N, M, edges):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131912,
      "updated": 1601131912
    },
    {
      "id": "5f6f5588aff09e000052565a",
      "text": "      init_unionfind(N)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131912,
      "updated": 1601131912
    },
    {
      "id": "5f6f5588aff09e000052565b",
      "text": "      for e in edges:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131912,
      "updated": 1601131912
    },
    {
      "id": "5f6f5588aff09e000052565c",
      "text": "          unite(e[0] - 1, e[1] - 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131912,
      "updated": 1601131912
    },
    {
      "id": "5f6f5588aff09e000052565d",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131912,
      "updated": 1601131912
    },
    {
      "id": "5f6f5588aff09e000052565e",
      "text": "      s = set(find_root(x) for x in range(N))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131912,
      "updated": 1601131912
    },
    {
      "id": "5f6f5588aff09e000052565f",
      "text": "      return len(s) - 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131912,
      "updated": 1601131915
    },
    {
      "id": "5f6f5588aff09e0000525661",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131912,
      "updated": 1601131917
    },
    {
      "id": "5f6f559aaff09e0000525662",
      "text": "[D - Flat Subsequence https://atcoder.jp/contests/abl/tasks/abl_d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131931,
      "updated": 1601136676
    },
    {
      "id": "5f6f6813aff09e00005256bb",
      "text": "\t[https://gyazo.com/13fcd06d7d09419948c239f846aedff7]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601136659,
      "updated": 1601136662
    },
    {
      "id": "5f6f559caff09e0000525664",
      "text": "\tどうACLに帰着するのかわからないのでまずは素朴に書く",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131933,
      "updated": 1601136689
    },
    {
      "id": "5f6f55e8aff09e0000e6dcf3",
      "text": "\t提出したが WA/TLE混じり",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132009,
      "updated": 1601132045
    },
    {
      "id": "5f6f560daff09e0000e6dcf4",
      "text": "\t WAが取れてもTLEだろうし、どう解決するか目処が付いてないので一旦保留してEをやった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132045,
      "updated": 1601132077
    },
    {
      "id": "5f6f5632aff09e0000e6dcf8",
      "text": "\t戻ってきて見直してみて、なるほどこれは[セグメント木]で[動的計画法]だなと気づいたが、残り10分だった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132083,
      "updated": 1601150827
    },
    {
      "id": "5f6f5656aff09e0000e6dcf9",
      "text": "\t 末尾の値を定義域、最長の長さを値域とする動的計画法",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132118,
      "updated": 1601132328
    },
    {
      "id": "5f6f5728aff09e0000e6dcfa",
      "text": "\t [集めるDP]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132329,
      "updated": 1601132346
    },
    {
      "id": "5f6f5778aff09e0000e6dcfc",
      "text": "\t i番目の値がAの時、Aの前後K個の値のmaxが「i番目の値をつなげることのできる最も長い列」なので、それに1足したもので更新",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132408,
      "updated": 1601132503
    },
    {
      "id": "5f6f57eaaff09e0000e6dcfe",
      "text": "\t 下記でサンプルは通る",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132523,
      "updated": 1601132538
    },
    {
      "id": "5f6f573baff09e0000e6dcfb",
      "text": "\t code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132347,
      "updated": 1601132387
    },
    {
      "id": "5f6f5763aff09e0000525665",
      "text": "\t  def solve(N, K, AS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132387,
      "updated": 1601132388
    },
    {
      "id": "5f6f5763aff09e0000525666",
      "text": "       count = [0] * 300_000",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132388,
      "updated": 1601132388
    },
    {
      "id": "5f6f5763aff09e0000525667",
      "text": "       count[AS[0]] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132388,
      "updated": 1601132388
    },
    {
      "id": "5f6f5763aff09e0000525668",
      "text": "       for i in range(1, N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132388,
      "updated": 1601132388
    },
    {
      "id": "5f6f5763aff09e0000525669",
      "text": "           A = AS[i]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132388,
      "updated": 1601132388
    },
    {
      "id": "5f6f5763aff09e000052566a",
      "text": "           start = max(0, A - K)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132388,
      "updated": 1601132388
    },
    {
      "id": "5f6f5763aff09e000052566b",
      "text": "           best = max(count[start:A + K + 1])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132388,
      "updated": 1601132388
    },
    {
      "id": "5f6f5763aff09e000052566c",
      "text": "           count[A] = best + 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132388,
      "updated": 1601132388
    },
    {
      "id": "5f6f5763aff09e000052566d",
      "text": "       return max(count)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132388,
      "updated": 1601132388
    },
    {
      "id": "5f6f5802aff09e0000e6dd00",
      "text": " 点更新範囲maxなのでセグメント木が使える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132547,
      "updated": 1601150557
    },
    {
      "id": "5f6f562daff09e0000e6dcf5",
      "text": "　　セグメント木バージョン AC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132077,
      "updated": 1601150565
    },
    {
      "id": "5f6f67d2aff09e000006ff2e",
      "text": "\t\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601136594,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e69aff09e00005256c1",
      "text": "\t\t def solve(N, K, AS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256c2",
      "text": "       MAX_CAPACITY = 300_000",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256c3",
      "text": "       set_width(MAX_CAPACITY + 10)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256c4",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256c5",
      "text": "       count = [0] * SEGTREE_SIZE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256c6",
      "text": "       point_set(count, AS[0], 1, max)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256c7",
      "text": "       for i in range(1, N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256c8",
      "text": "           A = AS[i]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256c9",
      "text": "           start = max(0, A - K)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256ca",
      "text": "           end = min(A + K + 1, MAX_CAPACITY + 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256cb",
      "text": "           best = range_reduce(count, start, end, max, -INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256cc",
      "text": "           point_set(count, A, best + 1, max)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9e6aaff09e00005256cd",
      "text": "       return range_reduce(count, 0, MAX_CAPACITY + 1, max, -INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150570
    },
    {
      "id": "5f6f9f2baff09e00005256d0",
      "text": "\t\tハマりポイント",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150764,
      "updated": 1601150803
    },
    {
      "id": "5f6f9e6aaff09e00005256ce",
      "text": " \t\tPythonのリストは`count[start:end]`でendが範囲外でも許されるが、セグメント木はそうではない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150570,
      "updated": 1601150763
    },
    {
      "id": "5f6f9efaaff09e00005256cf",
      "text": " \t\t`MAX_CAPACITY`を含むので+1が必要",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601150714,
      "updated": 1601150763
    },
    {
      "id": "5f6f67d2aff09e000006ff2f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601136594,
      "updated": 1601136594
    },
    {
      "id": "5f6f562daff09e0000e6dcf6",
      "text": "[E - Replace Digits https://atcoder.jp/contests/abl/tasks/abl_e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132078,
      "updated": 1601133175
    },
    {
      "id": "5f6f5a6caff09e0000525678",
      "text": "\t[https://gyazo.com/2bd499438884da4227a67110c503b545]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133164,
      "updated": 1601133168
    },
    {
      "id": "5f6f5631aff09e0000e6dcf7",
      "text": " 範囲更新するので双対セグメント木かなと思った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132081,
      "updated": 1601132618
    },
    {
      "id": "5f6f584baff09e0000e6dd01",
      "text": " クエリのたびに「20万桁の十進数とみなしてあまりを計算」って処理が走るのは[範囲縮約]だから[遅延伝搬セグメント木]が適当",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132619,
      "updated": 1601314228
    },
    {
      "id": "5f6f5897aff09e0000e6dd02",
      "text": " この処理をするための値の二項演算が`(a * 10 + b) % MOD`だと勘違いした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132695,
      "updated": 1601132784
    },
    {
      "id": "5f6f58efaff09e000052566f",
      "text": " \t実際には右側の数字の桁数をsizeとして`(a * (10 ** size) + b) % MOD`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132784,
      "updated": 1601132790
    },
    {
      "id": "5f6f58fcaff09e0000e6dd03",
      "text": " \t二項演算がsizeを引数に取らないので大急ぎで自作ライブラリを手直しした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132796,
      "updated": 1601132821
    },
    {
      "id": "5f721d1caff09e00008f81c9",
      "text": " \t別解",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601314077,
      "updated": 1601314079
    },
    {
      "id": "5f6f559baff09e0000525663",
      "text": " \t\t> E は、(長さ、sum）を持ちました。 (10^n, sum) を持った方が mod pow を使わずに済んで計算量が良いと思います。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601131931,
      "updated": 1601314082
    },
    {
      "id": "5f6f5959aff09e0000525671",
      "text": " \t  [twitter @maspy_stars https://twitter.com/maspy_stars/status/1309859601483849733]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132889,
      "updated": 1601314082
    },
    {
      "id": "5f6f5955aff09e0000525670",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132886,
      "updated": 1601314140
    },
    {
      "id": "5f6f59c7aff09e0000525677",
      "text": "\t20万桁の十進数になるので`11111111`や`10000000`のあまりを前計算しておく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601132999,
      "updated": 1601136638
    },
    {
      "id": "5f6f5ad3aff09e000052567b",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133268,
      "updated": 1601133291
    },
    {
      "id": "5f6f5aebaff09e000052567c",
      "text": "\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052567d",
      "text": "      # parse input",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052567e",
      "text": "      N, Q = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052567f",
      "text": "      set_width(N + 1)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525680",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525681",
      "text": "      value_unity = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525682",
      "text": "      value_table = [value_unity] * SEGTREE_SIZE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525683",
      "text": "      value_table[NONLEAF_SIZE:NONLEAF_SIZE + N] = [1] * N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525684",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525685",
      "text": "      action_unity = None",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525686",
      "text": "      action_table = [action_unity] * SEGTREE_SIZE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525687",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525688",
      "text": "      cache11 = {}",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525689",
      "text": "      i = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052568a",
      "text": "      p = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052568b",
      "text": "      step = 10",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052568c",
      "text": "      while i <= N:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052568d",
      "text": "          cache11[i] = p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052568e",
      "text": "          p = (p * step + p) % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052568f",
      "text": "          step = (step * step) % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525690",
      "text": "          i *= 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525691",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525692",
      "text": "      cache10 = {0: 1}",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525693",
      "text": "      i = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525694",
      "text": "      p = 10",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525695",
      "text": "      while i <= N:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525696",
      "text": "          cache10[i] = p",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525697",
      "text": "          p = (p * 10) % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525698",
      "text": "          i += 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e0000525699",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052569a",
      "text": "      def action_force(action, value, size):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052569b",
      "text": "          if action == action_unity:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052569c",
      "text": "              return value",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052569d",
      "text": "          # return int(str(action) * size)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052569e",
      "text": "          return (cache11[size] * action) % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e000052569f",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256a0",
      "text": "      def action_composite(new_action, old_action):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256a1",
      "text": "          if new_action == action_unity:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256a2",
      "text": "              return old_action",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256a3",
      "text": "          return new_action",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256a4",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256a5",
      "text": "      def value_binop(a, b, size):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256a6",
      "text": "          # return (a * (10 ** size) + b) % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133311
    },
    {
      "id": "5f6f5aecaff09e00005256a8",
      "text": "          return (a * cache10[size] + b) % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256a9",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256aa",
      "text": "      full_up(value_table, value_binop)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256ab",
      "text": "    ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133303
    },
    {
      "id": "5f6f5aecaff09e00005256b0",
      "text": "      for _q in range(Q):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b1",
      "text": "          l, r, d = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b2",
      "text": "          lazy_range_update(",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b3",
      "text": "              action_table, value_table, l - 1, r, d,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b4",
      "text": "              action_composite, action_force, action_unity, value_binop)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b5",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b6",
      "text": "          ret = lazy_range_reduce(",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b7",
      "text": "              action_table, value_table, 0, N, action_composite, action_force, action_unity,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b8",
      "text": "              value_binop, value_unity)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256b9",
      "text": "          print(ret)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601133292
    },
    {
      "id": "5f6f5aecaff09e00005256ba",
      "text": "　[平方分割]で解いたとTwitterに書いてる人がいる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133292,
      "updated": 1601137049
    },
    {
      "id": "5f6f5a92aff09e000052567a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601133203,
      "updated": 1601133203
    },
    {
      "id": "5f6fb6f6aff09e000006ff34",
      "text": "F",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601156855,
      "updated": 1601156857
    },
    {
      "id": "5f6fb6f9aff09e000006ff36",
      "text": " 頻度を数えて[畳み込み]？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601156858,
      "updated": 1601176538
    },
    {
      "id": "5f700470aff09e000006ff39",
      "text": " [包除原理]を使ってDP？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601176688,
      "updated": 1601176718
    },
    {
      "id": "5f7003d6aff09e000006ff37",
      "text": " https://www.hamayanhamayan.com/entry/2020/09/27/013201",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601176538,
      "updated": 1601176538
    },
    {
      "id": "5f7003d8aff09e000006ff38",
      "text": " https://kmjp.hatenablog.jp/entry/2020/09/26/1030",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601176538,
      "updated": 1601176569
    },
    {
      "id": "5f6fb6f8aff09e000006ff35",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601156857,
      "updated": 1601156857
    }
  ]
}