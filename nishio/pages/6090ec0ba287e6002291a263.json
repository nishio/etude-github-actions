{
  "id": "6090ec0ba287e6002291a263",
  "title": "Hatena2012-09-10",
  "created": 1347202800,
  "updated": 1347202800,
  "lines": [
    {
      "id": "6090ec2faff09e00003dd05b",
      "text": "Hatena2012-09-10",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd05c",
      "text": "code:hatena",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd05d",
      "text": " <body>",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd05e",
      "text": " *1347256998*ブラウザ上で動くEDSACシミュレータを公開しました",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd05f",
      "text": " EDSACは1949年頃のコンピュータです。<a href='http://ja.wikipedia.org/wiki/EDSAC'>EDSAC - Wikipedia</a>。",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd060",
      "text": " 機械語の命令の種類が18個ととてもシンプルです。今のx86の命令セットは膨大で全部を把握できなくなってしまって、教育上良くないのではないかと思っています。そこでシンプルなコンピュータであるEDSACを作ってみました。",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd061",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd062",
      "text": " こちらから試せます: http://nhiro.org/learn_language/repos/EDSAC-on-browser/index.html",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd063",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd064",
      "text": " [f:id:nishiohirokazu:20120910150159p:image]",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd065",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd066",
      "text": " 画像は和田英一先生が書いたエラトステネスの篩で素数を求めるプログラムを実行しているところです。先生に許可をいただいてプリセットに入れてあります。Sourceタブの「Load Wada Seive」ボタンをクリック！(UIは改善の余地があります…)",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd067",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd068",
      "text": " 右端の黒と緑の模様がEDSACの全メモリを1ビット1ピクセルで表示したものです。クリックするとその範囲のメモリの詳細が右上の画面に表示されます。表示されているのはちょうど3で篩をかけている最中ですね。",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd069",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd06a",
      "text": " EDSACがどれくらいメモリを持っているかとか、命令セットがどんなものかとかはこちらを見ると簡潔にまとまっています: http://www.cl.cam.ac.uk/~mr10/edsacposter.pdf",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd06b",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd06c",
      "text": " 「イニシャルオーダー」は、パンチテープから「人間が読みやすいように書かれた命令」を読み込んで「機械が読みやすいビット列」に変換してメモリにストアするプログラムです。いわばとても原始的なプログラミング言語です。",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd06d",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd06e",
      "text": " 1文字を表現するのに5ビットしか使わない点とか興味深いですね。つまり32種類しか文字が表現できないのでアルファベット26文字と数字10種類を表現できないわけです。そこで数字を表示するモードとアルファベットを表示するモードの2つを持って、シフト文字で切り替えるようにしています。",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd06f",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd070",
      "text": " 仕様に関してわかりにくい所はこのシミュレータのコードを読むのもよいと思います。JavaScriptのソースコードは全部で1700行くらい。GPLでこちらで公開しています。 https://github.com/nishio/EDSAC-on-browser",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd071",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd072",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd073",
      "text": " 関連記事",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd074",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20120501/1335846610'>作りたいもの: プログラミング言語のコア概念を学ぶサイト</a>",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd075",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20120619/1340115934'>その2</a>",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd076",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20120705/1341494412'>ブラウザ上で演算子の優先順位と結合性を学ぶ</a>",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd077",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20120707/1341657664'>構文木を可視化するサイトを作った</a>",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd078",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20120707/1341654840'>LISPを学ぶサイトを作った</a>",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd079",
      "text": " - <a href='http://d.hatena.ne.jp/nishiohirokazu/20120710/1341924363'>FORTHを学ぶサイトを作った</a>",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd07a",
      "text": " ",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd07b",
      "text": " 日本語で解説を書くのに全然時間を割けていませんが、誰か興味のある人いませんか？",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd07c",
      "text": " </body>",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd07d",
      "text": "",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dd07e",
      "text": "[はてなダイアリー 2012-09-10 https://nishiohirokazu.hatenadiary.org/archive/2012/09/10]",
      "created": 1347202800,
      "updated": 1347202800,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}