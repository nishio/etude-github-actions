{
  "id": "6090ebfea287e60022919f61",
  "title": "Hatena2009-03-28",
  "created": 1238166000,
  "updated": 1238166000,
  "lines": [
    {
      "id": "6090ec22aff09e00003cfe30",
      "text": "Hatena2009-03-28",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe31",
      "text": "code:hatena",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe32",
      "text": " <body>",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe33",
      "text": " *1238215412*Hacker's Cafe Fes 最新情報",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe34",
      "text": " 動画: http://www.stickam.jp/profile/doodoo5963",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe35",
      "text": " 今のところ男性7名女性1名で6畳だけど意外と大変なことにはなっていなかった、というか十分余裕があるよ。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe36",
      "text": " ハックハックハック。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe37",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe38",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe39",
      "text": " 随時追加する。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe3a",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe3b",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe3c",
      "text": " f:id:nishiohirokazu:20090328134536j:image",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe3d",
      "text": " 押し入れの中に一人入ったのでもっとスペースに余裕ができたよ(ぉ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe3e",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe3f",
      "text": " http://www.itoyanagi.co.jp/",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe40",
      "text": " >>",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe41",
      "text": " 糸柳の原点でもある鰻を取り入れた御料理を御用意しております。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe42",
      "text": " <<",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe43",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe44",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe45",
      "text": " itkzがQFOでyuisekiを攻撃",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe46",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe47",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe48",
      "text": " 空気を吸いたいというakioさんにくっついて外へ。バーガーおいしいです。上着忘れたので寒いです。帰ったら男性14人女性3人に増えていた。人多すぎ。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe49",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe4a",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe4b",
      "text": " f:id:nishiohirokazu:20090328160429j:image",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe4c",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe4d",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe4e",
      "text": " akioさんを押し入れに収納した。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe4f",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe50",
      "text": " *1238228769*Programmer's Nightmare 改良案",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe51",
      "text": " 昨日のオフライン対人戦で、やはりこれはルールが複雑すぎると思ったのでシンプルバージョンを作ることにした。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe52",
      "text": " まずは例外的な処理をするカードを取り除いて行く。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe53",
      "text": " - 「ビットがなくても発動する唯一の命令」OVERSIGHT",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe54",
      "text": " - 選択権なくビットの乗っている人がダメージを受けるPROGRAM_ERROR",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe55",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe56",
      "text": " この二つを取り除くとルールは「まず命令を並べてプログラムを配り、交互に所有権を表すビットを置いて行き、そのあと実行する。プログラムカウンタが自分の所有する命令に到達したらその命令を発動するかどうか決定できる」となる。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe57",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe58",
      "text": " 「ビットを置いている人が不利になるカード(PROGRAM_ERROR)」がなくなったので2人対戦に限定すると「他人の色のビットを作成」する BIT_MAKERは不要。(3人対戦では2位がビリを支援して試合を長引かせるなどもできるのであった方が面白いかも)",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe59",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe5a",
      "text": " 全員に1ポイントのダメージを与えるBUGがあるのだから、同様に全員に1ポイントの回復をするDEBUGがあってもいい。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe5b",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe5c",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe5d",
      "text": " GOTOのとび先の選択肢が少なくて使いにくいという案があった。改良案は1: とび先を+6だけではなく+5～+7くらいに広げる 2: とび先を+6 or -6にする 3: とび先を6以上はなれた任意の位置(つまり二人対戦なら+6～+8) くらいか。2, 3案だとREVERSEがとび先の選択肢に影響を与えなくなるのでよくないかも。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe5e",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe5f",
      "text": " COPYとFUTUREは必須。FLOATERは挙動を明確にする必要がある。MULTIPLIERの必要性は低いがBIT_MOVERがあるから残した方がいいのか。DELETEはREMOVE_BIT、ERASEはREMOVE_CARDに名称変更。BIT_SWAPPERはINCREMENTできるように文面を加工してみた。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe60",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe61",
      "text": " コピーについて: コピー対象のカードの内容ががコピーするカードに書かれているように実行する。複数のカードをコピーした場合、一部の内容だけを実行することはできない。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe62",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe63",
      "text": " SEQUENCE MODをMOVE CARDに名称変更。INSTRUCTIONやCARDなどはCARDに統一する。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe64",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe65",
      "text": " SWAP_INSTRUCTIONもSWAP_CARDに名称変更。いらない子説が濃厚なので、強化する。「直前二つ、直後二つ、直前と直後」のいずれかを交換。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe66",
      "text": " UPGRADEのa cardを1 cardに変更。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe67",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe68",
      "text": " - ACQUIRE; 2ポイント回復する(3 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe69",
      "text": " - BIT MOVER; 任意の1つのビットをそのビットが乗っているカードに隣接するカードに移動する(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe6a",
      "text": " - BIT SWAPPER; 任意の1ペア(二個のビット)を交換する。ただしペアのビットは異なる色で、異なるカード上に乗っていなければ行けない。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe6b",
      "text": " - BUG; 全員に1ポイントのダメージ。(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe6c",
      "text": " - COPY; 直前の2命令をコピーする。(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe6d",
      "text": " - DECREMENT; 任意のカードに書かれたアラビア数字を1減らす。複数の数が書かれている場合はどちらを減らすかを選択できる。--トークンを置くことで表現する。(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe6e",
      "text": " - DEFEND; 1ポイントのダメージを受ける代わりに、このカードの後に実行された2枚のカードによるダメージを無効化する。実行されなかったカードはカウントされない。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe6f",
      "text": " - REMOVE_BIT; 1個のビットを任意の1枚のカードから取り除く。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe70",
      "text": " - REMOVE_CARD; このカードの直前のカードを取り除く。(2 cards)",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe71",
      "text": " - FLOATER; このカードを1つ前または後ろのスペースに移動し、実行順で次のカード内容をコピーする。(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe72",
      "text": " - FUTURE; 直後の2枚のカードをコピーする。(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe73",
      "text": " - GOTO; プログラムカウンタを6進める。一度実行されると、ジャンプ先はその対象カードにロックされる。対象カードが削除されるとGOTOは効果を失う。(3 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe74",
      "text": " - INCREMENT; 任意のカードに書かれたアラビア数字を1増やす。複数の数が書かれている場合はどちらを増やすかを選択できる。++トークンを置くことで表現する。(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe75",
      "text": " - MULTIPLIER; このカードにビットがおかれているすべてのプレイヤーが新しいビットを1つ得る。新しいビットはこのカードにおかれる。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe76",
      "text": " - OVERWRITE; 1枚のカードに乗っているひとつのビットをあなたの色のビットに変更する。このカードは一度使うと消滅し、代わりにデッキから新しいカードを置く。置かれているビットはそのまま残る。(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe77",
      "text": " - POINTER; 直前に実行された2枚のカードによって自分が受けたダメージを誰かにリダイレクトする。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe78",
      "text": " - POWER_SURGE; このカードにビットが置いていないプレイヤーは3ダメージを、ビットを置いているユーザは1ダメージを受ける。(2 cards) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe79",
      "text": " - REPLACE; デッキからカードを引き、任意の一枚を置き換える。置かれたビットは変化しない。++トークンと--トークンは消滅する。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe7a",
      "text": " - REVERSE_PROGRAM; プログラムの実行順序を反転する。(2 cards)",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe7b",
      "text": " -- 備考: 複数のビットが置かれている場合、後のプレイヤーが先のプレイヤーの決定をさらに反転することができる。 ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe7c",
      "text": " - SELF_DESTRUCT; 1人のプレイヤーに4ポイントのダメージを与える。このカードは消滅する。(1 card)",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe7d",
      "text": " -- 備考: 複数のビットが乗っている場合、 最初の1個の爆発ですべて失われる。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe7e",
      "text": " - MOVE_CARD; 1個のカードをプログラム中の任意の場所に移動する。このカード自身を動かした場合、プログラムカウンタも一緒に移動する。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe7f",
      "text": " - SWAP_CARD; 直前の2つ、直後の2つ、または直前と直後のカードを交換する。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe80",
      "text": " -- 備考: 「3つのカード」にインクリメントされた場合、3枚のカードの順番は任意(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe81",
      "text": " - TIME DELAY; \"SKIP\"トークンを得る。このトークンは任意のタイミングで発動して現在プログラムカウンタのある命令をスキップすることができる。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe82",
      "text": " - UPGRADE; プログラム上のある位置を選び、そこに1枚のカードをドローして挿入する。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe83",
      "text": " - WORM; 他の任意のカードにあなたの色のビットをひとつ追加する。(1 card) ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe84",
      "text": " - ZAP; 他の一人のプレイヤーに1ポイントのダメージを与える。(3 cards)",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe85",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe86",
      "text": " <hr>",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe87",
      "text": " この後このルールで2戦したんだけど、やはりまずはカードにそのカードの機能を書くことが重要だ。まあそれは想定してカードに書かれる短い文章と、余裕があれば捕足として各文章はわけてみたんだが。あとSKIPトークンが強い。SKIPトークンは1個以上持てないようにするべきかもしれない。まぁ、とりあえずのところ次にするべきことは処理系の実装だと思う。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe88",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe89",
      "text": " *1238245880*Programmer's Nightmare実装",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe8a",
      "text": " ルールの拡張や改良が簡単なような設計を考える。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe8b",
      "text": " ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe8c",
      "text": " - プログラムは何枚かのカードである。サブルーチンが入るとここがとたんにややこしくなる。とりあえずサブルーチンは機能が単にランダムなカードを追加するだけなのにルールが3倍くらい複雑になるので悪だと思っている。サブルーチンを考慮しなければ単純に「プログラムはカードのリストである」って言える。 Program :: [Card]",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe8d",
      "text": " - カードには機能がついている。機能は「発動したときに何が起きるか」「発動しなかったときに何が起こるか」のセット。現状では大部分のカードは「発動しなかったときには何も起こらない」だけど、サブルーチン的なものをもう一度ルールに取り入れる場合は「発動しない場合はプログラムカウンタを3進める」とかがあると便利だから。(if (yes-or-no-p \"activate?\") then-action else-action)って感じ。a Card has-a then-action. a Card has-a else-action.",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe8e",
      "text": " - カードには「置かれているビット」がある。Bits :: [Player]。a Card has-a Bits.",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe8f",
      "text": " - then-actionやelse-actionはおそらくコンテキストを受け取ってそれを参照したり更新したするだろう。参照する値としては現在のプログラムカウンタ、実行したユーザが誰か、etc",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe90",
      "text": " -- FUTUREはPC+1とPC+2の位置のカードのthen-actionを実行するthen-actionを持つカードになる。この場合Card[PC + 1] == GOTOの場合の挙動が今までのゲームでの説明とはちょっと違う。GOTOしてZAPの場合にGOTOでPCが移動するからZAPは発動しない、っていうのが今までの説明だったけども、GOTOの時には後続のアクションをキャンセルできる設計にするよりも「GOTOでPCが変更されようが次の命令はすでにフェッチ済なので実行されるのです」の方が実装がシンプル。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe91",
      "text": " - プレイヤーはライフポイントを持っている。ライフポイントが0になると死ぬが、0になったタイミングで死亡するのではない。相打ちの判定のためにはアクションの実行後にユーザのライフポイントを判定して勝利判定をしてゲームを停止したりする「ゲームマネージャ」が走る必要がある。死亡判定はそこにまかせるべき。ユーザオブジェクトにまかせると個々のユーザオブジェクトが他のユーザオブジェクトの残っているライフポイントを知る必要が出てきてよくない。a Player has-a lifepoint. lifepoint :: Int",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe92",
      "text": " - INCREMENTやDECREMENTができるためには、カードは「変更可能な数値」を0個以上もつ必要がある。POWER_SURGE has [3, 1]。個々のカードインスタンスごとに持つ必要がある。カードはこの数値の初期値を持つ必要がある。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe93",
      "text": " - SKIPの振る舞いはルールブックでは明確に定義されていない。しかし今日のプレイである程度弱化が必要だなーと思ったので「SKIPはthen-actionで特定のカードのthen-actionを『何もしない』に一時的に書き換える」という実装がよいのではないかと思う。さて。正確には「then-actionを『then-actionをオリジナルのものに戻しPC++する』という関数に置き換える」になるのかな。",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe94",
      "text": " - DEFENDとPOINTERは難しいなぁ",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe95",
      "text": " - POINTERができるためには前回2回のアクションで誰が何ポイントのダメージを受けたかをキャッシュしておく必要がある",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe96",
      "text": " - DEFENDができるためには「DEFENDが発動されてから何アクション経過したか」を保持する必要がある",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe97",
      "text": " - ゲームマネージャーに「アクション実行後に呼ばれるイベントハンドラ」を登録できるようにする a GameManager has-a EventHandlers. EventHandlers :: [Function]",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe98",
      "text": " - プレイヤーのライフポイントは直接増減されるのではなく、DEFENDがダメージ前にフックをかけて無効化できるようにしなければならない",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe99",
      "text": " </body>",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe9a",
      "text": "",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec22aff09e00003cfe9b",
      "text": "[はてなダイアリー 2009-03-28 https://nishiohirokazu.hatenadiary.org/archive/2009/03/28]",
      "created": 1238166000,
      "updated": 1238166000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}