{
  "id": "5f9ac4b5a8969b0021d8239d",
  "title": "ABC179D",
  "created": 1603978422,
  "updated": 1603978460,
  "lines": [
    {
      "id": "5f9ac4b5a8969b0021d8239d",
      "text": "ABC179D",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4c4aff09e0000ca7725",
      "text": "[https://gyazo.com/7b170df6b0f48886ab9a41790797f20e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978437,
      "updated": 1603978441
    },
    {
      "id": "5f9ac4b6aff09e00000c723d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978456
    },
    {
      "id": "5f9ac4b6aff09e00000c723f",
      "text": "[D - Leaping Tak https://atcoder.jp/contests/abc179/tasks/abc179_d]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7240",
      "text": "\t[https://gyazo.com/39b5c5d2890f126f81169312eb00f3b3]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7241",
      "text": " しばらく悩んで、飛ばしてEへ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7242",
      "text": "\t\t悩み「え、これ範囲が広いと困るのでは？」←正しい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7243",
      "text": "　素朴にメモ化再帰DPで書いてみて案の定[TLE https://atcoder.jp/contests/abc179/submissions/16881501]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7244",
      "text": "　小さい方からループで塗りつぶすDPにしても[TLE https://atcoder.jp/contests/abc179/submissions/16882554]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7245",
      "text": "　でもそのコードを見て「あ、要するにこの最内ループを潰せばいいんだな」と気づく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7246",
      "text": "\t　[累積和]で[AC https://atcoder.jp/contests/abc179/submissions/16885434]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7247",
      "text": "\t少し綺麗にしたコード",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7248",
      "text": "  code:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7249",
      "text": "  \tdef solve(N, K, SS):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c724a",
      "text": "       count = [0] * (N + 10)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c724b",
      "text": "       count[0] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c724c",
      "text": "       accum = [0] * (N + 10)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c724d",
      "text": "       accum[0] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c724e",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c724f",
      "text": "       for pos in range(1, N):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7250",
      "text": "           ret = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7251",
      "text": "           for left, right in SS:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7252",
      "text": "               start = pos - right - 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7253",
      "text": "               end = pos - left",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7254",
      "text": "               ret += (accum[end] - accum[start])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7255",
      "text": "               ret %= MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7256",
      "text": "           count[pos] = ret",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7257",
      "text": "           accum[pos] = accum[pos - 1] + ret",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7258",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7259",
      "text": "       ret = count[N - 1]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c725a",
      "text": "       return ret % MOD",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c725b",
      "text": "\tTwitter見てたら「[いもす法]だ」とか言ってる人がいたけど、そうかな。僕はそういう意識はなかった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c725c",
      "text": "\t　DPの計算をする上で範囲の和を計算する部分が、範囲が広い時に「たくさんの数を足し合わせる」になって遅いのが解決すべき問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c725d",
      "text": "\t　そこで「今までに計算した数の和」の配列を別途作ってやる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c725e",
      "text": "\t　　これは「新しい値を前の値に足す」で作れる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c725f",
      "text": "\t　　これを[累積和]と言ってる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7260",
      "text": "\t　いざ広い範囲の和が必要になった時には、範囲終了点での累積和から範囲開始点の一つ手前の累積和を引けば得られる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7261",
      "text": "　　[https://gyazo.com/7b170df6b0f48886ab9a41790797f20e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7262",
      "text": "　Twitter見てたら[セグメント木]だと言ってる人もいる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7263",
      "text": "　　セグメント木は範囲和がO(logN)なので、ループで回して和を計算するO(N)よりは速くなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7264",
      "text": "　　　今回使った累積和はO(1)なのでさらに速い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7265",
      "text": "　　累積和は先頭からしか値を入れられないが、セグメント木では任意の位置に入れられる。この柔軟性の分だけ遅いと言えるだろう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7266",
      "text": "　　今回は先頭からDPするので任意位置に入れられる必要はなかった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4b6aff09e00000c7267",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978422,
      "updated": 1603978422
    },
    {
      "id": "5f9ac4dbaff09e0000ca7727",
      "text": "[ABC179]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978460,
      "updated": 1603978460
    },
    {
      "id": "5f9ac4dbaff09e0000ca7728",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603978460,
      "updated": 1603978460
    }
  ]
}