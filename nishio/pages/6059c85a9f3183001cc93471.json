{
  "id": "6059c85a9f3183001cc93471",
  "title": "Snap!",
  "created": 1616496732,
  "updated": 1616496901,
  "lines": [
    {
      "id": "6059c85a9f3183001cc93471",
      "text": "Snap!",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496732,
      "updated": 1616496732
    },
    {
      "id": "6059c85baff09e00008eef3f",
      "text": " >[abee2 https://twitter.com/abee2/status/1371293853358039040]: ユーザーが定義したブロックに引数はありますが、返り値はありません(それなので、関数ではなくプロシージャ)。組込関数(両端の丸いレポーターブロック、尖ったブーリアンブロック)は返り値を持ちます。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496732,
      "updated": 1616496814
    },
    {
      "id": "6059c878aff09e00008eef41",
      "text": " \t>変数を「このスプライトのみ」(インスタンス変数)にすれば、むやみにスコープが広がることをある程度は防げます。どうしても許せないようなら、許せない人たちが作ったSnap!などを使うのも一つの手です。 https://snap.berkeley.edu",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496760,
      "updated": 1616496814
    },
    {
      "id": "6059c903aff09e00008eef45",
      "text": " \t>「このスプライトのみ」の名前空間はそのスプライトなので、その中で同時に呼ぶと名前の衝突が起こります。これを回避する、つまり、リエントラントにするにはリストで管理するか、定義したブロックを呼び出す度にクローンを作る方法があります。「このスプライトのみ」はクローン毎にユニークです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496899,
      "updated": 1616496901
    },
    {
      "id": "6059c877aff09e00008eef40",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496759,
      "updated": 1616496810
    },
    {
      "id": "6059c8a9aff09e00008eef42",
      "text": " >[abee2 https://twitter.com/abee2/status/1348885973078183938]: Scratchでは関数を定義できないので(ブロック定義で作れるのは返り値を持たないプロシージャ)、再帰ひとつ書くにしてもスタックを自分で管理しないといけません。ブロックは第一級オブジェクトではなく、λ式も作れません。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496810,
      "updated": 1616496857
    },
    {
      "id": "6059c8c1aff09e00008eef44",
      "text": " \t>その目的であれば、Scratch派生で、Schemeと同等の記述力を持つSnap!をお勧めします。 Snap! Build Your Own Blocks https://snap.berkeley.edu",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496834,
      "updated": 1616496844
    },
    {
      "id": "6059c8c0aff09e00008eef43",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616496832,
      "updated": 1616496832
    }
  ]
}