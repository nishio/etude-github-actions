{
  "id": "5f995f06765737001e9a1ccc",
  "title": "PAST1N",
  "created": 1603886855,
  "updated": 1603887120,
  "lines": [
    {
      "id": "5f995f06765737001e9a1ccc",
      "text": "PAST1N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886855
    },
    {
      "id": "5f995f20aff09e0000cc9db7",
      "text": "[N - 整地 https://atcoder.jp/contests/past201912-open/tasks/past201912_n]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886881,
      "updated": 1603886881
    },
    {
      "id": "5f995f18aff09e0000cc9db5",
      "text": "[https://gyazo.com/8b99c6809b86f9fe2fee2cd6710f2b46]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886873,
      "updated": 1603886876
    },
    {
      "id": "5f995f06aff09e00002b5930",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886860
    },
    {
      "id": "5f995f06aff09e00002b5934",
      "text": "  長さCの区間を動かして、N個の区間のうち重なるものの除去コストの和を最小化したい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886855
    },
    {
      "id": "5f995f06aff09e00002b5935",
      "text": "  きちんと証明してないけど、Cの始点は、0か、他の区間の終点+1だと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886855
    },
    {
      "id": "5f995f06aff09e00002b5936",
      "text": "  各区間ごとに小さいオーダーでコストが計算できるならOK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886855
    },
    {
      "id": "5f995f06aff09e00002b5937",
      "text": "  重なる区間を探すのが、素朴にやると線形オーダー",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886855
    },
    {
      "id": "5f995f06aff09e00002b5938",
      "text": "  二つの数の組みに対して、それぞれの不等式制約を与えて、両方満たすものを列挙したい？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886855
    },
    {
      "id": "5f995f06aff09e00002b5939",
      "text": "  　列挙でも遅すぎることがあるか、例えばすべての区間が重なってるケース",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886855
    },
    {
      "id": "5f995f06aff09e00002b593a",
      "text": " 　始点と終点の(位置, ID, is始点)を混ぜてソート",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886965
    },
    {
      "id": "5f995f75aff09e00007746e8",
      "text": " 　区間Cを[しゃくとり法](大きい側)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886965,
      "updated": 1603886970
    },
    {
      "id": "5f995f81aff09e00007746ea",
      "text": " 　終点を進めて始点を踏んだらコストを足す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886978,
      "updated": 1603887037
    },
    {
      "id": "5f995faaaff09e00007746eb",
      "text": " 　始点を進めて終点を踏んだらコストを減らす",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603887018,
      "updated": 1603887052
    },
    {
      "id": "5f995fcdaff09e00007746ec",
      "text": " 　どちらを進めるかは「始点を進めて長さC未満にならないか」で判断",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603887053,
      "updated": 1603887104
    },
    {
      "id": "5f995f79aff09e00007746e9",
      "text": " 　これで線形オーダーで求まる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886970,
      "updated": 1603886970
    },
    {
      "id": "5f995f06aff09e00002b593b",
      "text": "\t公式解説OK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886855,
      "updated": 1603886929
    },
    {
      "id": "5f995f45aff09e0000cc9db8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603886917,
      "updated": 1603886917
    },
    {
      "id": "5f99600eaff09e0000cc9db9",
      "text": "[第一回 アルゴリズム実技検定]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603887118,
      "updated": 1603888860
    },
    {
      "id": "5f99600eaff09e0000cc9dba",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1603887118,
      "updated": 1603887118
    }
  ]
}