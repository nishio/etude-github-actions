{
  "id": "5e1c6f2a6c0ada0017c415e6",
  "title": "英字モードでもシフト2種類使う",
  "created": 1578921777,
  "updated": 1578983979,
  "lines": [
    {
      "id": "5e1c6f2a6c0ada0017c415e6",
      "text": "英字モードでもシフト2種類使う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921777,
      "updated": 1578929383
    },
    {
      "id": "5e1c7befaff09e00007d1064",
      "text": "2020-01-13",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578925039,
      "updated": 1578925039
    },
    {
      "id": "5e1c6f45aff09e00007d1047",
      "text": "[丸括弧・波括弧をホームポジションで打ちたい]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921798,
      "updated": 1578921809
    },
    {
      "id": "5e1c6f58aff09e00007d1048",
      "text": "英字モードでも2種類のシフトが使えれば実現できるはずだ、と[Lacaille改造]してみた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921817,
      "updated": 1578921923
    },
    {
      "id": "5e1d4f38aff09e000098fae9",
      "text": "[https://gyazo.com/5fb2cac4c146c50f115310af63f1a413]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578979128,
      "updated": 1578979131
    },
    {
      "id": "5e1d4f3aaff09e000098faea",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578979131,
      "updated": 1578979131
    },
    {
      "id": "5e1c6f31aff09e00007d1043",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921777,
      "updated": 1578979134
    },
    {
      "id": "5e1c6f31aff09e00007d1044",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921777,
      "updated": 1578921777
    },
    {
      "id": "5e1c6fe6aff09e00007d1049",
      "text": "[step1 https://github.com/nishio/Lacaille/commit/9481e93d71480a1fb1534da7d7e33299e35baef9]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921959,
      "updated": 1578922104
    },
    {
      "id": "5e1c6fe8aff09e00007d104b",
      "text": "\tとりあえずLacailleを改造してかな入力でないモードでも2種類の親指シフトで文字を変えることはできた(今はどのキーでどのシフトをしても中括弧が出るけど)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921961,
      "updated": 1578922113
    },
    {
      "id": "5e1c7080aff09e00007d1056",
      "text": " 次は自分のやりたいキーマップをどうやって指定するか、というところだな。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922113,
      "updated": 1578922113
    },
    {
      "id": "5e1c7082aff09e00007d1057",
      "text": " 一つ問題点があって、スペースキーの初回無効がオンの場合、プログラムやコマンドで頻出するスペースに二回押しが必要になって不便",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922114,
      "updated": 1578922125
    },
    {
      "id": "5e1c6fe8aff09e00007d104c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921961,
      "updated": 1578921961
    },
    {
      "id": "5e1c7096aff09e00007d1058",
      "text": "[step2 https://github.com/nishio/Lacaille/commit/0b898f8585bd9e16f1d0a948075b9c473716b56f]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922135,
      "updated": 1578922172
    },
    {
      "id": "5e1c70daaff09e00007d105a",
      "text": "\t英字モードで、右親指シフトでqを押すとQになって、左親指シフトで押すと1になる、それぞれのキーで2種類のシフトで文字を出し分ける、というところまでできた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922202,
      "updated": 1578922395
    },
    {
      "id": "5e1c719aaff09e00007d105f",
      "text": "\t\tが、これを実運用しようとするとKarabinerでorzしてるのとぶつかるので、KarabinerでやるのをやめてLacaille単体でorzするように変える必要がある。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922395,
      "updated": 1578925016
    },
    {
      "id": "5e1c70e4aff09e00007d105b",
      "text": "\t\tなおこのバージョンは自分でコンパイルしないとキーマップを変えられないのでバイナリリリースをする予定はありません。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922212,
      "updated": 1578925017
    },
    {
      "id": "5e1c7171aff09e00007d105c",
      "text": "\tMacのキーコード、なぜasdfhgzxという並びなのか謎だけど、歴史的経緯がなんかだから考えても仕方ないものなのかな？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922354,
      "updated": 1578983757
    },
    {
      "id": "5e1d614daff09e00009eea06",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578983757,
      "updated": 1578983792
    },
    {
      "id": "5e1c7171aff09e00007d105d",
      "text": "[step3 https://github.com/nishio/Lacaille/commit/0b898f8585bd9e16f1d0a948075b9c473716b56f]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922354,
      "updated": 1578922374
    },
    {
      "id": "5e1c7182aff09e00007d105e",
      "text": "\t[Lacaille単体での親指シフト]できた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922371,
      "updated": 1578922611
    },
    {
      "id": "5e1c71adaff09e00007d1060",
      "text": "\tこれを使って解説記事を書くのがゴール",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922413,
      "updated": 1578922421
    },
    {
      "id": "5e1c71d1aff09e00007d1061",
      "text": "\tstep2まではフリック入力だったが、ここからLacaille単体での親指シフト",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922449,
      "updated": 1578922596
    },
    {
      "id": "5e1c7264aff09e00007d1062",
      "text": "\tScrapboxのブラケットが入力しやすくなって嬉しい(vの左シフト)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922596,
      "updated": 1578929577
    },
    {
      "id": "5e1c72b9aff09e00007d1063",
      "text": "\tLacaille単体での親指シフトはプログラムを書き換えなくても実現できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578922681,
      "updated": 1578925522
    },
    {
      "id": "5e1c7dd2aff09e00007d1065",
      "text": "\t\t[https://gyazo.com/dead818f34f8b832ecd1249e838e7b07]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578925522,
      "updated": 1578925593
    },
    {
      "id": "5e1c7e18aff09e00007d1066",
      "text": "\t\tこの方針でやろうかと思ったがキーマップの一部がソースコード、一部がGUIでの設定(plistに保存される)という状態は気持ち悪いので全部ソースコードにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578925593,
      "updated": 1578926010
    },
    {
      "id": "5e1c7fbcaff09e00007d1067",
      "text": "\t\t\tというわけで上記のGUIは現状ただの飾り",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578926012,
      "updated": 1578926549
    },
    {
      "id": "5e1c8f7aaff09e00007d1071",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578930043,
      "updated": 1578930043
    },
    {
      "id": "5e1c81d5aff09e00007d1068",
      "text": "仕組みの解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578926549,
      "updated": 1578930046
    },
    {
      "id": "5e1c833aaff09e00007d1069",
      "text": "\tLacailleはkeyUpDownEventCallbackという300行ちょいの関数の中で色々な場合分けをしている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578926906,
      "updated": 1578930046
    },
    {
      "id": "5e1c8417aff09e00007d106a",
      "text": "\tかなモードかどうかでの分岐もここでやる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578927127,
      "updated": 1578930046
    },
    {
      "id": "5e1c847faff09e00007d106b",
      "text": "\t今回僕はこれをいじって、英字モードでもかなモード同様に「2つのシフトとの同時押し判定」を行うようにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578927231,
      "updated": 1578930046
    },
    {
      "id": "5e1c8579aff09e00007d106c",
      "text": "\t同時押しの判定には色々分岐があるが、最終的には[timerFiredの中でgetKeyDataForOya(keycode, gOya)を読んで変換後のキーを取得する https://github.com/nishio/Lacaille/commit/9481e93d71480a1fb1534da7d7e33299e35baef9#diff-79d99ad47582971be0987cf69f1b8a68L1561-R1587]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578927482,
      "updated": 1578930046
    },
    {
      "id": "5e1c872daff09e00007d106d",
      "text": "\t\tここでかなモードかどうかによる分岐を入れた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578927918,
      "updated": 1578930046
    },
    {
      "id": "5e1c6fe8aff09e00007d104f",
      "text": "\tキーマップは[1キーあたり3バイトの配列でハードコード https://github.com/nishio/Lacaille/commit/cc7e2b19097f839892e497deaf3420de882f2061#diff-79d99ad47582971be0987cf69f1b8a68R1494]してる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921961,
      "updated": 1578930046
    },
    {
      "id": "5e1c8947aff09e00007d106e",
      "text": "\t\tなので4バイト以上送信できない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578928456,
      "updated": 1578930046
    },
    {
      "id": "5e1c897baff09e00007d106f",
      "text": "\tこの3バイトはASCII文字列ではなく、keycodeの列",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578928507,
      "updated": 1578930046
    },
    {
      "id": "5e1c8a9aaff09e00007d1070",
      "text": "\t\t人間が直接編集するのは大変だから生成スクリプトを作った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578928794,
      "updated": 1578930046
    },
    {
      "id": "5e1c6fe8aff09e00007d1050",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921961,
      "updated": 1578921961
    },
    {
      "id": "5e1c6fe8aff09e00007d1051",
      "text": "今後やりたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921961,
      "updated": 1578930889
    },
    {
      "id": "5e1c92b9aff09e000098fae8",
      "text": "\t(英数)(開き角括弧)(かな)　で、[かなモードでも直接ブラケット入力]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578930874,
      "updated": 1578930896
    },
    {
      "id": "5e1c8f99aff09e00007d1072",
      "text": "\t3バイト制限を外せたら色々面白いことができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578930074,
      "updated": 1578930180
    },
    {
      "id": "5e1d620caff09e00009eea08",
      "text": "\t\t[Unicode記号を入力したい]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578983949,
      "updated": 1578983950
    },
    {
      "id": "5e1c9004aff09e00007d1073",
      "text": "\t\t16進直接入力",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578930180,
      "updated": 1578930873
    },
    {
      "id": "5e1d110aaff09e000007bdd9",
      "text": "\tキーマップをJSONにする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578963211,
      "updated": 1578983955
    },
    {
      "id": "5e1c6fe9aff09e00007d1053",
      "text": "　　https://dev.classmethod.jp/smartphone/parse-json-without-library/",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921961,
      "updated": 1578983955
    },
    {
      "id": "5e1c6fe9aff09e00007d1054",
      "text": "\t\t",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921961,
      "updated": 1578983979
    },
    {
      "id": "5e1c6fe9aff09e00007d1055",
      "text": "old",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921961,
      "updated": 1578979573
    },
    {
      "id": "5e1c6fe7aff09e00007d104a",
      "text": "[https://gyazo.com/645f9e0ce5ffb33e0bdf243f3edfbe2b]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921959,
      "updated": 1578921959
    },
    {
      "id": "5e1d4f47aff09e000098faeb",
      "text": "\t不等号をマップし損ねている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578979144,
      "updated": 1578979185
    },
    {
      "id": "5e1d4f47aff09e000098faec",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578979144,
      "updated": 1578979144
    },
    {
      "id": "5e1d4f47aff09e000098faed",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578979144,
      "updated": 1578979144
    },
    {
      "id": "5e1c6f31aff09e00007d1045",
      "text": "code::",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921777,
      "updated": 1578921777
    },
    {
      "id": "5e1c6f31aff09e00007d1046",
      "text": " [[\" !1\", \" \\\"2\", \" #3\", \" $4\", \" %5\", \"   \", \" &6\", \" '7\", \" (8\", \" )9\", \" 00\", \" =-\", \" ~^\"], [\"1Qq\", \"2Ww\", \"3Ee\", \"4Rr\", \"5Tt\", \"|&!\", \"6Yy\", \"7Uu\", \"8Ii\", \"9Oo\", \"0Pp\", \" `@\"], [\"\\u00a5Aa\", \"/Ss\", \"=Dd\", \"{Ff\", \"}Gg\", \" _-\", \"(Hh\", \")Jj\", \"\\u2423Kk\", \"\\\"Ll\", \" +;\", \" *:\"], [\"?Zz\", \"+Xx\", \"-Cc\", \"[Vv\", \"]Bb\", \"^$@\", \"*Nn\", \"_Mm\", \" <,\", \" >.\", \"#?/\"]]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578921777,
      "updated": 1578979221
    },
    {
      "id": "5e1c8d56aff09e000098fae4",
      "text": "[keylayout]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578929495,
      "updated": 1578929507
    },
    {
      "id": "5e1c8d5daff09e000098fae5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1578929502,
      "updated": 1578929502
    }
  ]
}