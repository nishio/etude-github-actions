{
  "id": "6090ec08a287e6002291a1c9",
  "title": "Hatena2011-11-02",
  "created": 1320159600,
  "updated": 1320159600,
  "lines": [
    {
      "id": "6090ec2caff09e00003d9c8b",
      "text": "Hatena2011-11-02",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c8c",
      "text": "code:hatena",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c8d",
      "text": " <body>",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c8e",
      "text": " *1320221317*NumPyで散布図を書く",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c8f",
      "text": " NumPy + Matplotlibの環境構築がうまく行かなくてほったらかしにしていたのだけどいい加減ほったらかしにしてられなくなってきたので「明確な目標を立ててそれの達成のために必要最小限だけタイムトライアルで学ぶ」というアプローチで頑張ってみた。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c90",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c91",
      "text": " ipythonとnumpyとmatplotlibはインストール済み。しかしmatplotlibの方のチュートリアルはshowを叩いても何も表示されなくてインストールできてるのかできてないのかよくわからん状況。前回はそこまでやって放置した。<a href='http://matplotlib.sourceforge.net/users/pyplot_tutorial.html'>Pyplot tutorial &#8212; Matplotlib v1.1.0 documentation</a>",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c92",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c93",
      "text": " まずはNumPyのチュートリアルをざっと眺める。<a href='http://www.scipy.org/Tentative_NumPy_Tutorial#head-864862d3f2bb4c32f04260fac61eb4ef34788c4c'>Tentative NumPy Tutorial -</a>",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c94",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c95",
      "text": " ndarrayはmatrixの親クラスで、N-dimension array。arrayで作る。import *とか、何がどこからきたかわかりにくくなるから嫌いなんだけどとりあえず従っておく。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c96",
      "text": " >|python|",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c97",
      "text": " In [1]: from numpy import *",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c98",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c99",
      "text": " In [2]: array([1, 2, 3])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c9a",
      "text": " Out[2]: array([1, 2, 3])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c9b",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c9c",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c9d",
      "text": " N次元の配列ということで、Pythonの普通のシーケンス型がxs[3]で値を取れるように、xs[3, 3]で値を取れるように拡張されている。そしてxs[:]ができるのと同様にxs[:, :]もvalid。面白い。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c9e",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9c9f",
      "text": " とりあえずベクトル演算とか試そうと思って array([1, 2, 3]).transpose() したら期待と違って変化せず。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca0",
      "text": " >|python|",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca1",
      "text": " In [3]: x = array([1, 2, 3])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca2",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca3",
      "text": " In [4]: x.transpose()",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca4",
      "text": " Out[4]: array([1, 2, 3])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca5",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca6",
      "text": " これはx.shapeを見れば理由がわかる。行列が2次元の構造でベクトルは1次元の構造だ、と思ったら間違いで、ベクトルに縦ベクトルと横ベクトルの2種類があるってのはやはりそれが2次元の構造だからなんだな。というわけで(3,)って1次元の構造だったのを(1, 3)にreshapeしたら期待通りの挙動をするようになった。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca7",
      "text": " >||",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca8",
      "text": " In [5]: x.shape",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ca9",
      "text": " Out[5]: (3,)",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9caa",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cab",
      "text": " In [6]: x.reshape(1, 3)",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cac",
      "text": " Out[6]: array([[1, 2, 3]])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cad",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cae",
      "text": " In [7]: _.transpose()",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9caf",
      "text": " Out[7]: ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb0",
      "text": " array([[1],",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb1",
      "text": "        [2],",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb2",
      "text": "        [3]])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb3",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb4",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb5",
      "text": " matrixを使えば解決なんだけどmatrixには罠がいっぱいあるという噂なので避けてみた。罠って具体的になんなんだろうね。ここらへんはc_とかr_とかで楽になるのかな。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb6",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb7",
      "text": " >|python|",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb8",
      "text": " In [14]: c_[[1, 2, 3]]",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cb9",
      "text": " Out[14]: ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cba",
      "text": " array([[1],",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cbb",
      "text": "        [2],",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cbc",
      "text": "        [3]])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cbd",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cbe",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cbf",
      "text": " arrayとスカラーで演算をするとスカラーがarrayの要素それぞれに対してブロードキャストされる。arrayの添字にはarrayを渡すこともできて、intのarrayならその添え字が選択され、boolのarrayならTrueの所が選択される。そしてそれに対して破壊的代入もできる。クール。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc0",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc1",
      "text": " >|python|",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc2",
      "text": " In [19]: x = array([1, 2, 3])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc3",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc4",
      "text": " In [20]: x > 1",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc5",
      "text": " Out[20]: array([False,  True,  True], dtype=bool)",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc6",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc7",
      "text": " In [21]: x + 1",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc8",
      "text": " Out[21]: array([2, 3, 4])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cc9",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cca",
      "text": " In [22]: x[x % 2 == 1] -= 1",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ccb",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ccc",
      "text": " In [23]: x",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ccd",
      "text": " Out[23]: array([0, 2, 2])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cce",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ccf",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd0",
      "text": " x.view()がシャローコピー、x.copy()がディープコピー。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd1",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd2",
      "text": " max, min, sumがある。cov, mean, std, varがある。svdもある。楽チン。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd3",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd4",
      "text": " さてそろそろ散布図を書こう。いろいろなチュートリアルやサンプルがいろいろ別なものをimportしていてよくわからないが、とりあえず一番シンプルなfrom pylab import *で試してみる。ref. <a href='http://d.hatena.ne.jp/pashango_p/20090618/1245333148'>pythonグラフライブラリ「matplotlib」覚書 - Pashango’s Blog</a> ちなみにimport pylabしてpylab.でTABを押してどんなメンバがあるか一応眺めておいた。917個もあって萎えた。fromfunctionはこの中にあるのか。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd5",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd6",
      "text": " >||",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd7",
      "text": " In [27]: from pylab import *",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd8",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cd9",
      "text": " In [28]: scatter(randn(100), randn(100))",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cda",
      "text": " Out[28]: <matplotlib.collections.CircleCollection at 0x103fabe90>",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cdb",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cdc",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cdd",
      "text": " randnは標準正規分布に従う乱数のarrayを作る。で、ここでshow()するとグラフのウィンドウが出る環境もあるらしいのだが、僕の環境では出ない。困って調べていると、そうかファイルに出力すればいいか。ref. <a href='http://loumo.jp/wp/archive/20100219183704/'>matplotlib でグラフを描画する。 - loumo.jp</a>",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cde",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cdf",
      "text": " >||",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce0",
      "text": " In [30]: import matplotlib",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce1",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce2",
      "text": " In [31]: matplotlib.pyplot.savefig('test.png')",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce3",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce4",
      "text": " In [32]: !open test.png",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce5",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce6",
      "text": " <img src=\"http://gyazo.com/43e25e76797368a364a92e5d7e4bffa0.png\">",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce7",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce8",
      "text": " できたできた。ちなみにいい忘れたけども僕の環境はMacOSX 10.6.8で、openはMacOSXのコマンド。ファイルを適当なアプリで開いてくれる。僕の場合プレビューが開く。で、プレビューは開いているファイルが変更された場合自動的に再読み込みをしてくれる。ん、じゃあshow()動かなくてもたいして困らないか。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ce9",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cea",
      "text": " ここでパラメータを変えてグラフを描き直してみたくなると思うんだけど、このまま描き直しても前のグラフに追記されてしまう。対話的にいろいろ試したいならグラフを消して書きなおす関数がclf()なのを覚えておく必要がある。 (clear figureの略だろうな)",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ceb",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cec",
      "text": " まとめ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ced",
      "text": " >||",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cee",
      "text": " In [1]: from numpy import *",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cef",
      "text": " In [27]: from pylab import *",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf0",
      "text": " In [30]: import matplotlib",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf1",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf2",
      "text": " In [28]: scatter(randn(100), randn(100))",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf3",
      "text": " Out[28]: <matplotlib.collections.CircleCollection at 0x103fabe90>",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf4",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf5",
      "text": " In [31]: matplotlib.pyplot.savefig('test.png')",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf6",
      "text": " In [32]: !open test.png",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf7",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf8",
      "text": " # パラメータを変えて描き直してみる",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cf9",
      "text": " In [33]: clf()",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cfa",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cfb",
      "text": " In [39]: data = c_[randn(100), randn(100)]",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cfc",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cfd",
      "text": " In [40]: data = data.dot(array([[1, 1], [0, 1]])) # 斜めにしてみる",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cfe",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9cff",
      "text": " In [42]: scatter(data[:, 0], data[:, 1])",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d00",
      "text": " Out[42]: <matplotlib.collections.CircleCollection at 0x104411290>",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d01",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d02",
      "text": " In [43]: matplotlib.pyplot.savefig('test.png')",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d03",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d04",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d05",
      "text": " <img src=\"http://gyazo.com/8f6627b2553050a9c3d13fd304a41e2c.png\">",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d06",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d07",
      "text": " 追記: scatterのオプション引数でmarker=\"+\"とかできるの書き忘れた",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d08",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d09",
      "text": " 追記: alpha=0.5を指定するとかっこいい",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d0a",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d0b",
      "text": " *1320222463*ipythonとpdbの組み合わせで人生を楽にする方法",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d0c",
      "text": " 予期しない例外が起きた場合:",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d0d",
      "text": " >||",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d0e",
      "text": " In [55]: scatter(data[:, 0], data[:, 1], marker=\".\")",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d0f",
      "text": " ---------------------------------------------------------------------------",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d10",
      "text": " (中略)",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d11",
      "text": " /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/axes.pyc in scatter(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, faceted, verts, **kwargs)",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d12",
      "text": "    5736             sym = syms.get(marker)",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d13",
      "text": "    5737             if sym is None and verts is None:",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d14",
      "text": " -> 5738                 raise ValueError('Unknown marker symbol to scatter')",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d15",
      "text": "    5739             numsides, rotation, symstyle = syms[marker]",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d16",
      "text": "    5740 ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d17",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d18",
      "text": " ValueError: Unknown marker symbol to scatter",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d19",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d1a",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d1b",
      "text": " なんだよどこに使えるシンボルの一覧があるんだよこれ(<a href='http://matplotlib.sourceforge.net/api/artist_api.html?highlight=marker#matplotlib.lines.Line2D.set_marker'>matplotlib.lines.Line2D.set_marker</a>)じゃないのかよと怒る前に焦らず騒がずpdb",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d1c",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d1d",
      "text": " >||",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d1e",
      "text": " In [56]: pdb",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d1f",
      "text": " Automatic pdb calling has been turned ON",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d20",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d21",
      "text": " In [57]: scatter(data[:, 0], data[:, 1], marker=\".\")",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d22",
      "text": " > /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/matplotlib/axes.py(5738)scatter()",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d23",
      "text": "    5737             if sym is None and verts is None:",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d24",
      "text": " -> 5738                 raise ValueError('Unknown marker symbol to scatter')",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d25",
      "text": "    5739             numsides, rotation, symstyle = syms[marker]",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d26",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d27",
      "text": " ipdb> syms",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d28",
      "text": " {'x': (4, 0.7853981633974483, 2), '^': (3, 0, 0), 'd': (4, 0, 0), 'h': (6, 0, 0), '+': (4, 0, 2), 'o': (0, 0, 3), 'p': (5, 0, 0), 's': (4, 0.7853981633974483, 0), 'v': (3, 3.141592653589793, 0), '8': (8, 0, 0), '<': (3, 4.71238898038469, 0), '>': (3, 1.5707963267948966, 0)}",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d29",
      "text": " ||<",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d2a",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d2b",
      "text": " うーん、少ない。三角形を4種類も入れなくていいから点を入れといて欲しかったなぁ。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d2c",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d2d",
      "text": " ちなみにpdbモードはqで抜けられて、もう一回pdbって打つとAuto-pdbはOFFになる。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d2e",
      "text": " ",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d2f",
      "text": " さらにちなみに「なんだよどこに使えるシンボルの一覧があるんだよ」に関してはhelp(scatter)したら書いてあったゴメンナサイ。",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d30",
      "text": " </body>",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d31",
      "text": "",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9d32",
      "text": "[はてなダイアリー 2011-11-02 https://nishiohirokazu.hatenadiary.org/archive/2011/11/02]",
      "created": 1320159600,
      "updated": 1320159600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}