{
  "id": "5ffaa609347666001cf77ab0",
  "title": "貪欲法",
  "created": 1610262027,
  "updated": 1610460098,
  "lines": [
    {
      "id": "5ffaa609347666001cf77ab0",
      "text": "貪欲法",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610262027,
      "updated": 1610262027
    },
    {
      "id": "5ffaa60caff09e00009e2594",
      "text": ">「適当な基準を用いて、局所的に最適なケースを連続して選択する」だけのアルゴリズム ([chokudai] [src https://www.itmedia.co.jp/enterprise/articles/1009/04/news002.html])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610262029,
      "updated": 1610262094
    },
    {
      "id": "5ffaa63baff09e00009e2595",
      "text": "　どのような順で選択をするか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610262076,
      "updated": 1610263037
    },
    {
      "id": "5ffaa9eaaff09e0000ce111c",
      "text": "　どのような基準が適当か",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610263019,
      "updated": 1610263019
    },
    {
      "id": "5ffaa9feaff09e0000ce111d",
      "text": "　その方法で本当に最適解が得られるか([貪欲法の証明パターン])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610263038,
      "updated": 1610445370
    },
    {
      "id": "5ffaa9e2aff09e0000ce111b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610263010,
      "updated": 1610263010
    },
    {
      "id": "5ffadb38aff09e0000669319",
      "text": "順番に関して",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275640,
      "updated": 1610338474
    },
    {
      "id": "5ffbd0a9aff09e0000a76ce2",
      "text": "　問題で与えられるケース",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610338474,
      "updated": 1610338477
    },
    {
      "id": "5ffbd0adaff09e0000a76ce3",
      "text": "　　操作を繰り返した結果の最小化など",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610338477,
      "updated": 1610338481
    },
    {
      "id": "5ffbd0b2aff09e0000a76ce4",
      "text": "　マトロイドなどの場合、大きくしたい値の大きいものからなので自明",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610338483,
      "updated": 1610338500
    },
    {
      "id": "5ffbd136aff09e0000a76ce5",
      "text": "　区間スケジューリングで「区間の終了でソート」は自明でない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610338615,
      "updated": 1610338640
    },
    {
      "id": "5ffd7124aff09e000038ebd0",
      "text": "　こういうケースでどう考えれば良いか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445093,
      "updated": 1610445107
    },
    {
      "id": "5ffc1ea7aff09e0000583669",
      "text": "　いくつか案はある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358440,
      "updated": 1610358446
    },
    {
      "id": "5ffc1fb1aff09e000058366f",
      "text": "　　最大化したい値の大きい方から",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358705,
      "updated": 1610358715
    },
    {
      "id": "5ffc1fbcaff09e0000583670",
      "text": "　　 それぞれの選択肢の利得の和を最大化するようなケースで、足し算に単調性があるから",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358716,
      "updated": 1610358788
    },
    {
      "id": "5ffbe2bbaff09e0000c0b99a",
      "text": "　　[選択肢が少ない方から貪欲]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610343100,
      "updated": 1610358449
    },
    {
      "id": "5ffd714caff09e000038ebd3",
      "text": " 　　制約が厳しい順",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445132,
      "updated": 1610445134
    },
    {
      "id": "5ffc1eb2aff09e000058366a",
      "text": "　　影響範囲の広い方から",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358451,
      "updated": 1610358461
    },
    {
      "id": "5ffc1ec1aff09e000058366b",
      "text": "　　　後で決めるものが先の選択の最適解に影響しない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358465,
      "updated": 1610358486
    },
    {
      "id": "5ffc1f97aff09e000058366e",
      "text": "　　　影響範囲包含関係の外側から内側へ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358680,
      "updated": 1610358691
    },
    {
      "id": "5ffc21d1aff09e0000583677",
      "text": "　　選択肢減少の少ない順",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610359250,
      "updated": 1610359258
    },
    {
      "id": "5ffc5113aff09e0000583679",
      "text": "　　　最も選択肢をたくさん残すものを選ぶ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610371348,
      "updated": 1610371360
    },
    {
      "id": "5ffc5120aff09e000058367a",
      "text": "　　　選択肢の集合が包含関係にあり、一番外側のものを選ぶ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610371361,
      "updated": 1610371415
    },
    {
      "id": "5ffd7169aff09e000038ebd4",
      "text": "　　数直線やグラフの端から",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445162,
      "updated": 1610445162
    },
    {
      "id": "5ffd716aaff09e000038ebd5",
      "text": "　　 見た目でわかりやすいのでこう考えがちだが、端からであることによって「選択肢減少が少ない」「選択肢が少ない」などが導かれてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445163,
      "updated": 1610445240
    },
    {
      "id": "5ffbe2bcaff09e0000c0b99b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610343100,
      "updated": 1610343101
    },
    {
      "id": "5ffadb2eaff09e0000669317",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275630,
      "updated": 1610275630
    },
    {
      "id": "5ffadb2eaff09e0000669318",
      "text": "マトロイド上の貪欲法",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275630,
      "updated": 1610327364
    },
    {
      "id": "5ffba544aff09e000080c349",
      "text": "　[マトロイド](E, F)と各要素の0以上の重みが与えられる、Fの要素であって重みの和が最大のものを得たい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610327364,
      "updated": 1610327659
    },
    {
      "id": "5ffba5daaff09e000080c34b",
      "text": "　重みの大きい順に「既に選んだ要素の集合に追加してもFの要素であるなら追加」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610327515,
      "updated": 1610327616
    },
    {
      "id": "5ffba544aff09e000080c34a",
      "text": "\t[JSC2019予選 E – Card Collector （マトロイド） | maspyのHP https://maspypy.com/atcoder-jsc2019%E4%BA%88%E9%81%B8-e-card-collector-%EF%BC%88%E3%83%9E%E3%83%88%E3%83%AD%E3%82%A4%E3%83%89%EF%BC%89]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610327365,
      "updated": 1610357228
    },
    {
      "id": "5ffc19f0aff09e00006e816a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357232,
      "updated": 1610357232
    },
    {
      "id": "5ffba52eaff09e0000de9a1f",
      "text": "[クラスカル法]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610327343,
      "updated": 1610327343
    },
    {
      "id": "5ffba52faff09e0000de9a21",
      "text": "　閉路を作らないように辺を選んで最小全域木を作る問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610327343,
      "updated": 1610327343
    },
    {
      "id": "5ffba52faff09e0000de9a22",
      "text": "　辺の長さが短い順に「既に選んだ辺と閉路を作らないなら選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610327343,
      "updated": 1610327343
    },
    {
      "id": "5ffba676aff09e000080c34d",
      "text": "　マトロイド上の貪欲法をグラフ的マトロイドに適用したもの",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610327670,
      "updated": 1610327670
    },
    {
      "id": "5ffba52faff09e0000de9a23",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610327343,
      "updated": 1610327343
    },
    {
      "id": "5ffab235aff09e0000ce111e",
      "text": "[区間スケジューリング]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610265143,
      "updated": 1610265209
    },
    {
      "id": "5ffab27aaff09e0000ce1120",
      "text": "　共通部分がないようになるべく多くの区間を選ぶ問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610265210,
      "updated": 1610265233
    },
    {
      "id": "5ffab291aff09e0000ce1121",
      "text": "　区間の終了が早い順に「既に選んだものと共通部分がないなら選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610265234,
      "updated": 1610265329
    },
    {
      "id": "5ffc516faff09e000058367b",
      "text": "　選ばれた「区間の終了」よりも前に区間の開始がある区間は今後選ぶことができない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610371440,
      "updated": 1610371476
    },
    {
      "id": "5ffc5194aff09e000058367c",
      "text": "　　つまり最も区間の終了が早いものを選ぶのは、最も選択肢を残すもの",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610371477,
      "updated": 1610371535
    },
    {
      "id": "5ffab728aff09e0000ce1129",
      "text": "　[交換しても悪化しない]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610266409,
      "updated": 1610266419
    },
    {
      "id": "5ffab735aff09e0000ce112a",
      "text": "　　[アルゴリズムとデータ構造]p.112",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610266422,
      "updated": 1610266478
    },
    {
      "id": "5ffb944eaff09e0000855a6c",
      "text": "　[区間はマトロイドではない]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610323022,
      "updated": 1610323036
    },
    {
      "id": "5ffab793aff09e0000ce112c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610266515,
      "updated": 1610266515
    },
    {
      "id": "5ffab994aff09e0000ce112f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610267031,
      "updated": 1610327341
    },
    {
      "id": "5ffad817aff09e0000669306",
      "text": "[ABC076B]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610274842,
      "updated": 1610274853
    },
    {
      "id": "5ffad81caff09e0000669307",
      "text": " https://atcoder.jp/contests/abc076/tasks/abc076_b",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610274845,
      "updated": 1610274846
    },
    {
      "id": "5ffad826aff09e0000669308",
      "text": " 数1に対して2通りの操作のどちらかを行う。操作をN回行った結果の最小値が欲しい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610274855,
      "updated": 1610274907
    },
    {
      "id": "5ffad85caff09e0000669309",
      "text": " 2つの操作のどちらも「操作前の数が小さければ結果も小さい」という性質を持っている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610274908,
      "updated": 1610274943
    },
    {
      "id": "5ffad881aff09e000066930a",
      "text": " 各操作ごとに結果の小さくなる方を選べば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610274945,
      "updated": 1610274974
    },
    {
      "id": "5ffab797aff09e0000ce112d",
      "text": " 　[現在が良いほど未来も良い]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610266519,
      "updated": 1610274986
    },
    {
      "id": "5ffab7a6aff09e0000ce112e",
      "text": " 　　単調性",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610266535,
      "updated": 1610274986
    },
    {
      "id": "5ffad8abaff09e000066930b",
      "text": " 時間軸順に「操作の結果が小さい方を選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610274987,
      "updated": 1610275021
    },
    {
      "id": "5ffad8d3aff09e000066930c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275028,
      "updated": 1610275028
    },
    {
      "id": "5ffad8d4aff09e000066930d",
      "text": "コインの問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275028,
      "updated": 1610275137
    },
    {
      "id": "5ffad941aff09e0000669310",
      "text": "　ある金額をコインで支払いたい、コインの枚数を最小化したい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275137,
      "updated": 1610275155
    },
    {
      "id": "5ffad957aff09e0000669311",
      "text": "　コインの金額が手前のコインの倍数である、という性質がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275160,
      "updated": 1610275718
    },
    {
      "id": "5ffad97baff09e0000669312",
      "text": "　大きいコインで払えるだけ払えばいい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275195,
      "updated": 1610275204
    },
    {
      "id": "5ffad984aff09e0000669313",
      "text": "　コインが大きい順に「払えるだけ払う」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275205,
      "updated": 1610275226
    },
    {
      "id": "5ffb94d2aff09e0000855a6d",
      "text": "　コインAがコインBの倍数である場合、コインAを1枚減らすことによる金額の不足をBで払う方法が2枚以上のBを使うしかなく、必ず枚数が増える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610323154,
      "updated": 1610323334
    },
    {
      "id": "5ffb9586aff09e0000855a6e",
      "text": "　　倍数でない場合、例えば5,4,1で8を払う場合、5を1枚減らして、1も3減らして4を2枚で払うことができて-2枚、というパターンがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610323334,
      "updated": 1610323436
    },
    {
      "id": "5ffb95ecaff09e0000855a6f",
      "text": "　　コインの金額が倍数であることで「あまり」がゼロであり、より小さなコインの枚数を気にしなくて良くなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610323436,
      "updated": 1610323498
    },
    {
      "id": "5ffb962eaff09e0000855a70",
      "text": "  15,5,3,1みたいなケースも9で同じ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610323503,
      "updated": 1610323667
    },
    {
      "id": "5ffad8d4aff09e000066930e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275028,
      "updated": 1610275028
    },
    {
      "id": "5ffad8d4aff09e000066930f",
      "text": "[POJ3617]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275028,
      "updated": 1610275298
    },
    {
      "id": "5ffad9e3aff09e0000669314",
      "text": " 文字列Sの先頭もしくは末尾の1文字を取ってTに追加していく、Tを辞書順最小にしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275299,
      "updated": 1610275397
    },
    {
      "id": "5ffada45aff09e0000669315",
      "text": " 辞書順という基準に「先に出てくる文字が小さければ後の文字がどうであれ辞書順で小さい」という性質がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275397,
      "updated": 1610275549
    },
    {
      "id": "5ffadb15aff09e0000669316",
      "text": " Sを反転したS'を用意する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275605,
      "updated": 1610275761
    },
    {
      "id": "5ffadbb1aff09e000066931a",
      "text": " 時間軸順に「SとS'のうち辞書順で小さいものを選び先頭文字を取る」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275761,
      "updated": 1610275840
    },
    {
      "id": "5ffab2f3aff09e0000ce1123",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610265331,
      "updated": 1610265331
    },
    {
      "id": "5ffadc33aff09e000066931b",
      "text": "[POJ3069]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275892,
      "updated": 1610275904
    },
    {
      "id": "5ffadc3daff09e000066931e",
      "text": " 数直線上にN個の点がある。そのうちのいくつかを選び「選ばれた点から距離R以内の範囲」に全ての点が含まれるようにしたい。選ぶ点の数を最小化せよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275901,
      "updated": 1610275989
    },
    {
      "id": "5ffadc95aff09e000066931f",
      "text": " 数直線を左から順に「既に選んだ点によって覆われてない点を覆える最も右の点を選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275989,
      "updated": 1610276136
    },
    {
      "id": "5ffadc34aff09e000066931c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275892,
      "updated": 1610275892
    },
    {
      "id": "5ffade5daff09e0000669322",
      "text": "[ダイクストラ法]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276446,
      "updated": 1610276469
    },
    {
      "id": "5ffade76aff09e0000669325",
      "text": "　最短経路を求める問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276470,
      "updated": 1610276585
    },
    {
      "id": "5ffadee9aff09e0000669326",
      "text": "　訪問済み頂点を始点1つで初期化する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276585,
      "updated": 1610276619
    },
    {
      "id": "5ffadf0baff09e0000669327",
      "text": "　「未訪問で、訪問済み頂点から1本の辺で到達可能な頂点をその始点からの距離が短い順」に「選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276619,
      "updated": 1610276766
    },
    {
      "id": "5ffadfc8aff09e0000669328",
      "text": "　辺の距離が正であることが前提",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276808,
      "updated": 1610276830
    },
    {
      "id": "5ffadfdeaff09e0000669329",
      "text": "　辺の距離が正なので「未訪問で、訪問済み頂点から1本の辺で到達可能な頂点のうち始点からの距離が最も短いV」は、他の未到達頂点を経由する最短経路を持たないため",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276831,
      "updated": 1610276952
    },
    {
      "id": "5ffae057aff09e000066932a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276952,
      "updated": 1610276957
    },
    {
      "id": "5ffae1d4aff09e000066932c",
      "text": "[AGC009A] ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277333,
      "updated": 1610277389
    },
    {
      "id": "5ffae20daff09e000066932d",
      "text": " 二つの数列A,Bが与えられる、i番目のボタンを押すとA0〜Aiがインクリメントされる。全てのiについてAiをBiの倍数にしたい。ボタンを押す回数を最小化せよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277389,
      "updated": 1610277480
    },
    {
      "id": "5ffae2aeaff09e000066932e",
      "text": " iの大きい順に「AiとBiが条件を満たす最小限の回数押す」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277551,
      "updated": 1610277614
    },
    {
      "id": "5ffbd2ceaff09e0000a76ce6",
      "text": " 影響範囲の包含関係で、iの大きなものは小さなものを包含するので、小さなものは大きなものに影響を与えない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339022,
      "updated": 1610339061
    },
    {
      "id": "5ffade5eaff09e0000669323",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276446,
      "updated": 1610276446
    },
    {
      "id": "5ffae2fdaff09e000066932f",
      "text": "ナップサックっぽい問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277630,
      "updated": 1610277805
    },
    {
      "id": "5ffae3adaff09e0000669331",
      "text": "　商品が何種類かあり、その価値と個数が与えられる、商品がN個入るナップサックがある、ナップサックに入れた商品の価値を最大化せよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277805,
      "updated": 1610277919
    },
    {
      "id": "5ffae41faff09e0000669332",
      "text": "　いわゆるナップサック問題と違って「1個の分割できない商品の重さ」ではなく「個数」なので分割ができるところが重要",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277920,
      "updated": 1610277991
    },
    {
      "id": "5ffae467aff09e0000669333",
      "text": "　価値の大きい順に「あるだけ選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277991,
      "updated": 1610278010
    },
    {
      "id": "5ffae2fdaff09e0000669330",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277630,
      "updated": 1610277630
    },
    {
      "id": "5ffae55faff09e0000669334",
      "text": "https://www.itmedia.co.jp/enterprise/articles/1009/04/news002_3.html",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610278243,
      "updated": 1610278261
    },
    {
      "id": "5ffae575aff09e0000669336",
      "text": "　二つの頂点集合A,Bと、その頂点の位数が与えられる。条件を満たす二部グラフがあるか判定せよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610278261,
      "updated": 1610278397
    },
    {
      "id": "5ffae5a2aff09e0000669337",
      "text": "　Aの適当な順に「Bから最も残り位数の高い頂点を選び接続する」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610278306,
      "updated": 1610278454
    },
    {
      "id": "5ffc21afaff09e0000583675",
      "text": "　最も選択肢を減らさない行動",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610359216,
      "updated": 1610359229
    },
    {
      "id": "5ffae55faff09e0000669335",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610278243,
      "updated": 1610278243
    },
    {
      "id": "5ffbd30eaff09e0000a76ce7",
      "text": "[ARC111]C",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339086,
      "updated": 1610339499
    },
    {
      "id": "5ffbd4aaaff09e0000c0b98c",
      "text": "\t人が荷物を持っている、荷物を交換して本来の持ち主が持ってる状態にしたい。人によって持てる最大の重さが異なり、重いものを持つとその後交換できなくなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339499,
      "updated": 1610340067
    },
    {
      "id": "5ffbd50caff09e0000a76ce8",
      "text": "\t荷物を重い順に「本来の持ち主と交換」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339597,
      "updated": 1610339637
    },
    {
      "id": "5ffc210faff09e0000583671",
      "text": "\t「本来の持ち主と交換」は常にできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610359056,
      "updated": 1610359153
    },
    {
      "id": "5ffc2171aff09e0000583673",
      "text": "\t　それによって受け手が行動不能になるかもしれないが、既に本来の荷物を持ってるから問題ない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610359153,
      "updated": 1610359153
    },
    {
      "id": "5ffc2173aff09e0000583674",
      "text": "\t　送り手が受け取るものは常に「持っていたものより軽い」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610359155,
      "updated": 1610359178
    },
    {
      "id": "5ffdaba8aff09e0000f4461f",
      "text": "\t　それ以外の順番だと「戻ってきたものが重すぎる」が発生しうる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610460073,
      "updated": 1610460098
    },
    {
      "id": "5ffc216eaff09e0000583672",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610359151,
      "updated": 1610359181
    },
    {
      "id": "5ffbd53daff09e0000a76ce9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339645,
      "updated": 1610339674
    },
    {
      "id": "5ffbd55aaff09e0000a76cea",
      "text": "二択の差でソート",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339675,
      "updated": 1610339816
    },
    {
      "id": "5ffbd5f1aff09e0000a76ceb",
      "text": "　選択肢A/Bの利得がそれぞれAi/Bi、K個Aを選ぶ、利得を最大化したい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339825,
      "updated": 1610339902
    },
    {
      "id": "5ffbd63eaff09e0000a76cec",
      "text": "　「Ai-Biの大きい順」にK個「Aを選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339902,
      "updated": 1610339944
    },
    {
      "id": "5ffbd669aff09e0000a76ced",
      "text": "　variant: [ABC187]D",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339946,
      "updated": 1610340075
    },
    {
      "id": "5ffbd4abaff09e0000c0b98d",
      "text": "\t\t「Aを選ぶ」したAi+Bi, しない時 -Ai, 最小の選択で合計を正にしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610339499,
      "updated": 1610340626
    },
    {
      "id": "5ffbd6eeaff09e0000c0b98e",
      "text": "\t\t「2*Ai+Biの大きい順」に合計が正になるまで「Aを選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610340079,
      "updated": 1610340648
    },
    {
      "id": "5ffbd6eeaff09e0000c0b98f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610340079,
      "updated": 1610340079
    },
    {
      "id": "5ffbdadeaff09e0000c0b990",
      "text": "[ARC110C]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341086,
      "updated": 1610341086
    },
    {
      "id": "5ffbdadeaff09e0000c0b991",
      "text": "\t与えられた列を昇順に並び替える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341087,
      "updated": 1610341119
    },
    {
      "id": "5ffbdaf4aff09e0000a76cee",
      "text": "\t最も小さい値を先頭に持ってくる、残りの部分はその値を無視して[一回り小さい同じ形の問題]になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341108,
      "updated": 1610342230
    },
    {
      "id": "5ffbdb2eaff09e0000a76cef",
      "text": "\t値が小さい順に「先頭に持ってくる」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341166,
      "updated": 1610341185
    },
    {
      "id": "5ffbdbbaaff09e0000c0b992",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341307,
      "updated": 1610341307
    },
    {
      "id": "5ffbdecfaff09e0000a76cf0",
      "text": "数のペアの差の最小化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610342101,
      "updated": 1610342105
    },
    {
      "id": "5ffbded9aff09e0000a76cf1",
      "text": "　偶数個の数がある、2個ずつペアにして、差を最小化したい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610342106,
      "updated": 1610342129
    },
    {
      "id": "5ffbdef1aff09e0000a76cf2",
      "text": "　値が小さい順に「次の数とペアにする」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610342129,
      "updated": 1610342159
    },
    {
      "id": "5ffbdf12aff09e0000a76cf3",
      "text": "　最小の数を次の数以外とペアにした場合、必ず損をする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610342163,
      "updated": 1610342199
    },
    {
      "id": "5ffbdf5aaff09e0000a76cf4",
      "text": "　ペアを取り除いたものは[一回り小さい同じ形の問題]になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610342234,
      "updated": 1610445410
    },
    {
      "id": "5ffbdf6baff09e0000a76cf5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610342251,
      "updated": 1610342252
    },
    {
      "id": "5ffbdfd0aff09e0000c0b999",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610342352,
      "updated": 1610342352
    },
    {
      "id": "5ffbdbbaaff09e0000c0b993",
      "text": "[AGC049B]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341307,
      "updated": 1610341310
    },
    {
      "id": "5ffd732faff09e000038ebd6",
      "text": "　0/1の列S,Tが与えられる、Sに対して、1を一つ左にずらすか、2つ並んだ1を0にするかのどちらかの操作を行える、最小手数でTに一致させよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445616,
      "updated": 1610445733
    },
    {
      "id": "5ffd73a6aff09e000038ebd7",
      "text": "　Sの前から順に「Tの自分より左に未解決の1があるならずらす、ないなら消す」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445734,
      "updated": 1610445833
    },
    {
      "id": "5ffd7409aff09e000038ebd8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445833,
      "updated": 1610445834
    },
    {
      "id": "5ffbdbbeaff09e0000c0b995",
      "text": "[ABC103D]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341310,
      "updated": 1610341918
    },
    {
      "id": "5ffd7459aff09e000038ebd9",
      "text": "　区間がたくさん与えられる、ある点を指定すると、その点を含む区間が全て取り除かれる。最小個数の点ですべての区間を取り除きたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445914,
      "updated": 1610445981
    },
    {
      "id": "5ffd749daff09e000038ebda",
      "text": "　区間の終了の早い順に「終了の直前を選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610445982,
      "updated": 1610446035
    },
    {
      "id": "5ffd74d4aff09e000038ebdb",
      "text": "　これは「終了が最も早い区間」を取り除く方法の中で、一番他の区間への影響が大きい選択肢である",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610446036,
      "updated": 1610446154
    },
    {
      "id": "5ffd74d4aff09e000038ebdc",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610446036,
      "updated": 1610446036
    },
    {
      "id": "5ffbdbbeaff09e0000c0b996",
      "text": "[ABC023D]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341310,
      "updated": 1610448725
    },
    {
      "id": "5ffd7f55aff09e000038ebe4",
      "text": "　正の数列H,Sが与えられる、添え字iがKi番目に選ばれ、H+SKの最大値を最小化したい、Kを構成せよ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610448726,
      "updated": 1610448898
    },
    {
      "id": "5ffd8002aff09e000038ebe5",
      "text": "　Hの順でもSの順でもダメ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610448899,
      "updated": 1610448995
    },
    {
      "id": "5ffd8063aff09e000038ebe7",
      "text": "　最大値の上界Xを導入して実現できるかどうかの判定問題にする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610448995,
      "updated": 1610448995
    },
    {
      "id": "5ffd802daff09e000038ebe6",
      "text": "　(X-H)/Sの小さい順に「選択」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610448941,
      "updated": 1610449040
    },
    {
      "id": "5ffd8090aff09e000038ebe8",
      "text": "　意味合い: Xを超えない選択肢の少ない順に選択",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610449040,
      "updated": 1610449121
    },
    {
      "id": "5ffd8107aff09e000038ebe9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610449159,
      "updated": 1610449159
    },
    {
      "id": "5ffd8238aff09e000038ebf1",
      "text": "[和の比率の最大化]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610449465,
      "updated": 1610449465
    },
    {
      "id": "5ffd8238aff09e000038ebf2",
      "text": "　正の数列Ai,Biがある、添え字をK個選んで、ABそれぞれの和の比率を最大化したい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610449465,
      "updated": 1610449465
    },
    {
      "id": "5ffd8238aff09e000038ebf3",
      "text": "　比率がX以上かどうかの判定問題にすれば式変形によって(Bi-XAi)の単なる和になる、これの最大化は大きい方から選ぶ貪欲法でOK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610449465,
      "updated": 1610449465
    },
    {
      "id": "5ffd8238aff09e000038ebf4",
      "text": "\t(Bi-XAi)の大きい順に「選ぶ」を繰り返す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610449465,
      "updated": 1610449465
    },
    {
      "id": "5ffd823caff09e000038ebf5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610449469,
      "updated": 1610449469
    },
    {
      "id": "5ffd7766aff09e000038ebe3",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610446695,
      "updated": 1610446695
    },
    {
      "id": "5ffd775aaff09e000038ebe1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610446682,
      "updated": 1610446683
    },
    {
      "id": "5ffbdbbaaff09e0000c0b994",
      "text": "---",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610341307,
      "updated": 1610341308
    },
    {
      "id": "5ffd8547aff09e0000746989",
      "text": "たくさんの問題へのリンク",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610450247,
      "updated": 1610450255
    },
    {
      "id": "5ffd854eaff09e000074698a",
      "text": "https://www.yasu-p.com/entry/python-algorithm-2-2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610450255,
      "updated": 1610450256
    },
    {
      "id": "5ffd854faff09e000074698b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610450256,
      "updated": 1610450256
    },
    {
      "id": "5ffadd90aff09e0000669320",
      "text": "POJ3253",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276240,
      "updated": 1610276248
    },
    {
      "id": "5ffadd98aff09e0000669321",
      "text": " 蟻本p.49",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610276248,
      "updated": 1610276258
    },
    {
      "id": "5ffae1ceaff09e000066932b",
      "text": " ちょっと複雑",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610277326,
      "updated": 1610277331
    },
    {
      "id": "5ffadc34aff09e000066931d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610275892,
      "updated": 1610275892
    },
    {
      "id": "5ffbab83aff09e0000c0b988",
      "text": "[単位時間ジョブスケジューリング問題]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610328964,
      "updated": 1610328985
    },
    {
      "id": "5ffbab83aff09e0000c0b989",
      "text": "\thttps://archive.org/search.php?query=http%3A%2F%2Ftopcoder.g.hatena.ne.jp%2Fspaghetti_source%2F20121103%2F1351911603",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610328964,
      "updated": 1610328986
    },
    {
      "id": "5ffbab83aff09e0000c0b98a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610328964,
      "updated": 1610328964
    },
    {
      "id": "5ffc1a86aff09e00006e816b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357382,
      "updated": 1610357382
    },
    {
      "id": "5ffc1a86aff09e00006e816c",
      "text": "[AtCoder D – ほんとうのたたかい（ARC019） | maspyのHP https://maspypy.com/atcoder-d-%E3%81%BB%E3%82%93%E3%81%A8%E3%81%86%E3%81%AE%E3%81%9F%E3%81%9F%E3%81%8B%E3%81%84%EF%BC%88arc019%EF%BC%89]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357382,
      "updated": 1610357387
    },
    {
      "id": "5ffc1a88aff09e00006e816d",
      "text": "\t[乱択＋貪欲]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357384,
      "updated": 1610357415
    },
    {
      "id": "5ffc1aa8aff09e00006e816f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357416,
      "updated": 1610357416
    },
    {
      "id": "5ffc1aebaff09e00006e8173",
      "text": "[AtCoder 参加感想 2020/04/19:ABC 163 | maspyのHP https://maspypy.com/atcoder-%E5%8F%82%E5%8A%A0%E6%84%9F%E6%83%B3-2020-04-13abc-163]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357484,
      "updated": 1610357500
    },
    {
      "id": "5ffc1ad4aff09e00006e8171",
      "text": "\t貪欲法の正当性の検証的なやり方で2 択に絞り込まれる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357461,
      "updated": 1610357479
    },
    {
      "id": "5ffc1aeaaff09e00006e8172",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357483,
      "updated": 1610357483
    },
    {
      "id": "5ffc1b4caff09e00006e8174",
      "text": "[AtCoder 参加感想 2019/02/16:ABC 155 | maspyのHP https://maspypy.com/atcoder-%E5%8F%82%E5%8A%A0%E6%84%9F%E6%83%B3-2019-02-16abc-155#toc4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357581,
      "updated": 1610357586
    },
    {
      "id": "5ffc1b4caff09e00006e8175",
      "text": "\t桁DPで解いたが貪欲でもできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357581,
      "updated": 1610357624
    },
    {
      "id": "5ffc1b77aff09e00006e8176",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610357624,
      "updated": 1610358164
    },
    {
      "id": "5ffc1d93aff09e00006e8177",
      "text": "[ABC171 F]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358164,
      "updated": 1610358207
    },
    {
      "id": "5ffc1d93aff09e00006e8178",
      "text": "\t[AtCoder ABC 171 F - Strivore (青色, 600 点) - けんちょんの競プロ精進記録 https://drken1215.hatenablog.com/entry/2020/06/27/125500]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358164,
      "updated": 1610358226
    },
    {
      "id": "5ffc1dc2aff09e00006e8179",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610358211,
      "updated": 1610358211
    },
    {
      "id": "5ffab4aaaff09e0000ce1124",
      "text": "貪欲法で最適解が導ける問題とそうでない問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610265775,
      "updated": 1610265789
    },
    {
      "id": "5ffab4bfaff09e0000ce1125",
      "text": "　コイン問題「大きな額のコインから使えるだけ使う」で最適になるコインとそうでないコイン",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610265792,
      "updated": 1610265832
    },
    {
      "id": "5ffab4e8aff09e0000ce1126",
      "text": "　　1,4,5はダメ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610265832,
      "updated": 1610265843
    },
    {
      "id": "5ffab64caff09e0000ce1127",
      "text": "　[マトロイド]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610266193,
      "updated": 1610266211
    },
    {
      "id": "5ffab271aff09e0000ce111f",
      "text": "　[離散凸性]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610265202,
      "updated": 1610266222
    },
    {
      "id": "5ffab665aff09e0000ce1128",
      "text": "\t[マトロイドの凸構造 - けんちょんの競プロ精進記録 https://drken1215.hatenablog.com/entry/20121212/1355280288]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610266213,
      "updated": 1610267273
    },
    {
      "id": "5ffaba88aff09e00009e2597",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610267273,
      "updated": 1610267273
    },
    {
      "id": "5ffaba89aff09e00009e2598",
      "text": "\t離散最適化基礎論 第 5 回 マトロイドとグラフの全域木",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610267273,
      "updated": 1610271472
    },
    {
      "id": "5ffaba88aff09e00009e2596",
      "text": "\t\thttp://dopal.cs.uec.ac.jp/okamotoy/lect/2015/matroid/handout05.pdf",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610267273,
      "updated": 1610271481
    },
    {
      "id": "5ffacaf9aff09e00009e259b",
      "text": "\thttps://www.jaist.ac.jp/~uehara/course/2014/i431/pdf/04greedy.pdf",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610271481,
      "updated": 1610271508
    },
    {
      "id": "5ffacb14aff09e00009e259d",
      "text": "\thttp://agent.inf.kyushu-u.ac.jp/~yokoo/lecture/DA2_5A.pdf",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610271508,
      "updated": 1610271530
    },
    {
      "id": "5ffacb2aaff09e00009e259e",
      "text": "\thttp://www.iip.ist.i.kyoto-u.ac.jp/member/keisuke/resources/sec16_2.pdf",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610271531,
      "updated": 1610271567
    },
    {
      "id": "5ffacb4faff09e00009e25a0",
      "text": "\t離散凸解析の理論とアルゴリズム",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610271567,
      "updated": 1610271599
    },
    {
      "id": "5ffacb6daff09e00009e25a2",
      "text": "\t http://www.orsj.or.jp/archive2/or58-06/or58_6_332.pdf",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610271597,
      "updated": 1610271911
    },
    {
      "id": "5ffacb4daff09e00009e259f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1610271566,
      "updated": 1610271566
    }
  ]
}