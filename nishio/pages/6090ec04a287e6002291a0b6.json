{
  "id": "6090ec04a287e6002291a0b6",
  "title": "Hatena2010-05-20",
  "created": 1274281200,
  "updated": 1274281200,
  "lines": [
    {
      "id": "6090ec28aff09e00003d6190",
      "text": "Hatena2010-05-20",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6191",
      "text": "code:hatena",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6192",
      "text": " <body>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6193",
      "text": " *1274312922*[Haskell]昨日の続き",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6194",
      "text": " >>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6195",
      "text": " @pi8027 あともっと fold とか使ってくれないと読めません。本物の Haskeller は再帰もラムダ式もあまり使わない!",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6196",
      "text": " @pi8027 countM a l = sequence l >>= return.length.filter (a==)",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6197",
      "text": " <<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6198",
      "text": " なるほど。sequence で[IO Int]がIO [Int]になって、 >>= f で fに[Int]が渡って、filterしてlengthしてreturnする、と。　",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6199",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d619a",
      "text": " *1274364170*[Haskell]ポイントフリー",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d619b",
      "text": " Twitterから転載",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d619c",
      "text": " >>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d619d",
      "text": " ラムダ使わずにプログラム書くの難しい。一つの値を名前に束縛せずに複数箇所で使うってどうやるんだ。Sコンビネータ的なものが用意されてる？",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d619e",
      "text": " <<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d619f",
      "text": " >>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a0",
      "text": " Control.ApplicativeにSコンビネータあった",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a1",
      "text": " →Control.Applicativeの<*>がSコンビネータだと書いている人がいるがぜんぜん違うように見える。",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a2",
      "text": " →Control.Applicativeの<*>がSコンビネータであることは挙動で確認したが、本来なんのためのものなのかとか、なんでこれでSコンビネータになるのかとかがわからない",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a3",
      "text": " →<a href='http://practical-scheme.net/chaton/haskell-ja/a/2009/11/02'>haskell-ja > Archives > 2009/11/02</a>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a4",
      "text": " <<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a5",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a6",
      "text": " >|haskell|",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a7",
      "text": " square = (*)<*>id -- \\x -> x * x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a8",
      "text": " ||<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61a9",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61aa",
      "text": " >|haskell|",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ab",
      "text": " cube = (((*).((*)<*>id))<*>id) -- \\x -> x * x * x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ac",
      "text": " ||<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ad",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ae",
      "text": " >|haskell|",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61af",
      "text": " import Control.Applicative",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b0",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b1",
      "text": " if' True  x _ = x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b2",
      "text": " if' False _ y = y",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b3",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b4",
      "text": " fib = (flip(if'.(< 2))1)<*>((+).fib.(-1 +)<*>fib.(-2 +))",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b5",
      "text": " main = print $ take 10 $ map fib [1..]",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b6",
      "text": " ||<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b7",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b8",
      "text": " *1274365146*[Haskell]続き",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61b9",
      "text": " >|haskell|",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ba",
      "text": "   [count_n (next_turn game)",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61bb",
      "text": "    [(step_game game play) >> (while_game_finished select_ai_for_monte) | _ <- [1..100]]",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61bc",
      "text": "        | play <- hands]",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61bd",
      "text": " ||<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61be",
      "text": " この時点でそれぞれの着手選択肢について着手した後ゲームが終わるまで100回実行した結果、勝ったのが自分である回数のリストが[IO Int]で得られる。",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61bf",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c0",
      "text": " このうち、そのIntの値が最大であるような着手を選びたい。着手のリストは[Play]だ。",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c1",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c2",
      "text": " IOの内部を触ることを考える。まずsequence [m a] -> m [a]で IO [Int] に変換する。で、>>=で[Int]を取る関数をbindすればよい。この関数は[Int]を取って、そのIntが最大であるようなPlayを返せばよい。",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c3",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c4",
      "text": " >|haskell|",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c5",
      "text": " get_best :: [Int] -> [Play] -> Play",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c6",
      "text": " --get_best scores hands = snd $ foldl1 ((<*>) ((<*>).((flip.(flip if')))) (flip ((.).((>).fst)) fst)) $ zip scores hands",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c7",
      "text": " get_best scores hands = snd $ foldl1 (\\x y -> (if ((fst x) > (fst y)) then x else y)) $ zip scores hands",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c8",
      "text": " ||<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61c9",
      "text": " ラムダを消してみたらかえって汚くなったのでやめた。",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ca",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61cb",
      "text": " >|haskell|",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61cc",
      "text": " -- 単純モンテカルロ(各選択肢について100回ずつランダムに最後まで",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61cd",
      "text": " -- プレイしてから一番成績の良かったものを選ぶ)",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ce",
      "text": " monte_choice :: Think",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61cf",
      "text": " monte_choice game hands ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d0",
      "text": "     = (liftM2 get_best) ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d1",
      "text": "       (sequence [count_n (next_turn game)",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d2",
      "text": "                  [do_random_playout game play ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d3",
      "text": "                   | _ <- [1..100]]",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d4",
      "text": "                  | play <- hands]) ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d5",
      "text": "       (return hands)",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d6",
      "text": " ||<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d7",
      "text": " プレイ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d8",
      "text": " >||",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61d9",
      "text": " next turn: x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61da",
      "text": " x . .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61db",
      "text": " . . .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61dc",
      "text": " . . .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61dd",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61de",
      "text": " next turn: o",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61df",
      "text": " Choice a hand: [(0,1),(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8)]3",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e0",
      "text": " x . .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e1",
      "text": " . o .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e2",
      "text": " . . .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e3",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e4",
      "text": " next turn: x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e5",
      "text": " x . x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e6",
      "text": " . o .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e7",
      "text": " . . .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e8",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61e9",
      "text": " next turn: o",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ea",
      "text": " Choice a hand: [(0,1),(1,3),(2,5),(3,6),(4,7),(5,8)]0",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61eb",
      "text": " x o x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ec",
      "text": " . o .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ed",
      "text": " . . .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ee",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ef",
      "text": " next turn: x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f0",
      "text": " x o x",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f1",
      "text": " . o .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f2",
      "text": " . x .",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f3",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f4",
      "text": " next turn: o",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f5",
      "text": " Choice a hand: [(0,3),(1,5),(2,6),(3,8)]",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f6",
      "text": " ||<",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f7",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f8",
      "text": " 高々100回試行しているだけだけど、ゲームがゲームなだけに全くもって危なげないプレイをしている。",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61f9",
      "text": " ",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61fa",
      "text": " さて次はモンテカルロ木探索だ。データを貯めておくために木とか辞書とかつくって破壊的にゴリゴリ値を変更したいぞ。えっ。破壊的にゴリゴリ？(Haskellを選んだことを少し後悔している)",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61fb",
      "text": " </body>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61fc",
      "text": " <comments>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61fd",
      "text": " <comment>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61fe",
      "text": " <username>pi8027</username>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d61ff",
      "text": " <body>(<*>) :: (Applicative f) => f (a -> b) -> f a -> f b<br>ですが、<br>instance Applicative ((->) a)<br>が標準であるので、それが適用されている場合、<br>(<*>) :: (a -> b -> c) -> (a -> b) -> a -> c<br>となります。</body>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6200",
      "text": " <timestamp>1274365974</timestamp>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6201",
      "text": " </comment>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6202",
      "text": " </comments>",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6203",
      "text": "",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec28aff09e00003d6204",
      "text": "[はてなダイアリー 2010-05-20 https://nishiohirokazu.hatenadiary.org/archive/2010/05/20]",
      "created": 1274281200,
      "updated": 1274281200,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}