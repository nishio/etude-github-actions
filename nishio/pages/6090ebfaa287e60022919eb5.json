{
  "id": "6090ebfaa287e60022919eb5",
  "title": "Hatena2008-09-21",
  "created": 1221922800,
  "updated": 1221922800,
  "lines": [
    {
      "id": "6090ec1faff09e00003cc4d4",
      "text": "Hatena2008-09-21",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4d5",
      "text": "code:hatena",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4d6",
      "text": " <body>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4d7",
      "text": " *1221957113* 情報科学若手の会2日目日記",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4d8",
      "text": " f:id:nishiohirokazu:20080921092548j:image",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4d9",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4da",
      "text": " 2階の窓からみた露天風呂。アクセス修飾子はpublic。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4db",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4dc",
      "text": " FPGAで囲碁専用H/Wを作る話。CrazyStone 4コア5万プレイアウトで1sec。FPGAは300MHzくらいなので秒感1万回とかを目指す。FPGAは小さいのでたくさん積むことが出来る。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4dd",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4de",
      "text": " CPLD FPGA",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4df",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e0",
      "text": " ASIC > (FPGA/CPLD/DRP) > MPU 汎用性",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e1",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e2",
      "text": " FPGAは80386と同じ時代に生まれたが、開発ツールの整備が進まなかったので普及が遅れた。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e3",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e4",
      "text": " LUT(Look Up Table)がたくさんある。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e5",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e6",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e7",
      "text": " entity HALF_ADDER is",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e8",
      "text": "   port (A, B: in std_logic;",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4e9",
      "text": "         S, C: out std_logic)...",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4ea",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4eb",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4ec",
      "text": " 専用H/Wははまるアルゴリズムなら速いがPentiumも色々すごいので。。コンパイラの最適化もすごい。データ並列、パイプライン並列がはまる。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4ed",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4ee",
      "text": " 19x19のループでも並列にデータ依存がなければ並列で計算できるので怖くない。レジスタに512bit取ったりできる。連の情報とかで441bitとかでも1つのレジスタに収まる。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4ef",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f0",
      "text": " MoGo http://www.lri.fr/~gelly/MoGo_Download.htm",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f1",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f2",
      "text": " 最中限の専用H/W作ったら速いかなぁ。データ依存がないから並列で計算できるよなぁ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f3",
      "text": " ----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f4",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f5",
      "text": " VMM(virtual machime moniter)",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f6",
      "text": " Pentiumには仮想化に向かない命令がいくつかある。しかたがないのでVMMが動的にOSを書き換えて実行したりしている。Intel Virtualization Technologyをつかうとよい。とても楽になる。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f7",
      "text": " いままでは仮想化要求仕様を満たしていなかったのでやりにくかった。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f8",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4f9",
      "text": " VM exitってのが起きると処理がVMからVMMに移る。このときに何がその引き金を引いたかを今まではバイナリを解析して判断しないと行けなかったのが、情報を簡単に取れるようになったりとか。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4fa",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4fb",
      "text": " VMCS(Virtual machine control data structure)",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4fc",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4fd",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4fe",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc4ff",
      "text": " ハードウェアで機械学習",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc500",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc501",
      "text": " ターミネータのプロセッサ6502, ファミコンとほぼ同じ。学習するファミコンに侵略される！",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc502",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc503",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc504",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc505",
      "text": " 豪雨に侵略される！",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc506",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc507",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc508",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc509",
      "text": " http://www.mew.org/~kazu/haskell.pdf",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc50a",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc50b",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc50c",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc50d",
      "text": " 風邪&テンション上げ過ぎで疲れてきた。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc50e",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc50f",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc510",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc511",
      "text": " 一晩でFPGAでBrainF*ckマシーン作ったらしい。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc512",
      "text": " そして瞬時に「それもうあるよ」と言われてしまう。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc513",
      "text": " http://natu.txt-nifty.com/natsutan/2008/03/brainfuck_d62c.html",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc514",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc515",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc516",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc517",
      "text": " 「非同期ソケットでEAGAIN→コンテキストスイッチ」",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc518",
      "text": " この辺りの会話はまだ宇宙語に聞こえる。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc519",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc51a",
      "text": " http://www.linux.or.jp/JM/html/LDP_man-pages/man2/semop.2.html",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc51b",
      "text": " >>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc51c",
      "text": " sem_op が 0 の場合、「ゼロまで待つ」操作である。この場合、プロセスはそのセマフォ集合に対する読み込み許可がなければならない。 semval が 0 ならば、操作は直ちに行われる。 semval が 0 でない場合、 sem_flg に IPC_NOWAIT が指定されていれば、 semop() は失敗し、 errno に EAGAIN が設定される",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc51d",
      "text": " <<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc51e",
      "text": " んー、これなのかな？",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc51f",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc520",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc521",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc522",
      "text": " 鼻の奥から風邪ひきさんのにおいがする。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc523",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc524",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc525",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc526",
      "text": " http://www.google.co.jp/search?hl=ja&q=10000000000000000-9999999999999995&lr",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc527",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc528",
      "text": " Google先生算数できない笑",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc529",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc52a",
      "text": " <img src=\"http://gyazo.com/51ca2712ff8a356cafe5452189c764a9.png\">",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc52b",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc52c",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc52d",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc52e",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc52f",
      "text": " 僕「沖縄には一級河川はない」　id:earth2001y「いや一級河川はある」という意見の食い違いと、何か賭けようという話、特に賭けたいものがないのでブログに書くのでいいんじゃない？という話の流れの結果、僕の勝ちをここに宣言する(笑)",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc530",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc531",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc532",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc533",
      "text": " VerilogのシミュレータicarusをダウンロードしようとしたがMacだとなんか色々ややこしそうだ。MoGoも動かないし、VMでLinuxを入れる流れかなぁ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc534",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc535",
      "text": " sudo port install iverilogで入ったっぽい。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc536",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc537",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc538",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc539",
      "text": " マンデルブロ集合",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc53a",
      "text": " www.math.nagoya-u.ac.jp/~kawahira/courses/mandel.pdf",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc53b",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc53c",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc53d",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc53e",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc53f",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc540",
      "text": " 夜の26時半もすぎてEmacs派とVim派の戦いが勃発！",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc541",
      "text": " Q1：Hello, world!を100回表示",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc542",
      "text": " Vim陣営の解答：",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc543",
      "text": " 　qaHello World![Esc]q100qa",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc544",
      "text": " Emacs陣営の解答：",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc545",
      "text": " 　C-x(Hello WorldC-x)C-u100C-xe",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc546",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc547",
      "text": " Q2: Hello, world! 1からインクリメント",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc548",
      "text": " Vim陣営の解答：",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc549",
      "text": "  インクリメントなんとかを使う",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc54a",
      "text": " Emacs陣営の解答：",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc54b",
      "text": " 　EmacsLisp",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc54c",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc54d",
      "text": " Q3: コメントアウト",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc54e",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc54f",
      "text": " ごめん、酔っぱらって議事録つけられていない。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc550",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc551",
      "text": " でもdoukaku.orgみたいなノリで特定のお題についてエディタの操作で戦うサイトが楽しそうだと思った。とりあえずEmacs, Vim, xyzzy, 秀丸, ってあたりでいいのかな。マウスは禁止でキータイプの字数でゴルフかな。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc552",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc553",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc554",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc555",
      "text": " M-x imenu",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc556",
      "text": " M-!",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc557",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc558",
      "text": " *1221981953* 情報科学若手の会日記Scalaの章",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc559",
      "text": " これは発表を聞きながらの走り書きメモなので間違っているかもしれません。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc55a",
      "text": " -----",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc55b",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc55c",
      "text": " 分量が多すぎたので分離",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc55d",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc55e",
      "text": " Scalaのifは値を返す。elseがないときUnitを返す。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc55f",
      "text": " x to yはx.to(y)と同じ。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc560",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc561",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc562",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc563",
      "text": " Pythonのリスト内包みたいなのがある",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc564",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc565",
      "text": " for(x <- 1 to 100; y <- 1 to 100 if y == x * x) yield (x, y)",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc566",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc567",
      "text": " これは",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc568",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc569",
      "text": " flatMap{x => (1 to 100).filter{y => y == x * x}.map{y => (x, y)}}",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc56a",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc56b",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc56c",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc56d",
      "text": " seq.mkString(tok)でPythonで言うところのtok.join(seq) ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc56e",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc56f",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc570",
      "text": " xs[i]に相当するコードがxs(i)になる？",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc571",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc572",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc573",
      "text": " Haskellのfoldlに相当するものがある。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc574",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc575",
      "text": " xs.foldLeft(0)((sum, n) => sum+n.toInt)",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc576",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc577",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc578",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc579",
      "text": " toIntみたいな引数のないメソッドの呼び出しに括弧がないのが多少気に食わないけどいい言語だなぁ。これで静的型ってのがすごいなぁ。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc57a",
      "text": " obj.noargmethod _ でそのメソッド自体。obj.add(x, y)の場合も obj.add _でメソッド自体。obj.addは構文エラー。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc57b",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc57c",
      "text": " x /: y  means y./:(x) 末尾にコロンがついていると（ユーザ定義の演算子であっても）右辺をレシーバにする",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc57d",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc57e",
      "text": " ブロック渡しがあるのいいな。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc57f",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc580",
      "text": " classとobjectって別個にあるのか。objectはシングルトン。static makeInstanceメソッドが隠されているだけと考えていいのかなぁ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc581",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc582",
      "text": " overrideするときには明記する必要がある",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc583",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc584",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc585",
      "text": " class Point(val x :Int, val y :Int){",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc586",
      "text": "    ...",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc587",
      "text": " }",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc588",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc589",
      "text": " class Foo extends JFrame(\"hoge\"){",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc58a",
      "text": "   setSize(100, 100);",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc58b",
      "text": " }",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc58c",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc58d",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc58e",
      "text": " trait。classからインスタンス生成機能を取り除いたもの。Javaのinterfaceと違って実装を持つ。mix-inにつかう。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc58f",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc590",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc591",
      "text": " implicit def i2str(i :Int) :String = i.toString",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc592",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc593",
      "text": " がスコープにあれば暗黙の型変換を試みる。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc594",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc595",
      "text": " val n = 54321",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc596",
      "text": " println(n.endsWith(1))",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc597",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc598",
      "text": " 整数n, 1が両方とも暗黙的に文字列に変換されている。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc599",
      "text": " たとえば1というIntのリテラルがあって、Int自体のクラスがread-onlyだったとしてもInt2MyIntを作ってMyIntでfooというメソッドをつければ1.fooできる。Pythonでは高速化のためにintがread-onlyになっていて1.fooが出来ない。Rubyでは追加できるけども、高速化の妨げになっているはず。静的型なのにクラスに動的にメソッドを追加できたようにみせられるのはすばらしい。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc59a",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc59b",
      "text": " パターンマッチがある",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc59c",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc59d",
      "text": " xs match {",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc59e",
      "text": "   case Array(x, y) => ...",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc59f",
      "text": "   case Array(x) => ...",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a0",
      "text": " }",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a1",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a2",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a3",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a4",
      "text": " 自分の定義したクラスでも",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a5",
      "text": " case class MyTree(l :MyLeaf, r :MyLeaf) ...すればcase MyTree(l, r)できる。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a6",
      "text": " MLのalgebric date type。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a7",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a8",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5a9",
      "text": " case classではないFooでもunapplyってメソッドを定義すれば出来る？",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5aa",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ab",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ac",
      "text": " SomeとNoneってのがある。def foo(i :Int) = if (i == 0) Some(1) else None。HaskellのMaybe Int, Just(1), Nothingと同じfooの返り値はOption(Int)",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ad",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ae",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5af",
      "text": " 静的に型チェックされるduck typing! Structural typeってのがあるらしい。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b0",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b1",
      "text": " type HasName = {def name() :String}",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b2",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b3",
      "text": " 静的にその型がname()を持っていることを確認する。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b4",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b5",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b6",
      "text": " lazy val x = some_func(...)",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b7",
      "text": " xに最初にアクセスするときに評価され、後は再評価されない。サンクを書きやすくするシンタックスシュガー？",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b8",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5b9",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ba",
      "text": " パターンマッチングに成功するかどうかだけを確認するidDefinedAt。分散アクターとかで自分が処理できる命令だけ取るとかに使えるのかな。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5bb",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5bc",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5bd",
      "text": " E4X的なものもある。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5be",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5bf",
      "text": " val tag = <foo>{x} + {y} = {x + y}</foo>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c0",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c1",
      "text": " しかもこのXMLノードに対してパターンマッチをかけられる！！！なんだってー！",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c2",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c3",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c4",
      "text": " generics",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c5",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c6",
      "text": " val xs :Array[String] = Array(\"A\", \"B\")",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c7",
      "text": " xs(0) = 1 // error!",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c8",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5c9",
      "text": " class Ref[T](private var value :T){",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ca",
      "text": "   def unary_! :T = value",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5cb",
      "text": "   def :=(newValue :T) :Unit ......",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5cc",
      "text": " }",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5cd",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ce",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5cf",
      "text": " Higher Kind Generator うわぁclass R[ T[ _ ] ]とかできるのか！何してるんだこれ！",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d0",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d1",
      "text": " Implicit Parameter 呼び出し側のスコープで定義されていれば渡さなくてもいい",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d2",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d3",
      "text": " def sum[T](xs :List[T])(implicit adder :Adder[T]) ...",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d4",
      "text": " implicit object StrAdder extends Adder[String] { ... }",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d5",
      "text": " sum([\"a\", \"b\"]) // ここでadderが渡されていないがスコープにList[String]なの",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d6",
      "text": " // でAdder[String]を探して、見つかるからそれを使う",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d7",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d8",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5d9",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5da",
      "text": " Existential type. 時間が短くてよくわからなかったがgenerics的な型で半変とか共変とかでややこしいまわりの話で、Javaの型システムにある問題点を解決しているのだけどもそれだと不便なことがあるので安全に穴をあけるための仕組みだという理解をした。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5db",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5dc",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5dd",
      "text": " シンタックスシュガー山盛り、構文複雑、初学者混乱させがち。なんか静的型付けの大前提を守ったままPerl的な哲学で開発したらこんな感じになるのかな、みたいな。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5de",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5df",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e0",
      "text": " ふう。超駆け足だったけどかなり面白かった。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e1",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e2",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e3",
      "text": " >||",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e4",
      "text": " val x :Array[String] = Array(\"a\", \"b\", \"c)",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e5",
      "text": " val y :Array[Any] = x // これは出来ないけどもし出来たとする",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e6",
      "text": " // Javaの配列はObject[]にString[]の代入が出来てしまう。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e7",
      "text": " y(0) = 1 // Int <: Anyなのでこれはvalid。ぎゃーxの中に整数が入った！",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e8",
      "text": " ",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5e9",
      "text": " // 2行目を禁止したくはないが、でもそれに近いことをしたい場合がある。",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ea",
      "text": " // 問題になるのは書き込んだときなので書き込ませない型を作ればOK",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5eb",
      "text": " val z :Array[t] forSome {type T} // 構文こんなのだっけ？",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ec",
      "text": " ||<",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ed",
      "text": " </body>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ee",
      "text": " <comments>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ef",
      "text": " <comment>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f0",
      "text": " <username>ryousei</username>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f1",
      "text": " <body>> FPGAで囲碁専用H/Wを作る話。<br><br>詳細希望。</body>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f2",
      "text": " <timestamp>1221961717</timestamp>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f3",
      "text": " </comment>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f4",
      "text": " <comment>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f5",
      "text": " <username>monanchi</username>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f6",
      "text": " <body>>インクリメントなんとかを使う<br>[Ctrl]+a 選択している数字をインクリメント<br>とか使ってたよ！</body>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f7",
      "text": " <timestamp>1222050817</timestamp>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f8",
      "text": " </comment>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5f9",
      "text": " <comment>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5fa",
      "text": " <username>ujihisa</username>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5fb",
      "text": " <body>100iHello World![Esc]</body>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5fc",
      "text": " <timestamp>1222177859</timestamp>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5fd",
      "text": " </comment>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5fe",
      "text": " </comments>",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc5ff",
      "text": "",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec1faff09e00003cc600",
      "text": "[はてなダイアリー 2008-09-21 https://nishiohirokazu.hatenadiary.org/archive/2008/09/21]",
      "created": 1221922800,
      "updated": 1221922800,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}