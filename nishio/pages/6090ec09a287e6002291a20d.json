{
  "id": "6090ec09a287e6002291a20d",
  "title": "Hatena2012-04-05",
  "created": 1333551600,
  "updated": 1333551600,
  "lines": [
    {
      "id": "6090ec2daff09e00003daf95",
      "text": "Hatena2012-04-05",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf96",
      "text": "code:hatena",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf97",
      "text": " <body>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf98",
      "text": " *1333593776*Alloy: allの意味がわからない",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf99",
      "text": " Alloyのallの意味がよくわからない。",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf9a",
      "text": " >||",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf9b",
      "text": " enum X {A, B, C}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf9c",
      "text": " check {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf9d",
      "text": "   all r: X{",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf9e",
      "text": "     one r",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daf9f",
      "text": "   }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa0",
      "text": " }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa1",
      "text": " ||<",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa2",
      "text": " これは反例が見つからない。つまり「all r: X {foo}」は「すべての集合Xの <span class=\"deco\" style=\"font-weight:bold;\">要素</span> についてfooが成立する」なわけだ。",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa3",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa4",
      "text": " しかし、このXをX -> Xに置き換えてみると挙動が違う。",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa5",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa6",
      "text": " >||",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa7",
      "text": " enum X {A, B, C}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa8",
      "text": " check {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafa9",
      "text": "   all r: X -> X{",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafaa",
      "text": "     one r",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafab",
      "text": "   }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafac",
      "text": " }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafad",
      "text": " ||<",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafae",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafaf",
      "text": " これは反例がたくさん見つかる。つまり「all r: X -> X {foo}」は「すべての『XからXへの写像の集合』の<span class=\"deco\" style=\"font-weight:bold;\">部分集合</span>についてfooが成立する」なわけだ。",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb0",
      "text": " 最初はX -> Xが集合の集合になってるのかと思ったけども、そういうわけでもなく関係(2要素のタプル)の入った集合にすぎない。じゃあ集合の中に関係が入っているのか単なる値が入っているのかによってallの挙動が変わるということ？？",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb1",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb2",
      "text": " ** 追記",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb3",
      "text": " allの対象がスカラーの集合の場合は、数学的なallの記号と同じ挙動を(andの羅列を生成することで)可能なのでそうしてあるが、スカラーでない場合はそれをやると節の数が多すぎになりそうなのでやっていない、ということらしい。",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb4",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb5",
      "text": " *1333628554*Alloyでコンビネータ論理をやろうとしてうまく行かなかった話",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb6",
      "text": " Alloyになにか適当なパズルを解かせてみようと思って、最初に思いついたものが「SとKの組み合わせでIを作れ」だったので実装してみたが、Iを探す以前に、制約なしでもfactを満たす解が見つからない。何故だ？",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb7",
      "text": " >||",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb8",
      "text": " abstract sig Bird{",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafb9",
      "text": " \tapply: Bird -> Bird",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafba",
      "text": " }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafbb",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafbc",
      "text": " one sig K extends Bird{}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafbd",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafbe",
      "text": " one sig S extends Bird{}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafbf",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc0",
      "text": " fact {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc1",
      "text": " \tall x, y: Bird | K.apply.x.apply.y = x",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc2",
      "text": " \tall x, y, z: Bird {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc3",
      "text": " \t\tS.apply.x.apply.y.apply.z =",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc4",
      "text": " \t\tx.apply.z.apply.(y.apply.z)",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc5",
      "text": " \t}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc6",
      "text": " }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc7",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc8",
      "text": " run {} for 10 Bird",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafc9",
      "text": " ||<",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafca",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafcb",
      "text": " ありそうなのは「鳥の集合が有限だと解がない」かなと思うんだが。むむ。部分適用されたSコンビネータの今までの引数の状態を覚えておくのにそれぞれ鳥が必要になるから足りなくなるのか？",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafcc",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafcd",
      "text": " *1333636035*Alloy日記2: 時系列で変化する状態",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafce",
      "text": " 「複数の人がいて、時系列で状態が変化しつつインタラクションする」っていうのをやろうと思ったんだけど(具体的には既婚・未婚状態が変わりながら男女が結婚したり離婚したりするってものを作って、最初は制約が足りなくて重婚が起きてしまい、それを修正するってのをやろうと思ったんだけど)状態を扱うとか難しかったので、昨日は挫折したのでした。",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafcf",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd0",
      "text": " 今日は散髪待ちの時間と帰りの電車で6章の事例を写経した。なんとなくわかったので実装してみよう。でもまだ複数人出てくると混乱しそうなので人は1人だけ。で、その人が3つの状態を持っている。緑からは緑と黄色に遷移できて、黄色はすぐに赤に遷移して、赤は緑と赤に遷移できる。",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd1",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd2",
      "text": " >||",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd3",
      "text": " open util/ordering[Time]",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd4",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd5",
      "text": " sig Time {}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd6",
      "text": " one sig Person {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd7",
      "text": " \tstate: State -> Time",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd8",
      "text": " }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafd9",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafda",
      "text": " enum State {Green, Yellow, Red}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafdb",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafdc",
      "text": " pred step (t, t' : Time, s: State){",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafdd",
      "text": " \tPerson.state.t in Green => Person.state.t' in Green + Yellow",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafde",
      "text": " \tPerson.state.t in Yellow => Person.state.t' in Red",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafdf",
      "text": " \tPerson.state.t in Red => Person.state.t' in Green + Red",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe0",
      "text": " }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe1",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe2",
      "text": " fact {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe3",
      "text": " \tall t: Time { // 各時点で1つの状態だけ存在する",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe4",
      "text": " \t\tone Person.state.t",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe5",
      "text": " \t}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe6",
      "text": " }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe7",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe8",
      "text": " fact Traces {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafe9",
      "text": " \tall t: Time - last {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafea",
      "text": " \t\tlet t' = t.next {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafeb",
      "text": " \t\t\tall s: State {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafec",
      "text": " \t\t\t\tstep [t, t', s]",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafed",
      "text": " \t\t\t}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafee",
      "text": " \t\t}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafef",
      "text": " \t}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff0",
      "text": " }",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff1",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff2",
      "text": " run {",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff3",
      "text": " \tall s: State { // すべての状態について、1回は存在する",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff4",
      "text": " \t\tsome s <: Person.state",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff5",
      "text": " \t}",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff6",
      "text": " } for 5 Time",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff7",
      "text": " ||<",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff8",
      "text": " ",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daff9",
      "text": " 「すべての状態について、1回は存在する」を付けないと、最初が赤くて、ずっと赤いまま、なんていう楽しくないものがでてしまった。修正すると、黄色→赤→赤→赤→緑、がでた。めでたしめでたし。楽しくなってきたぞ。",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daffa",
      "text": " </body>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daffb",
      "text": " <comments>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daffc",
      "text": " <comment>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daffd",
      "text": " <username>osiire</username>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003daffe",
      "text": " <body>私も詳しくは分からないのですが、下記のリファレンスの265p.(と右上にナンバリングされているページ)に関連する記述があります。<br>http://alloy.mit.edu/alloy/documentation/book-chapters/alloy-language-reference.pdf<br><br>---引用---<br>Thus, when X is a set, the quantified constraint<br>  all x: X | F<br>has x range over scalar values: that is, the constraint F is evaluated for <br>bindings of x to singleton subsets of X.<br>---引用---<br>Xが集合の場合にはxはスカラー(シングレトン)の範囲を動くと書いてあります。このことから、最初の例は問題なさそうです。<br>その次の段からは、高階な制約の場合にはスコーレム化ができれば一階に落として解くと書いてあります。<br>ですので、all r:X->XのrはX->Xの部分集合(シングレトンとは限らない)のどれかになるため、one rには反例が出るのだと思います。<br><br>以前参照なさっていた↓の論文の17pの真ん中付近にも記述があるようです。<br>http://sdg.csail.mit.edu/pubs/2002/alloy-journal.pdf<br>---引用---<br>All quantifiers are first order. The analysis eliminates scalar quantifiers by forming explicit conjunctions and disjunctions over all possible values of the bound variable. Higher-order quantifiers cannot be eliminated in this way, because a relation or set has too many values. <br>Skolemization can eliminate some higher-order quantifiers, but Alloy’s design is based on the <br>premise that all specifications should be analyzable.<br>---引用---<br>ご参考まで。</body>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003dafff",
      "text": " <timestamp>1333635575</timestamp>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db000",
      "text": " </comment>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db001",
      "text": " <comment>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db002",
      "text": " <username>nishiohirokazu</username>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db003",
      "text": " <body>ありがとうございます！スコーレム化のことはいまいちよくわかってないのですが、なるほどスカラーの集合に対して量化子を使った場合はSATに渡すブール式を作る過程でandの塊やorの塊になっているわけですね。関係の集合に関して同じ事をしようとするとN^2個必要だから大変だというのは納得できます。手続き型言語脳で考えると部分集合を舐めるほうが2^Nになって巨大な気がしてしまいますが、きっとSAT的にはそっちのほうが都合がいいんでしょうね。</body>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db004",
      "text": " <timestamp>1333637755</timestamp>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db005",
      "text": " </comment>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db006",
      "text": " </comments>",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db007",
      "text": "",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2daff09e00003db008",
      "text": "[はてなダイアリー 2012-04-05 https://nishiohirokazu.hatenadiary.org/archive/2012/04/05]",
      "created": 1333551600,
      "updated": 1333551600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}