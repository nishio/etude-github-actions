{
  "id": "6090ec06a287e6002291a12d",
  "title": "Hatena2011-01-01",
  "created": 1293807600,
  "updated": 1293807600,
  "lines": [
    {
      "id": "6090ec2aaff09e00003d7d8d",
      "text": "Hatena2011-01-01",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d8e",
      "text": "code:hatena",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d8f",
      "text": " <body>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d90",
      "text": " *1293870288*Pythonで5分で便利なことをするレシピ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d91",
      "text": " <a href='http://hiroki.jp/2011/01/01/1229/'>5分でわかる Python を知らない人が Python の便利さを学べる記事をかいたよ | HIROKI.JP</a>が、Pythonの説明なのにところどころ「Rubyでは」になっていたり、そもそも無理やりPHP的なことをしようとしていていまいちなのでTwitterでひどいなぁと言っていたら",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d92",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d93",
      "text": " >>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d94",
      "text": " @bellonieta: ここは是非とも@nishioさんに正しい5分記事を書いてもらいたいところ…",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d95",
      "text": " <<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d96",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d97",
      "text": " と言われてしまった。まー、ぼやくのは生産的じゃないからねぇ。Pythonを使ってて色々便利なことはあるけど、一番手軽そうなものを軽く説明してみよう。たとえばなんか書類をつくっているとするじゃない、こんな感じの。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d98",
      "text": " >||",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d99",
      "text": " 社長: 山田太郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d9a",
      "text": " 支社長: 田中一郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d9b",
      "text": " 部長: 山川三郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d9c",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d9d",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d9e",
      "text": " 面倒なので3人分しか書いてないけど本当はもっとたくさん30行くらいあるとしよう。さー書けた、と思ったらそこに上司が来て「あーあー、そうじゃないよ、『山田太郎(社長)』って書くんだよ」と言うわけですよ。先に言えよ、と。むしろそんな細かいことどっちでもいいじゃん、と。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7d9f",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da0",
      "text": " そこで愚痴りながら30行ちまちまと修正するより、Pythonを使ってサクッと終わらせて「俺スゲー」と悦に入るほうが精神衛生によろしい。さあPythonを立ち上げてみよう。インタプリタが「>>>」と表示して「コードを入れてください」と言うのでu\"\"\"と入力してから先程の名前のリストをコピペしよう。u\"\"\"は「複数行ユニコード文字列」の開始の印なので、名前のリストを貼り付けたら終了の印\"\"\"を付けてからEnterキーを押す。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da1",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da2",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da3",
      "text": " >>> u\"\"\"社長: 山田太郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da4",
      "text": " ... 支社長: 田中一郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da5",
      "text": " ... 部長: 山川三郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da6",
      "text": " ... \"\"\"",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da7",
      "text": " u'\\u793e\\u9577: \\u5c71\\u7530\\u592a\\u90ce\\n\\u652f\\u793e\\u9577: \\u7530\\u4e2d\\u4e00\\u90ce\\n\\u90e8\\u9577: \\u5c71\\u5ddd\\u4e09\\u90ce\\n'",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da8",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7da9",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7daa",
      "text": " ユニコード文字列ができた。これに名前をつけておこう。最後に評価した値は「_」という変数に入っているのでそれにdataって名前をつけよう。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dab",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dac",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dad",
      "text": " >>> data = _",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dae",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7daf",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db0",
      "text": " さて、ここからが面白いところ。まずstripで前後の無駄な空白文字を削り、split(\"\\n\")で改行文字区切りのリストに変換する。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db1",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db2",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db3",
      "text": " >>> data.strip().split(\"\\n\")",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db4",
      "text": " [u'\\u793e\\u9577: \\u5c71\\u7530\\u592a\\u90ce', u'\\u652f\\u793e\\u9577: \\u7530\\u4e2d\\u4e00\\u90ce', u'\\u90e8\\u9577: \\u5c71\\u5ddd\\u4e09\\u90ce']",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db5",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db6",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db7",
      "text": " 1行ずつに分割された。分かりやすくするためにここでfor文で表示してみよう。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db8",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7db9",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dba",
      "text": " >>> for line in _: print line",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dbb",
      "text": " ... ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dbc",
      "text": " 社長: 山田太郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dbd",
      "text": " 支社長: 田中一郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dbe",
      "text": " 部長: 山川三郎",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dbf",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc0",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc1",
      "text": " 次にlineをさらに分割してみよう。解説のためにprint line.split()する。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc2",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc3",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc4",
      "text": " >>> for line in _: print line.split()",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc5",
      "text": " ... ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc6",
      "text": " [u'\\u793e\\u9577:', u'\\u5c71\\u7530\\u592a\\u90ce']",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc7",
      "text": " [u'\\u652f\\u793e\\u9577:', u'\\u7530\\u4e2d\\u4e00\\u90ce']",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc8",
      "text": " [u'\\u90e8\\u9577:', u'\\u5c71\\u5ddd\\u4e09\\u90ce']",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dc9",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dca",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dcb",
      "text": " 1行ごとに空白の前と後ろに分かれてリストになった。さて次は？文字列フォーマット操作を使おう。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dcc",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dcd",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dce",
      "text": " >>> for line in _:",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dcf",
      "text": " ...     items = line.split()",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd0",
      "text": " ...     print \"%s(%s)\" % (items[1], items[0])",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd1",
      "text": " ... ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd2",
      "text": " 山田太郎(社長:)",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd3",
      "text": " 田中一郎(支社長:)",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd4",
      "text": " 山川三郎(部長:)",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd5",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd6",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd7",
      "text": " おっとコロンが残ってしまった。例えばitems[0].strip(\":\")でコロンを取り除いてもいいし、items[0][:-1]で最後の1文字だけ捨ててもいい。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd8",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dd9",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dda",
      "text": " >>> for line in _:",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7ddb",
      "text": " ...     items = line.split()",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7ddc",
      "text": " ...     print u\"%s(%s)\" % (items[1], items[0][:-1])",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7ddd",
      "text": " ... ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dde",
      "text": " 山田太郎(社長)",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7ddf",
      "text": " 田中一郎(支社長)",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de0",
      "text": " 山川三郎(部長)",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de1",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de2",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de3",
      "text": " めでたしめでたし。説明のためにまどろっこしく書いたけど、慣れてくると下のようにさくっと書ける。さすがにこれなら5分で出来るだろー。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de4",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de5",
      "text": " >>> data = u\"\"\"(ここに貼りつけ)\"\"\"",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de6",
      "text": " >>> for line in data.strip().split(\"\\n\"):",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de7",
      "text": " ...     items = line.split()",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de8",
      "text": " ...     print u\"%s(%s)\" % (items[1], items[0][:-1])",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7de9",
      "text": " ... ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dea",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7deb",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dec",
      "text": " <hr>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7ded",
      "text": " 追記:",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dee",
      "text": " - <a href=\"http://www.python.jp/doc/release/library/stdtypes.html#string-methods\">6.6.1. 文字列メソッド</a>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7def",
      "text": " - 僕は脳が古くなってるので<a href=\"http://www.python.jp/doc/release/library/stdtypes.html#string-formatting\">6.6.2. 文字列フォーマット操作</a>を使っているけど、Python2.6から導入された<a href=\"http://www.python.jp/doc/release/library/stdtypes.html#str.format\">formatメソッド</a>を使うほうがおすすめらしい。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df0",
      "text": " - つまずきやすいので書いておくと",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df1",
      "text": " >|python|",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df2",
      "text": " >>> print u\"{1}({0})\".format(items[0][:-1], items[1])",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df3",
      "text": " 山川三郎(部長)",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df4",
      "text": " >>> print \"{1}({0})\".format(items[0][:-1], items[1])",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df5",
      "text": " Traceback (most recent call last):",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df6",
      "text": "   File \"<stdin>\", line 1, in <module>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df7",
      "text": " UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-3: ordinal not in range(128)",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df8",
      "text": " ||<",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7df9",
      "text": " これはu\"{1}({0})\"のuを忘れているのが原因。ユニコード文字列を暗黙のエンコーディングasciiでバイト列に変換するコードになっているが、与えられたデータの中にasciiの範囲じゃないバイトがあるせいでエラーになっている。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dfa",
      "text": " <hr>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dfb",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dfc",
      "text": " 他に面白いレシピを思いついた人がいたらトラックバックください！",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dfd",
      "text": " ",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dfe",
      "text": " - <a href='http://am6.jp/hItacV'>5分でPythonは便利と思えるレシピ</a> by @ueblog",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7dff",
      "text": " -- ファイル操作のバッチプログラム。ディレクトリを再帰的に探して、特定の拡張子のファイルを別のディレクトリにコピーする",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e00",
      "text": " - <a href='http://blog.shibu.jp/article/42359540.html'>渋日記: Pythonで5分で便利なことをするレシピ</a>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e01",
      "text": " -- PythonをWindowsのexeファイルにする。業務でプログラムを配布するのに便利です。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e02",
      "text": " - <a href='http://d.hatena.ne.jp/t2y-1979/20110103/1294011330'>Pythonで5分でシステム運用に役立つレシピ - forest book</a>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e03",
      "text": " -- csv形式のファイルを読み込んでSQLを出力する。",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e04",
      "text": " - <a href='http://d.hatena.ne.jp/heavenshell/20110103/1294039034'>Pythonで 5 分で便利なことをするレシピ - Heavens hell</a>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e05",
      "text": " -- Webアプリに POST や DELETE のリクエストを投げて動作確認",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e06",
      "text": " - <a href='http://d.hatena.ne.jp/ymotongpoo/20110103/1294032545'>5分でWebスクレイピングをする - YAMAGUCHI::weblog</a>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e07",
      "text": " </body>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e08",
      "text": " <comments>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e09",
      "text": " <comment>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e0a",
      "text": " <username>xuwei</username>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e0b",
      "text": " <body>scalaで書いてみた<br><br>http://twitpic.com/3mmn0l</body>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e0c",
      "text": " <timestamp>1294050469</timestamp>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e0d",
      "text": " </comment>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e0e",
      "text": " </comments>",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e0f",
      "text": "",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2aaff09e00003d7e10",
      "text": "[はてなダイアリー 2011-01-01 https://nishiohirokazu.hatenadiary.org/archive/2011/01/01]",
      "created": 1293807600,
      "updated": 1293807600,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}