{
  "id": "5f0fc85c8aab920024a76d51",
  "title": "DSL 2 D Range Update Query",
  "created": 1594869853,
  "updated": 1595420065,
  "lines": [
    {
      "id": "5f0fc85c8aab920024a76d51",
      "text": "DSL 2 D Range Update Query",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6502",
      "text": "from [セグメント木の可視化]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6503",
      "text": "DSL_2_D Range Update Query",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6504",
      "text": "\t[DSL_2_D Range Update Query https://onlinejudge.u-aizu.ac.jp/courses/library/3/DSL/2/DSL_2_D]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6505",
      "text": "\t\t「値を上書きする」の範囲作用がどう定義されるべきか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6506",
      "text": "\t\t範囲作用はノードが上にあるか下にあるかでどちらが後かわからない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6507",
      "text": "\t\tそこで値をタイムスタンプ付きにして、下への伝搬は「タイムスタンプの新しい方を取る」二項演算にした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f182d92aff09e0000dadb51",
      "text": "\t\t別解 [双対セグメント木の下への伝搬]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1595420051,
      "updated": 1595420065
    },
    {
      "id": "5f0fc85caff09e0000bb6508",
      "text": "\t\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6509",
      "text": "\t\t def main():",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb650a",
      "text": "       N, Q = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb650b",
      "text": "       depth = N.bit_length() + 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb650c",
      "text": "       set_depth(depth)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb650d",
      "text": "       action_unity = (-1, INF)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb650e",
      "text": "       table = [action_unity] * SEGTREE_SIZE",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb650f",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6510",
      "text": "       for time in range(Q):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6511",
      "text": "           q, *args = map(int, input().split())",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6512",
      "text": "           if q == 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6513",
      "text": "               # update",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6514",
      "text": "               s, t, new_value = args",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6515",
      "text": "               range_update(table, s, t + 1, lambda x: (time, new_value))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6516",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6517",
      "text": "           else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6518",
      "text": "               # find",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb6519",
      "text": "               print(down_propagate_to_leaf(",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb651a",
      "text": "                   table, args[0], max, action_unity)[1])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    },
    {
      "id": "5f0fc85caff09e0000bb651b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594869853,
      "updated": 1594869853
    }
  ]
}