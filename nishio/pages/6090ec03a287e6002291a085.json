{
  "id": "6090ec03a287e6002291a085",
  "title": "Hatena2010-03-20",
  "created": 1269010800,
  "updated": 1269010800,
  "lines": [
    {
      "id": "6090ec27aff09e00003d50e8",
      "text": "Hatena2010-03-20",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50e9",
      "text": "code:hatena",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50ea",
      "text": " <body>",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50eb",
      "text": " *1269069362*[Kay]メモ",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50ec",
      "text": " Werkzeugを使ったことがないままKayを使っているので、何かが起きたときにKayで起きる現象なのかWerkzeugで起きる現象なのかが区別付かない。まあメモしておく。",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50ed",
      "text": " ",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50ee",
      "text": " - GETでリクエストしているのにrequest.formにアクセスしたりするとHTTPステータスとしてBad Requestを返す",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50ef",
      "text": " - ビューがreturnし忘れでNoneを返した時のエラーメッセージは「TypeError: 'NoneType' object is not callable」",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f0",
      "text": " - Jinja2のformatフィルタはDjangoと違って\"%.2f\"|format(x)という構文。x|aFilter|format:\"%.2f\"に相当することは\"%.2f\"|format(x|aFilter)になる。",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f1",
      "text": " - kayのテンプレートにうっかり値を渡し忘れて、存在しない名前anObjに対してanObj|aFilterするとaFilterには<class 'kay.app.NullUndefined'>のオブジェクトが渡され、こいつはanObj.anyAttrがu\"\"であるようなオブジェクトのため、モデルの定義でdb.IntegerProperty()だから当然整数だと思って(anObj.count * 100) / anObj.totalなんかやるとTypeError: unsupported operand type(s) for /: 'unicode' and 'unicode'と怒られる。よりによってエラーログの表示は",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f2",
      "text": " >||",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f3",
      "text": "   File \"/Users/nishio/cur/bitbucket/iqtest/hirameita/main/templates/index.html\", line 1, in top-level template code",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f4",
      "text": "     {% extends \"main/_base.html\" %}",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f5",
      "text": " ",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f6",
      "text": " TypeError: unsupported operand type(s) for /: 'unicode' and 'unicode'",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f7",
      "text": " ||<",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f8",
      "text": " だったのでとてもビビる。まあ、いくらなんでもそこが割り算ってことはないな、と思い直して割り算しているフィルタを見たらわかった。assert isinstance(anObj, models...)ってやるべきかなぁ",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50f9",
      "text": " ",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50fa",
      "text": " *1269074820*1ピクセルのPNGを作る一番手っ取り早い方法",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50fb",
      "text": " >||",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50fc",
      "text": " $ convert XC:black -size 1x1 dot.png",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50fd",
      "text": " ||<",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50fe",
      "text": " ",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d50ff",
      "text": " via http://twitter.com/Maki_Daisuke/status/10764620642",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5100",
      "text": " </body>",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5101",
      "text": "",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5102",
      "text": "[はてなダイアリー 2010-03-20 https://nishiohirokazu.hatenadiary.org/archive/2010/03/20]",
      "created": 1269010800,
      "updated": 1269010800,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}