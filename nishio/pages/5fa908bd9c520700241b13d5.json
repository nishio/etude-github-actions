{
  "id": "5fa908bd9c520700241b13d5",
  "title": "PAST4N",
  "created": 1604913342,
  "updated": 1608950091,
  "lines": [
    {
      "id": "5fa908bd9c520700241b13d5",
      "text": "PAST4N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9b4",
      "text": "from [第四回 アルゴリズム実技検定]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9b5",
      "text": "PAST4N",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fe5f37faff09e0000b4bc1c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608905600,
      "updated": 1608905600
    },
    {
      "id": "5fa908bdaff09e000007e9b6",
      "text": "[N - マス目の穴埋め https://atcoder.jp/contests/past202010-open/tasks/past202010_n]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fe5f381aff09e0000b4bc1d",
      "text": "[https://gyazo.com/68a9ca92e218c196afc3b9fe1065c77f]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608905601,
      "updated": 1608905603
    },
    {
      "id": "5fe5f383aff09e0000b4bc1e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608905603,
      "updated": 1608905603
    },
    {
      "id": "5fa908bdaff09e000007e9b7",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9b8",
      "text": "  ?を埋める方法のうち、全て周囲の中央値であるものの個数",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9b9",
      "text": "  ?どうしが影響を与えるのがやっかい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9ba",
      "text": "  全部はてななんてのがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9bb",
      "text": "  　DP?",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9bc",
      "text": "   升目は18行6列",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9bd",
      "text": "   6列のパターンが決まればOKなDP",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9be",
      "text": "  周り3つが同じ値の時だけNG",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9bf",
      "text": "  6列のパターンだけでなく、上のマスの周囲にいくつ1があるか、が必要？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c0",
      "text": "  　上が1,0,0で1になってる時、下に0を置いてはいけない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c1",
      "text": "  　危うい0,1も含めると2ビット必要",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c2",
      "text": " 　ダメだ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c3",
      "text": " 　　隣に0を置かれたことで危ない0に後からなることがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c4",
      "text": "　公式解説",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c5",
      "text": "　　2列でDP",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c6",
      "text": "  [小さな定数に注目]、6ってのは、2倍にしてもbit DPできるということ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c7",
      "text": "　　持ち回る情報を小さくしすぎた、大きい方から考えた方が良かったか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c8",
      "text": "　　　上の行の情報がすべて得られるなら十分今の行の特定ができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9c9",
      "text": "　　　ならばどこまでが必要か？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9ca",
      "text": "　　　3つ上は必要ない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9cb",
      "text": "　　　よって2行でDP",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9cc",
      "text": "　　　…という流れで考えるべきだったか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1604913342
    },
    {
      "id": "5fa908bdaff09e000007e9cd",
      "text": "\t改めて考える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604913342,
      "updated": 1608895023
    },
    {
      "id": "5fe5ca2faff09e000020eb74",
      "text": "\t　2列の情報を2^12にパックして、1行進むごとに6ビットシフトする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608895024,
      "updated": 1608895057
    },
    {
      "id": "5fe5ca51aff09e000020eb75",
      "text": "\t　与えられたヒントデータはビットマスクにして矛盾の有無はビット演算でやる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608895057,
      "updated": 1608895093
    },
    {
      "id": "5fe6a12aaff09e000020ebb4",
      "text": "\t　　1があるべきところすべてに1があることはマスクをandしてマスクと同一か調べれば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608950058,
      "updated": 1608950091
    },
    {
      "id": "5fe6a100aff09e000020ebb3",
      "text": "\t　　0があるべきところに0があるかは逆のマスクをorすれば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608950017,
      "updated": 1608950046
    },
    {
      "id": "5fe5ca74aff09e000020eb76",
      "text": "\t　周囲の中央値であることは素朴に調べるしかないかなぁ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608895093,
      "updated": 1608895135
    },
    {
      "id": "5fe5ca9faff09e000020eb77",
      "text": "\t　　端があるので厄介だし",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608895136,
      "updated": 1608895143
    },
    {
      "id": "5fe5f42faff09e000020eb78",
      "text": "\t　　問題文を読み返したら端は0扱いだった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608905781,
      "updated": 1608905795
    },
    {
      "id": "5fe5f444aff09e000020eb79",
      "text": "\t　　周囲4つを足した値が2以上なら1が、2以下なら0がvalid、2の時は両方",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608905796,
      "updated": 1608906106
    },
    {
      "id": "5fe5f579aff09e000020eb7a",
      "text": "\t5AC 14WA　とりあえずTLEはしないみたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608906106,
      "updated": 1608912137
    },
    {
      "id": "5fe60d15aff09e000020eb7b",
      "text": "\t　サンプルも含めると8ACなので根本的に間違ってるということはなさそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608912150,
      "updated": 1608912175
    },
    {
      "id": "5fe60d31aff09e000020eb7c",
      "text": "\t　何がおかしいのか…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608912178,
      "updated": 1608912182
    },
    {
      "id": "5fe60b39aff09e0000b4bc1f",
      "text": "\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911674,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc20",
      "text": "\t def solve(data):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc21",
      "text": "      ZERO = ord(\"0\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc22",
      "text": "      ONE = ord(\"1\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc23",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc24",
      "text": "      onemasks = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc25",
      "text": "      zeromasks = []",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc26",
      "text": "      for y in range(18):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc27",
      "text": "          onemask = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc28",
      "text": "          zeromask = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc29",
      "text": "          for i in range(6):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc2a",
      "text": "              if data[y][i] == ONE:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc2b",
      "text": "                  onemask += 1 << i",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc2c",
      "text": "              if data[y][i] != ZERO:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc2d",
      "text": "                  zeromask += 1 << i",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc2e",
      "text": "          onemasks.append(onemask)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc2f",
      "text": "          zeromasks.append(zeromask)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc30",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc31",
      "text": "      def is_valid(y, s):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc32",
      "text": "          return (",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc33",
      "text": "              onemasks[y] & s == onemasks[y] and",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc34",
      "text": "              zeromasks[y] | s == zeromasks[y]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc35",
      "text": "          )",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc36",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc37",
      "text": "      def is_median(p1, p2, s):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc38",
      "text": "          for i in range(6):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc39",
      "text": "              # median check",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc3a",
      "text": "              mask = (1 << i)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc3b",
      "text": "              neighbor = sum(",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc3c",
      "text": "                  x & mask > 0 for x in",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc3d",
      "text": "                  [p1, (p2 << 1), (p2 >> 1), s])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc3e",
      "text": "              is_ok_one = (p2 & mask) and neighbor >= 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc3f",
      "text": "              is_ok_zero = not(p2 & mask) and neighbor <= 2",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc40",
      "text": "              if not (is_ok_one or is_ok_zero):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc41",
      "text": "                  return False",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc42",
      "text": "          return True",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc43",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc44",
      "text": "      def debugprint(*args):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc45",
      "text": "          def to_s(x):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc46",
      "text": "              return \"\".join(reversed(f\"{x:06b}\"))",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc47",
      "text": "          print(*[to_s(x) for x in args], sep=\"\\n\", file=sys.stderr)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc48",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc49",
      "text": "      P6 = 2 ** 6",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc4a",
      "text": "      P12 = 2 ** 12",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc4b",
      "text": "      table = [0] * P12",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc4c",
      "text": "      for s in range(P6):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc4d",
      "text": "          if is_valid(0, s):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc4e",
      "text": "              for s2 in range(P6):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc4f",
      "text": "                  if is_valid(1, s) and is_median(0, s, s2):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc50",
      "text": "                      table[s * P6 + s2] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc51",
      "text": "  ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc52",
      "text": "      for y in range(2, 18):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc53",
      "text": "          newtable = [0] * P12",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc54",
      "text": "          for s in range(P6):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc55",
      "text": "              if not is_valid(y, s):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc56",
      "text": "                  continue",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc57",
      "text": "              for past in range(P12):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc58",
      "text": "                  if table[past] == 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc59",
      "text": "                      continue",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc5a",
      "text": "                  p1, p2 = divmod(past, P6)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc5b",
      "text": "                  if is_median(p1, p2, s):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc5c",
      "text": "                      newtable[p2 * P6 + s] += table[past]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc5d",
      "text": "          table = newtable",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc5e",
      "text": "      return sum(table)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911676
    },
    {
      "id": "5fe60b3caff09e0000b4bc5f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608911676,
      "updated": 1608911678
    },
    {
      "id": "5fe5ca2faff09e000020eb73",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608895023,
      "updated": 1608895023
    }
  ]
}