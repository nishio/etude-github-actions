{
  "id": "6090ec0da287e6002291a2e2",
  "title": "Hatena2014-02-20",
  "created": 1392822000,
  "updated": 1392822000,
  "lines": [
    {
      "id": "6090ec31aff09e00003deefc",
      "text": "Hatena2014-02-20",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deefd",
      "text": "code:hatena",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deefe",
      "text": " <body>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deeff",
      "text": " *1392870493*放射線耐性Quineの読解",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def00",
      "text": " 「<a href='http://d.hatena.ne.jp/ku-ma-me/20140219/p1'>放射線耐性 Quine (1 文字消しても動く Quine) - まめめも</a>」という頭のおかしい（ほめことば）コードがリリースされていました。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def01",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def02",
      "text": " 以前「<a href='http://d.hatena.ne.jp/ku-ma-me/20100905/p1'>The Qlobe - まめめも</a>」がリリースされた時は、<a href='http://d.hatena.ne.jp/nishiohirokazu/20120904/1346685131'>Pythonに移植した</a>ら「<a href='http://d.hatena.ne.jp/zonu_exe/20120905/1346861740'>難読コードを読んでみよう(Python初心者向け解説) - DT戦記(zonu_exeの日記)</a>」という読解エントリーが上がって、書いた本人としても興味深く読ませていただきました。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def03",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def04",
      "text": " 最近「理解ってなんだろう」ということが気になっていて、人間が理解できていない状態から理解できている状態に変わる過程で何が起きているのかに興味があります。なので自分自身がこの変態コードを理解する過程で何を考えているかを記録してみることにしました。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def05",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def06",
      "text": " ちなみに筆者のRubyスキルがどの程度かというと…さっき仕事に使っているVMで<a href='https://github.com/yohasebe/wp2txt'>yohasebe/wp2txt</a>を使おうとしたらRubyが入っていなくて、apt-get install rubyして再度挑戦したら今度はgemとかいうものが入ってないと言われてapt-getで入らないのでインストール方法をググってましたね。gemは今回初めてインストールしました。(その後ruby1.8を入れてしまってたせいでまたコケた)",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def07",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def08",
      "text": " -----",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def09",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def0a",
      "text": " さて、まずはざっと眺めます。いくつか目につくキーワードがあります。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def0b",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def0c",
      "text": " ** at_exit",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def0d",
      "text": " at_exitはPythonにもatexitってモジュールがあって、これは「終了時に実行する」って機能なので多分似たようなもんなんだろうな。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def0e",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def0f",
      "text": " ** rescue",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def10",
      "text": " rescueはPythonやJavaでいうところのfinallyだという知識があります(注：後でコレが勘違いだと気づきます）",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def11",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def12",
      "text": " なるほど、",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def13",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def14",
      "text": " try:",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def15",
      "text": "   do_X()",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def16",
      "text": " finally:",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def17",
      "text": "   do_X()",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def18",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def19",
      "text": " という形にすれば「エラーは1箇所」というルールからどっちか片方のdo_Xが壊れててもdo_Xは1回確実に実行されるというわけですかね。だけどもtryなどの周辺部が壊れたり、do_Xが構文上おかしい形に壊れてパースの段階で構文エラーになったら実行どころの話じゃないですねぇ。そこんところどうするんだろう。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def1a",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def1b",
      "text": " ** ##",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def1c",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def1d",
      "text": " ##と二重にしておくことで、どっちか片方が消えても確実にコメントになるというわけですね。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def1e",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def1f",
      "text": " ** ##'",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def20",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def21",
      "text": " 'abc'##'と言う形にすれば、cの後の閉じ引用符が消えた場合でもコメントの後の引用符までが文字列になることで構文エラーを避けられるのだな。でもこれだけじゃaの前が壊れたらダメだなぁ。どうやって回避しているんだろう。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def22",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def23",
      "text": " ** eval eval",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def24",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def25",
      "text": " うーわ、メソッドのevalと変数のevalは別の名前空間ということですか。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def26",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def27",
      "text": " 「eval eval if eval==instance_eval」の行は「文字列evalも文字列instance_evalも書き換わっていなければ文字列evalを評価する」ってことね。このコード自体が壊れていた場合にrescueに入るのかな。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def28",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def29",
      "text": " その文字列の中身もあんまりRubyコードっぽくない顔をしているなぁ。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def2a",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def2b",
      "text": " ** gsub",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def2c",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def2d",
      "text": " なるほど、gsubで置換して元のコードを復元するのかな。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def2e",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def2f",
      "text": " >|python|",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def30",
      "text": " python> [(chr(n + 65), chr(92 if n < 1 else n+33)) for n in range(7)]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def31",
      "text": " [('A', '\\\\'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def32",
      "text": "  ('B', '\"'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def33",
      "text": "  ('C', '#'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def34",
      "text": "  ('D', '$'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def35",
      "text": "  ('E', '%'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def36",
      "text": "  ('F', '&'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def37",
      "text": "  ('G', \"'\")]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def38",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def39",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def3a",
      "text": " ** 文字列リテラル",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def3b",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def3c",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def3d",
      "text": " irb> %\\aaa\\",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def3e",
      "text": " => \"aaa\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def3f",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def40",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def41",
      "text": " ひえー、こんな文字列リテラルがあるのか。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def42",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def43",
      "text": " - \"%\\aaa\\\"\" → バックスラッシュが2つ目の引用符をエスケープするのでvalid",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def44",
      "text": " - %\\aaa\\\"\" → バックスラッシュが引用符として使われるので\"aaa\"と\"\"の結合になりvalid",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def45",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def46",
      "text": " こうやって開き引用符が消えても死なないようにしているんだな。閉じ引用符が壊れた時は先に説明した##'で守っている。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def47",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def48",
      "text": " 文字列の中身が壊れた場合は？",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def49",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def4a",
      "text": " ** rescue",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def4b",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def4c",
      "text": " よく見ると\"aaa\".rescue x rescue 42という形になっているから一つ目のrescueは文字列のメソッドだなぁ。調べよう。<a href='http://www.ruby-doc.org/core-1.9.2/String.html'>Class: String (Ruby 1.9.2)</a>にはrescueの記述がないからObjectに生えているのか？おや、<a href='http://www.ruby-doc.org/core-1.9.2/Object.html'>Class: Object (Ruby 1.9.2)</a>にもないぞ？",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def4d",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def4e",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def4f",
      "text": " irb> \"\".rescue",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def50",
      "text": " NoMethodError: undefined method `rescue' for \"\":String",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def51",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def52",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def53",
      "text": " これはわざとNoMethodErrorを起こして次のrescueで捕まえるのか？",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def54",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def55",
      "text": " （この辺を調べる過程でrescue==finallyではなくrescue==catchだと気づきました。）",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def56",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def57",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def58",
      "text": " irb> \"\".rescue x rescue 42",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def59",
      "text": " 42",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def5a",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def5b",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def5c",
      "text": " しかしそれだと「eval eval if eval==instance_eval」がうまく行かなかった時のセーフティネットはどうやって実現するんだ？てっきり文字列のrescueメソッドを呼ぶと文字列がevalされるのかと思ったがそうではないようだ。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def5d",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def5e",
      "text": " ** セーフティネット探し",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def5f",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def60",
      "text": " eval != instance_evalの時には後半は実行されないからeval=...以降（以下、この部分を「後半」と呼ぶ）を全部削って実行してみよう。おっと、これでも出力される。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def61",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def62",
      "text": " ははー、なるほど。文字列リテラル内へのコードの埋め込みか。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def63",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def64",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def65",
      "text": " irb> \"#{1+1}\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def66",
      "text": " => \"2\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def67",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def68",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def69",
      "text": " それでat_exitなわけか。このコードに突然変異が入っている場合、ここで実行されてエラーになっては困る。一方、ここに突然変異が入っているということは後半には入っていないわけだから「eval eval if eval==instance_eval」は確実に成功する。だからexit!0が入ってるのか。at_exitの仕様は知らないけど、exit!0したらat_exitで登録されたものが実行されないで即座に終了するんだろう。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def6a",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def6b",
      "text": " ** rescue",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def6c",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def6d",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def6e",
      "text": " irb> \"#{abc}\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def6f",
      "text": " NameError: undefined local variable or method `abc' for main:Object",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def70",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def71",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def72",
      "text": " なるほど。前半部のコードに突然変異が入った場合にはat_exitがa_exitになるとか起こりえるので、そこでrescueで握りつぶしていあるんだな。42ってのは単に片方消えて4でも2でもvalidなリテラルになるってことで整数リテラルの都合が良かったんだろうな。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def73",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def74",
      "text": " と、ここまでで昼休み1時間を使い切ってしまったので続きは仕事が終わってから。「Pythonでできるのかどうか」に関しては「任意引用符での文字列リテラル」がないところがかなり辛そう。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def75",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def76",
      "text": " ** 続き：目的の明確化",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def77",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def78",
      "text": " 「だいたいわかった」ような気になってきたので、ここらで目的を明確にしておきましょう。いままで目的を明確化できていませんでしたが、いくつかそれらしきものがあります。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def79",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def7a",
      "text": " - Pythonに移植できるかどうか判断する",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def7b",
      "text": " - 「人間が理解できていない状態から理解できている状態に変わる過程で何が起きているのか」の情報収集",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def7c",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def7d",
      "text": " 前者は「できない」という結論が濃厚。後者はよく考えてみると「どこまでやれば終わりか」が明確でない「悪い目標設定」ですね。「理解できている状態」に変わったことを確認するためには、やっぱ何かを作って検証するのがよいのですけど、少なくともPython実装を作るのはあんまり現実的ではなさそう。じゃあ「解説」を作るのを目標にしようかな。今のところ「だいたいどこが壊れてもエラーにはならない」ぐらいのモヤッとした説明だけど、「どこが壊れてもエラーにならず、必ず壊れる前のソースコードを出力する」を、場合分けしてQEDするのを目標にするかな～。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def7e",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def7f",
      "text": " あと、ひと通り終わってからこのログを見なおして、僕が理解の過程で何をしているかを検証する感想戦的エントリーも書こう。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def80",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def81",
      "text": " ** eval evalの動作の確認",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def82",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def83",
      "text": " eval evalが実行されればこのコードが再現されることを念のため確認しておきましょう。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def84",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def85",
      "text": " まずはsがこうやって決まります。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def86",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def87",
      "text": " s=%(B%A  C{at_exit{ZGQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def88",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def89",
      "text": " }}}ABB.rescue x rescue 42##B",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def8a",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def8b",
      "text": " Z=GQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def8c",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def8d",
      "text": " instance_Z=GQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def8e",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def8f",
      "text": " Z Z if Z==instance_Z",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def90",
      "text": " ).gsub ?Z,%[eval]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def91",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def92",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def93",
      "text": " %(...)が文字列リテラルで、それをgsubしてZをevalに置き換えています。置き換えた結果はこう",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def94",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def95",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def96",
      "text": " B%A  C{at_exit{evalGQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def97",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def98",
      "text": " }}}ABB.rescue x rescue 42##B",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def99",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def9a",
      "text": " eval=GQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def9b",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def9c",
      "text": " instance_eval=GQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def9d",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def9e",
      "text": " eval eval if eval==instance_eval",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003def9f",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa0",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa1",
      "text": " 次に7.times{|n|s.gsub! (n+65).chr,(n<1?92:n+33).chr}でA～Gを置換します。置換テーブルを再掲",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa2",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa3",
      "text": " [('A', '\\\\'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa4",
      "text": "  ('B', '\"'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa5",
      "text": "  ('C', '#'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa6",
      "text": "  ('D', '$'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa7",
      "text": "  ('E', '%'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa8",
      "text": "  ('F', '&'),",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defa9",
      "text": "  ('G', \"'\")]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defaa",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defab",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defac",
      "text": " 置換結果はこう",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defad",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defae",
      "text": " \"%\\  #{at_exit{eval'Q'##'",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defaf",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb0",
      "text": " }}}\\\"\".rescue x rescue 42##\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb1",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb2",
      "text": " eval='Q'##'",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb3",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb4",
      "text": " instance_eval='Q'##'",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb5",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb6",
      "text": " eval eval if eval==instance_eval",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb7",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb8",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defb9",
      "text": " なんでこんなことをしたかというと、特殊な意味を持つ#{...}だの%\\...\\の2つ目のバックスラッシュだのが発動してしまうのを避けたかったからですね。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defba",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defbb",
      "text": " 最後にQを置換します。s.gsub ?Q,%[(eval q=%(]+q+%[))#]。あれ？このqはどこから…",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defbc",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defbd",
      "text": " あ、そうか。Rubyの文字列は破壊的変更ができるんだった。（追記：これは脇道にそれています）",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defbe",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defbf",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc0",
      "text": " irb> x=y=\"aaa\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc1",
      "text": " => \"aaa\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc2",
      "text": " irb> y[1] = ?A",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc3",
      "text": " => \"A\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc4",
      "text": " irb> x",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc5",
      "text": " => \"aAa\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc6",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc7",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc8",
      "text": " 時系列での処理の流れでは、まずq=%(s=%(...))でqに文字列が入り、それからeval qでそれが評価される。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defc9",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defca",
      "text": " qの中身はこちら",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defcb",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defcc",
      "text": " s=%(...).gsub ?Z,%[eval]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defcd",
      "text": " 7.times{|n|s.gsub! (n+65).chr,(n<1?92:n+33).chr}",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defce",
      "text": " puts s.gsub ?Q,%[(eval q=%(]+q+%[))#]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defcf",
      "text": " $stdout.flush",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd0",
      "text": " exit!0",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd1",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd2",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd3",
      "text": " qの中身では同一の文字列の一部をsと名づける。ここでgsub!ではなくgsubが呼ばれることで、新しい文字列インスタンスができている。(追記：これは勘違いです。元から別インスタンス)それからsに対して置換を行っているけど、qとは別のインスタンスになっているからsへの破壊的変更の影響はqには及ばない。最後にQと書かれている部分にqの内容を埋め込んで出力、標準出力をフラッシュしてexitする、と。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd4",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd5",
      "text": " ** 後半部破壊調査",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd6",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd7",
      "text": " さて、まず前半部at_exitの前の#を削って、セーフティネットが動かないようにして、後半部がどう壊れたらどうなるかを見てみましょう。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd8",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defd9",
      "text": " まずこの条件比較が壊れたらNameError",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defda",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defdb",
      "text": " eval eval if eval==instance_eva",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defdc",
      "text": " ↓",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defdd",
      "text": " quine.rb:48:in `<main>': undefined local variable or method `instance_eva' for main:Object (NameError)",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defde",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defdf",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe0",
      "text": " ==が=になっちゃったらtrueになるけど、この場合他の場所はこわれてないのでeval evalで期待通りの挙動をする。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe1",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe2",
      "text": " ifやその周辺の空白が壊れてもNameError。evalや周辺の空白が壊れてもNameError。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe3",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe4",
      "text": " 文字列の中身が壊れても問題ないことは確認済み。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe5",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe6",
      "text": " 閉じ引用符が壊れたら文字列末尾のコメントが増えてeval==instance_evalが不成立になってセーフティネット行き。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe7",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe8",
      "text": " ここの文字列の開き引用符が壊れたら？",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defe9",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defea",
      "text": " instance_eval='(eval ...)#'##'",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defeb",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defec",
      "text": " なんということでしょう。その瞬間evalが発動するので比較を待つまでもなく正常に出力してexitする。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defed",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defee",
      "text": " ここの代入が壊れたら？エラーになってセーフティネット…かと思ったら違うや。instance_evalが文字列を引数として受け取ってevalするのでやはり比較を待つまでもなく正常に出力してexit。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defef",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff0",
      "text": " 変数名が壊れたら比較のタイミングでミスマッチになってセーフティネット行き。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff1",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff2",
      "text": " ** セーフティネット調査",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff3",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff4",
      "text": " 残るはここの部分",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff5",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff6",
      "text": " \"%\\  #{at_exit{eval'(eval q=%(s=%(B%A  C{at_exit{ZGQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff7",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff8",
      "text": " }}}ABB.rescue x rescue 42##B",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deff9",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deffa",
      "text": " Z=GQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deffb",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deffc",
      "text": " instance_Z=GQG##G",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deffd",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003deffe",
      "text": " Z Z if Z==instance_Z",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003defff",
      "text": " ).gsub ?Z,%[eval]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df000",
      "text": " 7.times{|n|s.gsub! (n+65).chr,(n<1?92:n+33).chr}",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df001",
      "text": " puts s.gsub ?Q,%[(eval q=%(]+q+%[))#]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df002",
      "text": " $stdout.flush",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df003",
      "text": " exit!0))#'##'",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df004",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df005",
      "text": " }}}\\\"\".rescue x rescue 42##\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df006",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df007",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df008",
      "text": " このゾーンに突然変異が入ったら、#{at_exit...}で登録された終了時命令が実行される前に、突然変異の入っていないはずの後半部が正常に出力してプログラムを終了させるはず。そうならない例外はこのゾーンに入った突然変異のせいで構文エラーが起きて実行フェーズが始まらない場合と、このゾーンの実行でエラーが起きてat_exitの登録が完了する前に死んでしまう場合。どちらも存在しないことを確認しよう。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df009",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df00a",
      "text": " まず、qの中身はどうなってもただの文字列だから問題ない。以下のコードで正常にat_exitが登録される。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df00b",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df00c",
      "text": " \"%\\  #{at_exit{p 12345}}}\\\"\".rescue x rescue 42##\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df00d",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df00e",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df00f",
      "text": " 頭の引用符が消えた時、先に確認したように%\\...\\が文字列リテラルに化けるので問題なし。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df010",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df011",
      "text": " #より前の文字が消えた時、単に文字列の変化だから問題なし。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df012",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df013",
      "text": " #や{が消えた時、at_exitが実行されなくなるが、文字列に変わるだけだからエラーは起こらず、後半部が正常に働く。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df014",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df015",
      "text": " at_exit{...}が壊れた時、実行時エラーや構文エラーが発生する。しかしこれは先に見たように2つ目のrescueが握りつぶすので問題ない。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df016",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df017",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df018",
      "text": " irb> \"#{at_exi}\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df019",
      "text": " NameError: undefined local variable or method `at_exi' for main:Object",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df01a",
      "text": " irb> \"#{at_exit{}\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df01b",
      "text": " SyntaxError: (irb):33: syntax error, unexpected tSTRING_BEG, expecting '}'",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df01c",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df01d",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df01e",
      "text": " at_exit{...}のとじかっこが壊れた時のために1つ余計に付けてある。これは \"#{\" だと2つ目の引用符が文字列の終了ではなく#{}の中身だと思ってパースを続けてしまい、rescueなどを突き破って構文エラーになるから。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df01f",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df020",
      "text": " 引用符前のバックスラッシュが壊れたら？",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df021",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df022",
      "text": " \"%\\  #{at_exit{p 12345}}}\"\".rescue x rescue 42##\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df023",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df024",
      "text": " この場合、\".rescue x rescue 42##\"が文字列リテラルに化ける。エラーが起こらず後半部が正常に稼働する。閉じ引用符が1個消えた時も同じ。行末まで文字列に化けるだけ。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df025",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df026",
      "text": " .rescueのピリオドが消えたら？この場合「エラーを起こす存在しないメソッド呼び出し」だった.rescueが、制御構文のrescueに化ける。結果 \"aaa\" rescue x となるので文字列リテラルはエラーを吐かないからrescue xが実行されない。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df027",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df028",
      "text": " rescueが壊れた場合はNameErrorになって2つ目のrescueが握りつぶす。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df029",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df02a",
      "text": " xと2つ目のrescueの間の空白が死んだ時には握りつぶせないNameErrorが出るが、その際には正常に登録されているat_exitが先に発動してexitさせるので問題ない。rescueと42の間の空白が消えた時も同様。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df02b",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df02c",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df02d",
      "text": " \"%\\  #{at_exit{p 12345}}}\\\"\".rescue xrescue 42##\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df02e",
      "text": " ↓",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df02f",
      "text": " 12345",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df030",
      "text": " quine.rb:1:in `<main>': undefined method `xrescue' for main:Object (NoMethodError)",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df031",
      "text": " # at_exitの処理の後に未キャッチ例外によるスタックトレース表示が起きている",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df032",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df033",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df034",
      "text": " 42の片方が消えても数値リテラルであることは変わらない。##の片方が消えてもコメントが始まることに変わりない。#の後の\"が消えてもコメントだから問題ない。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df035",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df036",
      "text": " 説明完了。ふー、疲れた。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df037",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df038",
      "text": " ** まとめ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df039",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df03a",
      "text": " - しょっぱなからrescueの意味を勘違いしていて普段Rubyに全然触れていないことを如実に表していますね。gem初めて入れた話なんかなくても良かったのではｗ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df03b",
      "text": " - 実はエントリーを書く前はデバッガとか構文木を表示することが必要になるだろうと思ってたんだけども、ならなかった。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df03c",
      "text": " - 1～2時間で終わらせるつもりだったけど、結局4時間掛かってしまった。あ、確定申告の準備しなきゃいけないんだった…。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df03d",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df03e",
      "text": " ** 追記",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df03f",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df040",
      "text": " >>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df041",
      "text": " ここでgsub!ではなくgsubが呼ばれることで、新しい文字列インスタンスができている。(追記：これは勘違いです。元から別インスタンス)",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df042",
      "text": " <<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df043",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df044",
      "text": " >||",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df045",
      "text": " irb(main):038:0> eval x=\"y=%[hoge];y[1]=?a\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df046",
      "text": " => \"a\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df047",
      "text": " irb(main):039:0> x",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df048",
      "text": " => \"y=%[hoge];y[1]=?a\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df049",
      "text": " irb(main):040:0> y",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df04a",
      "text": " => \"hage\"",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df04b",
      "text": " ||<",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df04c",
      "text": " ",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df04d",
      "text": " gsubに!がついてたりついてなかったりするのは関係なかった。",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df04e",
      "text": " </body>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df04f",
      "text": " <comments>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df050",
      "text": " <comment>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df051",
      "text": " <username>ku-ma-me</username>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df052",
      "text": " <body>おお、解説書かなくても書いてもらえそうですばらしい :-)<br><br>> 「任意引用符での文字列リテラル」がないところがかなり辛そう<br><br>ここはわりと枝葉で、\"\"\" とかいううらやましいやつでなんとかできると思います。<br>それよりカッコが消えて対応取れなくなるのが面倒なんですが、メソッド呼び出しのカッコを省略できないことが重荷になりそうな予感がします。</body>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df053",
      "text": " <timestamp>1392899777</timestamp>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df054",
      "text": " </comment>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df055",
      "text": " </comments>",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df056",
      "text": "",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec31aff09e00003df057",
      "text": "[はてなダイアリー 2014-02-20 https://nishiohirokazu.hatenadiary.org/archive/2014/02/20]",
      "created": 1392822000,
      "updated": 1392822000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}