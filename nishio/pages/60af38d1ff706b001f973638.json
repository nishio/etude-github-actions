{
  "id": "60af38d1ff706b001f973638",
  "title": "The Art of Unix Programming",
  "created": 1622096082,
  "updated": 1622096082,
  "lines": [
    {
      "id": "60af38d1ff706b001f973638",
      "text": "The Art of Unix Programming",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5a5",
      "text": "The Art of Unix Programming",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5a6",
      "text": "Eric Steven Raymond",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5a7",
      "text": "[https://homepage.cs.uri.edu/~thenry/resources/unix_art/index.html The Art of Unix Programming]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5a8",
      "text": ">[Basics of the Unix Philosophy]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5a9",
      "text": " > Rule of Modularity: Write simple parts connected by clean interfaces.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5aa",
      "text": " > Rule of Clarity: Clarity is better than cleverness.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5ab",
      "text": " > Rule of Composition: Design programs to be connected with other programs.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5ac",
      "text": " > Rule of Separation: Separate policy from mechanism; separate interfaces from engines.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5ad",
      "text": " > Rule of Simplicity: Design for simplicity; add complexity only where you must.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5ae",
      "text": " > Rule of Parsimony: Write a big program only when it is clear by demonstration that nothing else will do.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5af",
      "text": " > Rule of Transparency: Design for visibility to make inspection and debugging easier.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b0",
      "text": " > Rule of Robustness: Robustness is the child oftransparency and simplicity.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b1",
      "text": " > Rule of Representation: Fold knowledge into data, soprogram logic can be stupid and robust.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b2",
      "text": " > Rule of Least Surprise: In interface design, always do theleast surprising thing.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b3",
      "text": " > Rule of Silence: When a program has nothing surprising to say, it should say nothing.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b4",
      "text": " > Rule of Repair: Repair what you can â€” but when you must fail, fail noisily and as soon as possible.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b5",
      "text": " > Rule of Economy: Programmer time is expensive; conserve it in preference to machine time.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b6",
      "text": " > Rule of Generation: Avoid hand-hacking; write programs to write programs when you can.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b7",
      "text": " > Rule of Optimization: Prototype before polishing. Get it working before you optimize it.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b8",
      "text": " > Rule of Diversity: Distrust all claims for one true way.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5b9",
      "text": " > Rule of Extensibility: Design for the future, because it will be here sooner than you think.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    },
    {
      "id": "60af38d2aff09e000060e5ba",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1622096082,
      "updated": 1622096082
    }
  ]
}