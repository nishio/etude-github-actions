{
  "id": "6090ec08a287e6002291a1cd",
  "title": "Hatena2011-11-09",
  "created": 1320764400,
  "updated": 1320764400,
  "lines": [
    {
      "id": "6090ec2caff09e00003d9e1b",
      "text": "Hatena2011-11-09",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e1c",
      "text": "code:hatena",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e1d",
      "text": " <body>",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e1e",
      "text": " *1320801102*numpyのndarrayで内積と外積を計算",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e1f",
      "text": " 内積(v^t v)や行列の積はndarrayのdotメソッドでできるが、外積(v v^t)はどうやってやるんだろう…それらしきメソッドがないなぁ…と思ったらouterって関数があった。めでたしめでたし。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e20",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e21",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e22",
      "text": " In [833]: array([1, 2, 3])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e23",
      "text": " Out[833]: array([1, 2, 3])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e24",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e25",
      "text": " In [834]: v = _",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e26",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e27",
      "text": " In [835]: v.dot(v)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e28",
      "text": " Out[835]: 14",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e29",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e2a",
      "text": " In [836]: outer(v, v)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e2b",
      "text": " Out[836]: ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e2c",
      "text": " array([[1, 2, 3],",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e2d",
      "text": "        [2, 4, 6],",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e2e",
      "text": "        [3, 6, 9]])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e2f",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e30",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e31",
      "text": " *1320801173*numpyで対角行列を作る",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e32",
      "text": " 与えられた成分が対角成分に入っているような対角行列を作りたい場合、diagを使えばよい。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e33",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e34",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e35",
      "text": " In [837]: diag([1, 2, 3])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e36",
      "text": " Out[837]: ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e37",
      "text": " array([[1, 0, 0],",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e38",
      "text": "        [0, 2, 0],",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e39",
      "text": "        [0, 0, 3]])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e3a",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e3b",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e3c",
      "text": " *1320801535*NumPy+Matplotlibで散布図の頂点に色をつける",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e3d",
      "text": " 散布図のマーカーに\"+\"を指定して「あれー、色を指定しても反映されないなー」と悩んでいたが、指定した色はマーカーの塗りに使われるのであった。\"+\"だと塗りがないから色が変わらないというオチ。edgecolorを指定すればいいんだろうけどマーカーを\"o\"に変えたらなかなかかっこ良かったのでこっちにする。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e3e",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e3f",
      "text": " [f:id:nishiohirokazu:20111109101621p:image]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e40",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e41",
      "text": " scatterの引数cに各頂点の色を指定すればよい。下のコードではresp_for_each_dataが合計すると1になる2要素のベクトルになっているので、その比率で赤と緑を混ぜ合わせてcolorsを作っている。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e42",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e43",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e44",
      "text": "     red = array([1, 0, 0])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e45",
      "text": "     green = array([0, 1, 0])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e46",
      "text": "     colors = [red * r[0] + green * r[1] for r in resp_for_each_data]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e47",
      "text": "     scatter(data[:, 0], data[:, 1], c=colors, alpha=0.5, marker=\"o\")",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e48",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e49",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e4a",
      "text": " *1320808028*numpyでk-means法を実装した",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e4b",
      "text": " [f:id:nishiohirokazu:20111109120733p:image]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e4c",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e4d",
      "text": " NumPyすごいな。学習部分は実質2行だ。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e4e",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e4f",
      "text": " # E-step",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e50",
      "text": " nearest_cluster = array([argmin([norm(x - mu) for mu in mus]) for x in data])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e51",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e52",
      "text": " # M-step",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e53",
      "text": " mus = [average(data[nearest_cluster == k], axis=0) for k in range(K)]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e54",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e55",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e56",
      "text": " <hr>",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e57",
      "text": " <a href='http://d.hatena.ne.jp/n_shuyo/20100208/kmeans'>「パターン認識と機械学習」(PRML)読書会 #11 + R で K-means - Mi manca qualche giovedi`?</a>",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e58",
      "text": " >|r|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e59",
      "text": " # K-means の１ステップ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e5a",
      "text": " (mu <- t(sapply(1:K,function(k)colMeans(xx[max.col(-sapply(1:K,function(i)apply(xx,1,function(x)sum((mu[i,]-x)^2))))==k,]))));",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e5b",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e5c",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e5d",
      "text": " むむっ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e5e",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e5f",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e60",
      "text": " mu = [average(xx[array([argmin([norm(x - m) for m in mu]) for x in xx]) == k], axis=0) for k in range(K)]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e61",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e62",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e63",
      "text": " よし。(何)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e64",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e65",
      "text": " <hr>",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e66",
      "text": " クラスタ数を増やしたら枝が1本ずつ取られるかとおもいきやこんなことになった。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e67",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e68",
      "text": " [f:id:nishiohirokazu:20111109124003p:image]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e69",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e6a",
      "text": " *1320817169*numpy+matplotlibで散布図の上にバツ印をつける",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e6b",
      "text": " 「バツ印をつける」と言った場合、多くの場合言語化されていない暗黙の要求仕様がある。「バツ印はグラフの軸に影響されて横長になったりしないでほしい」とか。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e6c",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e6d",
      "text": " [f:id:nishiohirokazu:20111109144009p:image]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e6e",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e6f",
      "text": " 前回 「<a href='http://d.hatena.ne.jp/nishiohirokazu/20111107/1320660473'>NumPy+Matplotlibで散布図の上に平均と分散を表示する</a>」 ではCircleをPatchCollectionに入れて云々、とやったが、今回はそうではなくバツ印でクラスタの中心だけを表現したい。Circleを置いたのでは軸に影響されて横長になったりして期待と違う。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e70",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e71",
      "text": " [f:id:nishiohirokazu:20111111000335p:image]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e72",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e73",
      "text": " どうしたらいいかなぁ、としばらく考えてから、scatterでいいじゃないかと気づいた。散布図のデータ点は拡縮されていないからね。白で太めに書いてからその中に各クラスターの色で十字を書いている。とても手軽に実現できた。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e74",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e75",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e76",
      "text": "     clf()",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e77",
      "text": "     colors = color_for_cluster[nearest_cluster]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e78",
      "text": "     scatter(data[:, 0], data[:, 1], c=colors, alpha=0.5, marker=\"o\")",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e79",
      "text": "     scatter(mus[:, 0], mus[:, 1], s=50, linewidths=3, edgecolor=[1, 1, 1], marker=\"+\")",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e7a",
      "text": "     scatter(mus[:, 0], mus[:, 1], s=50, edgecolor=color_for_cluster, marker=\"+\")",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e7b",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e7c",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e7d",
      "text": " *1320829189*EMアルゴリズム答え合わせ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e7e",
      "text": " 自分の実装した「<a href='http://d.hatena.ne.jp/nishiohirokazu/20111108/1320724692'>Numpyで混合ガウス分布のEMアルゴリズムを実装した</a>」のコードを中谷さんの「<a href='http://d.hatena.ne.jp/n_shuyo/20100304/em_algorithm'>EM アルゴリズム実装(勉強用) - Mi manca qualche giovedi`?</a>」と照らしあわせて答え合わせしてみる。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e7f",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e80",
      "text": " まず、EMアルゴリズムってなんなのかって話を簡潔に。観測できている確率変数Xの他に観測できてない確率変数Zもある状況。それを表現するために自分で何か確率モデルを仮定する。その確率モデルのパラメータθを、観測されたデータXから考えてもっとも良さげなものを選びたい。コレが目的。数式で言えばp(X|θ)を最大にするθを求めたい。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e81",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e82",
      "text": " 但し残念なことにp(X | θ)の式は簡単には最大化できない(できるならEMアルゴリズム使わなくていい)とする。そして幸運なことに完全データの対数尤度 ln p(X, Z | θ)の最大化は簡単だと仮定する。PRMLの下巻p.166あたりの議論と持橋さんの「自然言語処理のための 変分ベイズ法」を参考に、僕が分かる範囲で簡単に書くと:",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e83",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e84",
      "text": " - p(X | θ)は簡単には最大化できないが、Jensenの不等式によってそれがある式L(q(Z), θ)より大きいことが言える",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e85",
      "text": " - θを止めてq(Z)についてLを最大化することは、LからZに関係のないln p(X|θ)をくくりだしてみると残りがKL(q||p)なので、qをpにすることで可能(E-step)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e86",
      "text": " - q(Z)を止めてθについてLを最大化することは、Lからθに無関係な分母をくくりだすと…えーとんーとQ関数ってどういう意味のものなんだろうか。完全データの対数尤度にp(Z | X, θ^)を掛けてzで和を取ったものなんだが。p(Z | X, θ^)がθに無関係な係数なので…うーん？",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e87",
      "text": " - メモ：EMアルゴリズムのMステップで、Q関数のargmax_thetaが、どうして完全データの対数尤度を微分して0ってことになるのかがわからない。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e88",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e89",
      "text": " EM アルゴリズムについて説明するのが目的ではないからこれくらいにしておいて(コピペ)ソースコードの比較に移ろう。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e8a",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e8b",
      "text": " ** データの準備",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e8c",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e8d",
      "text": " cls1 = c_[randn(100), randn(100)].dot(array([[10, 0], [0, 1]])).dot(array([[1, -1], [1, 1]]))",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e8e",
      "text": " cls2 = c_[randn(100), randn(100)].dot(array([[10, 0], [0, 1]])).dot(array([[1, 1], [-1, 1]]))",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e8f",
      "text": " data = r_[cls1, cls2]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e90",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e91",
      "text": " 中谷さんはOld Faithfulのデータを使っているけど、僕はk-meansでうまくできないデータがEMでうまくいくことを確認したかったので自分でクロスした分布を作っている。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e92",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e93",
      "text": " ** パラメータの初期化",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e94",
      "text": " >|r|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e95",
      "text": " # クラス数",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e96",
      "text": " K <- 2;",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e97",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e98",
      "text": " # 平均、共分散、混合率の初期値(正規乱数)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e99",
      "text": " mu <- matrix(rnorm(K*ncol(xx)), nrow=K);",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e9a",
      "text": " mix <- numeric(K)+1/K;",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e9b",
      "text": " sig <- list();",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e9c",
      "text": " for(k in 1:K) sig[[k]] <- diag(ncol(xx));",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e9d",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e9e",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9e9f",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea0",
      "text": " # inital parameter",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea1",
      "text": " K = 2",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea2",
      "text": " D = 2",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea3",
      "text": " mus = [array([1, 1]), array([-1, -1])]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea4",
      "text": " sigmas = [eye(2), eye(2)]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea5",
      "text": " pis = [0.5, 0.5]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea6",
      "text": " assert len(mus) == K and all(len(mu) == D for mu in mus)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea7",
      "text": " assert len(sigmas) == K and all(s.shape == (D, D) for s in sigmas)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea8",
      "text": " assert len(pis) == K",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ea9",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eaa",
      "text": " 中谷さんのはちゃんとパラメータを変えられるように作ってあるな。僕のは、ハードコーディングだった。この機会に修正しておこう。実はk-meansを実装するときにそっちでは2個以上のクラスターに対応したんだった。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eab",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eac",
      "text": " # inital parameter",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ead",
      "text": " K = 2",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eae",
      "text": " D = 2",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eaf",
      "text": " _degrees = array(range(K)) * 2 * pi / K",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb0",
      "text": " mus = array([array([sin(th), cos(th)]) for th in _degrees])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb1",
      "text": " sigmas = [eye(D) for k in range(K)]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb2",
      "text": " pis = [1.0 / K] * K",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb3",
      "text": " assert len(mus) == K and all(len(mu) == D for mu in mus)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb4",
      "text": " assert len(sigmas) == K and all(s.shape == (D, D) for s in sigmas)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb5",
      "text": " assert len(pis) == K",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb6",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb7",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb8",
      "text": " ** ガウス分布の密度関数",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eb9",
      "text": " >|r|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eba",
      "text": " # 多次元正規分布密度関数(パッケージ使えって？)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ebb",
      "text": " dmnorm <- function(x,mu,sig) {",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ebc",
      "text": " \tD <- length(mu);",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ebd",
      "text": " \t1/((2 * pi)^D * sqrt(det(sig))) * exp(- t(x-mu) %*% solve(sig) %*% (x-mu) / 2)[1];",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ebe",
      "text": " }",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ebf",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec0",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec1",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec2",
      "text": " def dens_gauss(x, mu, sigma):",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec3",
      "text": "     \"\"\"",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec4",
      "text": "     calculate gauss distribution's density",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec5",
      "text": "     \"\"\"",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec6",
      "text": "     Z = sqrt(2 * pi) ** x.size * sqrt(norm(sigma))",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec7",
      "text": "     v = x - mu",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec8",
      "text": "     return exp(-0.5 * v.dot(inv(sigma)).dot(v)) / Z",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ec9",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eca",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ecb",
      "text": " まあ同じだよね、と言おうとしたけど、中谷さんの方は2 * piに平方根がかかってないように見えるなぁ。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ecc",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ecd",
      "text": " そして僕の方はnormじゃなくてdetを使うべきだったね。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ece",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ecf",
      "text": " In [1080]: norm(eye(2))",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed0",
      "text": " Out[1080]: 1.4142135623730951",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed1",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed2",
      "text": " In [1081]: det(eye(2))",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed3",
      "text": " Out[1081]: 1.0",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed4",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed5",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed6",
      "text": " ** Eステップ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed7",
      "text": " >|r|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed8",
      "text": " # EM アルゴリズムの E ステップ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ed9",
      "text": " Estep <- function(xx, mu, sig, mix) {",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eda",
      "text": " \tK <- nrow(mu);",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9edb",
      "text": " \tt(apply(xx, 1, function(x){",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9edc",
      "text": " \t\tnumer <- sapply(1:K, function(k) {",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9edd",
      "text": " \t\t\tmix[k] * dmnorm(x, mu[k,], sig[[k]])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ede",
      "text": " \t\t});",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9edf",
      "text": " \t\tnumer / sum(numer);",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee0",
      "text": " \t}))",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee1",
      "text": " }",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee2",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee3",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee4",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee5",
      "text": " def resp(x, pis, mus, sigmas):",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee6",
      "text": "     \"\"\"",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee7",
      "text": "     given: vector x, list of mu, list of sigma",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee8",
      "text": "     return: array of responsibility",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ee9",
      "text": "     eq.9.13",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eea",
      "text": "     \"\"\"",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eeb",
      "text": "     v = array([p * dens_gauss(x, mu, sigma) ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eec",
      "text": "                for p, mu, sigma in zip(pis, mus, sigmas)])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eed",
      "text": "     s = v.sum()",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eee",
      "text": "     return v / s",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eef",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef0",
      "text": " (...snip...)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef1",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef2",
      "text": " # E-step",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef3",
      "text": " # \\gamma(z_nk)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef4",
      "text": " # responsibility",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef5",
      "text": " resp_for_each_data = array([resp(x, mus, sigmas) for x in data])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef6",
      "text": " assert len(resp_for_each_data) == N",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef7",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef8",
      "text": " # eq 9.18, Nk",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9ef9",
      "text": " num_for_each_cluster = array([col.sum() for col in resp_for_each_data.transpose()]) ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9efa",
      "text": " assert len(num_for_each_cluster) == K",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9efb",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9efc",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9efd",
      "text": " ほぼ同じ。中谷さんはNkをMステップの中で求めてるのね。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9efe",
      "text": " そこだけ切り出してくるとこんな感じ。column方向に足す関数があるのか。Numpyにも探せば有りそうだなぁ。追記、sum(1)でok",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9eff",
      "text": " >|r|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f00",
      "text": " N_k <- colSums(gamma_nk);",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f01",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f02",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f03",
      "text": " ** Mステップ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f04",
      "text": " *** π",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f05",
      "text": " >|r|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f06",
      "text": " new_mix <- N_k / N;",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f07",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f08",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f09",
      "text": " >|pytohn|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f0a",
      "text": " # eq.9.22 update \\pi_k",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f0b",
      "text": " def update_pis(num_for_each_cluster):",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f0c",
      "text": "     return num_for_each_cluster / N",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f0d",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f0e",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f0f",
      "text": " まあそれ以外の書きようがないよね。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f10",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f11",
      "text": " *** μ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f12",
      "text": " >|r|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f13",
      "text": " new_mu <- (t(gamma_nk) %*% xx) / N_k;",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f14",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f15",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f16",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f17",
      "text": " # update parameters, M-step",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f18",
      "text": " # eq 9.17, update \\mu_k",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f19",
      "text": " def update_mus(resp_for_each_data, data, num_for_each_cluster):",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f1a",
      "text": "     return [",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f1b",
      "text": "         resp_for_each_data[:, k].dot(data)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f1c",
      "text": "         / num_for_each_cluster[k]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f1d",
      "text": "         for k in range(K)]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f1e",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f1f",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f20",
      "text": " あ、そうか、同じ長さ同士の配列で割り算をすればエレメントごとの割り算になるのか。なるほど。書きなおそう。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f21",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f22",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f23",
      "text": " resp_for_each_data.T.dot(data) / num_for_each_cluster",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f24",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f25",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f26",
      "text": " あれ、結果が異なる。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f27",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f28",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f29",
      "text": " (resp_for_each_data.T.dot(data).T / num_for_each_cluster).T",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f2a",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f2b",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f2c",
      "text": " これなら一致するけどなんでだ？？",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f2d",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f2e",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f2f",
      "text": " In [1078]: array([[1, 1], [1, 1]]) / array([1.0, 2.0])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f30",
      "text": " Out[1078]: ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f31",
      "text": " array([[ 1. ,  0.5],",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f32",
      "text": "        [ 1. ,  0.5]])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f33",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f34",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f35",
      "text": " あ、そうなのか。「1次元目の長さが同じであればエレメントワイズになる」という解釈が間違いで、shapeが違うならブロードキャストになるのね。だから転置してから割って、結果を転置して戻せば機体と同じものになる、と。でもそんなコード嫌なので、んー、どうするのがエレガントかなぁ。良い書き方がありそうだけどとりあえず今は素直にzipで書いておくか。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f36",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f37",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f38",
      "text": " array([v / s for v, s in zip(resp_for_each_data.T.dot(data), num_for_each_cluster)])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f39",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f3a",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f3b",
      "text": " *** Σ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f3c",
      "text": " >||",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f3d",
      "text": " \tnew_sig <- list();",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f3e",
      "text": " \tfor(k in 1:K) {",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f3f",
      "text": " \t\tsig <- matrix(numeric(D^2), D);",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f40",
      "text": " \t\tfor(n in 1:N) {",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f41",
      "text": " \t\t\tx <- xx[n,] - new_mu[k,];",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f42",
      "text": " \t\t\tsig <- sig + gamma_nk[n, k] * (x %*% t(x));",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f43",
      "text": " \t\t}",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f44",
      "text": " \t\tnew_sig[[k]] <- sig / N_k[k]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f45",
      "text": " \t}",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f46",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f47",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f48",
      "text": " >|python|",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f49",
      "text": " # eq. 9.19, update \\Sigma_k",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f4a",
      "text": " def update_sigmas(resp_for_each_data, data, mus, num_for_each_cluster):",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f4b",
      "text": "     return [",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f4c",
      "text": "         array([resp_for_each_data[n, k] ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f4d",
      "text": "                * outer(data[n] - mus[k], data[n] - mus[k])",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f4e",
      "text": "                for n in range(N)]).sum(0)",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f4f",
      "text": "         / num_for_each_cluster[k] for k in range(K)]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f50",
      "text": " ||<",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f51",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f52",
      "text": " 僕がsum(0)、つまり0軸目方向のsumで合算しているところを中谷さんはforで足しあわせている。そのかわり僕は2回書いちゃってるdata[n] - mus[k]を中谷さんはxに代入していて式が読みやすいかも。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f53",
      "text": " ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f54",
      "text": " ** まとめ",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f55",
      "text": " 同じ内容を見ないで実装してからあとで照らし合わせると結構勉強になる。あとRとNumpyは似ている。",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f56",
      "text": " </body>",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f57",
      "text": "",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2caff09e00003d9f58",
      "text": "[はてなダイアリー 2011-11-09 https://nishiohirokazu.hatenadiary.org/archive/2011/11/09]",
      "created": 1320764400,
      "updated": 1320764400,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}