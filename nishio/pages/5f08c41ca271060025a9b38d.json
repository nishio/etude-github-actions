{
  "id": "5f08c41ca271060025a9b38d",
  "title": "starry sky tree",
  "created": 1594410015,
  "updated": 1594606344,
  "lines": [
    {
      "id": "5f08c41ca271060025a9b38d",
      "text": "starry sky tree",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594410015,
      "updated": 1594410015
    },
    {
      "id": "5f08c41eaff09e00004a711e",
      "text": "https://gist.github.com/qnighy/512745",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594410015,
      "updated": 1594410016
    },
    {
      "id": "5f0bbe65aff09e00009b59a0",
      "text": ">(a) この呼称は日本情報オリンピック参加者の一部による呼称であり、日本情報オリンピック2009年の春合宿の問題「Starry Sky」で必要なデータ構造であったことに由来する。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594605158,
      "updated": 1594605173
    },
    {
      "id": "5f0bbe74aff09e00009b59a1",
      "text": "> (b) Starry Sky木はいくつかの実装方法があり、それらの総称にすぎない。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594605173,
      "updated": 1594605173
    },
    {
      "id": "5f0bbe75aff09e00009b59a2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594605174,
      "updated": 1594605174
    },
    {
      "id": "5f0bc020aff09e0000066799",
      "text": "https://beet-aizu.hatenablog.com/entry/2017/12/01/225955",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594605601,
      "updated": 1594605602
    },
    {
      "id": "5f0bc020aff09e000006679a",
      "text": ">遅延セグ木が使えるならあまり必要はない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594605601,
      "updated": 1594606340
    },
    {
      "id": "5f0bc29baff09e00009b59a3",
      "text": "> 操作が可換な場合に遅延伝播をしないことで実装量が減って定数倍軽くなります。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594606236,
      "updated": 1594606247
    },
    {
      "id": "5f0bc2aaaff09e00009b59a4",
      "text": "[遅延伝播segment木]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594606251,
      "updated": 1594606344
    },
    {
      "id": "5f0bc306aff09e00009b59a5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594606342,
      "updated": 1594606342
    },
    {
      "id": "5f08c420aff09e00004a7120",
      "text": "https://kimiyuki.net/blog/2017/01/17/segment-tree-requirements/",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594410016,
      "updated": 1594410029
    },
    {
      "id": "5f08c42daff09e00004a7121",
      "text": ">区間演算側が加算で区間総和側がmaxのstarry sky treeが典型例",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594410030,
      "updated": 1594410077
    },
    {
      "id": "5f08c41faff09e00004a711f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594410016,
      "updated": 1594410016
    }
  ]
}