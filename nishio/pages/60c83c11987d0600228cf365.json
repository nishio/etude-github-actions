{
  "id": "60c83c11987d0600228cf365",
  "title": "そすう3",
  "created": 1623735321,
  "updated": 1623764300,
  "lines": [
    {
      "id": "60c83c11987d0600228cf365",
      "text": "そすう3",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735321,
      "updated": 1623764124
    },
    {
      "id": "60c8a9d4aff09e0000b0bc8a",
      "text": "[https://gyazo.com/f8fc916a62dfd0b10c6278774c52f865]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623763413,
      "updated": 1623763469
    },
    {
      "id": "60c8a9d4aff09e0000b0bc8b",
      "text": "[https://gyazo.com/aac9cc6742493f26a54b02e877b82c86]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623763413,
      "updated": 1623763417
    },
    {
      "id": "60c8a9d7aff09e0000b0bc8c",
      "text": "[https://gyazo.com/80f8a06e8e7fa3e7585e9bb59c395be0]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623763417,
      "updated": 1623764023
    },
    {
      "id": "60c8ac37aff09e0000b0bc8e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623764023,
      "updated": 1623764023
    },
    {
      "id": "60c8ac3aaff09e0000b0bc8f",
      "text": "log",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623764026,
      "updated": 1623764027
    },
    {
      "id": "60c83c19aff09e0000796901",
      "text": ">[nishio https://twitter.com/nishio/status/1404460190951346179]: わりざん (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735321,
      "updated": 1623763104
    },
    {
      "id": "60c8a85baff09e0000b0bc84",
      "text": "\t[https://gyazo.com/f0ce28295bfe56faa8bfa63a5014e5a6]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623763036,
      "updated": 1623763038
    },
    {
      "id": "60c83ca2aff09e000079694d",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404462089637298186]: わりざんってタイトルだが元々の目的としては余りの計算ノードンがない件。あまりの計算自体は「引けるだけ引く」という仕組み。カウンタに特定の値を1フレームでストアするのに掛け算を使うのと、リセットの次のフレームでストアをするための1フレーム遅延を「NOT+0から」でやるのが面白ポイントかと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763004
    },
    {
      "id": "60c83ca2aff09e000079694f",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404463611737559040]: 1フレームだけ1が来る信号線にNOTと「0から変わったとき」をつけると、1フレーム遅延した信号線ができる。前者でカウンタのリセットをし、後者を大きな値の流れてる信号線に掛け算してカウンタの加算に入れれば、カウンタにその大きな値をストアできる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763047
    },
    {
      "id": "60c83ca2aff09e0000796950",
      "text": "　追記、下の方で他のパターンも出てくる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623764300
    },
    {
      "id": "60c8ad20aff09e000074851c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623764256,
      "updated": 1623764256
    },
    {
      "id": "60c83ca2aff09e0000796952",
      "text": ">[nishio https://twitter.com/nishio/status/1404472472703934466]: はじプロでの競プロお題を思いついてしまったが多分これいきなりD問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623735459
    },
    {
      "id": "60c83ca2aff09e0000796956",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404476048566226948]: 「3桁以下の素数を全て求めよ。すべて求めるとは、1つの数字表示ブロックが全ての素数を1フレーム以上表示し、素数でない数を表示しないことを指す。」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763055
    },
    {
      "id": "60c83ca2aff09e0000796957",
      "text": "\t>3桁にしたことで定義域に比例したノードンを使えなくてハードルが上がってる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763060
    },
    {
      "id": "60c83ca2aff09e0000796959",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404477102439550976]: 「2桁以下の」だったら100個ノードン並べてエラトステネスすることが可能になって問題がやさしくなる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763066
    },
    {
      "id": "60c8a87aaff09e0000b0bc86",
      "text": " > ただ、3桁以下すべてだと多少の頑張りではSwitchで録画できる30秒に収まらなさそうなのが問題。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623763066,
      "updated": 1623763066
    },
    {
      "id": "60c8a884aff09e0000b0bc87",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623763077,
      "updated": 1623763077
    },
    {
      "id": "60c83ca2aff09e000079695c",
      "text": ">[nishio https://twitter.com/nishio/status/1404602812193931264]: 入力が奇数の素数である時だけ表示する回路ができたけど、レギュレーションの「素数以外を表示しない」は「素数と0以外を表示しない」に緩めないと素数計算と無関係なところで難易度が上がってしまうことに気づいた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763075
    },
    {
      "id": "60c83ca2aff09e000079695d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623735459
    },
    {
      "id": "60c83ca2aff09e000079695e",
      "text": ">[nishio https://twitter.com/nishio/status/1404610795988676608]: そすう (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763113
    },
    {
      "id": "60c83ca2aff09e0000796960",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404611202714537985]: 11以上の素数しか出せない(早すぎる最適化は諸悪の根源)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763115
    },
    {
      "id": "60c83ca2aff09e0000796962",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763139
    },
    {
      "id": "60c83ca2aff09e000079696a",
      "text": ">[nishio https://twitter.com/nishio/status/1404669347751100417]: ひぜろふぃるた (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763153
    },
    {
      "id": "60c83ca2aff09e000079696c",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404669812249268224]: photo",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763174
    },
    {
      "id": "60c83ca2aff09e000079696d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623735459
    },
    {
      "id": "60c83ca2aff09e000079696e",
      "text": ">[nishio https://twitter.com/nishio/status/1404672485207932928]: そすう2 (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763181
    },
    {
      "id": "60c83ca2aff09e0000796970",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404672705362685952]: 30秒でギリギリ100まで到達できた(11からスタートしてるけど)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623735459,
      "updated": 1623763183
    },
    {
      "id": "60c8a7d5aff09e0000b0bc41",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762902
    },
    {
      "id": "60c8a7d5aff09e0000b0bc42",
      "text": ">[nishio https://twitter.com/nishio/status/1404683377660227588]: 変数がないってツイートを見かけたけどカウンターがあるでしょ。1フレームのパルスT1でカウンターのリセットを叩いて1フレーム遅延させたT2とXの掛け算をカウンターの増分にしたらXの値が保存できるよ。後でサンプルつくる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762902
    },
    {
      "id": "60c8a7d6aff09e0000b0bc43",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763190
    },
    {
      "id": "60c8a7d6aff09e0000b0bc46",
      "text": ">[nishio https://twitter.com/nishio/status/1404734949094133762]: カウンターの入力と出力の間には1フレームの遅れがある(NOTなどにはない)ので要注意、うまく使う手もあるかも",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762902
    },
    {
      "id": "60c8a7d6aff09e0000b0bc4a",
      "text": "\t>[uchan_nos https://twitter.com/uchan_nos/status/1404735313193226252]: 遅れがあれば、シフトレジスタみたいに順々に数をずらしていくことが可能？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763198
    },
    {
      "id": "60c8a7d6aff09e0000b0bc4c",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404739962940006400]: それに近いことはできるけど、値のセットがなくて加算と減算しかないから一工夫必要",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763200
    },
    {
      "id": "60c8a7d6aff09e0000b0bc4e",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404742526385332225]: ここまではできてる。 (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763209
    },
    {
      "id": "60c8a7d6aff09e0000b0bc50",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404743122815311879]: b+=a-bすればいいのかな…(減算の時間コストが0の不思議な世界)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763211
    },
    {
      "id": "60c8a7d6aff09e0000b0bc52",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404745482509815809]: りんぐばっふぁ  (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763217
    },
    {
      "id": "60c8a7d6aff09e0000b0bc54",
      "text": "\t\t>[nishio https://twitter.com/nishio/status/1404745785036754948]: できた！！ > シフトレジスタみたいに順々に数をずらしていく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763240
    },
    {
      "id": "60c8a7d6aff09e0000b0bc56",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404747029687930881]: 減算コスト0ってのを活用すると「リセットして追加」で2フレーム使ってるこの回路も1フレームでいけるようになるな > [nishio https://twitter.com/nishio/status/1404669347751100417]: ひぜろふぃるた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763260
    },
    {
      "id": "60c8a7d6aff09e0000b0bc59",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762902
    },
    {
      "id": "60c8a7d6aff09e0000b0bc5c",
      "text": ">[nishio https://twitter.com/nishio/status/1404747673807122438]: あっ、これ頭いい。自分自身の出力を減算すればいいのか:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763291
    },
    {
      "id": "60c8a7d6aff09e0000b0bc5e",
      "text": " >[OffGao6502 https://twitter.com/OffGao6502/status/1404746483686002692]: 「変数」が無いとお嘆きの方へ、参考になれば。。。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762980
    },
    {
      "id": "60c8a7d6aff09e0000b0bc60",
      "text": " >自由なタイミングで値を代入する仕組みを、「カウンタ」「けいさん(×)」「0.00/1.00の2値シグナル」の3ノードンで作れますよ。\thttps://twitter.com/i/status/1404746483686002692",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762980
    },
    {
      "id": "60c8a7d6aff09e0000b0bc64",
      "text": " >[OffGao6502 https://twitter.com/OffGao6502/status/1404748070504386562]: ごめん、入力も塞がないといけないから4ノードンか。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762980
    },
    {
      "id": "60c8a7d6aff09e0000b0bc65",
      "text": " >1.00シグナルが来た瞬間に",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762980
    },
    {
      "id": "60c8a81faff09e0000b0bc7d",
      "text": " > ・カウンタの値をカウンタの値で「減らす」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762975,
      "updated": 1623762980
    },
    {
      "id": "60c8a81faff09e0000b0bc7e",
      "text": " > （リセット）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762975,
      "updated": 1623762980
    },
    {
      "id": "60c8a81faff09e0000b0bc7f",
      "text": " > ・カウンタの値を代入したい値で「増やす」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762975,
      "updated": 1623762980
    },
    {
      "id": "60c8a81faff09e0000b0bc80",
      "text": " > （実質代入）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762975,
      "updated": 1623762980
    },
    {
      "id": "60c8a81faff09e0000b0bc81",
      "text": " > を同時処理させて、変数代入を実現しています。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762975,
      "updated": 1623762980
    },
    {
      "id": "60c8a7d6aff09e0000b0bc6e",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404763552599089162]: りんぐばっふぁ2 (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763311
    },
    {
      "id": "60c8a7d6aff09e0000b0bc70",
      "text": "\t\t>[nishio https://twitter.com/nishio/status/1404764122965708805]: リングバッファをマイナスを使わないで実現してみたが、それは代わりに掛け算とクロック線の接続が必要になるのであんまり綺麗にはならなかったな…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763319
    },
    {
      "id": "60c8a7d6aff09e0000b0bc71",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762902
    },
    {
      "id": "60c8a7d6aff09e0000b0bc72",
      "text": ">[nishio https://twitter.com/nishio/status/1404782935627026433]: そすう3 (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763327
    },
    {
      "id": "60c8a7d6aff09e0000b0bc74",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404783113427832839]: 30秒に収まらなかったか。前半を撮り直そう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763329
    },
    {
      "id": "60c8a7d6aff09e0000b0bc76",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404784359698173955]: 素数3 前半 (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763362
    },
    {
      "id": "60c8a7d6aff09e0000b0bc78",
      "text": "\t>[nishio https://twitter.com/nishio/status/1404785440515788807]: クロック周波数を倍にして30秒に収めた！ (movie)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623763379
    },
    {
      "id": "60c8a7d6aff09e0000b0bc79",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1623762902,
      "updated": 1623762902
    }
  ]
}