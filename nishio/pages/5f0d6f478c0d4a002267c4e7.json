{
  "id": "5f0d6f478c0d4a002267c4e7",
  "title": "双対セグメント木",
  "created": 1594715977,
  "updated": 1601195229,
  "lines": [
    {
      "id": "5f0d6f478c0d4a002267c4e7",
      "text": "双対セグメント木",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594715977,
      "updated": 1594715977
    },
    {
      "id": "5f0d6f48aff09e0000168a8d",
      "text": "[双対セグメント木という概念について - うさぎ小屋 https://kimiyuki.net/blog/2019/02/22/dual-segment-tree/]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594715977,
      "updated": 1594715977
    },
    {
      "id": "5f0d6f48aff09e0000168a8e",
      "text": "[双対セグメント木 / 遅延セグメント木を半分にするテク - HackMD https://hackmd.io/@tatyam-prime/DualSegmentTree]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1594715977,
      "updated": 1601189935
    },
    {
      "id": "5f70382faff09e00005256d2",
      "text": "\t僕が双対セグメント木だと思ってたもの、半分の遅延セグメント木なのでは",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601189936,
      "updated": 1601192176
    },
    {
      "id": "5f704c9eaff09e00006c96fc",
      "text": "  [双対セグメント木の下への伝搬]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195185
    },
    {
      "id": "5f704c9faff09e00006c96ff",
      "text": "   >作用が可換だと無意識に前提した実装にしていた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195185
    },
    {
      "id": "5f704c9faff09e00006c9700",
      "text": "   >可換でない\"上書き作用\"の時に正しく動作しない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195185
    },
    {
      "id": "5f704c9faff09e00006c9701",
      "text": "   >タイムスタンプを付与することで可換なmax演算に変えた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195185
    },
    {
      "id": "5f704c9faff09e00006c9703",
      "text": "  これが下記に対応するのでは",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195225
    },
    {
      "id": "5f704c9faff09e00006c9705",
      "text": "   >双対セグメント木",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195204
    },
    {
      "id": "5f704c9faff09e00006c9706",
      "text": "   >作用が 区間加算・区間chmin のような 作用させる順番を入れ替えても結果が変わらない 作用のとき、作用側を通常のセグメント木のように処理することができ、若干速い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195204
    },
    {
      "id": "5f704c9faff09e00006c9707",
      "text": "   >区間代入のやり方",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195204
    },
    {
      "id": "5f704c9faff09e00006c9708",
      "text": "   >(時間, 代入する値) をペアにして chmax するとできる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195204
    },
    {
      "id": "5f704c9faff09e00006c9709",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1601195167,
      "updated": 1601195202
    }
  ]
}