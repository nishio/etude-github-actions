{
  "id": "627d47aca19a46001d1db9ae",
  "title": "オブジェクト思考と「間」の概念",
  "created": 1652377518,
  "updated": 1652377712,
  "lines": [
    {
      "id": "627d47aca19a46001d1db9ae",
      "text": "オブジェクト思考と「間」の概念",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377518,
      "updated": 1652377598
    },
    {
      "id": "627d47feaff09e00006ac0fa",
      "text": "http://wiki.c2.com/?AlanKayOnMessaging",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377598,
      "updated": 1652377712
    },
    {
      "id": "627d47baaff09e00006ac0ca",
      "text": "(DeepL)前回のOOPSLAで、Smalltalkは文法でもクラスでもないということを皆に思い出させるために、私は少し苦労したことを優しく思い出させるだけです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377530,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0cb",
      "text": " Smalltalkは、その構文やクラスライブラリだけではないのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0cc",
      "text": " スモールトークは構文でもクラスライブラリでもなく、クラスについてでさえないのです。昔、この話題のために「オブジェクト」という造語を作ったのは私です。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0cd",
      "text": " このトピックのために「オブジェクト」という言葉を作ったのは残念です。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0ce",
      "text": " というのも、その方が多くの人がより小さなアイデアに目を向けてくれるからです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0cf",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d0",
      "text": " 大きなアイデアは「メッセージング」であり、それこそがSmalltalk/Squeakのカーネル",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d1",
      "text": " これは、私たちがゼロックスPARCの時代に完成させることができなかったものです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d2",
      "text": " Xerox PARCの時代には完成しなかったものです）。日本語には「間」という言葉がありますが、これは「その間にあるもの」という意味です。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d3",
      "text": " 日本語には「間」という言葉がありますが、英語では「interstitial」（間質性）と言うのが近いかもしれません。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d4",
      "text": " 偉大で成長可能なシステムを作る上で重要なのは、モジュールの内部特性よりも、モジュールがどのようにコミュニケーションをとるかを設計することなのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d5",
      "text": " を設計することです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d6",
      "text": " ということです。インターネットを考えてみてください。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d7",
      "text": " インターネットを考えてみてください。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d8",
      "text": " インターネットを考えてみてください。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0d9",
      "text": " ということです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0da",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0db",
      "text": " もしあなたがメッセージングだけに焦点を当て、優れたメタシステムなら",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0dc",
      "text": " オブジェクトで使用される様々な第2レベルのアーキテクチャを遅滞なく結合することができることを理解すれば",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0dd",
      "text": " このスレッドでの言語、UI、OSに基づく議論の多くは、実に無意味なものです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0de",
      "text": " このスレッドでの言語、UI、OSに基づく議論の多くは、実に無意味なものです。これが、前回のOOPSLAで私が不満を漏らした理由です。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0df",
      "text": " PARCではSmalltalkを絶えず変化させ、常に仕掛品として扱ったのに対し",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e0",
      "text": " STが大きな世界に出たとき、それはほとんど「学ぶべきもの」として扱われました。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e1",
      "text": " まるでPascalやAlgolのように、「学ぶべきもの」として受け止められていたのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e2",
      "text": " Smalltalk-80がOOPの次の優れたバージョンに変異することはなかったのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e3",
      "text": " 現在のプログラミングの低レベル化を考えると、これは本当に間違いだと思います。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e4",
      "text": " これは間違いだと思います。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e6",
      "text": " また、完全なメタシステムを持つことだけが重要なのではない、ということも指摘した覚えがあります。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e7",
      "text": " 完全なメタシステムを持つだけでなく、メタバウンダリーを越えるためのフェンスを持つことが",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e8",
      "text": " メタバウンダリー（境界）を守るフェンスも重要です。このフェンスの最も単純なものが、私の最初の遠征の動機の1つでした。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0e9",
      "text": " 60年代後半、私が最初に探検した動機の一つです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0ea",
      "text": " 代入は関数からメタレベルレベルで変化したものであり、したがって同じレベルで扱うべきでないという認識です。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0eb",
      "text": " 代入は関数からのメタレベルの変化であり、同じレベルで扱うべきでないということに気づいたのです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0ec",
      "text": " これは、この種の状態の変化をカプセル化し、無闇に行わせないようにする動機のひとつでした。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0ed",
      "text": " これが、この種の状態変更をカプセル化し、自由にできないようにする動機のひとつでした。私は、他のメタシングを通常のプログラミングの過程で行えるようにするシステムは",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0ee",
      "text": " 通常のプログラミングの過程で、他のメタシング（例えば、継承の意味やインスタンスを変更するようなこと）ができるシステムだと言えるでしょう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0ef",
      "text": " とかインスタンスとかを変えるような）他のメタシングを普通のプログラミングの過程で許してしまうようなシステムは、悪いデザインだと思います。(私は、システムはこれらのことを許すべきだと考えています。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f0",
      "text": " しかし、そのデザインは、そのようなことを許さないための明確なフェンスが存在するようなものであるべきです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f1",
      "text": " というような、明確なフェンスがあるような設計であるべきだと思います)。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f3",
      "text": " 私は、スマートで有能な",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f4",
      "text": " Squeakのリストはメタプログラミングの次のステップが何であるかについてもっと考えるべきでしょう。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f5",
      "text": " どうすれば、大きなパワー、簡潔さ、そして意味の安全性を得ることができるのでしょうか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f7",
      "text": " みんなに乾杯。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377534
    },
    {
      "id": "627d47bdaff09e00006ac0f9",
      "text": " アラン",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377534,
      "updated": 1652377539
    },
    {
      "id": "627d47adaff09e00006ac06a",
      "text": ">Just a gentle reminder that I took some pains at the last OOPSLA to try to",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377518,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac09b",
      "text": ">  remind everyone that Smalltalk is not only NOT its syntax or the class",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac09c",
      "text": ">  library, it is not even about classes. I'm sorry that I long ago coined the",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac09d",
      "text": ">  term \"objects\" for this topic because it gets many people to focus on the",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac09e",
      "text": ">  lesser idea.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac09f",
      "text": "> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a0",
      "text": ">  The big idea is \"messaging\" - that is what the kernal of Smalltalk/Squeak",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a1",
      "text": ">  is all about (and it's something that was never quite completed in our",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a2",
      "text": ">  Xerox PARC phase). The Japanese have a small word - ma - for \"that which",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a3",
      "text": ">  is in between\" - perhaps the nearest English equivalent is \"interstitial\".",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a4",
      "text": ">  The key in making great and growable systems is much more to design how its",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a5",
      "text": ">  modules communicate rather than what their internal properties and",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a6",
      "text": ">  behaviors should be. Think of the internet - to live, it (a) has to allow",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a7",
      "text": ">  many different kinds of ideas and realizations that are beyond any single",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a8",
      "text": ">  standard and (b) to allow varying degrees of safe interoperability between",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0a9",
      "text": ">  these ideas.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0aa",
      "text": "> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0ab",
      "text": ">  If you focus on just messaging - and realize that a good metasystem can",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0ac",
      "text": ">  late bind the various 2nd level architectures used in objects - then much",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0ad",
      "text": ">  of the language-, UI-, and OS based discussions on this thread are really",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0ae",
      "text": ">  quite moot. This was why I complained at the last OOPSLA that - whereas at",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0af",
      "text": ">  PARC we changed Smalltalk constantly, treating it always as a work in",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b0",
      "text": ">  progress - when ST hit the larger world, it was pretty much taken as",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b1",
      "text": ">  \"something just to be learned\", as though it were Pascal or Algol.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b2",
      "text": ">  Smalltalk-80 never really was mutated into the next better versions of OOP.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b3",
      "text": ">  Given the current low state of programming in general, I think this is a",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b4",
      "text": ">  real mistake.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b5",
      "text": "> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b6",
      "text": ">  I think I recall also pointing out that it is vitally important not just to",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b7",
      "text": ">  have a complete metasystem, but to have fences that help guard the crossing",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b8",
      "text": ">  of metaboundaries. One of the simplest of these was one of the motivations",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0b9",
      "text": ">  for my original excursions in the late sixties: the realization that",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0ba",
      "text": ">  assignments are a metalevel change from functions, and therefore should not",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0bb",
      "text": ">  be dealt with at the same level - this was one of the motivations to",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0bc",
      "text": ">  encapsulate these kinds of state changes, and not let them be done willy",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0bd",
      "text": ">  nilly. I would say that a system that allowed other metathings to be done",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0be",
      "text": ">  in the ordinary course of programming (like changing what inheritance",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0bf",
      "text": ">  means, or what is an instance) is a bad design. (I believe that systems",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c0",
      "text": ">  should allow these things, but the design should be such that there are",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c1",
      "text": ">  clear fences that have to be crossed when serious extensions are made.)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c2",
      "text": "> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c3",
      "text": ">  I would suggest that more progress could be made if the smart and talented",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c4",
      "text": ">  Squeak list would think more about what the next step in metaprogramming",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c5",
      "text": ">  should be - how can we get great power, parsimony, AND security of meaning?",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c6",
      "text": "> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c7",
      "text": ">  Cheers to all,",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c8",
      "text": "> ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b2aff09e00006ac0c9",
      "text": ">  Alan",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377522,
      "updated": 1652377522
    },
    {
      "id": "627d47b1aff09e00006ac09a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1652377521,
      "updated": 1652377521
    }
  ]
}