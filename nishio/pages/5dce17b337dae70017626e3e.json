{
  "id": "5dce17b337dae70017626e3e",
  "title": "CybozuHackathon2019",
  "created": 1573787606,
  "updated": 1574144756,
  "lines": [
    {
      "id": "5dce3e32aff09e000033f04e",
      "text": "CybozuHackathon2019",
      "userId": "582e63d27c56960011aff09e",
      "created": 1573797426,
      "updated": 1573797441
    },
    {
      "id": "5dce17b337dae70017626e3e",
      "text": "\t[未来の検索技術]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1573787606,
      "updated": 1574054708
    },
    {
      "id": "5dce17d5aff09e000002e0f6",
      "text": "\t[「似てる」と「次に来そう」の違い]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1573787606,
      "updated": 1574054714
    },
    {
      "id": "5dce17d5aff09e000002e0f5",
      "text": "-----",
      "userId": "582e63d27c56960011aff09e",
      "created": 1573787606,
      "updated": 1574054841
    },
    {
      "id": "5dd22bb8aff09e000068bf46",
      "text": "\t今回作ったのは[加法注意]に相当する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574054841,
      "updated": 1574055028
    },
    {
      "id": "5dd22c73aff09e000068bf47",
      "text": "\t\tこれが[内積注意]に変わるとどうなるか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055028,
      "updated": 1574055062
    },
    {
      "id": "5dd22bb7aff09e000068bf45",
      "text": "\t\t[次元削減注意]の有用性を確かめる実験をしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574054841,
      "updated": 1574055081
    },
    {
      "id": "5dd22d1caff09e000068bf4a",
      "text": "\t\t当初構想していたネットワーク",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055196,
      "updated": 1574055201
    },
    {
      "id": "5dd22c9aaff09e000068bf48",
      "text": "\t\t\t[https://gyazo.com/6648bda7b702085a3c212337ec2041e3]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055066,
      "updated": 1574055202
    },
    {
      "id": "5dd22d14aff09e000089b880",
      "text": "\t\tでもこれ[類似度](「[似てる]」)ベースの構造",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055188,
      "updated": 1574055226
    },
    {
      "id": "5dd22d68aff09e000068bf4b",
      "text": "\t\t\t[「似てる」と「次に来そう」の違い]で書いたように、類似度ベースにしないことが有益な可能性がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055272,
      "updated": 1574055292
    },
    {
      "id": "5dd22d14aff09e000089b87f",
      "text": "\t\t\t[https://gyazo.com/c31f5e77f82db619a38593bfb2a8f561]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055188,
      "updated": 1574055722
    },
    {
      "id": "5dd22eacaff09e000089b882",
      "text": "\t\t\t類似度ベースでないように書き換えるとこうなる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055600,
      "updated": 1574055732
    },
    {
      "id": "5dd22f34aff09e000068bf4c",
      "text": "\t\t\t\tKeyを作るためのレイヤーと「直近のスライドから、次に来るスライドのqueryを作るレイヤー」は全く別物",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055732,
      "updated": 1574055761
    },
    {
      "id": "5dd22f51aff09e000068bf4d",
      "text": "\t\t\t\tこれは現状たまたま1ページのスライドを入力として受け取っているので似た形だから混同されていた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055761,
      "updated": 1574055819
    },
    {
      "id": "5dd22f7baff09e000068bf4e",
      "text": "\t\t\t\t文脈を表現するのが「直近1ページ」である必然性はないよね",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055803,
      "updated": 1574055829
    },
    {
      "id": "5dd22f97aff09e000068bf4f",
      "text": "\t\t\t\t不定長の「ページ」を受け取って固定長のベクトルに変換するなら自己注意かな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055832,
      "updated": 1574055859
    },
    {
      "id": "5dd22eacaff09e000089b881",
      "text": "\t\t\t\t\t[https://gyazo.com/7c3137f1749202cbd5b200c5de14adca]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055600,
      "updated": 1574055859
    },
    {
      "id": "5dd22f22aff09e000089b884",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055715,
      "updated": 1574055715
    },
    {
      "id": "5dd22f22aff09e000089b883",
      "text": "作ったシステムの不便な点",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574055715,
      "updated": 1574144692
    },
    {
      "id": "5dd38ab3aff09e00001f871b",
      "text": "\tPDFをまずCUIで処理しなきゃいけない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144698
    },
    {
      "id": "5dd38ab4aff09e00001f871d",
      "text": "\t　$ ruby pdfs_to_onepage_json.rb in/未来の検索技術.pdf > hackathon.json",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144699
    },
    {
      "id": "5dd38ab4aff09e00001f871e",
      "text": "\tPythonの方が得意なのにRubyのGyazoクライアントを使っている増井先生のコードからforkしたのでRubyで実装されている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144701
    },
    {
      "id": "5dd38ab4aff09e00001f871f",
      "text": "\tPDFからpdftocairoでJPEGに変換しているのでKeynoteから作られたPDFみたいな文字情報が本来含まれているものまで画像化されてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144703
    },
    {
      "id": "5dd38ab4aff09e00001f8720",
      "text": "　\t本当は文字情報を持っているPDFはそれも使える方が良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144705
    },
    {
      "id": "5dd38ab4aff09e00001f8721",
      "text": "\tGyazoの(内部でGoogle Vision APIを叩く)OCRによって文字列化される",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144717
    },
    {
      "id": "5dd38ab4aff09e00001f8722",
      "text": "　\t意外なことだが、大きい文字はOCRされない(多分文字にマッチしそうなところを探すウィンドウサイズの上限のせい)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144715
    },
    {
      "id": "5dd38ab4aff09e00001f8723",
      "text": "\t　グラフや表のスクリーンショットを貼り込んでいるようなケースで、その画像の中の文字列もデータとして扱えるのはOCRの長所",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144719
    },
    {
      "id": "5dd38ab4aff09e00001f8724",
      "text": "　　ただしグラフや表の数値が全部入力データに含まれてしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144692
    },
    {
      "id": "5dd38ab4aff09e00001f8725",
      "text": "　\t人間は「大きい文字は重要」「小さい文字は重要ではない」と自然に判断できるがOCRするとその情報が失われる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144726
    },
    {
      "id": "5dd38ab4aff09e00001f8726",
      "text": "\tGyazoへのアップロード、Gyazo側やネットワークの調子によっては失敗する、1秒1枚でアップロードするので割と待ち時間がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144728
    },
    {
      "id": "5dd38ab4aff09e00001f8727",
      "text": "\tOCRがGyazoサーバ側で非同期で走っているので完了タイミングは読めない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144730
    },
    {
      "id": "5dd38ab4aff09e00001f8728",
      "text": "\t出来上がったJSONファイルを手作業でインポートしなければならない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144736
    },
    {
      "id": "5dd38ab4aff09e00001f872b",
      "text": "\t　これは自動化もできるけど、僕のログイン情報をクッキーから取り出してリクエストに積む必要がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144738
    },
    {
      "id": "5dd38ab4aff09e00001f872c",
      "text": "\tOCRが取れなかった場合にリトライしていないので失敗した時にOCR情報のついていないJSONが出力される",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144741
    },
    {
      "id": "5dd38ab4aff09e00001f872e",
      "text": "\t　OCR情報がついてないことにScrapboxに手動でインポートしてから気づく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144743
    },
    {
      "id": "5dd38ae9aff09e00001f8738",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144746,
      "updated": 1574144746
    },
    {
      "id": "5dd38ab4aff09e00001f872f",
      "text": "どうであるべきなのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144745
    },
    {
      "id": "5dd38ab4aff09e00001f8731",
      "text": "\tMacならAutomatorでCUIスクリプトをキックできるので、それをFinderの「よく使う項目」に入れておけば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144747
    },
    {
      "id": "5dd38ab4aff09e00001f8732",
      "text": "\t　PDFをドラッグドロップして起動できる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144749
    },
    {
      "id": "5dd38ab4aff09e00001f8733",
      "text": "\t大きい文字の含まれた画像、縮小したらOCRされるようになる？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144751
    },
    {
      "id": "5dd38ab4aff09e00001f8734",
      "text": "\t　なるなら、スライド画像を縮小してからOCRすれば小さすぎる字が適切に潰れ、大きな文字が認識されるようになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144752
    },
    {
      "id": "5dd38ab4aff09e00001f8735",
      "text": "\tRubyで頑張るかPythonに移植して頑張るかして、エラー時のリトライをする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144753
    },
    {
      "id": "5dd38ab4aff09e00001f8736",
      "text": "\tScrapboxに個人用非公開のプロジェクトを作っておき、そこへのインポートまで自動でやる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144755
    },
    {
      "id": "5dd38ab4aff09e00001f8737",
      "text": "\t全部終わってから通知する(人間が過程を見てなくて良いように)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144756
    },
    {
      "id": "5dd38ab3aff09e00001f871a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1574144692,
      "updated": 1574144692
    }
  ]
}