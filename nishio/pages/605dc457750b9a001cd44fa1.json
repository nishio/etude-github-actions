{
  "id": "605dc457750b9a001cd44fa1",
  "title": "機械学習で長文付箋分割",
  "created": 1616757856,
  "updated": 1617096400,
  "lines": [
    {
      "id": "605dc457750b9a001cd44fa1",
      "text": "機械学習で長文付箋分割",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616757856,
      "updated": 1616757856
    },
    {
      "id": "605dc460aff09e0000cb957a",
      "text": "[https://gyazo.com/b94a75c5bb94338cdbccabaa01b0e843]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616757856,
      "updated": 1616757859
    },
    {
      "id": "605dc462aff09e0000cb957c",
      "text": "　各単語ごとに「消すかどうか」「右で区切るかどうか」を推定するアプローチと、",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616757859,
      "updated": 1616757926
    },
    {
      "id": "605dc4a5aff09e0000cb957d",
      "text": "　BERTとかで区切りトークンを含んだ列を生成するアプローチがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616757926,
      "updated": 1616757971
    },
    {
      "id": "605dc4e6aff09e0000cb957e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616757991,
      "updated": 1616757991
    },
    {
      "id": "605dc617aff09e0000cb9583",
      "text": "サーバで動かすことを考えるとあんまり重たいものにしたくないなぁと前者を考えていたのだが、このアプローチでは書き換えをサポートしようとすると途端にダメになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616758296,
      "updated": 1616758343
    },
    {
      "id": "605dc64eaff09e0000cb9584",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616758351,
      "updated": 1616758351
    },
    {
      "id": "605dc64eaff09e0000cb9585",
      "text": "「重いかもしれない」で後者を避けないで、やってみるべきか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616758351,
      "updated": 1616758374
    },
    {
      "id": "605dc4e6aff09e0000cb957f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616757991,
      "updated": 1616757996
    },
    {
      "id": "6060384daff09e00009d96ed",
      "text": "教師データがどうなるべきか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616918605,
      "updated": 1616918641
    },
    {
      "id": "60603874aff09e00009d96ee",
      "text": "　今まで、悪い例や、人間による分割の例を散発的に記録してきていた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616918645,
      "updated": 1616918700
    },
    {
      "id": "606038acaff09e00009d96ef",
      "text": "　BERTに入れるなら区切りトークン刻みの列かな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616918700,
      "updated": 1616918781
    },
    {
      "id": "6060391faff09e00009d96f0",
      "text": "　現状のルールベースのものでは書き換えを表現しにくいと考えていたが、前処理で文字列置換してしまえばよい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616918816,
      "updated": 1616918854
    },
    {
      "id": "60603947aff09e00009d96f1",
      "text": "　そうすればそのあとは普通にトークンに刻まれている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616918856,
      "updated": 1616918866
    },
    {
      "id": "60603953aff09e00009d96f2",
      "text": "　最悪、ルールベースの事前書き換えだけルールベースで残しても良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616918867,
      "updated": 1616918885
    },
    {
      "id": "605dc462aff09e0000cb957b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1616757859,
      "updated": 1616757859
    },
    {
      "id": "6061b952aff09e0000da6f56",
      "text": "2021/3/29",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017170,
      "updated": 1617017176
    },
    {
      "id": "6061b958aff09e0000da6f58",
      "text": "　現状のルールベースのものでの分割結果をファイルに吐く",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017177,
      "updated": 1617017208
    },
    {
      "id": "6061b987aff09e0000da6f5a",
      "text": "　悪い分割結果にx、良い分割結果にoをつける",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017224,
      "updated": 1617017246
    },
    {
      "id": "6061b9a5aff09e0000da6f5b",
      "text": "　　何もつけなくてもいい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017253,
      "updated": 1617017298
    },
    {
      "id": "6061ba07aff09e0000da6f5d",
      "text": "　　何もつけてないものはまあまあ許容範囲ということでoにしても良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017351,
      "updated": 1617017372
    },
    {
      "id": "6061bb3baff09e0000da6f63",
      "text": "　少なくとも今の「失敗事例がフォーマットの揃わないメモの形」よりマシ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017660,
      "updated": 1617017685
    },
    {
      "id": "6061b9a9aff09e0000da6f5c",
      "text": "　ルールの修正を行った時に悪い分割が減ると良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017258,
      "updated": 1617017388
    },
    {
      "id": "6061ba75aff09e0000da6f62",
      "text": "　出力をマージしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017461,
      "updated": 1617017472
    },
    {
      "id": "6061ba2caff09e0000da6f5f",
      "text": "　機械学習？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017389,
      "updated": 1617017407
    },
    {
      "id": "6061ba3faff09e0000da6f60",
      "text": "　　パラメータ調整の範疇でいけるのでは",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017407,
      "updated": 1617017428
    },
    {
      "id": "6061ba71aff09e0000da6f61",
      "text": "　将来的にBERTに食わせるとしても数百のデータは集まってからにしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017458,
      "updated": 1617017716
    },
    {
      "id": "6061bf08aff09e0000da6f64",
      "text": "　この形でとっておけば、分割して「ダメな例」が含まれてなければ教師データに使うアプローチができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617018636,
      "updated": 1617018669
    },
    {
      "id": "6061b964aff09e0000da6f59",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617017189,
      "updated": 1617017189
    },
    {
      "id": "6061d0c2aff09e0000da6f65",
      "text": "　コードを確認した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617023170,
      "updated": 1617023179
    },
    {
      "id": "6061d0ceaff09e0000da6f67",
      "text": "　　予期せず壊すことを防ぐために回帰テスト用のJSONが出力されてた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617023183,
      "updated": 1617023215
    },
    {
      "id": "6061d0efaff09e0000da6f68",
      "text": "　　これは「分割結果」をリストで持ってる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617023215,
      "updated": 1617023242
    },
    {
      "id": "6061d10aaff09e0000da6f69",
      "text": "　　リストだから「この結果は悪い」と印をつけらない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617023243,
      "updated": 1617023261
    },
    {
      "id": "6061d11daff09e0000da6f6a",
      "text": "　　回帰テスト自体は今後も有用",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617023261,
      "updated": 1617023269
    },
    {
      "id": "6061d125aff09e0000da6f6b",
      "text": "　　✅辞書を別途持てば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617023270,
      "updated": 1617030756
    },
    {
      "id": "6061f731aff09e0000da6f84",
      "text": "　　今はルールベースだからスコアの高い順に刻んでるけど、スコア0.5以上なら確実に分割した上で、まだ長すぎるものがあったら別途刻む方が良いか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617033009,
      "updated": 1617033077
    },
    {
      "id": "6061d0c4aff09e0000da6f66",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617023172,
      "updated": 1617023172
    },
    {
      "id": "6061eeaaaff09e0000eb1572",
      "text": "[長文の付箋への分割支援:良くない分割の例]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617030827,
      "updated": 1617030827
    },
    {
      "id": "6061eeaaaff09e0000eb1573",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617030827,
      "updated": 1617030827
    },
    {
      "id": "6062eea3aff09e0000e1db95",
      "text": "2021-03-30",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617096355,
      "updated": 1617096356
    },
    {
      "id": "6062eea4aff09e0000e1db96",
      "text": "\t格助詞のどれかで分割が必要になった時にどの格助詞で分割するのが僕にとって自然に感じられるのかは、格助詞の種類だけでは決まらなさそうだなという感じがする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617096357,
      "updated": 1617096384
    },
    {
      "id": "6062eec0aff09e0000e1db98",
      "text": "\t\t隣の格助詞の種類と距離によるかな…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617096385,
      "updated": 1617096400
    },
    {
      "id": "6062eec0aff09e0000e1db97",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617096384,
      "updated": 1617096384
    }
  ]
}