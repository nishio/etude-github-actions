{
  "id": "5fa2e5f485d279002333ca38",
  "title": "ゼータ変換/メビウス変換20201105",
  "created": 1604511222,
  "updated": 1604569269,
  "lines": [
    {
      "id": "5fa2e5f485d279002333ca38",
      "text": "ゼータ変換/メビウス変換20201105",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511222,
      "updated": 1604511357
    },
    {
      "id": "5fa2e625aff09e00007a900e",
      "text": "[ゼータ変換]/[メビウス変換]　考えたことメモ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511269,
      "updated": 1604536369
    },
    {
      "id": "5fa39668aff09e0000c82281",
      "text": "　注意: このメモは理解を固める過程のメモなので間違いが含まれる可能性があります",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604556392,
      "updated": 1604556419
    },
    {
      "id": "5fa2e74caff09e00007a901c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511564,
      "updated": 1604511564
    },
    {
      "id": "5fa2e676aff09e00007a9010",
      "text": "\t[リーマンのゼータ関数]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511351,
      "updated": 1604511564
    },
    {
      "id": "5fa2e77faff09e00007a901d",
      "text": "\t\t[$ \\zeta (s)=\\sum^{\\infin}_{n=1} \\frac{1}{n^s}]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511616,
      "updated": 1604511616
    },
    {
      "id": "5fa2e815aff09e00007a901e",
      "text": "\t\tこれはディリクレ級数([Dirichlet級数])の一種",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511766,
      "updated": 1604511816
    },
    {
      "id": "5fa2e848aff09e0000c82275",
      "text": "\t\t　[ディリクレ級数]:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511817,
      "updated": 1604511938
    },
    {
      "id": "5fa2e850aff09e00007a901f",
      "text": "\t\t　\t[$ D_A(s) = \\sum^{\\infin}_{n=1} \\frac{A_i}{n^s} ]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511824,
      "updated": 1604511912
    },
    {
      "id": "5fa2e693aff09e00007a9012",
      "text": "\t\t[ディリクレ積]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511380,
      "updated": 1604512279
    },
    {
      "id": "5fa2e953aff09e0000c82277",
      "text": "\t\t　ディリクレ級数の積と、数列の積に関する畳み込みは対応する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604512083,
      "updated": 1604512127
    },
    {
      "id": "5fa2e97faff09e0000c82278",
      "text": "\t\t　[$ D_A(s)D_B(s) = D_C(s) \\iff C_k = \\sum_{ij=k} A_iB_j]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604512127,
      "updated": 1604512269
    },
    {
      "id": "5fa2e929aff09e0000c82276",
      "text": "\t\tゼータ関数のディリクレ積での逆元とメビウス関数",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604512041,
      "updated": 1604512368
    },
    {
      "id": "5fa2ea6faff09e00007a9022",
      "text": "\t\t\t[$ \\frac{1}{\\zeta (s)}= \\sum^{\\infin}_{n=1} \\frac{\\mu(n)}{n^s}]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604512368,
      "updated": 1604512445
    },
    {
      "id": "5fa2eac3aff09e00007a9024",
      "text": "\t\t\tここで[$ \\mu(n)] が[メビウス関数]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604512451,
      "updated": 1604569269
    },
    {
      "id": "5fa2ebd7aff09e00007a9025",
      "text": "\t\tゼータ関数から[約数和関数]が作れる(how?)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604512728,
      "updated": 1604569262
    },
    {
      "id": "5fa3bf52aff09e0000be4f12",
      "text": "\t\t",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604566866,
      "updated": 1604566866
    },
    {
      "id": "5fa2f49baff09e000025c3c5",
      "text": "\t\t[数学 畳み込み入門：Dirichlet積とゼータ変換・メビウス変換 | maspyのHP https://maspypy.com/%E6%95%B0%E5%AD%A6-%E7%95%B3%E3%81%BF%E8%BE%BC%E3%81%BF%E5%85%A5%E9%96%80%EF%BC%9Adirichlet%E7%A9%8D%E3%81%A8%E3%82%BC%E3%83%BC%E3%82%BF%E5%A4%89%E6%8F%9B%E3%83%BB%E3%83%A1%E3%83%93%E3%82%A6]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604514972,
      "updated": 1604514976
    },
    {
      "id": "5fa2e6a1aff09e00007a9014",
      "text": "\t[隣接代数]のゼータ関数/メビウス関数",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511393,
      "updated": 1604558649
    },
    {
      "id": "5fa2ec44aff09e00007a9026",
      "text": "\t\t隣接代数: 任意の局所有限な半順序集合と単位元を持つ可換環に対して定義される結合多元環(what?)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604512837,
      "updated": 1604513532
    },
    {
      "id": "5fa2f484aff09e000025c3c4",
      "text": "\t\t\t[隣接代数 (順序理論) - Wikipedia https://ja.wikipedia.org/wiki/%E9%9A%A3%E6%8E%A5%E4%BB%A3%E6%95%B0_(%E9%A0%86%E5%BA%8F%E7%90%86%E8%AB%96)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604514948,
      "updated": 1604514948
    },
    {
      "id": "5fa39faaaff09e0000c8228e",
      "text": "\t\t\t具体的には集合のべき集合など",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604558763,
      "updated": 1604558785
    },
    {
      "id": "5fa2eebdaff09e00007a902d",
      "text": "\t\t隣接代数の元は、空でない各区間 [$ [a, b] ] に対してスカラー f(a, b) を対応させる関数",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513470,
      "updated": 1604566618
    },
    {
      "id": "5fa3be5aaff09e0000be4f0f",
      "text": "\t\t隣接代数の「積」は以下の畳み込みで定義する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604566618,
      "updated": 1604566626
    },
    {
      "id": "5fa2e6d7aff09e00007a9015",
      "text": "\t\t\t[$ (f*g)(a,b)=\\sum _{{a\\leq x\\leq b}}f(a,x)g(x,b)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511448,
      "updated": 1604513630
    },
    {
      "id": "5fa2ef3baff09e00007a902f",
      "text": "\t\t[https://gyazo.com/4d08557f6dce39a5282eaefb61b9e142]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513595,
      "updated": 1604513595
    },
    {
      "id": "5fa3be8baff09e0000be4f10",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604566667,
      "updated": 1604566816
    },
    {
      "id": "5fa2ecf7aff09e00007a9027",
      "text": "\t\tここであるfとゼータ関数の積を考える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513016,
      "updated": 1604513696
    },
    {
      "id": "5fa2ef2baff09e0000c82279",
      "text": "\t\t　[$ (f*\\zeta)(a,b)=\\sum _{{a\\leq x\\leq b}}f(a,x)\\zeta(x,b) = \\sum _{{a\\leq x \\leq b}}f(a,x)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513580,
      "updated": 1604514479
    },
    {
      "id": "5fa2f034aff09e0000c8227a",
      "text": "\t\t　これは累積和(？)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513844,
      "updated": 1604514788
    },
    {
      "id": "5fa2f3e3aff09e00007a9036",
      "text": "\t　　[$ f(0, x)]を[$ F_x] と書くことにすれば",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604514788,
      "updated": 1604514790
    },
    {
      "id": "5fa2f31faff09e00007a9034",
      "text": "\t\t\t[$ (F*\\Zeta)_b = (f*\\zeta)(0,b) =  \\sum_{{0\\leq x \\leq b}}f(0,x) = \\sum _{{0\\leq x \\leq b}}F_x]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604514592,
      "updated": 1604514795
    },
    {
      "id": "5fa2f361aff09e00007a9035",
      "text": "\t\t　　確かにこれは累積和っぽい見た目だけど…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604514657,
      "updated": 1604515523
    },
    {
      "id": "5fa2f4c5aff09e00007a9037",
      "text": "\t\t[累積和とゼータ変換 • masu-mi's blog(Dirty Cache) https://blog.masu-mi.me/post/2020/06/08/comulative-and-zeta-transoform/]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604515013,
      "updated": 1604515015
    },
    {
      "id": "5fa2e6d9aff09e00007a9016",
      "text": "\tこの二つの世界は無関係ではない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511450,
      "updated": 1604511509
    },
    {
      "id": "5fa2e714aff09e00007a9018",
      "text": "\t\t「数列の畳み込みってディリクレ級数の積だよね」という関係で繋がってる(really?)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511509,
      "updated": 1604513054
    },
    {
      "id": "5fa2e717aff09e00007a9019",
      "text": "\t包除原理の話題で高速メビウス変換が出てくる時、しばしばsum over subsets",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511512,
      "updated": 1604513077
    },
    {
      "id": "5fa2ed7caff09e00007a902b",
      "text": "\t\t[$ \\sum_{T\\subset S} f(T)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513149,
      "updated": 1604513183
    },
    {
      "id": "5fa2ed32aff09e00007a9028",
      "text": "\t\tこれと今までの話との繋がりがわかりにくい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513074,
      "updated": 1604513081
    },
    {
      "id": "5fa2e72daff09e00007a901a",
      "text": "\t\t[メビウス関数]の値が非ゼロであるような自然数nは、集合であると見なすことができる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511533,
      "updated": 1604513097
    },
    {
      "id": "5fa2ed49aff09e00007a9029",
      "text": "\t\t\t各素因数を最大1個しか含まないからね。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513097,
      "updated": 1604513101
    },
    {
      "id": "5fa2ed4baff09e00007a902a",
      "text": "\t\tするとnの約数をわたる和ってのは部分集合を渡る和と同一視できることになる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513099,
      "updated": 1604513099
    },
    {
      "id": "5fa2edcbaff09e00007a902c",
      "text": "\t\t\t[$ \\sum_{T\\subset S} f(T) = \\sum_{d|N} f'(d)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604513228,
      "updated": 1604513252
    },
    {
      "id": "5fa2e73caff09e00007a901b",
      "text": "\tつまり最初に「よくわからないな」と思ったのは、僕にとって自明に同一視されない3つの概念が1つの言葉で呼ばれていたからであって、それぞれを明確にして対応づけの方法を明確にしたら「わかった」という気持ちになったわけだ。つまり最初に「よくわからないな」と思ったのは、僕にとって自明に同一視されない3つの概念が1つの言葉で呼ばれていたからであって、それぞれを明確にして対応づけの方法を明確にしたら「わかった」という気持ちになったわけだ。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511549,
      "updated": 1604511557
    },
    {
      "id": "5fa2e701aff09e00007a9017",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604511489,
      "updated": 1604511489
    },
    {
      "id": "5fa2f7edaff09e0000c8227b",
      "text": "　今の未解決ポイント",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604515821,
      "updated": 1604515829
    },
    {
      "id": "5fa2f7f5aff09e0000c8227d",
      "text": "　　隣接代数の話を出さなくてもリーマンゼータとの畳み込みを式変形したら累積和の形になるのでは？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604515829,
      "updated": 1604515916
    },
    {
      "id": "5fa2f84baff09e0000c8227e",
      "text": "　　隣接代数の順序",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604515916,
      "updated": 1604515947
    },
    {
      "id": "5fa2f7edaff09e0000c8227c",
      "text": "　　　集合の包含関係は半順序",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604515821,
      "updated": 1604536617
    },
    {
      "id": "5fa3492daff09e0000c82280",
      "text": "　　　自然数の「約数である」関係は半順序",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604536621,
      "updated": 1604536642
    },
    {
      "id": "5fa398d5aff09e0000c82287",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604557014,
      "updated": 1604557014
    },
    {
      "id": "5fa3989daff09e0000c82282",
      "text": "集合と自然数の対応づけ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604556958,
      "updated": 1604556969
    },
    {
      "id": "5fa398a9aff09e0000c82284",
      "text": "　[https://gyazo.com/4bbea44cb7446cc878ddbf4d856ae884]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604556969,
      "updated": 1604556985
    },
    {
      "id": "5fa398b9aff09e0000c82286",
      "text": "　集合の間の包含関係と、自然数の間の「約数である」関係が対応しているのがわかる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604556985,
      "updated": 1604557056
    },
    {
      "id": "5fa39900aff09e0000c8228a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604557056,
      "updated": 1604557056
    },
    {
      "id": "5fa398acaff09e0000c82285",
      "text": "自然数の上の話と、数列やディリクレ級数の上の話と、集合の上の話がある。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604556973,
      "updated": 1604557214
    },
    {
      "id": "5fa399b7aff09e0000c8228b",
      "text": "メビウスの反転公式も少しずつ見た目が違う。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604557240,
      "updated": 1604557250
    },
    {
      "id": "5fa399c2aff09e0000c8228c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604557250,
      "updated": 1604557250
    },
    {
      "id": "5fa39e59aff09e00007a9038",
      "text": "[包除原理とメビウスの反転公式]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604558425,
      "updated": 1604558445
    },
    {
      "id": "5fa399c3aff09e0000c8228d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604557251,
      "updated": 1604557251
    },
    {
      "id": "5fa3b88daff09e0000c8228f",
      "text": "[メビウス関数の和]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604565133,
      "updated": 1604565159
    },
    {
      "id": "5fa3a514aff09e0000a704d4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604560148,
      "updated": 1604565194
    },
    {
      "id": "5fa3c05aaff09e00007a903e",
      "text": "[https://gyazo.com/36e8a4ecef5776989e3335ccd44cedad]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604567130,
      "updated": 1604567132
    },
    {
      "id": "5fa3c05caff09e00007a903f",
      "text": "https://ja.wikipedia.org/wiki/隣接代数_(順序理論)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604567132,
      "updated": 1604567160
    },
    {
      "id": "5fa3c078aff09e00007a9040",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1604567160,
      "updated": 1604567160
    }
  ]
}