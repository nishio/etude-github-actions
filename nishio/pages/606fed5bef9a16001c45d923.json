{
  "id": "606fed5bef9a16001c45d923",
  "title": "Multi-Paradigm Design",
  "created": 1617947996,
  "updated": 1617975911,
  "lines": [
    {
      "id": "606fed5bef9a16001c45d923",
      "text": "Multi-Paradigm Design",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617947996,
      "updated": 1617947996
    },
    {
      "id": "606fed5caff09e00009e5201",
      "text": "[James O. Coplien] July 8, 2000 11:58 am [PDF https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.84.7630&rep=rep1&type=pdf]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617947996,
      "updated": 1617948016
    },
    {
      "id": "606fed60aff09e00009e5203",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617948000,
      "updated": 1617948000
    },
    {
      "id": "606ff9deaff09e000022fddd",
      "text": "Paradigm p.17",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617951198,
      "updated": 1617951223
    },
    {
      "id": "606ff9deaff09e000022fdde",
      "text": "\t>We use these foundations of commonality and variation to formalize the concept of paradigm. A paradigm, as the term is popularly used in contemporary software design, is a way of organizing system abstractions around properties of common- ality and variation. The object paradigm organizes systems around abstractions based on commonality in structure and behavior and variation in structure and algorithm. The template paradigm is based on structural commonality across family members, with variations explicitly factored out into template parameters. Overloaded functions form families whose members share the same name and semantics, and in which each family member is differentiated by its formal param- eter types.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617951198,
      "updated": 1617951224
    },
    {
      "id": "606ff9f7aff09e000022fddf",
      "text": "\t\tなるほどね。C++にはオブジェクト指向以外にもテンプレートや関数オーバーロードという手段がある、これは明らかにオブジェクト指向の手段ではない、強いC++erはこのそれぞれの手段を使い分けるが、一体どういう時にどれを使うのが良いのか？という話らしい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617951224,
      "updated": 1617951628
    },
    {
      "id": "606ffb8baff09e000022fde0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617951628,
      "updated": 1617951628
    },
    {
      "id": "606ffbedaff09e000022fde1",
      "text": "1.3.4 Domains p.33",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617951725,
      "updated": 1617951728
    },
    {
      "id": "606ffbedaff09e000022fde2",
      "text": "\t>A domain is an area of specialization or interest. We talk about the application domain—the body of knowledge that is of interest to users. Because it is of interest to users, it is hopefully of interest to us. We break down application domains into application subdomains—we divide and conquer. We talk about the solution domain, which is of central interest to the implementors but of only superficial interest to system users. Any given design may deal with multiple solution domains at once, for example, C++ constructs, patterns, and maybe state machines and parser-generators.",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617951726,
      "updated": 1617965363
    },
    {
      "id": "606ffbf1aff09e000022fde3",
      "text": "　　アプリケーションドメインはユーザが関心を持つものに対しての知識の集まり",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617951730,
      "updated": 1617965405
    },
    {
      "id": "60703153aff09e000085e21e",
      "text": "　　ソリューションドメインは実装する人が関心を持つものに対しての知識の集まり",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617965396,
      "updated": 1617965447
    },
    {
      "id": "606ffeefaff09e000022fde4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952496,
      "updated": 1617953054
    },
    {
      "id": "606ffef0aff09e000022fde5",
      "text": "\tChapter 2 Commonality Analysis p.55",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952496,
      "updated": 1617953058
    },
    {
      "id": "606ffef1aff09e000022fde6",
      "text": "\t\t2.1 Commonality: The Essence of Abstraction",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952498,
      "updated": 1617952507
    },
    {
      "id": "606fff04aff09e000022fde8",
      "text": "\t\t\t2.1.1 Deductive and Inductive Commonality",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952517,
      "updated": 1617952524
    },
    {
      "id": "606fff05aff09e000022fde9",
      "text": "\t\t\t2.1.2 Software Families",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952517,
      "updated": 1617952535
    },
    {
      "id": "606fff17aff09e000022fdea",
      "text": "\t\t\t\tFinding Domains",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952536,
      "updated": 1617952543
    },
    {
      "id": "606fff1faff09e000022fdeb",
      "text": "\t\t2.2 Priming Analysis: The Domain Vocabulary",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952543,
      "updated": 1617952552
    },
    {
      "id": "606fff28aff09e000022fdec",
      "text": "\t\t\t2.2.1 The Domain Dictionary",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952552,
      "updated": 1617952561
    },
    {
      "id": "606fff31aff09e000022fded",
      "text": "\t\t\t2.2.2 Design Epistemology",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952561,
      "updated": 1617952571
    },
    {
      "id": "606fff43aff09e000022fdee",
      "text": "\t\t2.3 Dimensions of Commonality and Commonality Categories p.64",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952580,
      "updated": 1617953084
    },
    {
      "id": "606fff44aff09e000022fdef",
      "text": "\t\t\t2.3.1 (Data) Structure",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952581,
      "updated": 1617952590
    },
    {
      "id": "606fff4faff09e000022fdf0",
      "text": "\t\t\t2.3.2 Name and Behavior",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952591,
      "updated": 1617952602
    },
    {
      "id": "606fff5aaff09e000022fdf1",
      "text": "\t\t\t2.3.3 Algorithm p.75",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952603,
      "updated": 1617953095
    },
    {
      "id": "606fff76aff09e000022fdf2",
      "text": "\t\t2.4 Examples of Commonality",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952631,
      "updated": 1617952631
    },
    {
      "id": "606fff85aff09e000022fdf3",
      "text": "\t\t2.5 Reviewing the Commonality Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952646,
      "updated": 1617952646
    },
    {
      "id": "606fff9eaff09e000022fdf4",
      "text": "\t\t2.6 Commonality and Evolution",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952671,
      "updated": 1617952671
    },
    {
      "id": "606ffefaaff09e000022fde7",
      "text": "\tChapter 3 Variability Analysis p.85",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952507,
      "updated": 1617953103
    },
    {
      "id": "606fffa9aff09e000022fdf7",
      "text": "\t\t3.1 Variability: The Spice of Life",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952682,
      "updated": 1617952688
    },
    {
      "id": "606fffbaaff09e000022fdf8",
      "text": "\t\t3.2 The Commonality Base",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952699,
      "updated": 1617952699
    },
    {
      "id": "606fffc0aff09e000022fdf9",
      "text": "\t\t3.3 Positive and Negative Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952704,
      "updated": 1617952704
    },
    {
      "id": "606fffc0aff09e000022fdfa",
      "text": "  \t3.3.1 Positive Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952704,
      "updated": 1617952710
    },
    {
      "id": "606fffccaff09e000022fdfb",
      "text": "  \t3.3.2 Negative Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952716,
      "updated": 1617952717
    },
    {
      "id": "606fffcdaff09e000022fdfc",
      "text": "  3.4 The Domain and Range of Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952717,
      "updated": 1617952730
    },
    {
      "id": "606fffd9aff09e000022fdfd",
      "text": "  \t3.4.1 The Text Editing Buffers Example",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952730,
      "updated": 1617952736
    },
    {
      "id": "606fffe1aff09e000022fdfe",
      "text": "  \t3.4.2 Good Parameters of Variation",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952737,
      "updated": 1617952742
    },
    {
      "id": "606fffeeaff09e000022fdff",
      "text": "  3.5 Binding Time",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952750,
      "updated": 1617952750
    },
    {
      "id": "606ffff8aff09e000022fe00",
      "text": "  \t3.5.1 Binding Time and Flexibility",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952760,
      "updated": 1617952761
    },
    {
      "id": "606ffff9aff09e000022fe01",
      "text": "  \t3.5.2 Are Objects about Deferred Binding?",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952761,
      "updated": 1617952766
    },
    {
      "id": "606ffffdaff09e000022fe02",
      "text": "  \t3.5.3 Efficiency and Binding Time",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952766,
      "updated": 1617952770
    },
    {
      "id": "60700002aff09e000022fe03",
      "text": "   3.5.4 Binding Time Alternatives p.93",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952770,
      "updated": 1617952889
    },
    {
      "id": "60700006aff09e000022fe05",
      "text": "   \tSource Time",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952775,
      "updated": 1617952786
    },
    {
      "id": "60700067aff09e000022fe06",
      "text": "   \tCompile Time",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952872,
      "updated": 1617952872
    },
    {
      "id": "60700068aff09e000022fe07",
      "text": "   \tLink (and Load) Time",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952872,
      "updated": 1617952879
    },
    {
      "id": "60700084aff09e000022fe08",
      "text": "   \tRun Time",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952901,
      "updated": 1617952901
    },
    {
      "id": "60700084aff09e000022fe09",
      "text": "  3.6 Defaults",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952901,
      "updated": 1617952911
    },
    {
      "id": "60700090aff09e000022fe0a",
      "text": "  3.7 Variability Tables p.95",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952912,
      "updated": 1617953115
    },
    {
      "id": "60700099aff09e000022fe0b",
      "text": "  3.8 Some Variability Traps",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952921,
      "updated": 1617952929
    },
    {
      "id": "607000acaff09e000022fe0c",
      "text": "  3.9 Reviewing the Variability Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952941,
      "updated": 1617952941
    },
    {
      "id": "607000b3aff09e000022fe0d",
      "text": "  3.10 Variability Dependency Graphs",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952948,
      "updated": 1617952948
    },
    {
      "id": "607000bdaff09e000022fe0e",
      "text": "\tChapter 4 Application Domain Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952958,
      "updated": 1617952964
    },
    {
      "id": "606fffa8aff09e000022fdf6",
      "text": "\t\t4.1 Analysis, Domain Analysis, and Beyond",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952681,
      "updated": 1617952971
    },
    {
      "id": "607000cbaff09e000022fe11",
      "text": "\t\t\t4.1.1 Traditional Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952972,
      "updated": 1617952978
    },
    {
      "id": "607000d2aff09e000022fe12",
      "text": "\t\t\t4.1.2 System Families: Domain Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952979,
      "updated": 1617952984
    },
    {
      "id": "607000eaaff09e000022fe13",
      "text": "\t\t\t\tFamily Members in the Application and Solution Domains",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953003,
      "updated": 1617953004
    },
    {
      "id": "607000ebaff09e000022fe14",
      "text": "    Balancing Abstraction and Specification",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953004,
      "updated": 1617953009
    },
    {
      "id": "607000f1aff09e000022fe15",
      "text": "    Levels of Domain Abstraction p.105",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953009,
      "updated": 1617953127
    },
    {
      "id": "607000cbaff09e000022fe10",
      "text": "\t\t\t4.1.3 Application Domain Analysis and Solution Domain Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617952971,
      "updated": 1617953151
    },
    {
      "id": "6070017faff09e000022fe17",
      "text": "\t\t\t4.1.4 The Activities of Domain Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953152,
      "updated": 1617953156
    },
    {
      "id": "60700189aff09e000022fe18",
      "text": "\t\t4.2 Subdomains within a Domain Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953162,
      "updated": 1617953162
    },
    {
      "id": "6070018aaff09e000022fe19",
      "text": "\t  4.2.1 Domain Analysis and Reuse",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953162,
      "updated": 1617953172
    },
    {
      "id": "6070019baff09e000022fe1a",
      "text": "\t  4.2.2 Subdomain Modularity",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953180,
      "updated": 1617953180
    },
    {
      "id": "6070019caff09e000022fe1b",
      "text": "\t  4.2.3 Iteration and Hierarchy",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953180,
      "updated": 1617953185
    },
    {
      "id": "607001a9aff09e000022fe1c",
      "text": "\t 4.3 The Structure of a Subdomain p.114",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953193,
      "updated": 1617953196
    },
    {
      "id": "607001b3aff09e000022fe1d",
      "text": "\t \t4.3.1 Frameworks as Subdomain Implementations",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953204,
      "updated": 1617953205
    },
    {
      "id": "607001b4aff09e000022fe1e",
      "text": "\t \t4.3.2 The Activities of Subdomain Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953205,
      "updated": 1617953210
    },
    {
      "id": "607001baaff09e000022fe1f",
      "text": "\t 4.4 Analysis: The Big Picture",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953210,
      "updated": 1617953218
    },
    {
      "id": "607001c1aff09e000022fe20",
      "text": "\tChapter 5 Object-Oriented Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953218,
      "updated": 1617953242
    },
    {
      "id": "607001dbaff09e000022fe22",
      "text": "\t\t5.1 About Paradigms and Objects",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953243,
      "updated": 1617953250
    },
    {
      "id": "607001e2aff09e000022fe23",
      "text": "\t\t\t5.1.1 Classes and Objects",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953251,
      "updated": 1617953255
    },
    {
      "id": "607001e7aff09e000022fe24",
      "text": "\t\t\t5.1.2 Liskov Substitutability Principle",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953256,
      "updated": 1617953262
    },
    {
      "id": "607001eeaff09e000022fe25",
      "text": "\t\t\t5.1.3 Virtual Functions",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953262,
      "updated": 1617953267
    },
    {
      "id": "607001faaff09e000022fe26",
      "text": "\t\t\t5.1.4 Object Orientation: Yet Another Definition",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953274,
      "updated": 1617953274
    },
    {
      "id": "607001faaff09e000022fe27",
      "text": "\t\t\t\tPositive versus Negative Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953275,
      "updated": 1617953280
    },
    {
      "id": "60700200aff09e000022fe28",
      "text": "\t\t\t\tBinding Time",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953281,
      "updated": 1617953289
    },
    {
      "id": "60700213aff09e000022fe29",
      "text": "\t\t\t\tDefaults",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953299,
      "updated": 1617953299
    },
    {
      "id": "6070021baff09e000022fe2a",
      "text": "\t\t\t5.1.5 The Suitability of Object-Oriented Design",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953308,
      "updated": 1617953308
    },
    {
      "id": "6070021caff09e000022fe2b",
      "text": "   \tLanguage and Paradigm",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953308,
      "updated": 1617953313
    },
    {
      "id": "60700221aff09e000022fe2c",
      "text": "  5.2 Object-Oriented Commonality Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953314,
      "updated": 1617953321
    },
    {
      "id": "60700229aff09e000022fe2d",
      "text": "  \t5.2.1 Commonality Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953322,
      "updated": 1617953329
    },
    {
      "id": "60700231aff09e000022fe2e",
      "text": "  \t5.2.2 Variability Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953329,
      "updated": 1617953333
    },
    {
      "id": "60700236aff09e000022fe2f",
      "text": " Chapter 6 Solution Domain Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953334,
      "updated": 1617953363
    },
    {
      "id": "60700253aff09e000022fe31",
      "text": " \t6.1 The “Other” Domain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953363,
      "updated": 1617953368
    },
    {
      "id": "60700258aff09e000022fe32",
      "text": " \t\t6.1.1 Analysis and Language",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953368,
      "updated": 1617953374
    },
    {
      "id": "6070025eaff09e000022fe33",
      "text": " \t6.2 The C++ Solution Domain: An Overview",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953374,
      "updated": 1617953380
    },
    {
      "id": "607002c2aff09e000022fe3c",
      "text": " \t\ttable::",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953474,
      "updated": 1617953481
    },
    {
      "id": "607002c8aff09e000022fe3d",
      "text": " \t\t Data \ta mechanism to group families of related values",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953481,
      "updated": 1617953488
    },
    {
      "id": "607002c8aff09e000022fe3e",
      "text": "    Overloading\ta mechanism to group families of related functions",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953481,
      "updated": 1617953507
    },
    {
      "id": "607002e5aff09e000022fe3f",
      "text": "    Templates\twhich group related algorithms or gross data structures",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953509,
      "updated": 1617953522
    },
    {
      "id": "607002ecaff09e000022fe40",
      "text": "    Inheritance\twhich groups classes that behave the same ***",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953516,
      "updated": 1617953634
    },
    {
      "id": "607002ecaff09e000022fe41",
      "text": "    *\twhich also groups classes that behave the same but with later binding than inheritance alone provides",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953516,
      "updated": 1617953599
    },
    {
      "id": "607002ecaff09e000022fe42",
      "text": "    ** \ttypically used for fine-grain variations in code and data",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953516,
      "updated": 1617953704
    },
    {
      "id": "6070032daff09e000022fe43",
      "text": "\t\t\t*: Inheritance with virtual functions",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953582,
      "updated": 1617953607
    },
    {
      "id": "60700342aff09e000022fe44",
      "text": "\t\t\t**: Preprocessor constructs, such as `#ifdef`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953602,
      "updated": 1617953604
    },
    {
      "id": "60700352aff09e000022fe45",
      "text": "\t\t\t***:  (usually public inheritance; we treat private inheritance separately in Section 6.11)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953619,
      "updated": 1617953635
    },
    {
      "id": "60700264aff09e000022fe34",
      "text": " \t6.3 Data",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953380,
      "updated": 1617953385
    },
    {
      "id": "607002a0aff09e000022fe39",
      "text": " \t6.4 Overloading",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953440,
      "updated": 1617953474
    },
    {
      "id": "607002baaff09e000022fe3b",
      "text": " \t\ta mechanism to group families of related functions",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953466,
      "updated": 1617953466
    },
    {
      "id": "60700274aff09e000022fe36",
      "text": " \t6.5 Class Templates",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953396,
      "updated": 1617953402
    },
    {
      "id": "60700279aff09e000022fe37",
      "text": "  \t6.5.1 Template Specialization",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953402,
      "updated": 1617953406
    },
    {
      "id": "6070027eaff09e000022fe38",
      "text": "\t\t6.6 Function Templates",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953407,
      "updated": 1617953753
    },
    {
      "id": "607003daaff09e000022fe47",
      "text": "\t\t6.7 Inheritance",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953754,
      "updated": 1617953760
    },
    {
      "id": "607003ecaff09e000022fe48",
      "text": "\t\t\t6.7.1 Aligning Domains",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953772,
      "updated": 1617953773
    },
    {
      "id": "607003fdaff09e000022fe49",
      "text": "\t\t6.8 Virtual Functions",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953789,
      "updated": 1617953790
    },
    {
      "id": "60700405aff09e000022fe4a",
      "text": "\t\t6.9 Commonality Analysis and Polymorphism",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953798,
      "updated": 1617953798
    },
    {
      "id": "60700406aff09e000022fe4b",
      "text": "\t\t6.10 Preprocessor Directives",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953798,
      "updated": 1617953804
    },
    {
      "id": "6070040baff09e000022fe4c",
      "text": "  6.11 Negative Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953804,
      "updated": 1617953808
    },
    {
      "id": "60700416aff09e000022fe4d",
      "text": "  \t6.11.1 Deciding When to Use Negative Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953814,
      "updated": 1617953815
    },
    {
      "id": "60700418aff09e000022fe4e",
      "text": "  \t\tA Template Example",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953816,
      "updated": 1617953835
    },
    {
      "id": "6070042baff09e000022fe4f",
      "text": "  \t\tAn Example of Argument Defaulting",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953835,
      "updated": 1617953842
    },
    {
      "id": "60700433aff09e000022fe50",
      "text": "  \t\tAn Example of Data Cancellation",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953843,
      "updated": 1617953848
    },
    {
      "id": "60700437aff09e000022fe51",
      "text": "  \t\tAn Example of Behavior Cancellation",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953848,
      "updated": 1617953856
    },
    {
      "id": "60700441aff09e000022fe52",
      "text": "  \t\tAn Example of Contravariance",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953857,
      "updated": 1617953864
    },
    {
      "id": "6070047baff09e000022fe5a",
      "text": "  \t\tAn Example of `#ifdef`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953915,
      "updated": 1617953919
    },
    {
      "id": "60700448aff09e000022fe53",
      "text": "  \t6.11.2 Negative Variability versus Domain Splitting",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953865,
      "updated": 1617953873
    },
    {
      "id": "60700451aff09e000022fe54",
      "text": "  \t\tAn Example of Behavior Cancellation",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953873,
      "updated": 1617953879
    },
    {
      "id": "60700457aff09e000022fe57",
      "text": "\t\t\t\tA Template Example",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953879,
      "updated": 1617953887
    },
    {
      "id": "6070045faff09e000022fe58",
      "text": "\t\t\t\tAn Example of Data Cancellation",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953888,
      "updated": 1617953893
    },
    {
      "id": "60700465aff09e000022fe59",
      "text": "    An Example of `#ifdef`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953893,
      "updated": 1617953906
    },
    {
      "id": "60700491aff09e000022fe5b",
      "text": "   6.11.3 A Summary of Negative Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953938,
      "updated": 1617953938
    },
    {
      "id": "60700494aff09e000022fe5d",
      "text": "\t\t6.12 Extended Solution Domain Constructs",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953941,
      "updated": 1617953947
    },
    {
      "id": "607004b4aff09e000022fe5e",
      "text": "\t\t\t6.12.1 Multiple Inheritance",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953972,
      "updated": 1617953973
    },
    {
      "id": "607004b5aff09e000022fe5f",
      "text": "\t\t\t\tFirst case: Multiple Domains",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953973,
      "updated": 1617953979
    },
    {
      "id": "607004bbaff09e000022fe60",
      "text": "\t\t\t\tSecond case: Mix-ins",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953979,
      "updated": 1617953991
    },
    {
      "id": "607004c8aff09e000022fe61",
      "text": "\t\t\t6.12.2 Design Patterns",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953992,
      "updated": 1617953998
    },
    {
      "id": "607004ceaff09e000022fe62",
      "text": "\t\t\t\tPatterns Beyond Language",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953998,
      "updated": 1617954009
    },
    {
      "id": "607004d9aff09e000022fe63",
      "text": "\t\t\t\tPatterns and Multi-Paradigm Design",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954010,
      "updated": 1617954014
    },
    {
      "id": "607004e5aff09e000022fe64",
      "text": "\t\t\t\tAliases for Solution Domain Constructs",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954022,
      "updated": 1617954022
    },
    {
      "id": "607004ebaff09e000022fe65",
      "text": "\t\t\t\tHigher-Level Than Programming Language Constructs",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954028,
      "updated": 1617954028
    },
    {
      "id": "607004f3aff09e000022fe66",
      "text": "\t\t\t\tNegative Variability",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954036,
      "updated": 1617954036
    },
    {
      "id": "607004feaff09e000022fe67",
      "text": "\t\t\t\tMulti-Paradigm Tools as a Patterns Adjunct",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954047,
      "updated": 1617954047
    },
    {
      "id": "607004ffaff09e000022fe68",
      "text": "\t\t6.13 A Summary of the C++ Solution Domain: A Family Table",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954048,
      "updated": 1617954055
    },
    {
      "id": "6070050eaff09e000022fe69",
      "text": "\t\t6.14 Relative Power of Paradigms",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954063,
      "updated": 1617954063
    },
    {
      "id": "60700515aff09e000022fe6a",
      "text": "\tChapter 7 Simple Mixing of Paradigms",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954070,
      "updated": 1617954074
    },
    {
      "id": "6070051baff09e000022fe6c",
      "text": "\t\t7.1 Putting It All Together: An Overview of Multi-Paradigm Design",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954075,
      "updated": 1617954080
    },
    {
      "id": "60700525aff09e000022fe6d",
      "text": "\t\t\t7.1.1 One Size Does Not Fit All",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954086,
      "updated": 1617954087
    },
    {
      "id": "60700526aff09e000022fe6e",
      "text": "\t\t\t7.1.2 Degrees of Complexity",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954087,
      "updated": 1617954095
    },
    {
      "id": "60700533aff09e000022fe6f",
      "text": "\t\t\t\tSingle Domain, Single Paradigm",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954100,
      "updated": 1617954100
    },
    {
      "id": "60700534aff09e000022fe70",
      "text": "\t\t\t\tMultiple Decoupled Subdomains, Single Paradigm",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954101,
      "updated": 1617954107
    },
    {
      "id": "6070053aaff09e000022fe71",
      "text": "    Multiple Decoupled Subdomains, Single Paradigm for Each Subdomain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954107,
      "updated": 1617954112
    },
    {
      "id": "60700544aff09e000022fe72",
      "text": "    Multiple Decoupled Subdomains, Multiple Paradigms for Each Subdomain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954118,
      "updated": 1617954118
    },
    {
      "id": "60700545aff09e000022fe73",
      "text": "    Multiple Subdomains in a Directed Acyclic Graph (DAG), Multiple Paradigms",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954119,
      "updated": 1617954125
    },
    {
      "id": "6070054caff09e000022fe74",
      "text": "    Circular Subdomains",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954125,
      "updated": 1617954129
    },
    {
      "id": "6070055baff09e000022fe75",
      "text": "   7.2 Activities of Multi-Paradigm Design",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954140,
      "updated": 1617954140
    },
    {
      "id": "6070055daff09e000022fe76",
      "text": "   \t1. Divide the problem into intuitive subdomains (Section 4.1.4).",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954141,
      "updated": 1617954172
    },
    {
      "id": "6070057daff09e000022fe77",
      "text": "   \t2. Has this been done before?",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954173,
      "updated": 1617954178
    },
    {
      "id": "60700583aff09e000022fe78",
      "text": "   \t3. Analyze each application subdomain (Chapter 4).",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954179,
      "updated": 1617954184
    },
    {
      "id": "6070058daff09e000022fe79",
      "text": "   \t4. Analyze the solution domains (Chapter 6).",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954190,
      "updated": 1617954190
    },
    {
      "id": "6070058eaff09e000022fe7a",
      "text": "   \t5. Map from application domain analysis onto available solution domain anal- yses (Chapter 7).",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617954190,
      "updated": 1617954239
    },
    {
      "id": "607058c4aff09e0000c09569",
      "text": "   \t6. Evaluate opportunities for Application-Oriented Languages (AOLs).",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975494,
      "updated": 1617975494
    },
    {
      "id": "607058c4aff09e0000c0956a",
      "text": "   7.3 Example: A Simple Language Translator",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975501,
      "updated": 1617975549
    },
    {
      "id": "607058fcaff09e0000c0956b",
      "text": "   \t7.3.1 Partitioning the Domain into Subdomains",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975551,
      "updated": 1617975558
    },
    {
      "id": "60705908aff09e0000c0956c",
      "text": "   \t\tChoosing a Partitioning",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975562,
      "updated": 1617975566
    },
    {
      "id": "6070590aaff09e0000c0956d",
      "text": "     Domain Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975566,
      "updated": 1617975572
    },
    {
      "id": "60705918aff09e0000c0956e",
      "text": "     The “Glue” Domain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975578,
      "updated": 1617975578
    },
    {
      "id": "60705958aff09e0000c0956f",
      "text": "     Domain Analysis and Iteration",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975641,
      "updated": 1617975641
    },
    {
      "id": "60705960aff09e0000c09570",
      "text": "    7.3.2 Finding the Right Paradigms within a Subdomain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975649,
      "updated": 1617975649
    },
    {
      "id": "60705961aff09e0000c09571",
      "text": "    \tThe Domain Vocabulary",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975649,
      "updated": 1617975659
    },
    {
      "id": "6070597eaff09e0000c09572",
      "text": "    \tCommonality Analysis of the Domain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975678,
      "updated": 1617975678
    },
    {
      "id": "6070598daff09e0000c09573",
      "text": "    \tReturning to the Question of Line Numbers and Labels",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975696,
      "updated": 1617975696
    },
    {
      "id": "6070599daff09e0000c09574",
      "text": "   7.4 Design, Not Analysis",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975710,
      "updated": 1617975713
    },
    {
      "id": "6070599eaff09e0000c09575",
      "text": "   \t7.4.1 Analysis, Architecture, or Design?",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975713,
      "updated": 1617975719
    },
    {
      "id": "607059adaff09e0000c09576",
      "text": "   \t7.5 Another Example: Automatic Differentiation",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975727,
      "updated": 1617975729
    },
    {
      "id": "60705a11aff09e0000c09577",
      "text": "\t   \t7.5.1 Basic Operations Domain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975828,
      "updated": 1617975832
    },
    {
      "id": "607003d9aff09e000022fe46",
      "text": "\t\t\t\t\t7.5.2 Degree Domain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617953753,
      "updated": 1617975835
    },
    {
      "id": "60705a1baff09e0000c09579",
      "text": "\t\t\t\t\t7.5.3 Value Domain",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975838,
      "updated": 1617975842
    },
    {
      "id": "60705a29aff09e0000c0957a",
      "text": "\t\t\t\t\t7.5.4 Evolving the Design",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975850,
      "updated": 1617975850
    },
    {
      "id": "60705a2aaff09e0000c0957b",
      "text": "\t\t\t\t7.6 Outboard Paradigms",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975851,
      "updated": 1617975899
    },
    {
      "id": "60705a58aff09e0000c0957c",
      "text": "    7.7 Management Issues",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975898,
      "updated": 1617975904
    },
    {
      "id": "60705a5faff09e0000c0957d",
      "text": "    \t7.7.1 Occam’s Razor: Keeping Things Simple",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975904,
      "updated": 1617975911
    },
    {
      "id": "60705a1aaff09e0000c09578",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1617975835,
      "updated": 1617975835
    }
  ]
}