{
  "id": "6090ec0ca287e6002291a292",
  "title": "Hatena2013-02-06",
  "created": 1360076400,
  "updated": 1360076400,
  "lines": [
    {
      "id": "6090ec2faff09e00003ddce5",
      "text": "Hatena2013-02-06",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddce6",
      "text": "code:hatena",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddce7",
      "text": " <body>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddce8",
      "text": " *1360080780*Squeakをかじる その2",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddce9",
      "text": " MacにSqueak4.3を入れました。<a href='http://d.hatena.ne.jp/nishiohirokazu/20101105/1288954444'>前回</a>入れたのは3.9だったかな。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcea",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddceb",
      "text": " 前回から2年ちょい経っているのでまずはおさらい。壁紙をクリックしたり右クリックしたりするとメニューが出る。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcec",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddced",
      "text": " 起動直後",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcee",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcef",
      "text": " [f:id:nishiohirokazu:20130206011032p:image]",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf0",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf1",
      "text": " 全部閉じる。クリックしたら出てくるメニューの上の方に「Browser」「Workspace」「Transcript」が並んでいるのでそれを全部起動する。適当に配置する。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf2",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf3",
      "text": " [f:id:nishiohirokazu:20130206011107p:image]",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf4",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf5",
      "text": " 前回、Workspaceのフォントが小さかったり等幅じゃなかったりして困った記憶があるけども、このバージョンでは右クリックで「set font」ってメニューがでるのでそれで設定することにする。知っているフォントを探しても見つからない。BitstreamVeraSansMonoって書いてあるのが名前からしてサンセリフの等幅だと判断。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf6",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf7",
      "text": " Workspaceにコードを書いて、選択してCmd+D(Do it)すれば実行される。何も選択してなければカーソルのある行を実行する？",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf8",
      "text": " 値を見たいなら手軽なのはCmd+P(Print it)で実行され、結果がWorkspaceに書き込まれる。ここらへんのショートカットは全部右クリックメニューに書いてある。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcf9",
      "text": " もう一つの方法がTranscriptに書き込むもの。Transcript show: 'hello!'を実行するとTranscriptウィンドウに書き込まれる。改行がついていない。前回はTranscript show: 'hello!'; cr.などと実行して改行していた。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcfa",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcfb",
      "text": " ここまでが前回のまとめ。前回は一応素数を計算するところまではできた。その後「よしじゃあクラスやメソッドを定義してみよう」と考えて、クラスの定義のための構文を探したりWorkspaceにそれを書いてみたりして期待通りに動かなくて心が折れた。今回はそこから。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcfc",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcfd",
      "text": " Browserの使い方を習得しようとしなかったのが前回の失敗の元。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcfe",
      "text": " 「出力するにはTranscript showを使います。改行はcrです」って言われて「はい、そうですか」という気持ちにはならない。「他に何があるの？っていうかJavaのSystem.out.printlnみたいに改行付きで出力するメソッドあるんじゃないの？それどうやって調べるの？」って思うよね。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddcff",
      "text": " そこでCmd+Shift+i(Explore it)、以下探索。Transcriptを探索するとa TranscriptStream ''と表示される。TranscriptStreamクラスのインスタンスということね。で、このTransriptStreamって書いてあるところを右クリックして出てきたメニューにbrowse full(b)と書いてあった。これを押してみるとBrowserでクラスの詳細が出る！(今気づいたけど、探索しないでいきなりCmd+bでも出る！なんで右クリックメニューに出てないんだ！)",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd00",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd01",
      "text": " [f:id:nishiohirokazu:20130206011137p:image]",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd02",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd03",
      "text": " でまたこのクラスブラウザの見方が最初わからなかった。クラスブラウザでクラスを作ることを避けていたのが原因だ。4つあるリストの左から1番目と3番目をクリックした時に下のスペースに表示されているものは「新しいクラス/メソッドを定義するためのテンプレート」だった。1番目はクラスのカテゴリ、3番目はメソッドのカテゴリらしい。何に使うのかはまだよくわからないけども、分類しておけるようだ。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd04",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd05",
      "text": " そしてTranscriptStreamのメソッド一覧を眺めていると、showlnというメソッドが見つかる。めでたしめでたし。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd06",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd07",
      "text": " ところでshowlnの定義を見ているとself nextPutAll: とか書いてある。これはどこで定義されているのか？ TranscriptStream では定義されていない。選択してImplementersボタンを押したら出てくるかとおもいきや予想外に大量に出てくる。どうやってここで呼ばれる定義がどこにあるかを調べたらいいんだろう。まあこんなこと書いているけども、カンで WriteStream にあるだろうと思ってやっぱりそこにあったんだけども。それから後付で TranscriptStream の定義を見て WriteStream のサブクラスであることを確認したのだけども。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd08",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd09",
      "text": " クラスブラウザを使って適当なクラスを作ってみよう。まず1番左のリストでadd itemしてMyCategoryって名前のカテゴリを作った。それをクリックすると下の欄にクラス定義のテンプレートが出てくる。これの「#NameOfSubclass」がクラスの名前、Objectの部分が親クラスになる。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd0a",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd0b",
      "text": " >|smalltalk|",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd0c",
      "text": " Object subclass: #NameOfSubclass",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd0d",
      "text": " \tinstanceVariableNames: ''",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd0e",
      "text": " \tclassVariableNames: ''",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd0f",
      "text": " \tpoolDictionaries: ''",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd10",
      "text": " \tcategory: 'MyCategory'",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd11",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd12",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd13",
      "text": " 名前を#MyFirstClassに書き換えて保存すると2番目のリストにそのクラスが出て、3番目のリストに「no messages」と出る。あー、そうか、さっきこれをメソッドのカテゴリのリストって呼んだけど、Smalltalk的にはメッセージって呼んで欲しいのか。このリストをクリックすると、こんなテンプレートが出る。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd14",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd15",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd16",
      "text": " messageSelectorAndArgumentNames",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd17",
      "text": " \t\"comment stating purpose of message\"",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd18",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd19",
      "text": " \t| temporary variable names |",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd1a",
      "text": " \tstatements",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd1b",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd1c",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd1d",
      "text": " さて、ようやくある程度分かったことで「<a href='http://d.hatena.ne.jp/sumim/20071105/p1'>RubyTraits-0.2 であそぶ - Smalltalkのtは小文字です</a>」を試してみよう。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd1e",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd1f",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd20",
      "text": " Trait named: #T",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd21",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd22",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd23",
      "text": " さっそくMessageNotUnderstoodとエラーになる。前回はここで心が折れた。でも今ならわかる。Traitをブラウズして、今回newはしていないのだからclassボタンを押してクラスメソッド(とSmalltalkでは呼ばないかもしれないが)を見るべき。あったあった。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd24",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd25",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd26",
      "text": " named: aSymbol uses: aTraitCompositionOrCollection category: aString",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd27",
      "text": " \t\"Dispatch through ClassDescription for alternative implementations\"",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd28",
      "text": " \t^ClassDescription newTraitNamed: aSymbol uses: aTraitCompositionOrCollection category: aString",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd29",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd2a",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd2b",
      "text": " つまり使い方としてはこうだな。無事TってトレイトがMyCategoryの中に作られた。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd2c",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd2d",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd2e",
      "text": " Trait named: #T",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd2f",
      "text": " \tuses: {}",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd30",
      "text": " \tcategory: #MyCategory",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd31",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd32",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd33",
      "text": " さて次はこれだ。ええと>>という名前のメソッドが…どこにもないな。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd34",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd35",
      "text": " T >> hoge",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd36",
      "text": "     ^'T#hoge'",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd37",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd38",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd39",
      "text": " 'Smalltalk by Example'を眺める。あった:",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd3a",
      "text": " >>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd3b",
      "text": " A typographic convention. Smalltalkers frequently use the notation “>>” to identify the class to which a method belongs, so, for example, the cellsPerSide method in class SBEGame would be referred to as SBEGame >>cellsPerSide. To indicate that this is not Smalltalk syntax, we will use the special symbol &#187; instead, so this method will appear in the text as SBEGame&#187;cellsPerSide",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd3c",
      "text": " <<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd3d",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd3e",
      "text": " なるほど'>>'って表記はそうコードに書けという意味ではないのか。というわけでクラスブラウザでメソッドを定義する。将来的にはGUIを使わずに挙動のテストがしたいので、メソッドをコードで追加する方法がほしいな。MethodDictとかブラウズすればいいのか。Object methodDict at: #hoge put: #foo.でとりあえずmethodDictに突っ込むことはできたが、ここにブロックを入れてもメソッドとして呼んではもらえないようだ。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd3f",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd40",
      "text": " もう夜の1時なので続きはまた今度。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd41",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd42",
      "text": " *1360148225*毛玉取りブラシを試してみた",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd43",
      "text": " セーターが毛玉だらけなので先日買ってきた毛玉取りブラシでブラッシングをしてみた。妻には「毛づくろい」と表現される。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd44",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd45",
      "text": " [f:id:nishiohirokazu:20130206193232j:image]",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd46",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd47",
      "text": " うわー、毛玉だらけだ！",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd48",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd49",
      "text": " 商品は多分これ↓",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd4a",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd4b",
      "text": " <iframe src=\"http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=AAFFAA&fc1=000000&lc1=0000FF&t=nishioyome-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0036D2X62\" style=\"width:120px;height:240px;\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" frameborder=\"0\"></iframe>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd4c",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd4d",
      "text": " *1360153589*Squeakをかじる その3",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd4e",
      "text": " <a href='http://d.hatena.ne.jp/nishiohirokazu/20130206/1360080780'>Squeakをかじる その2</a>の続き。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd4f",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd50",
      "text": " ** トレイトを試すコード",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd51",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd52",
      "text": " sumimさんのアドバイスのお陰で、ようやく「全部コードで表現」ができました。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd53",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd54",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd55",
      "text": " Trait named: #MyTrait",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd56",
      "text": "     uses: {}",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd57",
      "text": "     category: #MyCategory.",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd58",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd59",
      "text": " MyTrait compile: '",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd5a",
      "text": " hoge",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd5b",
      "text": "     ^''T#hoge''",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd5c",
      "text": " '.",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd5d",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd5e",
      "text": " Object subclass: #MyClass",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd5f",
      "text": "     uses: T",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd60",
      "text": "     instanceVariableNames: ''",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd61",
      "text": "     classVariableNames: ''",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd62",
      "text": "     poolDictionaries: ''",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd63",
      "text": "     category: 'MyCategory'.",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd64",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd65",
      "text": " MyClass new hoge  \"=> 'T#hoge'\".",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd66",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd67",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd68",
      "text": " しかしこれを試すためには、まだ「1～3個目の文をそれぞれ選択してDo-itして、最後の文をPrint-itせよ」などという説明が必要になってしまう。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd69",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd6a",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd6b",
      "text": " ** 自動化へ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd6c",
      "text": " 試す過程で人間の操作をなるべく減らしたい。Squeakでどうやったらいいだろうか。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd6d",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd6e",
      "text": " 今回、諸般の事情で他のプロセスから制御したい。そこでまずは出力をTranscriptではなく標準出力に出すようにしたい。<a href='http://wiki.squeak.org/squeak/708'>OSProcess</a> のsarをダウンロードし、ドラッグドロップで入れる。そうすると以下のコードで標準出力にhello worldと書ける。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd6f",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd70",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd71",
      "text": " OSProcess thisOSProcess stdOut",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd72",
      "text": "     nextPutAll: 'hello world';",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd73",
      "text": "     nextPut: Character lf;",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd74",
      "text": "     flush.",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd75",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd76",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd77",
      "text": " ** Squeakをコマンドラインから起動",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd78",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd79",
      "text": " 今回僕は Squeak-4.3-All-in-One でインストールしたので、実行バイナリがどこにあるのかよくわからない。探しまわってみたら",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd7a",
      "text": " /Applications/Squeak-4.3-All-in-One.app/Contents/MacOS/Squeak\\ VM\\ Opt がそれのようだ。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd7b",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd7c",
      "text": " 次にこれを起動するとイメージファイルがないって言われる。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd7d",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd7e",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd7f",
      "text": " $ /Applications/Squeak-4.3-All-in-One.app/Contents/MacOS/Squeak\\ VM\\ Opt",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd80",
      "text": " This interpreter (vers. 6502) cannot read image file (vers. 1702195571).",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd81",
      "text": " Press CR to quit...",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd82",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd83",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd84",
      "text": " 先ほどのOSProcessをインストールしたイメージを適当に名前を付けて保存しておく。WithOSProcessにした。これもまたどこに保存されたのかよくわからなくて探すはめになった。 /Applications/Squeak-4.3-All-in-One.app/Contents/Resources/WithOSProcess.image にあった。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd85",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd86",
      "text": " Squeak起動時にコマンドライン引数でファイルへのフルパスを渡すとそれが実行される。-headlessをつけるとGUIを起動せずに実行するらしいので最初はそれをつけていたのだけども、それをやるとエラーが起きた時にエラーメッセージを見れない。というわけで当面は付けないでおく。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd87",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd88",
      "text": " いちいち絶対パスで書くとかめんどくさいのでこんなPythonスクリプトをrun_squeak.pyって名前で作っておいた。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd89",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd8a",
      "text": " >|python|",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd8b",
      "text": " #!/usr/bin/env python",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd8c",
      "text": " import subprocess",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd8d",
      "text": " import sys",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd8e",
      "text": " import os",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd8f",
      "text": " scriptname = sys.argv[1]",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd90",
      "text": " subprocess.call([\"/Applications/Squeak-4.3-All-in-One.app/Contents/MacOS/Squeak VM Opt\",",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd91",
      "text": "                  \"/Applications/Squeak-4.3-All-in-One.app/Contents/Resources/WithOSProcess.image\",",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd92",
      "text": "                  os.path.abspath(scriptname)])",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd93",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd94",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd95",
      "text": " これでhello worldが出るようになった。しかし、出力した後終了しない。どうやって終了するのかがわからなかったので自分自身にSIGKILLを投げることにした。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd96",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd97",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd98",
      "text": " squeak := OSProcess thisOSProcess.",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd99",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd9a",
      "text": " squeak stdOut",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd9b",
      "text": "     nextPutAll: 'hello world';",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd9c",
      "text": "     nextPut: Character lf;",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd9d",
      "text": "     flush.",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd9e",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddd9f",
      "text": " squeak sigkill: squeak.",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda0",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda1",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda2",
      "text": " 無事hello worldと出力して終了するようになった。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda3",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda4",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda5",
      "text": " $ ./run_squeak.py helloworld.st",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda6",
      "text": " hello world",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda7",
      "text": " $",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda8",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddda9",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddaa",
      "text": " ** まとめ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddab",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddac",
      "text": " とういうわけで、このようなコードを書くことで、トレイトの挙動を人間の操作なしで確認できるようになった。めでたしめでたし。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddad",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddae",
      "text": " https://github.com/nishio/learn_language/blob/master/squeak/test_trait.st",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddaf",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb0",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb1",
      "text": " $ ./run_squeak.py test_trait.st",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb2",
      "text": " T#hoge",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb3",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb4",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb5",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb6",
      "text": " もうちょっと手を加えたら、他の言語と一緒にこういう感じで挙動を確認することができるようになるはず: https://github.com/nishio/learn_language/blob/master/coderunner/test/zero_division.py",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb7",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb8",
      "text": " あ、ダメだ、現状ではSqueakで1/0するとGUIでエラーのダイアログが出てしまう。まずはこれを横取りして標準出力に流すとかしなければ…。Exception >> signal に self halt.仕込んだら無限ループになっちゃった。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddb9",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddba",
      "text": " ** 追記",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddbb",
      "text": " Signalに手を入れるより、トラップされずに一番上まで来た例外を捕まえればいいだけか。",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddbc",
      "text": " >||",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddbd",
      "text": " [ ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddbe",
      "text": "   1 / 0",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddbf",
      "text": " ] ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc0",
      "text": "   on: Exception ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc1",
      "text": "   do: [:x| Transcript show: x; showln: x messageText.] ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc2",
      "text": " ||<",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc3",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc4",
      "text": " できたできた: https://github.com/nishio/learn_language/blob/master/squeak/test_zerodivide.st",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc5",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc6",
      "text": " *1360158371*妻のSqueakのイメージ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc7",
      "text": " 妻「今何書いてるの？」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc8",
      "text": " 僕「Squeak」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddc9",
      "text": " 妻「チクタクしてんの？」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddca",
      "text": " 僕「チクタクしてない」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddcb",
      "text": " 妻「えー、チクタクすればいいのにー」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddcc",
      "text": " 僕「チクタクせずにコンソールから扱いたいんだよ」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddcd",
      "text": " 妻「Squeakはチクタクするのがいいところなのにー」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddce",
      "text": " 僕「えー」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddcf",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd0",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd1",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd2",
      "text": " 僕「まあでもそれが正論だよね…」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd3",
      "text": " 妻「そうだよ！チクタクのないSqueakなんてコンソールのないUnixだよ！startxしたくないのにさせられた感じだよ！」",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd4",
      "text": " ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd5",
      "text": " 例えが絶妙すぎるｗｗ",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd6",
      "text": " </body>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd7",
      "text": " <comments>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd8",
      "text": " <comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddd9",
      "text": " <username>sumim</username>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddda",
      "text": " <body>参照いただいたエントリーにも追記しておきましたが、メソッドの追加をコードとして記述したい場合は、そのメソッドを定義したいクラスやトレイトに対し、メソッドのソースを文字列引数として与えた compile: 'messagePattern #codeBoty' のようなメッセージを送信する手があります。<br><br>それとは別に、メソッドごとでなくクラスやトレイトの定義を含めた全ソースをまとめてテキストファイルにしておいてそれをファイル・イン（fileIn）する方法もあります（たとえば「(FileStream fileNamed: 'example.st') fileIn」を do it とか）。この場合、ファイル example.st は fileIn 用のチャンク形式（念のため改行は CR のみ）で記述しておく必要があります。ただチャンク形式の手書きは面倒ですし、特に既存のチャンク形式ファイルの直接編集は原則禁止されている（環境内でソースコードを管理する際に必要になるバイトレベルの情報が含まれることがある）ので、いったん環境内でクラスブラウザを使ってクラスやトレイト、そのメソッド群を定義・動作を確認してからそれを fileOut （クラスカテゴリ、または、クラス・トレイトを単独選択してから右クリックで fileOut ）して生成させるのがよいと思います。</body>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddddb",
      "text": " <timestamp>1360101970</timestamp>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddddc",
      "text": " </comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddddd",
      "text": " <comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddde",
      "text": " <username>sumim</username>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddddf",
      "text": " <body>＞なんで右クリックメニューに出てないんだ！<br><br>残念ながら右クリックメニューにはないのですが、そこからさらに more... を選んで現われる第二メニューから browse it が選べます。このメニューはシフト黄ボタンメニュー（黄ボタンというのは古典的 Smalltalk環境における右クリックの意味です。念のため。内容は #shiftedYellowButtonMenuItems という<br>メソッドに定義されています）と呼ばれ、その名にもあるように shfit キーを押しながら右クリックすることで直接（つまり、黄ボタンメニュー → more... を経ずに）呼び出すことも可能です。</body>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde0",
      "text": " <timestamp>1360108654</timestamp>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde1",
      "text": " </comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde2",
      "text": " <comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde3",
      "text": " <username>nishiohirokazu</username>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde4",
      "text": " <body>ありがとうございます！Behavior >> compile:こそまさに探していたものです！CompiledMethod >> newMethodとかのsendersやimplementersからは見つかりませんでした…</body>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde5",
      "text": " <timestamp>1360118055</timestamp>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde6",
      "text": " </comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde7",
      "text": " <comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde8",
      "text": " <username>sumim</username>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddde9",
      "text": " <body>見てみましたが、CompiledMethod から攻めて #compile: にたどり着くのはちょっと難しいかもしれません。いちおうテストクラスである CompiledMethodTest の #testSelector あたりにで使われていますが、ここに目星をつけられるかどうかは自分でもあやしい気がします。<br><br>compile という単語がメソッド名に使われているであろうことが想定できている場合には、これをテキストとして選択してシフト黄ボタンメニューから selectors containing it (cmd + shift + w) で探すという手もあります。 <br><br>それらしいメソッドを足がかりに senders 、impementors で静的に追えないこともないのですが、システム内で使われているデザインパターン、アーキテクチャーパターンなどに慣れないうちは迷子になりやすいので、そこは割り切って動的に追うほうが確実です。<br><br>たとえば今回の場合、メソッドのコンパイルはクラスブラウザで行なわれることが分かっているので、その実体であろうところの Browser の #compileMessage:notifying: を探すところから始めます（このメソッドはたまたまそれっぽい名前なのでメソッド一覧から比較的簡単に見つけられると思いますが、それが難しいときでもメニューなどに細工して割り込みをかける方法などいくつか手はあります）。<br><br>次にこの #compileMessage:notifying: のコードに細工（たとえばテンポラリ変数宣言直後に self halt. を挿入して accept とか。あとで versions から revert しておくのをお忘れなく）をして、適当なコードをブラウザコード枠で accept （つまりコンパイル）してみます。<br><br>すると前述の self halt がノーティファイアを出すので、そこから #compileMessage:notifying: の実行コンテキストをクリックしてデバッガ起動 → 適宜 Through と Into を使って潜っていって #defineMessageFrom:notifying: から #compile:classified:notifying: にたどり着くのが一番確実そうに思います。<br><br>#compile: はこれの引数を省略した便利メソッドなので理屈では senders で手繰れば探せるはずですが、#compile:notifying: とかワンクッションあるので「きっともっとシンプルな便利メソッドが用意されているはずだ」などとある種の想定をして探さないとちょっと気付きにくいかもしれません。<br><br>長々と書きましたが興味のないことでしたらごめんなさい。</body>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddea",
      "text": " <timestamp>1360134418</timestamp>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddeb",
      "text": " </comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddec",
      "text": " <comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003ddded",
      "text": " <username>nishiohirokazu</username>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddee",
      "text": " <body>まだ咀嚼して飲み込めていませんが「膨大な情報の山からどうやって目的の物を見つけるのか」はとても有益なノウハウだと思います。ありがとうございます！</body>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddef",
      "text": " <timestamp>1360137791</timestamp>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf0",
      "text": " </comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf1",
      "text": " <comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf2",
      "text": " <username>umejava</username>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf3",
      "text": " <body>よろしければ日本語版もお試しください。http://sourceforge.jp/projects/squeak-ja/<br>あと、英語版は4.4が最新です(メインのサイトはいまだ4.3で更新されていませんが) http://news.squeak.org/2013/01/05/squeak-4-4-released/</body>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf4",
      "text": " <timestamp>1360139381</timestamp>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf5",
      "text": " </comment>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf6",
      "text": " </comments>",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf7",
      "text": "",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec2faff09e00003dddf8",
      "text": "[はてなダイアリー 2013-02-06 https://nishiohirokazu.hatenadiary.org/archive/2013/02/06]",
      "created": 1360076400,
      "updated": 1360076400,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}