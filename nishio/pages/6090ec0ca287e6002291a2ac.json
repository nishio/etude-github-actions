{
  "id": "6090ec0ca287e6002291a2ac",
  "title": "Hatena2013-04-26",
  "created": 1366902000,
  "updated": 1366902000,
  "lines": [
    {
      "id": "6090ec30aff09e00003de512",
      "text": "Hatena2013-04-26",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de513",
      "text": "code:hatena",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de514",
      "text": " <body>",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de515",
      "text": " *1366914748*下書きの下書き",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de516",
      "text": " ブログで書籍の改訂版の下書きを書く、と言ったものの、それはそれで時間がかかるので下書きの下書き",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de517",
      "text": " ",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de518",
      "text": " ** 文字列の解析(文法の章の次に挿入)",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de519",
      "text": " - 空白を読み飛ばしてaaaaを見つける",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de51a",
      "text": " - 123.456のようなパターンの文字列を切り出すには",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de51b",
      "text": " - まずforで書いてみる(使う言語はJSがいいかな)",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de51c",
      "text": " - 状態遷移図",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de51d",
      "text": " - 正規表現を使うと1行、すばらしい！",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de51e",
      "text": " - 正規言語のフォーマルな定義",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de51f",
      "text": " - 正規表現は万能ではない、正規言語でない例、対応したカッコ",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de520",
      "text": " - 文脈自由言語、BNF、yacc",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de521",
      "text": " - (PEGとかPackrat Parserの話はさすがに深追いし過ぎかな…？)",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de522",
      "text": " - (コラム)バッカスとナウア",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de523",
      "text": " </body>",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de524",
      "text": "",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec30aff09e00003de525",
      "text": "[はてなダイアリー 2013-04-26 https://nishiohirokazu.hatenadiary.org/archive/2013/04/26]",
      "created": 1366902000,
      "updated": 1366902000,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}