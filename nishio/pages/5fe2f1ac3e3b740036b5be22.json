{
  "id": "5fe2f1ac3e3b740036b5be22",
  "title": "PAST2H",
  "created": 1608708525,
  "updated": 1608709125,
  "lines": [
    {
      "id": "5fe2f1ac3e3b740036b5be22",
      "text": "PAST2H",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708525
    },
    {
      "id": "5fe2f1d1aff09e0000531ce4",
      "text": "[https://gyazo.com/d8cd95f94d454f735f18cfccd5356534]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708562,
      "updated": 1608708565
    },
    {
      "id": "5fe2f1d4aff09e0000531ce6",
      "text": "[H - 1-9 Grid https://atcoder.jp/contests/past202004-open/tasks/past202004_h]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708565,
      "updated": 1608708571
    },
    {
      "id": "5fe2f1d1aff09e0000531ce5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708562,
      "updated": 1608708562
    },
    {
      "id": "5fe2f1adaff09e00006471f8",
      "text": "from [第二回 アルゴリズム実技検定]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708525
    },
    {
      "id": "5fe2f1adaff09e00006471f9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708589
    },
    {
      "id": "5fe2f1deaff09e0000531ce7",
      "text": " 考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708574,
      "updated": 1608708585
    },
    {
      "id": "5fe2f1adaff09e00006471fa",
      "text": "  同じマスを何度も通って良いことが厄介、到達不可能な時に無限ループにハマらないようにしたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708585
    },
    {
      "id": "5fe2f1adaff09e00006471fb",
      "text": "  二次元ではなく0〜9のフロアがあると考える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708585
    },
    {
      "id": "5fe2f1adaff09e00006471fc",
      "text": "  　フロアiから1歩動いて、移動先がi+1である時に限りフロアを登る階段がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708585
    },
    {
      "id": "5fe2f1adaff09e00006471fd",
      "text": "  　フロア0のSからフロア9のGまでの最短経路問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708585
    },
    {
      "id": "5fe2f1adaff09e00006471fe",
      "text": " 　公式解説と違う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708585
    },
    {
      "id": "5fe2f236aff09e0000b5fd92",
      "text": " 時間を置いて考えたこと",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708663,
      "updated": 1608708669
    },
    {
      "id": "5fe2f24baff09e0000b5fd93",
      "text": " 　[ダイクストラ法]で解くので辺にコストがついてていいから「フロアiから1歩動いて、移動先がi+1である時に限りフロアを登る階段がある」ではなく「フロアiの数値iは下のフロアから上に上がるコスト0の辺がある」にした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708684,
      "updated": 1608708801
    },
    {
      "id": "5fe2f2d3aff09e0000b5fd94",
      "text": " 　グラフを構築したらダイクストラ法で最短距離を求めるだけ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708820,
      "updated": 1608708842
    },
    {
      "id": "5fe2f1adaff09e00006471ff",
      "text": "\tAC",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708525,
      "updated": 1608708599
    },
    {
      "id": "5fe2f1f6aff09e0000531ce9",
      "text": "\t\tcode:python",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708599,
      "updated": 1608708600
    },
    {
      "id": "5fe2f1f8aff09e0000531cea",
      "text": "\t\t def solve(HEIGHT, WIDTH, data):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708601,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531ceb",
      "text": "       from collections import defaultdict",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cec",
      "text": "       edges = defaultdict(dict)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531ced",
      "text": "       W = WIDTH",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cee",
      "text": "       H = HEIGHT",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cef",
      "text": "       for level in range(10):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf0",
      "text": "           for y in range(HEIGHT):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf1",
      "text": "               for x in range(WIDTH):",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf2",
      "text": "                   pos = x + y * WIDTH + level * WIDTH * HEIGHT",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf3",
      "text": "                   v = data[y][x]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf4",
      "text": "                   if x < W - 1:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf5",
      "text": "                       edges[pos + 1][pos] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf6",
      "text": "                   if x > 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf7",
      "text": "                       edges[pos - 1][pos] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf8",
      "text": "                   if y < H - 1:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cf9",
      "text": "                       edges[pos + W][pos] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cfa",
      "text": "                   if y > 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cfb",
      "text": "                       edges[pos - W][pos] = 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cfc",
      "text": "                   if v == \"S\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cfd",
      "text": "                       if level == 0:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cfe",
      "text": "                           start = pos",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531cff",
      "text": "                   elif v == \"G\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d00",
      "text": "                       if level == 9:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d01",
      "text": "                           goal = pos",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d02",
      "text": "                   else:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d03",
      "text": "                       v = int(v)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d04",
      "text": "                       if v == level:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d05",
      "text": "                           edges[pos - W * H][pos] = 0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d06",
      "text": "   ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d07",
      "text": "       return one_to_one(start, goal, 10 * W * H, edges)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608708614
    },
    {
      "id": "5fe2f205aff09e0000531d08",
      "text": "　公式解説は動的計画法で求めている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708614,
      "updated": 1608709074
    },
    {
      "id": "5fe2f3f9aff09e0000b5fd95",
      "text": "　　計算量的にはダイクストラの方が軽い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608709113,
      "updated": 1608709125
    },
    {
      "id": "5fe2f1f4aff09e0000531ce8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1608708596,
      "updated": 1608708596
    }
  ]
}