{
  "id": "6088e16873b7a700200522ac",
  "title": "DX=デジタルを活用したダブルループ学習への移行",
  "created": 1619583339,
  "updated": 1619583872,
  "lines": [
    {
      "id": "6088e16873b7a700200522ac",
      "text": "DX=デジタルを活用したダブルループ学習への移行",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583339,
      "updated": 1619583421
    },
    {
      "id": "6088e183aff09e00001b7106",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1279442207842250752]: [DX]について考えていることをぶちまけて、ネットワーク構造にしてみたらこうなった。つまるところ、[アジリティ]の根源が、[人事異動]から、デジタルを活用した[ダブルループ学習]に移った。DXとは、レガシィ企業が、[デジタルネイティブ]な組織になる＝デジタルを活用したダブルループ学習に移行すること。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583615
    },
    {
      "id": "6088e183aff09e00001b7107",
      "text": "\t[https://gyazo.com/910576aaf1b5a47d5e7b08419f2dd202]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583606
    },
    {
      "id": "6088e276aff09e00001b711b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583606,
      "updated": 1619583606
    },
    {
      "id": "6088e183aff09e00001b7108",
      "text": ">[nishio https://twitter.com/nishio/status/1279449296027279365]: なぜアジリティの根源を人事異動に置いたままではいけない？機能しなくなった？それはなぜ？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b7109",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b710a",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1279451728367120384]: ソフトウェア開発は稼働の波が大きく、専門性が高いため、自社ではソフトウェア人材の雇用ができない。IT人材は専門職なので配置転換ができない（これは今となっては嘘なわけだが）。結果として[ITの外部化]の流れ。非ソフトウェア領域においては、人事異動によってアジリティの確保ができる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583497
    },
    {
      "id": "6088e183aff09e00001b710b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b710c",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1279452182249500672]: とはいえ、非ソフトウェア領域というのは年々狭まっており、ほぼすべての部門でコンピュータが当たり前に使われるようになった。結果として、[配置転換によるアジリティ]よりも、[ソフトウェア改修によるアジリティ]の方が、より効率的になった。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583517
    },
    {
      "id": "6088e183aff09e00001b710d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b710e",
      "text": ">[nishio https://twitter.com/nishio/status/1279457885794127872]: 「配置転換によってアジリティが得られる」「ほぼすべての部門でソフトウェアが使われるようになった」「ソフトウェアの改修によるアジリティの方がより効率的」ということか。人間ではなく[タユピンコ人]の配置転換・解雇をするようになったわけだな。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583524
    },
    {
      "id": "6088e183aff09e00001b710f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b7110",
      "text": ">[nishio https://twitter.com/nishio/status/1279458628961923072]: 一方でソフトウェア開発を外注にしてしまった会社は「事前に仕様を明確化しないと改修できない」という変化阻害の罠にはまって「ソフトウェアの改修によるアジリティ」を獲得することができなかった、ということか。納得した。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583579
    },
    {
      "id": "6088e183aff09e00001b7111",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b7112",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1279459787319603200]: ｙ、図の右側のあたりですね。[V字モデルの機能不全]とかのあたり。発注したソフトウェアの「変更性」を検収するには、少なくともコードが書けるヤツが内部にいないといけない。検収で評価されないなら、SI側のビジネスモデルにおいて「変更性」に対してコストを払うベネフィットが存在しない。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583594
    },
    {
      "id": "6088e183aff09e00001b7113",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b7114",
      "text": ">[nishio https://twitter.com/nishio/status/1279469242975281152]: 仕様を決めて発注する側が[ソフトウェアの変更可能性]を要件に含めない限り、受託する側はそれを作る義務を負わない。変更が必要になった時、受託する側にとっては追加課金機会。むしろ他の業者に持って行かれないように、発注者側に渡してない情報がなければ変更困難なようにするインセンティブがある。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583671
    },
    {
      "id": "6088e183aff09e00001b7115",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b7116",
      "text": ">[nishio https://twitter.com/nishio/status/1279470795475972096]: この一連の議論はサイボウズに都合の良いものだ。サイボウズkintoneがなぜこんなに売れてるかというと「変更可能性の高さを意図したソフトウェア」だからなのだ。そして専門のエンジニアでなくてもある程度の業務アプリが作れることによって開発リソースの問題を解決している。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b7117",
      "text": "\t[非エンジニアによるシステム開発]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583710
    },
    {
      "id": "6088e2cfaff09e00001b711c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583701,
      "updated": 1619583701
    },
    {
      "id": "6088e183aff09e00001b7118",
      "text": ">[nishio https://twitter.com/nishio/status/1279473163382882304]: 業務アプリを作るために「専門性の高い配置転換困難な人材」が必要であった時代に、「アプリを作るときにだけ人が必要で後は不要」と考えて稼働の変動が激しいから外注化が進んだわけだが、この二つの前提が変わってきているわけだ。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b7119",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583364
    },
    {
      "id": "6088e183aff09e00001b711a",
      "text": ">[tokoroten https://twitter.com/tokoroten/status/1279474270133878784]: ｙ、ソフトウェアは常時改修し続けるものになったし、専門性のハードルも下がっている。ソフトウェアは、メインフレームから、Linux系になり、普通のWebアプリケーションになった。そこにKintoneとかGoogle App Script、RPAみたいなのが入り込んできている。だいぶ整理された。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583364,
      "updated": 1619583784
    },
    {
      "id": "6088e332aff09e00001b711d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583794,
      "updated": 1619583794
    },
    {
      "id": "6088e332aff09e00001b711e",
      "text": "関連",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583794,
      "updated": 1619583799
    },
    {
      "id": "6088e336aff09e00001b7120",
      "text": "\t[NoCode]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583799,
      "updated": 1619583801
    },
    {
      "id": "6088e336aff09e00001b711f",
      "text": "\t[ソフトウェアを外注でしかいじれない企業]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583799,
      "updated": 1619583872
    },
    {
      "id": "6088e371aff09e00001b7121",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1619583857,
      "updated": 1619583857
    }
  ]
}