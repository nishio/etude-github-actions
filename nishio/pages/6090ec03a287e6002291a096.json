{
  "id": "6090ec03a287e6002291a096",
  "title": "Hatena2010-04-15",
  "created": 1271257200,
  "updated": 1271257200,
  "lines": [
    {
      "id": "6090ec27aff09e00003d57fc",
      "text": "Hatena2010-04-15",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d57fd",
      "text": "code:hatena",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d57fe",
      "text": " <body>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d57ff",
      "text": " *1271305655*Re: Google App Engine についてあなたが多分知らない10のこと．",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5800",
      "text": " バージョンを変えるとどういう挙動になるのか調べてて見つけた",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5801",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5802",
      "text": " <a href='http://d.hatena.ne.jp/hidemon/20090606/1244250759'>Google App Engine についてあなたが多分知らない10のこと． - hidemonの日記</a>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5803",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5804",
      "text": " >>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5805",
      "text": " App Engineは複数のバージョンのアプリケーションを同時に実行することを許している．すべてのバージョンは，データストアとmemcacheを共有するが，異なるインスタンス上で実行され，異なるURLを持つ．",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5806",
      "text": " <<",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5807",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5808",
      "text": " ほうほう。既存のアプリのデータを活かしてリプレースするのはこれを使えばいいんだな。便利便利。",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5809",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d580a",
      "text": " *1271340913*昔Django+GAEで作ったサービスをKayでリプレースしようとしている",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d580b",
      "text": " app.yamlで既存のアプリと同じapplication名にして、versionを変えてやれば既存のサービスを走らせたままそのDatastoreにアクセスできる別アプリをデプロイできるはず。",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d580c",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d580d",
      "text": " まず、KayはKindをマングリングしてしまうのでそのままではItemって名前のモデルを作ってもKindがcore_itemみたいな名前になってしまって既存のデータが読めない。settings.pyでADD_APP_PREFIX_TO_KIND = Falseにしておく。",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d580e",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d580f",
      "text": " ローカルの開発サーバでは動くので、じゃあデプロイしてみるか、と試してみたら動かない。「TemplateNotFound: core/index.html」などと言われる。うーむ。Kay単体で作ってデプロイしたときにはこんな問題は起きなかったので、かつてDjangoで作った時の設定がどこかに残っていたりするんだろうか？？",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5810",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5811",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5812",
      "text": " TEMPLATE_DIRSに明示的に指定してもダメだ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5813",
      "text": " >|python|",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5814",
      "text": " TEMPLATE_DIRS = (",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5815",
      "text": "     \"core/templates/\",",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5816",
      "text": " )",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5817",
      "text": " ||<",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5818",
      "text": " そもそもcore/index.htmlを読んでいるけど実体はcore/templates/index.htmlにあるしなぁ。Jinja2かKayの中でなんかうまくいじっているだろうけど、なにがどうなってるんだろうなぁ。",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5819",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d581a",
      "text": " <hr>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d581b",
      "text": " 解決！tmatsuoさんの指摘通り、やはり原因はテンプレートがpreparseされていないことでした。",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d581c",
      "text": " ",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d581d",
      "text": " Kay(が使っているJinja2)はテンプレートを事前にパースしてPythonのコードに変換していて、これがpreparse。manage.py preparse_appsでpreparseの処理を行うことができるけど、普段manage.py appcfg updateしたときには自動的にそれをやってくれている。今回の問題は僕がmanage.pyを使わずに直接appcfg.py updateをしていたのが原因。manage.py経由でupdateしたらあっさり動くようになりました！",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d581e",
      "text": " </body>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d581f",
      "text": " <comments>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5820",
      "text": " <comment>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5821",
      "text": " <username>tmatsuo</username>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5822",
      "text": " <body>ローカルで動いてサーバーで TemplateNotFound になるのは、十中八九 template を pre parse (し python code にする) できてないのが原因なのですが、確認するとしたらこれかなあ<br><br>INSTALLED_APPS に 'core' は入っていますか。<br><br>入ってないと pre parse の対象にならなかったはずなので……<br><br>入れると勝手に mount されて嫌だという場合は<br>APP_MOUNT_POINTS = {<br>  'core': None<br>}<br>とかやると勝手 mount しなくなります。<br><br>想像なので違ったらごめんなさいです。</body>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5823",
      "text": " <timestamp>1271348630</timestamp>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5824",
      "text": " </comment>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5825",
      "text": " </comments>",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5826",
      "text": "",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    },
    {
      "id": "6090ec27aff09e00003d5827",
      "text": "[はてなダイアリー 2010-04-15 https://nishiohirokazu.hatenadiary.org/archive/2010/04/15]",
      "created": 1271257200,
      "updated": 1271257200,
      "userId": "582e63d27c56960011aff09e"
    }
  ]
}