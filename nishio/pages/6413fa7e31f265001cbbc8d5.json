{
  "id": "6413fa7e31f265001cbbc8d5",
  "title": "自分のScrapboxをChatGPTにつないだ話勉強会",
  "created": 1679030912,
  "updated": 1679626811,
  "lines": [
    {
      "id": "6413fa7e31f265001cbbc8d5",
      "text": "自分のScrapboxをChatGPTにつないだ話勉強会",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679030912,
      "updated": 1679540166
    },
    {
      "id": "6413fa81aff09e00007d0377",
      "text": "[自分のScrapboxをChatGPTにつないだ]の話",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679030914,
      "updated": 1679470365
    },
    {
      "id": "6413fa8caff09e00007d0379",
      "text": "\t[サイボウズラボ勉強会] 2023-03-24 予定",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679030925,
      "updated": 1679451610
    },
    {
      "id": "641a65ddaff09e00005ddbbb",
      "text": " 3/8に自分のScrapbox(ここ)をChatGPTにつないで、ChatGPTがこのScrapboxを参照した上で反応を返せるようにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679451614,
      "updated": 1679451831
    },
    {
      "id": "641a66b7aff09e00005ddbbc",
      "text": " 「こういうことをしたかった、したい、知識がなくてできない」的な話がネット上で複数件観測されたので3/9に公開した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679451832,
      "updated": 1679451928
    },
    {
      "id": "641a6718aff09e00005ddbbd",
      "text": " 使ってみた人、派生を生み出した人が複数人",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679451928,
      "updated": 1679451949
    },
    {
      "id": "6413fa87aff09e00007d0378",
      "text": "　手軽に試せるようにこのScrapboxから使ったインデックスを共有したら、同じように共有する人が5人くらいいて仮想人格的に対話させたりブレインストーミングさせたりできるようになった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679030920,
      "updated": 1679626039
    },
    {
      "id": "641a68a6aff09e00005ddbbe",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679452326,
      "updated": 1679452326
    },
    {
      "id": "641bc22caff09e0000764ec2",
      "text": "出力例",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540781,
      "updated": 1679540826
    },
    {
      "id": "641bc234aff09e0000764ec4",
      "text": " Scrapboxを参照していない場合",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ec5",
      "text": " >>>> Kozanebaって何？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ec6",
      "text": " >回答できません。提供された情報が不十分です。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ec7",
      "text": " Scrapboxを参照した場合",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ec8",
      "text": " >>>> Kozanebaって何？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ec9",
      "text": " >Kozanebaは、デジタル文房具で、考えをまとめるためのツール。テストユーザ向けにはリリースされているが、まだ広くアナウンスされていない。開発者は、多くの人に使われることに価値を感じている。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ecb",
      "text": " 別の例",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ecc",
      "text": " >>> 盲点カードって何？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ecd",
      "text": " >(参照なし) 盲点カードとは、自分が気付かない問題や欠点を指摘するために、他人が匿名で書いたカードのことです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ece",
      "text": " >(参照あり) 盲点カードは、人間が自分の盲点に気づき、それを解消するためのプロセスをカードに分類し、問題解決に役立てるためのものです。物理的な特許文献を類型化したTRIZのようなものです。絵の描かれたカードと解説冊子をイメージしていましたが、トートバッグなどにも使えるように考えられています。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540792
    },
    {
      "id": "641bc234aff09e0000764ecf",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540789,
      "updated": 1679540789
    },
    {
      "id": "641bc22caff09e0000764ec3",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540781,
      "updated": 1679540781
    },
    {
      "id": "641a694faff09e0000651112",
      "text": "仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679452496,
      "updated": 1679452818
    },
    {
      "id": "641a6a91aff09e00005ddbc0",
      "text": "　100行程度の2つのスクリプト`make_index.py`(129)と`ask.py`(63)でできている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679452818,
      "updated": 1679459158
    },
    {
      "id": "641bdc27aff09e00004bf595",
      "text": "　　世の中的には[LlamaIndex]とか[LangChain]とかが関連したライブラリだが、それを使ってやりたいことをやろうとするとコードが多くなるので使わないことにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679547431,
      "updated": 1679626111
    },
    {
      "id": "641a6a90aff09e00005ddbbf",
      "text": "　インデックスの作成",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679452818,
      "updated": 1679464093
    },
    {
      "id": "641a969daff09e00005ddbdd",
      "text": "　　[https://gyazo.com/11b2ef80922d5c5b9363f492e8b3d10b]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679464094,
      "updated": 1679466633
    },
    {
      "id": "641aa089aff09e00000c1ca6",
      "text": "　　適当な方法で文章を刻んで、OpenAIの[Embedding API]で[埋め込みベクトル]にする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466633,
      "updated": 1679466706
    },
    {
      "id": "641aa107aff09e00005ddbde",
      "text": "　　この文章とベクトルの対応付けをベクトルインデックスと呼んだりする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466759,
      "updated": 1679466796
    },
    {
      "id": "641aa12caff09e00005ddbdf",
      "text": "　質問",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466796,
      "updated": 1679466798
    },
    {
      "id": "641a9695aff09e00005ddbdc",
      "text": " \t[https://gyazo.com/2a3e1d2dd207e60e2f0add64865e3cc4]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679464086,
      "updated": 1679466804
    },
    {
      "id": "641aa101aff09e00000c1ca7",
      "text": "  「質問」には限らないのだが呼び変えてもややこしいので「質問文」と呼ぶことにする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466753,
      "updated": 1679626157
    },
    {
      "id": "641aa185aff09e00005ddbe1",
      "text": "  質問文をEmbedding APIで埋め込みベクトルにする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466886,
      "updated": 1679466912
    },
    {
      "id": "641aa136aff09e00000c1ca8",
      "text": "　　そのベクトルとベクトルインデックスのベクトルの類似度を計算する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466806,
      "updated": 1679467021
    },
    {
      "id": "641aa20daff09e00005ddbe8",
      "text": "　　似てる順で並べてプロンプトに入るだけ入れる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467021,
      "updated": 1679467042
    },
    {
      "id": "641aa224aff09e00005ddbe9",
      "text": "　　ChatGPT APIに投げて回答を作らせる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467044,
      "updated": 1679467056
    },
    {
      "id": "641aa201aff09e00005ddbe5",
      "text": "　Q: ベクトルってどれくらいのサイズ？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467010,
      "updated": 1679467082
    },
    {
      "id": "641aa24aaff09e00005ddbea",
      "text": "　　A: 今のところ1536次元だけど、数に深い意味はない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467083,
      "updated": 1679467149
    },
    {
      "id": "641aa286aff09e00005ddbeb",
      "text": "　Q: 類似度の計算って？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467142,
      "updated": 1679467164
    },
    {
      "id": "641aa1eaaff09e00005ddbe3",
      "text": "\t\tA: OpenAIのEmbedding APIは正規化されたベクトルを返すので、単に内積を取るだけでよい([コサイン類似度])",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466986,
      "updated": 1679467264
    },
    {
      "id": "641aa2f9aff09e00005ddbed",
      "text": "\tQ: 類似度計算の速度は？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467257,
      "updated": 1679468256
    },
    {
      "id": "641aa3e8aff09e00005ddbee",
      "text": "\t　A: 現状何も頑張ってない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467496,
      "updated": 1679467521
    },
    {
      "id": "641aa438aff09e00005ddbf0",
      "text": "\t　　PythonのListとnp.dotしてるだけ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467577,
      "updated": 1679468225
    },
    {
      "id": "641aa402aff09e00005ddbef",
      "text": "\t　　その状態で1秒に22000個(MacBook Pro)、このScrapboxだと全部で39000個",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467522,
      "updated": 1679468579
    },
    {
      "id": "641aa71daff09e00005ddbf1",
      "text": "\t　　高速化したければ色々手段はある、今は必要を感じてない(ChatGPT APIの方がだいぶ遅い)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468317,
      "updated": 1679469897
    },
    {
      "id": "641aa7c6aff09e00000c1cab",
      "text": "\t　　\t[https://github.com/facebookresearch/faiss GitHub - facebookresearch/faiss: A library for efficient similarity search and clustering of dense vectors.]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468487,
      "updated": 1679468494
    },
    {
      "id": "641aa7ceaff09e00000c1cac",
      "text": "    [https://www.elastic.co/jp/blog/text-similarity-search-with-vectors-in-elasticsearch Elasticsearchのベクトルフィールドをテキスト類似性検索に活用する | Elastic Blog]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468494,
      "updated": 1679468528
    },
    {
      "id": "641aa7efaff09e00000c1cad",
      "text": "\tQ: 規模と費用は？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468528,
      "updated": 1679469812
    },
    {
      "id": "641aa1f1aff09e00005ddbe4",
      "text": "\t\t埋め込み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466993,
      "updated": 1679468683
    },
    {
      "id": "641aa881aff09e00000c1cae",
      "text": "\t\t\tこのScrapboxだと17,229,603 tokens",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468673,
      "updated": 1679468683
    },
    {
      "id": "641aa707aff09e00000c1ca9",
      "text": "\t\t\tEmbedding APIのコストは$0.4 / 1M Token",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468297,
      "updated": 1679468687
    },
    {
      "id": "641aa838aff09e00005ddbf2",
      "text": "\t\t\tつまり7ドルくらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468600,
      "updated": 1679468689
    },
    {
      "id": "641ac32faff09e00000c1cd3",
      "text": "\t\t\t「コーディングを支える技術」を丸ごと埋め込んで$0.13",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679475504,
      "updated": 1679475560
    },
    {
      "id": "641ac387aff09e00005ddc14",
      "text": "\t\t\t　(このScrapboxが書籍54冊分ということに驚き…)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679475593,
      "updated": 1679475618
    },
    {
      "id": "641aa893aff09e00000c1caf",
      "text": "\t\t質問回答",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468692,
      "updated": 1679626270
    },
    {
      "id": "641aa1a9aff09e00005ddbe2",
      "text": "\t　　gpt-3.5-turbo\t$0.002 / 1K tokens",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679466921,
      "updated": 1679468881
    },
    {
      "id": "641aa954aff09e00005ddbfd",
      "text": "\t　　GPT3.5を使ってた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468885,
      "updated": 1679468896
    },
    {
      "id": "641aa954aff09e00005ddbfe",
      "text": "\t　　 4096トークンがcontext上限で、上限いっぱいまで使うコードを書いた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468885,
      "updated": 1679468946
    },
    {
      "id": "641aa954aff09e00005ddbff",
      "text": "\t　　 なので$0.008くらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468885,
      "updated": 1679468888
    },
    {
      "id": "641aa8e5aff09e00005ddbf6",
      "text": "\t　　GPT4のAPIもその後リリースされた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468773,
      "updated": 1679468785
    },
    {
      "id": "641aa8f9aff09e00005ddbf7",
      "text": "\t　 　同じ使い方をするなら$0.15",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468793,
      "updated": 1679468871
    },
    {
      "id": "641aa944aff09e00005ddbf8",
      "text": "\t　　 上限いっぱいまで使うとすると32K contextなので$1.98",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468869,
      "updated": 1679468987
    },
    {
      "id": "641aa9feaff09e00005ddc00",
      "text": "\t　　 　これは「このScrapboxの関係ありそうなページを最低62ページ読んで回答」という挙動になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679469058,
      "updated": 1679469542
    },
    {
      "id": "641aaae7aff09e00005ddc02",
      "text": "\t　　 　エンジニアの知的生産術の文字だけのページで1000トークンぐらいなので「技術書の質問に関連ありそうなページを31ページ読んでから回答」が300円でできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679469287,
      "updated": 1679469543
    },
    {
      "id": "641aab6baff09e00005ddc03",
      "text": "\t　　 　正直、ほとんどのユースケースではそんなに読まなくていいのではと思う。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679469420,
      "updated": 1679469545
    },
    {
      "id": "641aabe2aff09e00005ddc04",
      "text": "\t　　GPT3.5なら1円、GPT4でも25円で書籍のから3ページ読んで答えてくれる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679469538,
      "updated": 1679626321
    },
    {
      "id": "641d1050aff09e0000203884",
      "text": "\t　　　そしてどのページを参考にしたか指し示してくれる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679626321,
      "updated": 1679626322
    },
    {
      "id": "641aa853aff09e00005ddbf3",
      "text": "　　　　GPT4はまだまだ気軽に使うには高い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468628,
      "updated": 1679626326
    },
    {
      "id": "641d1056aff09e0000203885",
      "text": "　　　　　しかし1/10の値段になったらどうなるか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679626326,
      "updated": 1679626329
    },
    {
      "id": "641d1058aff09e0000203886",
      "text": "　　　　　APIを叩かずにローカルで無料で使えるならどうなるか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679626329,
      "updated": 1679626332
    },
    {
      "id": "641d105baff09e0000203887",
      "text": "　　　　　この変化が1年以内に起きそうと感じる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679626332,
      "updated": 1679626332
    },
    {
      "id": "641aac81aff09e00005ddc06",
      "text": "　　　　今は個人的にはGPT4のAPIは使っていない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679469698,
      "updated": 1679626349
    },
    {
      "id": "641d106aaff09e0000203888",
      "text": "　　　　　ChatGPT Plusの$20/monthサブスクリプションをしてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679626346,
      "updated": 1679626366
    },
    {
      "id": "641d107aaff09e0000203889",
      "text": "　　　　　3時間あたり25回まで使えるからすぐにペイする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679626362,
      "updated": 1679626362
    },
    {
      "id": "641ab105aff09e00005ddc07",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679470854,
      "updated": 1679470854
    },
    {
      "id": "641ac785aff09e00000c1cd4",
      "text": "本質的にScrapboxには依存していない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679476614,
      "updated": 1679486267
    },
    {
      "id": "641bc010aff09e0000764eb9",
      "text": "\t他の情報ソースに使ってみた人たち",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540241,
      "updated": 1679540298
    },
    {
      "id": "641afeceaff09e000034b016",
      "text": "\t\tはてなダイアリー: [自分のはてなブログをChat GPTにつないだ - hitode909の日記 https://blog.sushi.money/entry/2023/03/10/190000]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679490766,
      "updated": 1679540303
    },
    {
      "id": "641afeceaff09e000034b017",
      "text": "\t\tDiscord: [https://zenn.dev/sizumita/scraps/44c6af06eadb27 自分のDiscordの過去メッセージをChatGPTに読み込ませる]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679490767,
      "updated": 1679540304
    },
    {
      "id": "641d10dcaff09e000020388b",
      "text": "\t\tもちろんグループウェアやビデオ会議の文字起こしを対象にすることもできる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679626460,
      "updated": 1679626479
    },
    {
      "id": "641afeceaff09e000034b01b",
      "text": "　書籍",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679490767,
      "updated": 1679490841
    },
    {
      "id": "641bc06aaff09e0000764ebb",
      "text": "　\t「コーディングを支える技術」を読ませてみた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540330,
      "updated": 1679540339
    },
    {
      "id": "641bc053aff09e0000764eba",
      "text": "  >>>> オブジェクトとは何か？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540307,
      "updated": 1679540347
    },
    {
      "id": "641bc07baff09e0000764ebc",
      "text": "  >(GPT3.5) [* オブジェクトとは、現実世界の「モノ」の「模型」をコンピュータの中に作るための概念]であり、プログラミング言語においては、データとそのデータを操作するための手続きをまとめたものとして表現されます。また、オブジェクト指向とは、このオブジェクトを中心にプログラムを設計する手法のことです。具体的には、オブジェクト同士の関係性を表現するクラスや、クラスから生成されたインスタンスを操作するメソッドなどがあります。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540347,
      "updated": 1679540457
    },
    {
      "id": "641bc07baff09e0000764ebd",
      "text": "  コーディングを支える技術 p.187~",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540347,
      "updated": 1679540347
    },
    {
      "id": "641bc07baff09e0000764ebe",
      "text": "\t\t[https://gyazo.com/c07380aa591c368d3a5f1707d9e1fd10]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540347,
      "updated": 1679540347
    },
    {
      "id": "641bc07baff09e0000764ebf",
      "text": "\t\t[https://gyazo.com/ac403c5a4b056f0da17ce0659b0bdae2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540347,
      "updated": 1679540347
    },
    {
      "id": "641bc07baff09e0000764ec0",
      "text": "\t\t>(GPT4)オブジェクトは、プログラミングにおいて現実世界の概念や事物を表現するための構造です。オブジェクト指向プログラミングでは、オブジェクトはその事物の属性（データ）と振る舞い（関数やメソッド）を持ちます。オブジェクトは、クラスという設計図に基づいて作られるインスタンスであり、プログラムの中で操作され、異なるオブジェクトと相互作用します。オブジェクト指向の目的は、現実世界の問題をより自然に表現し、再利用性や保守性の向上など、コードの品質を高めることです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540347,
      "updated": 1679540347
    },
    {
      "id": "641bc07baff09e0000764ec1",
      "text": "　　「元から知ってる知識」のウェイトが高まって「コーディングを支える技術」の要素がわからなくなっている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540347,
      "updated": 1679540503
    },
    {
      "id": "641bc117aff09e00004bf56a",
      "text": "　　こういう「他にも書いてる文章がたくさんある概念」は自前でデータを読ませる必要はない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679540503,
      "updated": 1679626425
    },
    {
      "id": "641d10b9aff09e000020388a",
      "text": "　　　マイナーな造語を理解させられるのがこのアプローチのメリット",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679626425,
      "updated": 1679626425
    },
    {
      "id": "641bc376aff09e0000764ed8",
      "text": "　　\tcode::",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541110,
      "updated": 1679541112
    },
    {
      "id": "641bc37eaff09e0000764ed9",
      "text": "　　\t Kozanebaの宣伝ツイートを作って",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541118,
      "updated": 1679541119
    },
    {
      "id": "641bc37faff09e0000764eda",
      "text": "    ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541119,
      "updated": 1679541119
    },
    {
      "id": "641bc37faff09e0000764edb",
      "text": "    Kozanebaを使ってアイデアや情報を視覚化しませんか？🤔",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541119,
      "updated": 1679541119
    },
    {
      "id": "641bc37faff09e0000764edc",
      "text": "    🌟議論を整理",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541119,
      "updated": 1679541119
    },
    {
      "id": "641bc37faff09e0000764edd",
      "text": "    🌟ツイートのつながりを探索",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541119,
      "updated": 1679541119
    },
    {
      "id": "641bc37faff09e0000764ede",
      "text": "    🌟隣接するキーワードを発見",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541119,
      "updated": 1679541119
    },
    {
      "id": "641bc37faff09e0000764edf",
      "text": "    Kozanebaはあなたの知的生産を加速させるデジタル文房具です！✍️🚀",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541119,
      "updated": 1679541119
    },
    {
      "id": "641bc37faff09e0000764ee0",
      "text": "    詳しくは👉 https://kozaneba.example.com",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541119,
      "updated": 1679541119
    },
    {
      "id": "641bc37faff09e0000764ee1",
      "text": "    #Kozaneba #デジタル文房具 #アイデア整理 #議論の可視化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541119,
      "updated": 1679541119
    },
    {
      "id": "641bc382aff09e0000764ee2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541122,
      "updated": 1679541122
    },
    {
      "id": "641bdcfcaff09e00000818f1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679547645,
      "updated": 1679547645
    },
    {
      "id": "641bdcfcaff09e00000818f2",
      "text": "座談会",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679547645,
      "updated": 1679547656
    },
    {
      "id": "641bdd0daff09e00000818f6",
      "text": "\t[AIパネルディスカッション]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679547662,
      "updated": 1679547690
    },
    {
      "id": "641bdd2baff09e00000818f7",
      "text": "\t\t異なる個人Scrapboxのデータを「仮想人格」としてパネルディスカッションさせてみた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679547692,
      "updated": 1679547735
    },
    {
      "id": "641bdd07aff09e00000818f5",
      "text": "\t[/villagepump/Scrapbox ChatGPT Connector座談会モード]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679547656,
      "updated": 1679547656
    },
    {
      "id": "641bdcfdaff09e00000818f3",
      "text": "　　6人それぞれ異なった視点で発言して面白い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679547645,
      "updated": 1679547793
    },
    {
      "id": "641bdd91aff09e00004bf596",
      "text": "　　このデータがあればいつでもどこでも自分+6人での[ブレインストーミング]ができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679547793,
      "updated": 1679547825
    },
    {
      "id": "641aed83aff09e00005ddc21",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679486340,
      "updated": 1679490844
    },
    {
      "id": "641ac785aff09e00000c1cd5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679476614,
      "updated": 1679540345
    },
    {
      "id": "641acc07aff09e00000c1cd9",
      "text": "今後の発展について",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679477768,
      "updated": 1679491020
    },
    {
      "id": "641bc6edaff09e00004bf573",
      "text": "　技術的にはグループウェア内の情報に対して同じことをやることは可能",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541998,
      "updated": 1679542061
    },
    {
      "id": "641bc71baff09e00004bf574",
      "text": "　　ChatGPTにグループウェア内のあらゆる情報が送信されることに対する顧客の反発があるだろう、ここが問題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679542043,
      "updated": 1679542298
    },
    {
      "id": "641ab7e9aff09e00005ddc0d",
      "text": "　前半のベクトル検索の部分はChatGPTと切り離しても有用",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679472618,
      "updated": 1679541436
    },
    {
      "id": "641bc484aff09e00004bf56c",
      "text": "　　なので検索に特化した企業がそれを提供していく(Elasticsearchとかね)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541382,
      "updated": 1679542232
    },
    {
      "id": "641bc7c8aff09e00004bf575",
      "text": "　　だからアプリの企業はこれを自前でやっても優位性につながらない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679542217,
      "updated": 1679626534
    },
    {
      "id": "641bc537aff09e00004bf56d",
      "text": "　　やることは「ちゃんとつながれるようにしておく」ぐらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541559,
      "updated": 1679541584
    },
    {
      "id": "641bc56aaff09e00004bf56e",
      "text": "　ちょっとした便利機能を提供することは技術的には可能",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541611,
      "updated": 1679541750
    },
    {
      "id": "641bc57baff09e00004bf56f",
      "text": "　　たとえばkintoneのスレッドに「要約する」ボタンをつけるとか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541627,
      "updated": 1679541666
    },
    {
      "id": "641bc7e8aff09e00004bf576",
      "text": "　　　単にスレッドの内容に「要約せよ」と書き足してAPIを叩くだけ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679542249,
      "updated": 1679542288
    },
    {
      "id": "641bc822aff09e00004bf577",
      "text": "　　　ボタンを押した時だけ送信されるから「全部送信する」よりは反発少ないだろう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679542306,
      "updated": 1679542342
    },
    {
      "id": "641bc5a5aff09e00004bf570",
      "text": "　　足場が半年で揺らぐような状況で、長期的に顧客に提供する機能としてリリースするのかどうか、高速に壊れる機能のメンテに人員を割くかどうか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541670,
      "updated": 1679542356
    },
    {
      "id": "641bc685aff09e00004bf572",
      "text": "　　　技術とは違うレイヤーの判断だと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679541894,
      "updated": 1679542358
    },
    {
      "id": "641ab837aff09e00005ddc0e",
      "text": "　ChatGPT的なものとの結合としては[Toolformar]的なアプローチが長期的には魅力的",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679472695,
      "updated": 1679541912
    },
    {
      "id": "641aba9baff09e00005ddc0f",
      "text": "\t\t[GPT-4.icon]簡潔にToolformerについて箇条書きで説明します。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679473308,
      "updated": 1679491299
    },
    {
      "id": "641b00daaff09e000034b022",
      "text": "   Toolformerは、[* 言語モデルが外部ツール（検索エンジン、計算機、カレンダーなど）を使えるようにする]モデルです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679491291,
      "updated": 1679542443
    },
    {
      "id": "641b00daaff09e000034b023",
      "text": "   既存のアプローチには大量の人間の注釈が必要であったり、タスク固有の設定に制限されることが多いため、Toolformerは異なるアプローチを提案します。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679491291,
      "updated": 1679491295
    },
    {
      "id": "641b00daaff09e000034b024",
      "text": "   ツールの使用は、大量の人間の注釈を必要とせず、自己教師付きの方法で学習されるべきです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679491291,
      "updated": 1679491295
    },
    {
      "id": "641b00daaff09e000034b025",
      "text": "   言語モデルは、どのツールをいつ使うかを自分で判断できるべきです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679491291,
      "updated": 1679491295
    },
    {
      "id": "641b00daaff09e000034b026",
      "text": "   大規模な言語モデルとインコンテキスト学習を利用して、APIの使用例を生成し、モデルにAPI呼び出しを学習させます。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679491291,
      "updated": 1679491295
    },
    {
      "id": "641b00daaff09e000034b027",
      "text": "   自己教師付きの損失関数を使用して、どのAPI呼び出しがトークン予測に役立つかを判断します。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679491291,
      "updated": 1679491295
    },
    {
      "id": "641b00daaff09e000034b028",
      "text": "   有用だと判断されたAPI呼び出しで言語モデルを微調整します。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679491291,
      "updated": 1679491295
    },
    {
      "id": "641b00daaff09e000034b029",
      "text": "   Toolformerは、ツールの使用を学習した後、ゼロショットでさまざまなタスクにおいて優れた結果を達成します。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679491291,
      "updated": 1679491295
    },
    {
      "id": "641ab7e8aff09e00005ddc0c",
      "text": "　　つまり[* AIにグループウェアの使い方を教える]ということ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679472617,
      "updated": 1679626647
    },
    {
      "id": "641bc937aff09e00004bf57a",
      "text": "　　　必要に応じてグループウェアを操作して情報を引き出して、それを読んで判断する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679542584,
      "updated": 1679542735
    },
    {
      "id": "641bcd4eaff09e0000764efa",
      "text": "　　　どういう操作をしたいかという情報がマイクロフォーマットで回答文に埋め込まれている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543630,
      "updated": 1679543670
    },
    {
      "id": "641bcd4aaff09e0000764ef9",
      "text": "　　\t[https://gyazo.com/d2fad242e843c88d9718a872aae62a90]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543626,
      "updated": 1679543626
    },
    {
      "id": "641bc9b5aff09e00004bf57b",
      "text": "　　グループウェアに「AIのアカウント」があって、メンションやDMでやり取りできる未来",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679542709,
      "updated": 1679626719
    },
    {
      "id": "641bcc35aff09e00004bf580",
      "text": "　　　「チャットの見た目」だとユーザを1分待たせることがしにくいがグループウェアの通知の見た目だと「AI社員」に作業をお願いして、10分後に仕上がってくるのでも許容できそう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543349,
      "updated": 1679543460
    },
    {
      "id": "641bccbaaff09e00004bf581",
      "text": "　　　用途によって速いリアクションが欲しいものとそうでないものがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543482,
      "updated": 1679543497
    },
    {
      "id": "641bcb5faff09e00004bf57d",
      "text": "　　現状でも「こういうことをしたいんだけど何を検索すればいい？」と聞けば検索キーワードが出てくる。これを進歩させて、機械的に扱える形で出力させる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543135,
      "updated": 1679543175
    },
    {
      "id": "641bcb8eaff09e0000764ef6",
      "text": "　　\t例",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543183,
      "updated": 1679543185
    },
    {
      "id": "641bcb5baff09e00004bf57c",
      "text": "\t\t　　[nishio.icon]メルロポンティとポランニーの関係についての考察を書こうと考えています。参考にする文献を見つけるためのキーワードをいくつか提案してください",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543135,
      "updated": 1679543200
    },
    {
      "id": "641bc918aff09e00004bf579",
      "text": "   \t[GPT-4.icon]メルロポンティとポランニーの関係について調査する際に参考になるキーワードを以下に示します。これらのキーワードを使用して、関連文献や論文を検索することができます。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679542553,
      "updated": 1679543205
    },
    {
      "id": "641bcb29aff09e0000764ee3",
      "text": "      メルロポンティ（Maurice Merleau-Ponty）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ee5",
      "text": "      ポランニー（Michael Polanyi）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ee6",
      "text": "      知覚（perception）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ee7",
      "text": "      知識の個人性（personal knowledge）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ee8",
      "text": "      存在論（ontology）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ee9",
      "text": "      認識論（epistemology）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764eea",
      "text": "      体験（experience）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764eeb",
      "text": "      身体性（embodiment）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764eec",
      "text": "      知の根源（origin of knowledge）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764eed",
      "text": "      知識の構造（structure of knowledge）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764eee",
      "text": "      知識の暗黙性（tacit knowledge）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764eef",
      "text": "      知識の社会性（social dimension of knowledge）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ef0",
      "text": "      直観（intuition）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ef1",
      "text": "      言語（language）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ef2",
      "text": "      ジェスチャー（gesture）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ef3",
      "text": "      意味論（semiotics）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ef4",
      "text": "      目的論（teleology）",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543216
    },
    {
      "id": "641bcb29aff09e0000764ef5",
      "text": "     これらのキーワードを用いて、メルロポンティとポランニーの哲学的思想や彼らの関係に関する文献や研究を見つけることができます。また、彼らが関連する哲学的伝統や、他の哲学者（例えば、ハイデガーやハッサール）との関係性についても調べることができます。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543081,
      "updated": 1679543194
    },
    {
      "id": "641bcd90aff09e00004bf582",
      "text": "   　こうやって出てきたキーワードで検索をして、その情報を元に要約をしたりするとBing AI的になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543696,
      "updated": 1679543802
    },
    {
      "id": "641bcdfbaff09e00004bf583",
      "text": "   　この検索対象をインターネットではなく社内グループウェアにするのが最初の一歩か",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543803,
      "updated": 1679626811
    },
    {
      "id": "641bfed2aff09e00000818f8",
      "text": "　　現時点では[LangChainのagent]が近そうだが、半年後にこれがデファクトスタンダードになってるのか崩壊してるのか判断つかない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679556307,
      "updated": 1679557101
    },
    {
      "id": "641c01ecaff09e0000dc9aa1",
      "text": "　　　一般的には地面が固まってない時に多種多様な要望を受け入れて肥大化したフレームワークは、耐震工事が困難になって地震で崩壊することが多いのだけど、After GPT-4の世界においてはGPT-4が改修工事を支援してくれちゃうかもしれない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679557101,
      "updated": 1679557272
    },
    {
      "id": "641c029baff09e0000dc9aa2",
      "text": "　　　そういう意味では「最もGPT4を使いこなしてる人たちによるソフトウェアプロジェクト」として注目に値する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679557276,
      "updated": 1679557329
    },
    {
      "id": "641c02d1aff09e0000dc9aa3",
      "text": "　　　使う場合は地面との間に何が挟まってるのか理解して使うべき",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679557329,
      "updated": 1679557358
    },
    {
      "id": "641bcbf8aff09e00004bf57e",
      "text": " 現状はChatGPTが話す相手が「主に人間である」という想定なわけだが、間に機械が挟まってマイクロフォーマットで書かれたコマンド列を読むのであれば、いっそ「人間に対して表示するコマンド」を用意したらいいよね、って近い未来になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543289,
      "updated": 1679543961
    },
    {
      "id": "641bce99aff09e00004bf584",
      "text": " 　文法の定義された人工言語の方がLLMにとって容易",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679543962,
      "updated": 1679543988
    },
    {
      "id": "641bcf4aaff09e00004bf585",
      "text": " [https://gyazo.com/3a1de274da1461bd7875f9685bffeaec]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679544139,
      "updated": 1679544526
    },
    {
      "id": "641bd0ceaff09e00004bf586",
      "text": "　　これ、ある意味[オペレーティングシステム]では？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679544526,
      "updated": 1679544990
    },
    {
      "id": "641bd0f4aff09e00004bf587",
      "text": "　　しばらくの間、この中間システムの操作のための言語やAPIはまちまちで乱立するだろう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679544564,
      "updated": 1679544606
    },
    {
      "id": "641bd11eaff09e00004bf588",
      "text": "　　そしてしばらくしてからデファクトスタンダード(C言語に相当するもの)が生まれる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679544606,
      "updated": 1679544657
    },
    {
      "id": "641bd20caff09e00004bf589",
      "text": "　あれ？[人間は周辺機器の一つに過ぎない]のか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679544844,
      "updated": 1679544870
    },
    {
      "id": "641bd228aff09e00004bf58b",
      "text": "　　[https://gyazo.com/9eb9249214f856b89965b028b29f3d79]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679544872,
      "updated": 1679544875
    },
    {
      "id": "641bd22baff09e00004bf58c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679544875,
      "updated": 1679544875
    },
    {
      "id": "641bd20daff09e00004bf58a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679544846,
      "updated": 1679544846
    }
  ]
}