{
  "id": "5def3a299afe0f0017da40c2",
  "title": "オブジェクトを露出させる方法に関する考察",
  "created": 1575959082,
  "updated": 1624873287,
  "lines": [
    {
      "id": "5def3a299afe0f0017da40c2",
      "text": "オブジェクトを露出させる方法に関する考察",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959082
    },
    {
      "id": "60d998a1aff09e0000145ca0",
      "text": "2021-06-28 現在 この方法は採用していない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1624873121,
      "updated": 1624873151
    },
    {
      "id": "60d9993daff09e0000145ca3",
      "text": "\t[ReactNを露出する]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1624873277,
      "updated": 1624875085
    },
    {
      "id": "60d998a9aff09e0000145ca2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1624873129,
      "updated": 1624873129
    },
    {
      "id": "60d998a1aff09e0000145ca1",
      "text": "2019-12-10",
      "userId": "582e63d27c56960011aff09e",
      "created": 1624873121,
      "updated": 1624873127
    },
    {
      "id": "5def3a2aaff09e0000f2e448",
      "text": "from [TypeScriptで対話的に実装]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959082
    },
    {
      "id": "5def3a2aaff09e0000f2e449",
      "text": "オブジェクトを露出させる方法に関する考察",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959082
    },
    {
      "id": "5def3a2aaff09e0000f2e44a",
      "text": "\t[TypeScriptで対話的に実装#5def2f3aaff09e000025a837]は「対象を露出させるコード」を一箇所にまとめるスタイル",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959111
    },
    {
      "id": "5def3a2aaff09e0000f2e44b",
      "text": "\t\t対象のファイルを見て「これだな」と確認して、exportして、それから別のファイルを編集する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959122
    },
    {
      "id": "5def3a2aaff09e0000f2e44c",
      "text": "\t逆に「引数をとって、それを露出される関数」を用意しておいて、各露出したい対象のそばでそれを呼ぶ手もある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959096
    },
    {
      "id": "5def3a2aaff09e0000f2e44d",
      "text": "\tどっちがいいか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959096
    },
    {
      "id": "5def3a2aaff09e0000f2e44e",
      "text": "\t一箇所に集まっている方が管理しやすい？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959096
    },
    {
      "id": "5def3a2aaff09e0000f2e44f",
      "text": "\t\t変数を露出させるコードは結局散在しているしな...",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959096
    },
    {
      "id": "5def3a2aaff09e0000f2e450",
      "text": "\t\t\tローカル変数を露出させるコードも、まずモジュールスコープの変数を作ってそれをexportする手はある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959096
    },
    {
      "id": "5def3a2aaff09e0000f2e451",
      "text": "\t「引数をとって、それを露出される関数」を用意した方が、単なる代入よりも意図が明確で良いか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959082,
      "updated": 1575959096
    },
    {
      "id": "5def3a54aff09e0000f2e452",
      "text": "\tと思って作った",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959124,
      "updated": 1575959142
    },
    {
      "id": "5def3a65aff09e0000f2e454",
      "text": "\t\tcode:ts",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959142,
      "updated": 1575959144
    },
    {
      "id": "5def3a68aff09e0000f2e455",
      "text": "\t\t export const makeGlobal = (name: string, obj: any) => {",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959144,
      "updated": 1575959144
    },
    {
      "id": "5def3a68aff09e0000f2e456",
      "text": "     // @ts-ignore",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959144,
      "updated": 1575959144
    },
    {
      "id": "5def3a68aff09e0000f2e457",
      "text": "     window.debug[name] = obj;",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959144,
      "updated": 1575959144
    },
    {
      "id": "5def3a68aff09e0000f2e458",
      "text": "   }",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959144,
      "updated": 1575959144
    },
    {
      "id": "5def3a68aff09e0000f2e459",
      "text": " でもこれ、対象が露出する以外に使われてないコードの場合、使われてないモジュールだと判断されてしまうのでNGかも",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959144,
      "updated": 1575959575
    },
    {
      "id": "5def3c17aff09e0000f2e45b",
      "text": " 後`ReferenceError: Cannot access 'makeGlobal' before initialization`などのエラーも。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959575,
      "updated": 1575959589
    },
    {
      "id": "5def3a8faff09e0000f2e45a",
      "text": " 今回は深追いしないことにした。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959184,
      "updated": 1575959593
    },
    {
      "id": "5def3a55aff09e0000f2e453",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1575959126,
      "updated": 1575959126
    }
  ]
}